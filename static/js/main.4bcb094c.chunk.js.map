{"version":3,"sources":["decentralized/Ipfs.js","components/spore/VisualLinks.js","components/spore/docs.js","components/spore/HelperLines.js","components/spore/PlayerHelper.js","components/spore/Credits.js","components/spore/SongTitle.js","components/spore/Caurosel.js","components/spore/JollyRancherPlayer.js","components/Colors.js","components/spore/SporeHeatMap.js","components/buttons/PlayButton.js","components/spore/AudioPlayer.js","components/hooks/useInterval.js","decentralized/EthereumEventLog.js","decentralized/EthereumTopic.js","decentralized/EthereumEvents.js","decentralized/EthereumQuery.js","decentralized/BackendQuery.js","decentralized/BackendQueryRunner.js","decentralized/contracts/SporeContract.js","engine/audio.js","components/spore/getSpores.js","components/progressbar/UnknownProgressBar.js","components/spore/SimplePlayer.js","utils/lstorage.js","utils/getBlockDate.js","components/spore/SporeItem.js","utils/formatDate.js","components/spore/SporesView.js","components/SP-2D/Mushroom.js","components/SP-2D/Scene.js","components/SP-2D/App.js","components/spore/StemPlayer.js","components/spore/Spore.js","components/spores-landing/Scene.js","components/spores-landing/Overlay.js","components/spores-landing/App.js","components/spore/SporeLanding.js","App.js","components/spore/SporeWrapper.js","registerServiceWorker.js","reducers/index.js","store/index.js","index.js","decentralized/chords/NoteConstants.js","decentralized/web3.js","components/spores-landing/Overlay.module.css","decentralized/EthereumDataTypes.js"],"names":["bufferToArrayBuffer","require","xhr","XMLHttpRequest","IPFS_ADDRESS","END","window","httpV","httpsV","ipfs","IpfsClient","_this","this","Object","_Users_alecresende_code_spores_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","controllers","Set","isNFT","location","protocol","backupIpfs","ipfsClient","centralIpfs","_centralIpfs","self","connectedLocally","finishedTestingLocalConnection","onreadystatechange","readyState","status","connectToCentral","keepSwarmConnectionAlive","open","timeout","ontimeout","console","log","setTimeout","send","hash","_callee","list","_Users_alecresende_code_spores_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","refs","local","sent","abrupt","map","x","ref","stop","_this2","Promise","resolve","reject","dht","findprovs","maxNumProviders","err","res","swarm","connect","catch","e","_this3","setInterval","sequencerEngine","getSequenceId","id","store","getState","sequencer","isPlaying","arrayBuffer","addHelper","addBlobAndSaveToDB","Blob","Uint8Array","_this4","name","arguments","length","undefined","_ipfs","add","path","content","Buffer","ipfsHash","buffer","_this5","ipfsObject","pin","json","_this6","noUTF","from","JSON","stringify","addJson","then","ipfsPath","_this7","useCentral","isBytes","restart","cat","file","parse","toString","url","controller","AbortController","signal","abort","delete","method","_url","getIPFSPrefix","fetch","_ref","_Users_alecresende_code_spores_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee2","resp","_context2","_x","apply","dateA","Date","getTime","_ref2","_callee3","response","dateB","_context3","readAllChunks","body","ret","merged","mergeArrays","str","TextDecoder","decode","_x2","_callee4","bytesArray","b","_context4","set","_callee5","_context5","blob","_this8","fileReader","FileReader","onload","_this9","result","readAsArrayBuffer","filereader","readasarraybuffer","readableStream","reader","getReader","chunks","pump","read","_ref3","value","done","push","_this11","spores","_ref4","_callee6","_context6","_x5","_ref5","_callee7","dateC","processed","_context7","processArray","_x6","array","ArrayBuffer","i","Array","forEach","offset","findEnd","slice","arrays","skip","skipEnd","size","count","subarray","ending","index","iter","values","foundIndex","context","_this12","getSound","decodeAudioData","y","d","getLocation","element","bounding","rect","getBoundingClientRect","bound","top","left","height","offsetHeight","width","offsetWidth","state","props","dispatch","helperBox","helperRefs","selected","_useState","useState","_useState2","slicedToArray","locations","setLocations","useEffect","playerEl","current","helperEl","playerLocation","helperLocation","points","react_default","createElement","className","stopColor","docs","centerButton","ledButton","spButton1","spButton2","slider1","slider2","slider3","slider4","sliderHovered","useRef","doc","key","isArray","includes","spore_VisualLinks","clear","setSliderHovered","_useState3","_useState4","setSelected","spore_HelperLines","onClick","onMouseLeave","onMouseOver","setShowCredits","href","SporeOption","showStemPlayer","setShowStemPlayer","brect","tokenId","playerChosen","isOver","mouse","setOver","rarity","thumbnail","setPlayerChosen","_y","useCallback","style","src","spore_SongTitle","setMouse","_useState5","_useState6","over","onMouseMove","clientX","clientY","Caurosel_SporeOption","isMobile","spore","progress","preset","setPreset","contentWindow","postMessage","type","dataHash","sandbox","aria-describedby","alt","borderWidth","brightCache","getHSLString","h","s","l","getHSLFromString","_str$split","substring","split","_str$split2","hPart","sPart","lPart","indexOf","parseFloat","hslToHex","Math","min","f","n","k","color","max","round","padStart","concat","Colors","classCallCheck","opacity","c","toUpperCase","shift","_getHSLFromString","warmth","rotate","_getHSLFromString2","factor","lightFactor","startsWith","_getHSLFromString3","_RGBToHSL","r","g","cmin","cmax","delta","abs","toFixed","RGBToHSL","getRGB","hsl","brightenHSL","cacheResult","floor","parseInt","rgb","_getHSLFromString4","colors","heatRoot","bucketSize","saturation","getBuckets","heat","_step","sliderData","sliderChanges","modeData","modeChanges","regions","isNaN","buckets","_iterator","_createForOfIteratorHelper","_step2","toConsumableArray","_iterator2","q","_loop","some","_ref$width","_ref$height","_ref$center","center","_ref$saturation","duration","maxStep","keys","step","pow","fill","warm","PlayButton","onPlayClicked","target","parentNode","blur","currentTarget","play","truncate","creator","formatTime","time","minutes","seconds","audioUnit","sporeMetadata","WIDTH","playing","setPlaying","playTime","setPlayTime","startPoint","setProgress","_useState7","_useState8","setMouseSeeker","callback","delay","savedCallback","clearInterval","useInterval","diff","Tone","Master","currentTime","onClickPlay","stopSound","playSound","mouseSeek","stopPropagation","startTime","buttons_PlayButton","spore_JollyRancherPlayer","EthereumEventLog","event","topics","_len","data","_key","EthereumTopic","convertTo","convertFrom","NewSporeCreated","IPFS_HASH","BYTES_32","INT_32","INT_16","RIGHT_PADDED_BYTES_32","ADDRESS","STRING","UINT_256","NOTE_BYTES_32","NOTES_BYTES_32","INT_8","BYTES_32_ENCRYPTED","BYTES_32_ARRAY","BYTES_32_LEFT","metamaskInstalled","web3","EthereumQuery","address","distinct","selectStatements","whereClauses","groupBy","joinClauses","limitSize","fromBlockNumber","toBlockNumber","eventLog","arg","col","WhereClause","valueList","field","JoinClause","fromBlock","utils","toHex","toBlock","limit","sha3","toAdd","j","whereClause","eth","getPastLogs","getTopics","results","parsedResults","reverse","parseResult","blockNumber","regenerator_default","getBlockNumber","web3WSS","subscribe","resultSet","select","dataIndexSoFar","fieldIndex","fieldData","query","hexToNumber","argName","argValue","runner","BackendQueryRunner","runningQueries","queryJson","asyncToGenerator","sleep","headers","Accept","Content-Type","removeQuery","BackendQuery","_super","call","submit","getJson","SporeContract","abi","inputs","internalType","outputs","stateMutability","anonymous","indexed","contractAddress","Contract","AudioUnit","source","playbackRate","looping","bind","seek","disconnect","createBufferSource","destination","loop","start","getAllSpores","executeQuery","getSpores_createForOfIteratorHelper","sporeId","filter","getLatestSpore","setSporeMetadata","latest","sporeHash","audioBuffer","player","where","setBuffer","objectSpread","_x3","_x4","text","_ref$className","_ref$intervalTime","intervalTime","_ref$intervalPiece","intervalPiece","loadingProgress","setLoadingProgress","interval","links","1","2","3","4","latestSpore","setLatestSpore","dispose","goToLink","progressbar_UnknownProgressBar","spore_AudioPlayer","lstorage","LStorage","localStorage","setItem","removeItem","getItem","getBlockDate","storage","block","date","getBlock","timestamp","isSelected","setDate","setHeat","cancel","spore_SporeHeatMap","dist","hours","getMonth","getDate","formatDate","_formatDate","setSpores","spore_SporeItem","spore_SimplePlayer","Mushroom","materials","nodes","mushroomMat","position","_ref$scale","scale","rotation","geometry","hat","material","castShadow","receiveShadow","feet","Scene","esm_extends","_useSpline","useSpline","sceneCamera","threeTone","THREE","load","minFilter","magFilter","gradientMap","addEventListener","origin","message","addScalar","Fragment","assign","SP_2D_Mushroom","intensity","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-near","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","OrthographicCamera","makeDefault","far","near","zoom","App","react","fallback","react_three_fiber_esm","shadows","flat","linear","postprocessing_dist","kernelSize","KernelSize","LARGE","luminanceThreshold","luminanceSmoothing","OrbitControls","enableZoom","enableRotate","enablePan","players","5","6","root","document","getElementsByTagName","setAttribute","App_App","objectWithoutProperties","match","params","showCredits","showSpores","setShowSpores","_useState9","_useState10","_useState11","_useState12","preventDefault","passive","removeEventListener","title","playsInline","autoPlay","spore_PlayerHelper","spore_Credits","spore_Caurosel","spore_SporesView","spore_StemPlayer","scroll","camera","lerpedScroll","curve","test","navigator","userAgent","fov","useFrame","t","getPointAt","z","attach","args","Sparkles","speed","Stars","radius","depth","fade","PerspectiveCamera","PI","cover","ground","decay","distance","filler","underground","Rock_Moss_3","Rock_Moss_1","Plant_1","Plant_4","Plant_5","PineTree_1","PineTree_2","PineTree_3","PineTree_5","WoodLog_Moss","Rock_Moss_2","Overlay","scrollContainer","scrollTo","scrollHeight","styles","onScroll","scroll01","scrollTop","innerHeight","sectionLeft","sectionHero","viewBox","xmlns","rx","stroke","stroke-opacity","stroke-width","stroke-linecap","stroke-linejoin","sectionRight","sectionFirst","sectionSecond","sectionLast","spButtons","spButton","smallText","logo","zeqLogo","history","pushState","spore_Spore","smaa","VERY_LARGE","Scene_Scene","SporeLanding","spores_landing_App_App","BrowserRouter","Switch","Route","render","spore_SporeLanding","Boolean","hostname","rootReducer","combineReducers","createStore","ReactDOM","es","src_App_0","getElementById","serviceWorker","ready","registration","unregister","__webpack_require__","__webpack_exports__","asciiToNote","_web3_js__WEBPACK_IMPORTED_MODULE_1__","noteToAscii","A","A#","B","C","C#","D","D#","E","F","F#","G","G#","noteToBytes32","asciiToHex","tmp","web3__WEBPACK_IMPORTED_MODULE_0__","web3__WEBPACK_IMPORTED_MODULE_0___default","Web3","providers","HttpProvider","WebsocketProvider","module","exports","bs58","nullBytes32","padLeft","EthereumDataType","toConversion","fromConversion","_Users_alecresende_code_spores_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","jsValue","ethereumValue","trimEmpty","trimmed","charCodeAt","charAt","ipfs_hash","replace","ipfsHashToBytes32","hash_hex","buf","encode","bytes32ToIPFSHash","numberToHex","toAscii","padRight","fromAscii","stripLeadingZeroes","getAddress","len"],"mappings":"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","file":"static/js/main.4bcb094c.chunk.js","sourcesContent":["import ipfsClient from 'ipfs-http-client';\n\nvar bufferToArrayBuffer = require('buffer-to-arraybuffer');\nvar xhr = new XMLHttpRequest();\nconst IPFS_ADDRESS = '/ip4/3.17.26.249/tcp/4001/ipfs/QmeQRpfSrYcAaqkhNoArDyTUwyYiru2gJp4WY1WegQGjtR';\nconst TIMEOUT = 30000;\nconst END = [85,110,105,118,101,114,115,97,108,32,83,101,113,101,117,110,99,101,115 ]\n\nconst LOCAL = 'LOCAL';\nconst UNIVERSAL = 'UNIVERSAL';\nconst INFURA = 'INFURA';\n\nwindow.httpV = 'http://www.zequencer.io:5001';\nwindow.httpsV = 'https://www.zequencer.io:5002';\nclass IpfsClient {\n    restart() {\n        // do nothing since it doesnt even matter -_-\n    }\n\n    getIPFSPrefix() {\n        if (this.connectedLocally) {\n            return 'http://localhost:5001';\n        } else if (window.location.protocol === 'http:') {\n            return window.httpV;\n        } else if (window.location.protocol === 'https:') {\n            return window.httpsV;\n        }\n    }\n\n    getHashUrl(hash) {\n        if (this.connectedLocally) {\n            return 'http://localhost:8080/ipfs/' + hash;\n        } else if (window.location.protocol === 'http:') {\n            return '/ipfs/' + hash;\n        } else {\n            return '/ipfs/' + hash;\n        }\n    }\n\n    async getPinnedHashes() {\n        let list = await this.ipfs.refs.local();\n        return list.map(x => x.ref);\n    }\n\n    constructor() {\n        this.controllers = new Set();\n        if (window.isNFT) {\n            return;\n        }\n        if (window.location.protocol === 'http:') {\n            this.backupIpfs = new ipfsClient('ipfs.infura.io', '5001', {protocol: 'https'});\n            if (window.isNFT) {\n                this.centralIpfs = this.backupIpfs;\n                this._centralIpfs = ipfsClient('www.zequencer.io', '5001', {protocol: 'http'});\n            } else {\n                this.centralIpfs = ipfsClient('www.zequencer.io', '5001', {protocol: 'http'});\n                this._centralIpfs = this.centralIpfs;\n            }\n        } else {\n            if (window.isNFT) {\n                this.centralIpfs = this.backupIpfs;\n                this._centralIpfs = ipfsClient('www.zequencer.io', '5002', {protocol: 'https'});\n            } else {\n                this.centralIpfs = ipfsClient('www.zequencer.io', '5002', {protocol: 'https'});\n                this._centralIpfs = this.centralIpfs;\n            }\n        }\n\n        this.ipfs = this.centralIpfs;\n\n        let self = this;\n        this.connectedLocally = false;\n        this.finishedTestingLocalConnection = false;\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState == 4) {\n                // Request finished; either succesful or via timeout\n                if (xhr.status == 200) {\n                    self.ipfs = ipfsClient('localhost', '5001', {protocol: 'http'})  \n                    self.connectToCentral();\n                    self.connectedLocally = true;\n                    self.finishedTestingLocalConnection = true;\n                    this.keepSwarmConnectionAlive();\n                }\n            }\n        };\n\n        if (!window.isNFT) {\n            xhr.open(\"POST\", \"http://localhost:5001/api/v0/swarm/peers\", true);\n            xhr.timeout = 4000; // Set timeout to 4 seconds (4000 milliseconds)\n            xhr.ontimeout = function () {\n                console.log('timed out connecting to local ipfs daemon');\n            };\n        }\n\n        setTimeout(() => {\n            this.finishedTestingLocalConnection = true;\n        }, 4000);\n        xhr.send(\"\");\n    }\n\n    findProvs(hash) {\n        return new Promise((resolve, reject) => {\n            this.ipfs.dht.findprovs(hash, {maxNumProviders: 1}, (err, res) => {\n                resolve(res);\n            });\n        });\n    }\n\n    connectToCentral() {\n        try {\n                this.ipfs.swarm.connect(IPFS_ADDRESS, (err, res) => {\n                })\n                    .catch(e => console.log('error'));\n            } catch (e) {\n                console.log('error connecting to ipfs');\n            }\n    }\n\n    keepSwarmConnectionAlive() {\n        try {\n            this.ipfs.swarm.connect(IPFS_ADDRESS, (err, res) => {\n            })\n                .catch(e => console.log('error'));\n        } catch (e) {\n            console.log('error connecting to ipfs');\n        }\n        setInterval(() => {\n            if (window.sequencerEngine && window.sequencerEngine.getSequenceId) {\n                let id = window.sequencerEngine.getSequenceId();\n                if (window.sequencerEngine.store.getState().sequencer.isPlaying[id]) {\n                    return;\n                }\n            }\n            try {\n                this.ipfs.swarm.connect(IPFS_ADDRESS, (err, res) => {\n                })\n                    .catch(e => console.log('error'));\n            } catch (e) {\n                console.log('error connecting to ipfs');\n            }\n        }, 60000);\n    }\n\n    isConnectedLocally() {\n        return this.connectedLocally;\n    }\n\n    addArrayBuffer(arrayBuffer, id) {\n        let self = this;\n        return this.addHelper(arrayBuffer, id);\n    }\n\n    addArrayBufferAndSaveToDB(arrayBuffer, id) {\n        return this.addBlobAndSaveToDB(new Blob([new Uint8Array(arrayBuffer)]), id);\n    }\n\n    addHelper(arrayBuffer, id=0, name) {\n        if (name === undefined) {\n            name = 'hello';\n        } \n        let self = this;\n        return new Promise((resolve, reject) => {\n            let _ipfs = this._centralIpfs || this.ipfs;\n            if (!_ipfs) {\n                if (window.location.protocol === 'http:') {\n                    _ipfs = ipfsClient('www.zequencer.io', '5001', {protocol: 'http'});\n                } else {\n                    _ipfs = ipfsClient('www.zequencer.io', '5002', {protocol: 'https'});\n                }\n            }\n            _ipfs.add({name: name, path:'hello', content: new Buffer(arrayBuffer)}, (err, ipfsHash) => {\n                console.log(\"IPFS HASH = \", ipfsHash);\n                let hash = ipfsHash[0].hash;\n                if (err) {\n                    reject(err);\n                } else {\n                    resolve(hash);\n                }\n            }); \n        });\n    }\n\n    addBuffer(buffer, location=LOCAL, noUTF) {\n        return new Promise((resolve, reject) => {\n            let ipfsObject = this.centralIpfs;\n            ipfsObject.add(\n                buffer\n                , (err, ipfsHash) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    let hash = ipfsHash[0].hash;\n                    ipfsObject.pin.add(hash);\n\n                    resolve(hash);\n                }\n            });\n        });\n    }\n\n    addJson(json, location=LOCAL, noUTF) {\n        return new Promise((resolve, reject) => {\n            console.log('adding json noUTF=', noUTF, json);\n            let _ipfs = this._centralIpfs || this.ipfs;\n            if (!_ipfs) {\n                if (window.location.protocol === 'http:') {\n                    _ipfs = ipfsClient('www.zequencer.io', '5001', {protocol: 'http'});\n                } else {\n                    _ipfs = ipfsClient('www.zequencer.io', '5002', {protocol: 'https'});\n                }\n            }\n            _ipfs.add(\n                Buffer.from(JSON.stringify(json)) \n                , (err, ipfsHash) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    let hash = ipfsHash[0].hash;\n                    _ipfs.pin.add(hash);\n                    resolve(hash);\n                }\n            });\n\n            if (location === LOCAL) {\n                // add to other IPFS nodes for redundancy\n                if (_ipfs !== this.centralIpfs) {\n                    this.addJson(json, UNIVERSAL, noUTF)\n                        .then((hash) => resolve(hash));\n                }\n                this.addJson(json, INFURA, noUTF)\n                    .then((hash) => resolve(hash));\n            }\n        });\n    }\n\n    getJson(ipfsPath, useCentral=false, timeout=10000, isBytes=false) {\n        this.restart();\n        return new Promise((resolve, reject) => {\n            if (isBytes) {\n                this.ipfs.cat(ipfsPath, function (err, file) {\n                    resolve(JSON.parse(file.toString('utf8')));\n                });\n                return;\n            }\n            let url = \"/api/v0/cat?arg=\" + ipfsPath;\n            let ipfs = useCentral ? this.centralIpfs : this.ipfs;\n            let controller = new AbortController();\n            this.controllers.add(controller);\n            let signal = controller.signal;\n            setTimeout(() => {\n                controller.abort();\n                this.controllers.delete(controller);\n                reject();\n            }, timeout);\n\n            let method = 'POST';\n            let _url = this.getIPFSPrefix() + url;\n            if (window.isNFT) {\n                method = 'GET';\n                _url = ipfsPath;\n                fetch(\n                    _url,\n                    {signal,\n                     method\n                    })\n                    .then(async (resp) => {\n                        let json = await resp.json();\n                        resolve(json);\n                    });\n                return;\n            }\n\n            if (window.isNFT) {\n                return resolve({});\n            }\n\n            let dateA = new Date().getTime();\n            fetch(_url,\n                  {\n                      signal,\n                      method\n                  })\n                .then(async (response) => {\n                    let dateB = new Date().getTime();\n                    console.log('raw request took %s ms', dateB-dateA);\n                    this.readAllChunks(response.body).then(\n                        ret => {\n                            console.log(\"read all chunks took %s ms\", new Date().getTime() - dateB);\n                            let merged = this.mergeArrays(ret, 0, false);\n                            let str = new TextDecoder().decode(merged); \n                            resolve(JSON.parse(str));\n                        });\n                });\n        });\n    }\n\n    async addBytesArray(bytesArray) {\n        let b = new Uint8Array(bytesArray.length + END.length);\n        b.set(bytesArray, 0);\n        b.set(END, bytesArray.length);\n        let hash = await this.addHelper(b.buffer);\n        this.ipfs.pin.add(hash);\n        return hash;\n    }\n\n    async pin(x) {\n        return await this.ipfs.pin.add(x);\n    }\n\n    addBlob(blob, name) {\n        this.restart();\n        return new Promise((resolve, reject) => {\n            let arrayBuffer;\n            let fileReader = new FileReader();\n            let self = this;\n            fileReader.onload = function() {\n                arrayBuffer = this.result;\n                self.addHelper(arrayBuffer, undefined, name)\n                    .then(hash => {\n                        if (this.connectedLocally) {\n                            self.ipfs.pin.add(hash);\n                        }\n                        self.centralIpfs.pin.add(hash);\n                    \n                        resolve(hash);\n                    })\n                    .catch(err => reject(err));\n            };\n            fileReader.readAsArrayBuffer(blob);\n        });\n    }\n\n    addBlobAndSaveToDB(blob, id) {\n    }\n\n    converttoarraybuffer(blob) {\n        return new Promise((resolve, reject) => {\n            let arraybuffer;\n            let filereader = new filereader();\n            let self = this;\n            filereader.onload = function() {\n                resolve(this.result);\n            };\n            filereader.readasarraybuffer(blob);\n        });\n    }\n\n    readAllChunks(readableStream) {\n        const reader = readableStream.getReader();\n        const chunks = [];\n        \n        function pump() {\n            return reader.read().then(({ value, done }) => {\n                if (done) {\n                    return chunks;\n                }\n                chunks.push(value);\n                return pump();\n            });\n        }\n        \n        return pump();\n    }\n\n    getSound(hash, timeout=TIMEOUT) {\n        return new Promise((resolve, reject) => {\n            let controller = new AbortController();\n            this.controllers.add(controller);\n            let signal = controller.signal;\n            setTimeout(() => {\n                controller.abort();\n                this.controllers.delete(controller);\n                reject();\n            }, timeout);\n\n            let method = 'GET';\n            let _url = \"https://zequencer.io/ipfs/\" + hash; //this.getIPFSPrefix() + '/api/v0/get?arg=' + hash + '&stream-channels=true';\n            if (window.spores) {\n                _url = \"https://zequencer.mypinata.cloud/ipfs/\" + hash;\n            }\n            if (window.isNFT) {\n                method = 'GET';\n                _url = hash;\n                return fetch(\n                    _url,\n                    {signal,\n                     method\n                    })\n                    .then(async (resp) => {\n                        let json = await resp.arrayBuffer();\n                        resolve(new Uint8Array(json));\n                    });\n            }\n\n            if (window.isNFT) {\n                return resolve([]);\n            }\n\n            let dateA = new Date().getTime();\n            fetch(_url,\n                  {signal,\n                   method\n                  })\n                .then(async (response) => {\n                    let dateB = new Date().getTime();\n                    console.log(\"raw response took %s ms\", dateB - dateA);\n                    let arrayBuffer = await response.arrayBuffer();\n                    let dateC = new Date().getTime();\n                    console.log(\"Array buffer tranform took %s ms\", new Date().getTime() - dateB);\n                    let processed = this.processArray(new Uint8Array(arrayBuffer));\n                    console.log(\"processing took % ms\", new Date().getTime() - dateC);\n                    resolve(processed);\n                    return;\n                    this.readAllChunks(response.body).then(\n                        ret => {\n                            let merged = this.mergeArrays(ret);\n                            resolve(merged);\n                        })\n                        .catch(err => console.log('error reading chunks'));\n                })\n                .catch(err => {\n                    console.log('aborted');\n                });\n        });\n    }\n\n    arrayToBuffer(array) {\n        var buffer = new ArrayBuffer(array.length);\n\n        array.map(function(value, i){buffer[i] = value});\n        return buffer;\n    }\n\n    cancel() {\n        console.log('cancelling = ', this.controllers);\n        Array.from(this.controllers).forEach(\n            x => x.abort());\n        // this.controllers = new Set();\n    }\n\n    processArray(array, skip=512, skipEnd=true) {\n        if (!skipEnd) {\n            return array;\n        }\n\n        let a = array; //array.slice(0, array.length - (1024));\n        let offset = this.findEnd(a, END);\n        if (offset !== -1) {\n            let x = a.slice(0, offset);\n            return x;\n        }\n        return array.slice(0, array.length - (1024));;\n    }\n\n    mergeArrays(arrays, skip=512, skipEnd=true) {\n        let size = 0;\n        for (let i in arrays) {\n            size += arrays[i].length;\n        }\n\n        let array = new Uint8Array(size - skip);\n        let count = 0;\n        for (let i in arrays) {\n            if (count === 0) {\n                array.set(arrays[i].subarray(skip), count);\n                count += arrays[i].length - skip;\n            } else {\n                array.set(arrays[i], count);\n                count += arrays[i].length;\n            }\n        }\n\n        if (!skipEnd) {\n            return array;\n        }\n\n        let a = array; //array.slice(0, array.length - (1024));\n        let offset = this.findEnd(a, END);\n        if (offset !== -1) {\n            let x = a.slice(0, offset);\n            return x;\n        }\n        return array.slice(0, array.length - (1024));;\n    }\n\n    findEnd(array, ending) {\n        let index = array.length - 1600;\n        let iter = array.slice(index).values();\n        let foundIndex = 0;\n        for (let i=index; i < array.length; i++) {\n            let value = iter.next().value;\n            if (value === ending[foundIndex]) {\n                if (foundIndex == 0) {\n                    index = i;\n                }\n                foundIndex++;\n                if (foundIndex === ending.length - 1) {\n                    return index;\n                }\n            } else {\n                foundIndex=0;\n                index=i;\n            }\n\n        }\n        return -1;\n    }\n\n    getAudioBuffer(hash, context) {\n        this.restart();\n        return new Promise((resolve, reject) => {\n            this.getSound(hash)\n                .then(blob => \n                      context.decodeAudioData(bufferToArrayBuffer(blob), function(buffer) {\n                          resolve(buffer);\n                      }, function (y, d, e) { if (e) { reject(e); }}))\n                .catch(err => {\n                    reject(err);\n                });\n        });\n    }\n}\n\nconst ipfs = new IpfsClient();\n\nexport default ipfs;\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\n\nconst VisualLinks = ({helperBox, helperRefs, selected}) => { \n    const [locations, setLocations] = useState();\n    useEffect(() => {\n        if (!helperRefs) {\n            return;\n        }\n        let playerEl = helperRefs[selected].current;\n        let helperEl = helperBox.current;\n\n        let playerLocation = getLocation(playerEl);\n        let helperLocation  = getLocation(helperEl);\n\n        setLocations([helperLocation, playerLocation]);\n    }, [selected, setLocations, helperRefs]);\n    if (!locations) {\n        return '';\n    }\n\n    let points = [\n        locations[0].x + locations[0].width, locations[0].y,\n        locations[1].x, locations[1].y + locations[1].height/2-1,\n        locations[1].x, locations[1].y + locations[1].height/2+1,\n        locations[0].x + locations[0].width,\n        locations[0].y+locations[0].height\n    ];\n    return (\n        <svg className=\"visual-links-spore\">\n          <linearGradient id=\"AnnotationGradient\">\n            <stop offset=\"5%\" stopColor=\"#a4c3e55c\" />\n            <stop offset=\"95%\" stopColor=\"#80aaff36\" />\n          </linearGradient>\n          <polygon className=\"visual-link\" points={points}/>\n        </svg>);\n}\n\nconst getLocation = (element, bounding) => {\n    var rect = element.getBoundingClientRect();\n    let bound = {top: 0, left: 0} //bounding.getBoundingClientRect();\n    let y = rect.top - bound.top;\n    let x = rect.left - bound.left;\n    let height = element.offsetHeight;\n    let width = element.offsetWidth;\n    let pos = {x, y, width, height};\n    return pos;\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VisualLinks);\n","export const docs = {\n    centerButton: [\n        \"Pressing starts and stops the song. \",\n        \"Press and hold to apply the unique FX Chain.\",\n        \"Click on any empty space within the Spore Player to go back to a clean slate.\"\n    ],\n    ledButton: [\n        \"Press to enter \\\"Loop Mode\\\". When in this mode, the sliders control different looping parameters.\",\n        \"Slider 1: Loop Length\",\n        \"Slider 2: Play-rate (chop n screw)\",\n        \"Slider 3: Straight rolls (click and hold to roll)\",\n        \"Slider 4: Triplet rolls (click and hold to roll)\",\n    ],\n    spButton1: [\n        \"Press to enter \\\"Space Mode\\\". When in this mode, the sliders control different space parameters. \",\n        \"Slider 1: Vocal Reverb\",\n        \"Slider 2: Crystalized Ambience\",\n        \"Slider 3: Bass Reverb\",\n        \"Slider 4: Drum Reverb\",\n    ],\n    spButton2: [\n        \"Press to enter \\\"Timing Mode\\\". When in this mode, the sliders control different timing parameters. \",\n        \"Slider 1: Gate Rate\",\n        \"Slider 2: 8th note Delay\",\n        \"Slider 3: Gate Depth\",\n        \"Slider 4: 16th note Delay\",\n    ],\n    slider1: [\n        \"Controls the vocal volume when not in any special modes. When in a mode, it controls a special parameter for that mode.\",\n        \"Loop Mode: Loop Length\",\n        \"Space Mode: Vocal Reverb\",\n        \"Timing Mode: Gate rate\",\n    ],\n    slider2: [\n        \"Controls the drums volume when not in any special modes. When in a mode, it controls a special parameter for that mode.\",\n        \"Loop Mode: Triplet rolls (click and hold to roll)\",\n        \"Space Mode: Drum Reverb\",\n        \"Timing Mode: 16th note Delay\",\n    ],\n    slider3: [\n        \"Controls the bass  volume when not in any special modes. When in a mode, it controls a special parameter for that mode.\",\n        \"Loop Mode: Straight rolls (click and hold to roll)\",\n        \"Space Mode: Bass Reverb\",\n        \"Timing Mode: Gate Depth\",\n    ],\n    slider4: [\n        \"Controls the instruments volume when not in any special modes. When in a mode, it controls a special parameter for that mode.\",\n        \"Loop Mode: Play-rate (chop n screw)\",\n        \"Space Mode: Crystalized Ambience\",\n        \"Timing Mode: 8th note Delay\",\n        ]\n};\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport VisualLinks from './VisualLinks.js';\nimport {docs} from './docs.js';\n\n\nconst HelperLines = ({helperRefs, selected, sliderHovered}) => { \n    let ref= useRef();\n    let doc = docs[selected];\n    return [\n        <div ref={ref} key={1} className=\"helper-box\">\n          {Array.isArray(doc) ? doc.map((x, i) => <p className={(selected.includes(\"spButton\") || selected === \"ledButton\") && i===sliderHovered ? \"selected\" : \"\"}>{x}</p>) : doc}\n        </div>,\n        <VisualLinks helperBox={ref} helperRefs={helperRefs} selected={selected}/>\n    ];\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HelperLines);\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport HelperLines from './HelperLines.js';\nimport {connect} from 'react-redux';\nimport './helper.scss';\n\nconst PlayerHelper = ({clear}) => { \n    let [sliderHovered, setSliderHovered]  = useState(undefined);\n    let [selected, setSelected] = useState(\"centerButton\");\n    let centerButton = useRef();\n    let spButton1 = useRef();\n    let spButton2 = useRef();\n    let ledButton = useRef();\n    let slider1 = useRef();\n    let slider2 = useRef();\n    let slider3 = useRef();\n    let slider4 = useRef();\n    return (\n        <div className=\"player-helper\">\n          <HelperLines\n            sliderHovered={sliderHovered}\n            selected={selected}\n            helperRefs={{\n              slider1,\n              slider2,\n              slider3,\n              slider4,\n              ledButton,\n              spButton1,\n              spButton2,\n              centerButton\n          }}/>\n          <div onClick={clear} className=\"pushable x-button\">\n            x\n          </div>\n          <div className=\"mock-player\">\n            <div ref={centerButton} className={selected === \"centerButton\" ? \"center-button selected\" : \"center-button\"}\n                 onClick={() => setSelected(\"centerButton\")}/>\n            <div ref={ledButton} className={selected === \"ledButton\" ? \"sp-button button1 led-button selected\" : \"sp-button button1 led-button\"}\n                 onClick={() => setSelected(\"ledButton\")}/>\n            <div ref={spButton1} className={selected === \"spButton1\" ? \"sp-button button2 selected\" : \"sp-button button2\"}\n                 onClick={() => setSelected(\"spButton1\")}>\n            </div>\n            <div ref={spButton2} className={selected === \"spButton2\" ? \"sp-button button3 selected\" : \"sp-button button3\"}\n                 onClick={() => setSelected(\"spButton2\")}/>\n\n            <div\n              onMouseLeave={() => setSliderHovered(undefined)}\n              onMouseOver={() => setSliderHovered(1)}\n              ref={slider1} className={selected === \"slider1\" ? \"sp-slider slider1 selected\" : \"sp-slider slider1\"}\n                 onClick={() => setSelected(\"slider1\")}>\n              <span>1</span>\n            </div>\n            <div\n              onMouseLeave={() => setSliderHovered(undefined)}\n              onMouseOver={() => setSliderHovered(4)}\n              ref={slider2} className={selected === \"slider2\" ? \"sp-slider slider2 selected\" : \"sp-slider slider2\"}\n                 onClick={() => setSelected(\"slider2\")}>\n              <span>4</span>\n            </div>\n            <div\n              onMouseLeave={() => setSliderHovered(undefined)}\n              onMouseOver={() => setSliderHovered(3)}\n              ref={slider3} className={selected === \"slider3\" ? \"sp-slider slider3 selected\" : \"sp-slider slider3\"}\n                 onClick={() => setSelected(\"slider3\")}>\n              <span>3</span>\n            </div>\n            <div\n              onMouseLeave={() => setSliderHovered(undefined)}\n              onMouseOver={() => setSliderHovered(2)}\n              ref={slider4} className={selected === \"slider4\" ? \"sp-slider slider4 selected\" : \"sp-slider slider4\"}\n                 onClick={() => setSelected(\"slider4\")}>\n              <span>2</span>\n            </div>\n          </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerHelper);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './credits.scss';\n\nconst Credits = ({setShowCredits}) => { \n    return (\n        <div className=\"credits\">\n          <div onClick={() => setShowCredits(false)} className=\"pushable x-button\">\n            x\n          </div>\n          <div className=\"credits-text\">\n            <p>\n              Spore Players: A new internet for sound. Season One featuring \"Psilocybin\". Fuck just being a collector, become a <i>distributor</i> in the new music world. Beam futuristic songs exclusively to planet earth with your limited edition Spore Player. Each Spore Player is loaded with hidden rarities, such as <i>FX Chains</i>, that alter each song differently. Anyone can remix the song using the Spore Player, but only collectors have the power to mint the official remixes. Become the world’s ultra-rare contact point for futuristic music.\n            </p>\n\n            <p>\n              Song Credits\n            </p>\n\n            <p>\n              Location: Sunset and Gower Recording Studios\n            </p>\n            \n            <p>\n              Keyon Christ - Vocals, Writing, Producer\n              CLLLAPS - Co producer\n              Jonnywood- Co producer, Mixer\n              Zamorrah - Writer\n              Oshi - Co producer \n              Wil Anspach - Recording, Mixer\n            </p>\n            \n            <p>\n              Powered by <a href=\"https://zequencer.io\">Zequencer</a> x <a href=\"https://indigosound.vision\">Indigo Sound</a>\n            </p>\n\n          </div>\n        </div>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Credits);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\n\nconst SongTitle = (props) => { \n    return (\n        <div className=\"song-title\">\n          <div className=\"song-name\">\n            Psilocybin\n          </div>\n          <div className=\"song-artist\">\n            Keyon Christ\n          </div>\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SongTitle);\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport SongTitle from './SongTitle.js';\nimport {connect} from 'react-redux';\nimport {isMobile} from 'react-device-detect';\nimport './caurosel.scss';\n\nconst Caurosel = ({playerChosen, setPlayerChosen, showStemPlayer, setShowStemPlayer}) => { \n    let ref = useRef();\n    let [selectedPlayer, setSelectedPlayer] = useState(undefined);\n    let [mouse, setMouse] = useState();\n    let [over, setOver] = useState();\n\n    const onMouseMove = useCallback((e) => {\n        let rect = ref.current.getBoundingClientRect();\n        let x = e.clientX - rect.left;\n        let y = e.clientY - rect.top;\n        setMouse({x,y});\n    }, [setMouse]);\n\n    const onMouseLeave = useCallback(() => {\n        setMouse(undefined);\n    }, [setMouse]);\n\n    let brect = ref.current && ref.current.getBoundingClientRect();\n\n    let className = \"caurosel\";\n    if (playerChosen) {\n        className += \" player-chosen\";\n    }\n    return (\n        <div onMouseLeave={onMouseLeave} ref={ref} onMouseMove={onMouseMove} className={className}>\n          {mouse && <div className=\"mouse-radial\" style={{left: mouse.x-500, top: mouse.y-500}}></div>}\n          <SporeOption\n            playerChosen={playerChosen}\n            brect={brect}\n            setShowStemPlayer={setShowStemPlayer}\n            showStemPlayer={showStemPlayer}\n            mouse={mouse}\n            isOver={over===1}\n            setOver={setOver}\n            setPlayerChosen={setPlayerChosen} rarity=\"Convolver\" tokenId={1}\n            thumbnail={isMobile ? \"/sp-1-thumbnail-mobile.png\" : \"/sp-1-thumbnail.png\"}/>\n          <SporeOption\n            setShowStemPlayer={setShowStemPlayer}\n            showStemPlayer={showStemPlayer}\n            brect={brect}\n            playerChosen={playerChosen}\n            mouse={mouse}\n            isOver={over===2}\n            setOver={setOver}\n            setPlayerChosen={setPlayerChosen} rarity=\"Ionic Filter\" tokenId={2}\n            thumbnail={isMobile ? \"/sp-2-thumbnail-mobile.png\" : \"/sp-2-thumbnail.png\"}/>\n          <SporeOption\n            setShowStemPlayer={setShowStemPlayer}\n            showStemPlayer={showStemPlayer}\n            brect={brect}\n            playerChosen={playerChosen}\n            mouse={mouse}\n            isOver={over===3}\n            setOver={setOver}\n            setPlayerChosen={setPlayerChosen} rarity=\"WaveFolder\" tokenId={3}\n            thumbnail={isMobile ? \"/sp-3-thumbnail-mobile.png\" : \"/sp-3-thumbnail.png\"}/>\n          <SporeOption\n            setShowStemPlayer={setShowStemPlayer}\n            showStemPlayer={showStemPlayer}\n            brect={brect}\n            playerChosen={playerChosen}\n            mouse={mouse}\n            isOver={over===4}\n            setOver={setOver}\n            setPlayerChosen={setPlayerChosen} rarity=\"Freak Shifter\" tokenId={4}\n            thumbnail={isMobile ? \"/sp-3-thumbnail-mobile.png\" : \"/sp-3-thumbnail.png\"}/>\n          <SporeOption\n            setShowStemPlayer={setShowStemPlayer}\n            showStemPlayer={showStemPlayer}\n            brect={brect}\n            playerChosen={playerChosen}\n            mouse={mouse}\n            isOver={over===4}\n            setOver={setOver}\n            setPlayerChosen={setPlayerChosen} rarity=\"Vocal Bender\" tokenId={5}\n            thumbnail={isMobile ? \"/sp-3-thumbnail-mobile.png\" : \"/sp-3-thumbnail.png\"}/>\n          <SporeOption\n            setShowStemPlayer={setShowStemPlayer}\n            showStemPlayer={showStemPlayer}\n            brect={brect}\n            playerChosen={playerChosen}\n            mouse={mouse}\n            isOver={over===4}\n            setOver={setOver}\n            setPlayerChosen={setPlayerChosen} rarity=\"Caustic Fluids\" tokenId={6}\n            thumbnail={isMobile ? \"/sp-3-thumbnail-mobile.png\" : \"/sp-3-thumbnail.png\"}/>\n        </div>);\n};\n\nconst SporeOption = ({\n    showStemPlayer,\n    setShowStemPlayer,\n    brect,\n    tokenId, playerChosen, isOver, mouse, setOver, rarity, thumbnail, setPlayerChosen\n}) => {\n    let ref= useRef();\n\n    let rect = ref.current && ref.current.getBoundingClientRect();\n    let _x = rect && mouse && mouse.x - rect.left + brect.left;\n    let _y= rect && mouse && mouse.y - rect.top + brect.top;\n    let className = \"spore-player-option\";\n    if (playerChosen === tokenId) {\n        className += \" chosen\";\n    } else if (playerChosen) {\n        className += \" unchosen\";\n    }\n\n        const onClick = useCallback(() => {\n              if (showStemPlayer) {\n                  setShowStemPlayer(undefined);\n                  setPlayerChosen(undefined);\n                  return;\n              }\n              if (playerChosen === tokenId) {\n                  setShowStemPlayer(undefined);\n                  setPlayerChosen(undefined);\n              } else {\n                  setPlayerChosen(tokenId);\n                  setShowStemPlayer(true);\n              }\n        }, [setPlayerChosen, showStemPlayer, playerChosen, tokenId]);\n\n    return (\n        <div\n          ref={ref}\n          onMouseOver={() => setOver(tokenId)}\n          className={className}>\n          {isOver && mouse && <div className=\"mouse-radial\" style={{left: _x-500, top: _y-500}}></div>}\n          <div\n            onClick={onClick}>\n            <img src={thumbnail}/>\n            <div\n              className=\"sp-fields\">\n              <div\n                className=\"sp-name\">\n                SP-{tokenId}\n              </div>\n              <div className=\"sp-rarity\">\n                {rarity}\n              </div>\n            </div>\n          </div>\n          {showStemPlayer && <SongTitle/>}\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Caurosel);\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {isMobile} from 'react-device-detect';\nimport {connect} from 'react-redux';\nimport './jolly.scss';\nimport './heatmap.scss';\n\nconst JollyRancherPlayer = ({width, store, spore, progress, preset, setPreset}) => { \n    let ref = useRef();\n\n    useEffect(() => {\n        if (ref.current && ref.current.contentWindow) {\n            if (spore) {\n                ref.current.contentWindow.postMessage({\n                    type: \"heatmapHash\",\n                    body: spore.dataHash\n                }, \"*\");\n            }\n        }\n    }, [spore]);\n\n    useEffect(() => {\n        if (ref.current && ref.current.contentWindow) {\n            ref.current.contentWindow.postMessage({\n                type: \"sporePosition\",\n                body: progress\n            }, \"*\");\n        }\n    }, [progress]);\n\n    useEffect(() => {\n        if (ref.current && ref.current.contentWindow) {\n            ref.current.contentWindow.postMessage({\n                type: \"heatmapSize\",\n                body: [width, 90]\n            }, \"*\");\n        }\n    }, [width]);\n       \n    return (\n        <iframe\n          ref={ref}\n          sandbox=\"allow-scripts allow-same-origin\"\n          height={110}\n          width={width}\n          aria-describedby=\"spore\"\n          alt=\"spore.vision\"\n          src={\"https://zequencer.io/ipfs/QmTh6hkgEGGLpVP5XANvDToWMmLNq1VFXcS4vXnCMjrefC/\"}\n          className=\"spore-heatmap zora-mediaObject css-hnzuw7 zora-mediaObject--mediaLoaded zora-mediaObject--isFullPage\"\n          style={{borderWidth: \"0px\"}}/>\n        );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JollyRancherPlayer);\n","/*\n    This file is part of Universal Sequences.\n    Universal Sequences is free software: you can redistribute it and/or modif\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Universal Sequences is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\nconst MIN_BRIGHTNESS = 170;\nconst brightCache = {};\nconst trackCache = {};\n\nclass Colors {\n    constructor() {\n    }\n\n    transparent(color, opacity) {\n        return color.slice(0, color.length-1) + ', ' + opacity + ')';\n    }\n\n    intToRGB(i){\n        var c = (i & 0x00FFFFFF)\n            .toString(16)\n            .toUpperCase();\n        \n        return \"#\" + \"00000\".substring(0, 6 - c.length) + c;\n    }\n\n    hueShift(c, shift) {\n        let {h, s, l} = getHSLFromString(c);\n        return getHSLString({h: h + shift, s, l});\n    }\n\n    warm(warmth, start=141, s=100) {\n        let h = start;\n        let l = 50;\n        return getHSLString({h: h - warmth, s, l});\n    }\n\n    compliment(c, rotate=2) {\n        let {h, s, l} = getHSLFromString(c);\n        if (h === 0) {\n            h++;\n        }\n        h += rotate*10 % 255;\n        let x = getHSLString({h, s, l});\n        return x;\n    }\n\n    saturate(c, factor, lightFactor=1) {\n        if (!c) {\n            return undefined;\n        }\n        if (c.startsWith(\"hsl\")) {\n            let {h, s, l} = getHSLFromString(c);\n            l *= lightFactor;\n            s = Math.min(s*factor, 100);\n            c = getHSLString({h, s, l});\n            return c;\n        } else {\n            let rgb = this.getRGB(c);\n            let {h, s, l} = RGBToHSL(rgb);\n            l *= lightFactor;\n            s = Math.min(s*factor, 100);\n            c = getHSLString({h, s, l});\n            return c;\n        }\n    }\n\n    brighten(c, factor) {\n        if (c.startsWith(\"hsl\")) {\n            let hsl = getHSLFromString(c);\n            hsl = brightenHSL(hsl, factor);\n            return getHSLString(hsl);\n        }\n        let cacheResult = brightCache[(c + '.' + factor)];\n        if (cacheResult) {\n            return cacheResult;\n        }\n        let r = Math.min(255, Math.floor(parseInt(c.slice(1, 3), 16) * factor));\n        let g = Math.min(255, Math.floor(parseInt(c.slice(3, 5), 16) * factor));\n        let b = Math.min(255, Math.floor(parseInt(c.slice(5), 16) * factor));\n\n        r = r.toString(16);\n        g = g.toString(16);\n        b = b.toString(16);\n\n        if (r.length === 1) {\n            r = '0' + r;\n        }\n\n        if (g.length === 1) {\n            g = '0' + g;\n        }\n\n        if (b.length === 1) {\n            b = '0' + b;\n        }\n\n        let x = '#' + r + g + b;\n        brightCache[c + '.' + factor] = x;\n        return x;\n\n    }\n\n    getBrightness(c) {\n        let rgb = this.getRGB(c);\n\n        let color = 0.299*rgb.r + 0.587*rgb.g + 0.114*rgb.b;\n        return color;\n    }\n\n    rawHSLToHex({h,s,l}) {\n        return hslToHex(h,s,l);\n    }\n\n    hslToHex(color) {\n        let {h,s,l} = getHSLFromString(color);\n        return hslToHex(h,s,l);\n    }\n\n    getRGB(c) {\n        let r = Math.floor(parseInt(c.slice(1, 3), 16)); \n        let g = Math.floor(parseInt(c.slice(3, 5), 16));\n        let b = Math.floor(parseInt(c.slice(5), 16));\n        return {r:r, g:g, b:b};\n    }\n}\n\nfunction RGBToHSL({r,g,b}) {\n    // Make r, g, and b fractions of 1\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    // Find greatest and smallest channel values\n    let cmin = Math.min(r,g,b),\n        cmax = Math.max(r,g,b),\n        delta = cmax - cmin,\n        h = 0,\n        s = 0,\n        l = 0;\n\n    if (delta == 0)\n        h = 0;\n    // Red is max\n    else if (cmax == r)\n        h = ((g - b) / delta) % 6;\n    // Green is max\n    else if (cmax == g)\n        h = (b - r) / delta + 2;\n    // Blue is max\n    else\n        h = (r - g) / delta + 4;\n\n    h = Math.round(h * 60);\n\n    // Make negative hues positive behind 360°\n    if (h < 0)\n        h += 360;\n\n    // Calculate lightness\n    l = (cmax + cmin) / 2;\n\n    // Calculate saturation\n    s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n\n    // Multiply l and s by 100\n    s = +(s * 100).toFixed(1);\n    l = +(l * 100).toFixed(1);\n\n    return {h, s, l};\n}\n\nfunction getHSLString({h, s, l}) {\n    return \"hsl(\" + h + \",\" + s + \"%,\" + l +\"%)\";\n}\n\nfunction getHSLFromString(str) {\n    str = str.substring(4);\n    let [hPart, sPart, lPart] = str.split(\",\");\n    let index = sPart.indexOf(\"%\");\n    sPart = sPart.substring(0, index);\n    index = lPart.indexOf(\"%\");\n    lPart = lPart.substring(0, index);\n    return {\n        h: parseFloat(hPart),\n        s: parseFloat(sPart),\n        l: parseFloat(lPart),\n    };\n\n}\n\nfunction brightenHSL({h, s, l}, factor) {\n    return {\n        h,\n        s,\n        l: l* factor\n    };\n}\n\nfunction hslToHex(h, s, l) {\n  l /= 100;\n  const a = s * Math.min(l, 1 - l) / 100;\n  const f = n => {\n    const k = (n + h / 30) % 12;\n    const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    return Math.round(255 * color).toString(16).padStart(2, '0');   // convert to Hex and prefix \"0\" if needed\n  };\n  return `#${f(0)}${f(8)}${f(4)}`;\n}\n\n\n\nexport default Colors;\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport Colors from 'components/Colors.js';\nimport Tone from 'tone';\nconst colors = new Colors();\nwindow.heatRoot = 1.1;\n//window.bucketSize = 4;\nwindow.bucketSize = 1;\nwindow.saturation = 80;\n\nconst SporeHeatMap = ({heat, width=54, height=10, center=false, saturation=200, duration}) => { \n    // lets start with slider data\n    if (!heat) {\n        return '';\n    }\n\n    // first process the heat\n    let bucketSize = width === 54 ? window.bucketSize*2 : window.bucketSize;\n    let buckets = getBuckets(heat, bucketSize);\n    let max = Math.max(...Object.values(buckets))*.75;\n    let maxStep = Math.max(...Object.keys(buckets));\n    /*\n    if (duration) {\n        let oldMaxStep = maxStep;\n        maxStep = (duration/new Tone.Time('32n'))/(bucketSize);\n        console.log(\"max step=%s old max step=%s dur=%s\", maxStep, oldMaxStep, duration);\n    }\n    */\n    return (\n        <svg className=\"heatmap\" width={width} height={10}>\n          {Object.keys(buckets).map(\n              step => <rect\n                        width={width > 80 ? 4 : 1}\n                        height={center ? height* Math.min(1, Math.pow(buckets[step], window.heatRoot)/max) : height}\n                        opacity={Math.min(1, Math.pow(buckets[step], window.heatRoot)/max)}\n                        fill={colors.warm(190*Math.min(1, Math.pow(buckets[step], window.heatRoot)/max), 190,\n                                          Math.min(1, Math.pow(buckets[step], window.heatRoot)/max)*saturation)}\n                        x={width*step/maxStep}\n                        y={center ? height/2 - height* Math.min(1, Math.pow(buckets[step], window.heatRoot)/max)/2 : 0}/>)}\n        </svg>);\n};\n\nconst getBuckets = (heat, bucketSize) => {\n    let sliderData = heat.sliderChanges;\n    let modeData = heat.modeChanges;\n    let regions = sliderData.map(x => Math.round((isNaN(x[0]) ? 0 : x[0]) / bucketSize));\n    let buckets = {};\n    for (let x of regions) {\n        if (!buckets[x]) {\n            buckets[x] = 0;\n        }\n        buckets[x]+=1;\n    }\n\n    regions = modeData.map(x => Math.round((isNaN(x[0]) ? 0 : x[0]) / bucketSize));\n    let max = Math.max(...Object.values(regions));\n    for (let x of regions) {\n        if (!buckets[x]) {\n            buckets[x] = 0;\n        }\n        buckets[x]+=16;\n        let q=0;\n        for (let i=x+1; i < max; i++) {\n            if (regions.some(x => x === i)) {\n                break;\n            }\n            if (!buckets[i]) {\n                buckets[i] = 0;\n            }\n            buckets[i] += (50+q);\n            q+=8;\n        }\n    }\n    return buckets;\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SporeHeatMap);\n","import React, { Component, useCallback } from 'react';\nimport './buttons.scss';\n\nconst PlayButton = (props) => {\n    const onPlayClicked = useCallback((e) => {\n        e.target.parentNode.blur();\n        e.target.blur();\n        e.currentTarget.blur();\n        props.play();\n    }, [props.isPlaying]);\n\n    return (\n        <div\n          onClick={onPlayClicked}\n          className=\"play-btn-wrapper pushable\">\n          <div\n            className={props.isPlaying ? \"play-btn playing\" : \"play-btn \"}/>\n        </div>\n    );\n}\n\n\nexport default PlayButton;\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport JollyRancherPlayer from './JollyRancherPlayer.js';\nimport {isMobile} from 'react-device-detect';\nimport SporeHeatMap from \"components/spore/SporeHeatMap.js\";\n\nimport {useInterval} from \"components/hooks/useInterval.js\";\nimport PlayButton from \"components/buttons/PlayButton.js\";\nimport {connect} from 'react-redux';\nimport Tone from 'tone';\n\nconst AudioPlayer = ({heat, creator, audioUnit, store, spore, preset, setPreset, sporeMetadata}) => { \n\n    let WIDTH=isMobile ? 240 : 500;\n    let ref = useRef();\n    let [playing, setPlaying] = useState(false);\n    let [playTime, setPlayTime] = useState(undefined);\n    let startPoint = useRef(0);\n    let [progress, setProgress] = useState(0);\n    let [mouseSeeker, setMouseSeeker] = useState();\n\n    useEffect(() => {\n        setPlaying(false);\n        setProgress(0);\n    }, [spore]);\n\n    const onTick = useCallback(() => {\n        let diff = Tone.Master.context.currentTime - playTime;\n        if (playing) {\n            setProgress((diff + startPoint.current) / audioUnit.duration);\n        }\n    }, [playing, setProgress, playTime]);\n\n    useInterval(onTick, 40);\n\n    const onClickPlay = useCallback(() => {\n        if (playing) {\n            startPoint.current = startPoint.current + Tone.Master.context.currentTime - playTime;\n            audioUnit.stopSound();\n        } else {\n            audioUnit.playSound(startPoint.current);\n        }\n        setPlaying(!playing);\n        //setProgress(0);\n        setPlayTime(Tone.Master.context.currentTime);\n    }, [playing, setProgress, setPlaying, audioUnit, playTime]);\n\n    const mouseSeek = useCallback((e) => {\n        e.stopPropagation();\n        setMouseSeeker(undefined);\n        if (!playing) {\n            setPlaying(true);\n        }\n        let x = e.clientX - ref.current.getBoundingClientRect().left;\n        let percentage = x / WIDTH;\n        let startTime = percentage * audioUnit.duration;\n        audioUnit.playSound(startTime);\n        startPoint.current = startTime;\n        setPlayTime(Tone.Master.context.currentTime);\n        setMouseSeeker(x);\n        setTimeout(() => {\n            setMouseSeeker(undefined);\n        }, 300);\n    }, [playing, setPlaying, setPlayTime, setMouseSeeker, audioUnit]);\n\n    useEffect(() => {\n        return () => {\n            if (audioUnit) {\n                audioUnit.stopSound();\n            }\n        }\n    }, [audioUnit]);\n\n    progress = Math.min(100, progress);\n\n    return (\n        <div className=\"audio-player\">\n          {audioUnit &&\n           <PlayButton isPlaying={playing}\n                       play={onClickPlay}/>}\n          <div\n            ref={ref}\n            onClick={mouseSeek}\n            className=\"play-time-and-slider\">\n            {sporeMetadata && <JollyRancherPlayer\n                        setPreset={setPreset}\n                                width={WIDTH}\n                        preset={preset}\n                        progress={progress}\n                        store={store}\n                        spore={sporeMetadata}\n                      />}\n           <div className=\"play-time\">\n              {audioUnit && <div className=\"time\">\n              {formatTime(progress*audioUnit.duration)} / {formatTime(audioUnit.duration)}\n                            </div>}\n              {creator && <div className=\"creator\">\n                {truncate(creator)}\n                          </div>}\n            </div>\n            <div className=\"song-title-and-author\">\n              <div className=\"song-title\">\n              Psilocybin\n              </div>\n              <div className=\"song-creator\">\n                Keyon Christ\n              </div>\n            </div>\n          </div>\n        </div>);\n}\n\nexport const truncate = (creator) => {\n    return creator.slice(0, 4) + '...' + creator.slice(-4);\n};\n\nconst formatTime = (time) => {\n    if (!time) {\n        time = 0;\n    }\n    let minutes = Math.floor(time/60);\n    let seconds = Math.floor(time - minutes * 60);\n    if (seconds < 10) {\n        seconds = '0' + seconds;\n    }\n\n    return `${minutes}:${seconds}`;\n\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\n            /*\n            <div\n              onClick={mouseSeek}\n              ref={ref} className=\"play-slider\">\n              {mouseSeeker && <div style={{left: mouseSeeker}} className=\"mouse-seeker\"/>}\n              <SporeHeatMap duration={audioUnit.duration} center={true} height={8} heat={heat} width={WIDTH}/>\n            <div\n              style={{width: WIDTH * progress}}\n              className=\"play-slider-inner\">\n            </div>\n            */\n \n\n/*\n\n\n*/\nexport default connect(mapStateToProps, mapDispatchToProps)(AudioPlayer);\n","import React, { useState, useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","class EthereumEventLog {\n    // for example, SampleTagged(bytes32,bytes32) would be the event\n    // and the arguments would be EthereumTopic(\"ipfsHash\", IPFS_HASH),\n    // EthereumTopic(\"tag\", BYTES_32)\n    constructor(event, topics, ...data) {\n        this.event = event;\n        this.topics = topics;\n        this.data = data;\n    }\n}\n\nexport default EthereumEventLog;\n","class EthereumTopic {\n    constructor(name, type, size=1) {\n        this.name = name;\n        this.type = type;\n        this.size = size*64;\n    }\n\n    convertTo(x) {\n        if (x === undefined || x === null) {\n            return undefined;\n        }\n        return this.type.convertTo(x);\n    }\n   \n    convertFrom(x) {\n        if (x === undefined || x === null) {\n            return undefined;\n        }\n        return this.type.convertFrom(x);\n    }\n}\n\nexport default EthereumTopic;\n","import {IPFS_HASH} from 'decentralized/EthereumDataTypes.js';\nimport {INT_8} from 'decentralized/EthereumDataTypes.js';\nimport {INT_16} from 'decentralized/EthereumDataTypes.js';\nimport {INT_32} from 'decentralized/EthereumDataTypes.js';\nimport {UINT_256} from 'decentralized/EthereumDataTypes.js';\nimport {RIGHT_PADDED_BYTES_32} from 'decentralized/EthereumDataTypes.js';\nimport {BYTES_32, BYTES_32_LEFT} from 'decentralized/EthereumDataTypes.js';\nimport {BYTES_32_ENCRYPTED} from 'decentralized/EthereumDataTypes.js';\nimport {BYTES_32_ARRAY} from 'decentralized/EthereumDataTypes.js';\nimport {NOTE_BYTES_32} from 'decentralized/EthereumDataTypes.js';\nimport {NOTES_BYTES_32} from 'decentralized/EthereumDataTypes.js';\nimport {ADDRESS} from 'decentralized/EthereumDataTypes.js';\nimport {STRING} from 'decentralized/EthereumDataTypes.js';\n\nimport EthereumEventLog from 'decentralized/EthereumEventLog.js';\nimport EthereumTopic from 'decentralized/EthereumTopic.js';\n\nexport const SampleTagged = new EthereumEventLog(\n    'SampleTagged(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('tag', BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\n export const SampleStyle = new EthereumEventLog(\n    'SampleStyle(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('style', BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n                                                 \n export const SampleYear = new EthereumEventLog(\n    'SampleYear(bytes32,int16,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('year', INT_16),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SampleCountry = new EthereumEventLog(\n    'SampleCountry(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('country', BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SampleYoutube = new EthereumEventLog(\n    'SampledYoutube(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('videoId', RIGHT_PADDED_BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n \nexport const SequenceCreated = new EthereumEventLog(\n    'SequenceCreated(address,bytes32,string)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('ipfsHash', IPFS_HASH)],\n    new EthereumTopic('title', STRING));\n\nexport const SampleCreated = new EthereumEventLog(\n    'SampleCreated(address,bytes32,string,uint32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('guildId', INT_32)\n    ],\n    new EthereumTopic('title', STRING),\n);\n\nexport const NewNoteSequence = new EthereumEventLog(\n    'NewNoteSequence(bytes32,bytes32)',\n    [new EthereumTopic('sampleHash', IPFS_HASH),\n     new EthereumTopic('noteSequenceHash', IPFS_HASH)]);\n\nexport const NewDiscogsSample = new EthereumEventLog(\n    'NewDiscogsSample(bytes32,uint256,bytes32,uint32)',\n    [new EthereumTopic('sampleHash', IPFS_HASH),\n     new EthereumTopic('coverArtHash', IPFS_HASH),\n     new EthereumTopic('guildId', INT_32)\n    ],\n     new EthereumTopic('discogsId', UINT_256),\n);\n\nexport const NewNoteSequenceAggregation = new EthereumEventLog(\n    'NewNotesAggregation(bytes32,bytes32,bytes32,uint32,uint32,bytes32)',\n    [new EthereumTopic('sampleHash', IPFS_HASH),\n     new EthereumTopic('noteA', NOTE_BYTES_32),\n     new EthereumTopic('noteB', NOTE_BYTES_32)],\n    new EthereumTopic('startTime', INT_32),\n    new EthereumTopic('endTime', INT_32),\n    new EthereumTopic('remainingNotes', NOTES_BYTES_32));\n\nexport const SampleFavorited = new EthereumEventLog(\n    'SampleFavorited(address,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('sampleHash', IPFS_HASH)]);\n\nexport const SampleUnfavorited = new EthereumEventLog(\n    'SampleUnfavorited(address,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('sampleHash', IPFS_HASH)]);\n\nexport const SequenceEdited = new EthereumEventLog(\n    'SequenceEdited(address,bytes32,bytes32,bytes32,string)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('previousSequence', IPFS_HASH),\n     new EthereumTopic('newSequence', IPFS_HASH)],\n    new EthereumTopic('diff', IPFS_HASH),\n    new EthereumTopic('title', STRING),\n    );\n\nexport const TokenizedSequenceEdited = new EthereumEventLog(\n    'SequenceEdited(address,bytes32,bytes32,string,uint32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('previousSequence', IPFS_HASH),\n     new EthereumTopic('newSequence', IPFS_HASH)],\n    new EthereumTopic('title', STRING),\n    new EthereumTopic('bpm', INT_32),\n    );\n\n\nexport const PresetTag = new EthereumEventLog(\n    'PresetTagged(address,bytes32,bytes32,uint32)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n     new EthereumTopic('tag', BYTES_32),\n     new EthereumTopic('guildId', INT_32),\n    ],\n    new EthereumTopic('user', ADDRESS),\n);\n\nexport const NewGuild = new EthereumEventLog(\n    'NewGuild(address,uint32,string)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)],\n    new EthereumTopic('name', STRING),\n);\n\n//event NewGuildMemberRequest(address indexed, address indexed, uint256 indexed);\nexport const NewGuildMemberRequest = new EthereumEventLog(\n    'NewGuildMemberRequest(address,address,uint32)',\n    [new EthereumTopic('requester', ADDRESS),\n     new EthereumTopic('newMember', ADDRESS),\n     new EthereumTopic('guildId', INT_32)]);\n\n// event NewGuildMemberRequestAccepted(address indexed, uint256 indexed);\nexport const NewGuildMemberRequestAccepted = new EthereumEventLog(\n    'NewGuildMemberRequestAccepted(address,uint32)',\n    [new EthereumTopic('newMember', ADDRESS),\n     new EthereumTopic('guildId', INT_32)]);\n\n// event NewGuildMemberRequestRejected(address indexed, uint256 indexed);\nexport const NewGuildMemberRequestRejected = new EthereumEventLog(\n    'NewGuildMemberRequestRejected(address,uint32)',\n    [new EthereumTopic('newMember', ADDRESS),\n     new EthereumTopic('guildId', INT_32)]);\n\n// event NewGuildMemberRequestRejected(address indexed, uint256 indexed);\nexport const GuildKeyEncrypted = new EthereumEventLog(\n    'GuildKeyEncrypted(address,uint32,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32),\n     new EthereumTopic('ipfsHash',IPFS_HASH)]);\n\nexport const NewEncryptedContent = new EthereumEventLog(\n    'NewEncryptedContent(address,bytes32,bytes32,int8,bytes32,bytes32[9],bytes32[6])',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('newContent', IPFS_HASH),\n     new EthereumTopic('contentType', INT_8),\n    ],\n     new EthereumTopic('previousContent', IPFS_HASH),\n    new EthereumTopic('encryptedName', BYTES_32_ENCRYPTED),\n    new EthereumTopic('encryptedContentKey', BYTES_32_ARRAY(9), 9),\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\nexport const EncryptedContentShared = new EthereumEventLog(\n    'EncryptedContentShared(address,address,bytes32,bytes32[9],bytes32[6])',\n    [new EthereumTopic('sharedWith', ADDRESS),\n     new EthereumTopic('creator', ADDRESS),\n     new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('encryptedContentKey', BYTES_32_ARRAY(9), 9),\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\n\nexport const NewPublicKey = new EthereumEventLog(\n    'NewPublicKey(address,bytes32[6])',\n    [new EthereumTopic('user', ADDRESS),\n    ],\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\nexport const NewPreset2 = new EthereumEventLog(\n    'NewPreset(address,bytes32,uint32,bytes32,bytes32[9],bytes32[6])',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('contentHash', IPFS_HASH),\n     new EthereumTopic('guildId', INT_32)\n    ],\n    new EthereumTopic('encryptedName', BYTES_32_ENCRYPTED),\n    new EthereumTopic('encryptedContentKey', BYTES_32_ARRAY(9), 9),\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\nexport const PresetSample = new EthereumEventLog(\n    'PresetSample(bytes32,bytes32,uint32)',\n    [\n        new EthereumTopic('contentHash', IPFS_HASH),\n        new EthereumTopic('sampleHash', IPFS_HASH),\n        new EthereumTopic('guildId', INT_32)\n    ],\n    );\n\nexport const PresetInstrumentType = new EthereumEventLog(\n    'PresetInstrumentType(bytes32,bytes32,uint32)',\n    [\n        new EthereumTopic('contentHash', IPFS_HASH),\n        new EthereumTopic('instrumentType', BYTES_32_LEFT),\n        new EthereumTopic('guildId', INT_32)\n    ],\n    );\n\nexport const NewMonthlyIndex = new EthereumEventLog(\n    'NewMonthlyIndex(bytes32,uint32,uint64)',\n    [\n     new EthereumTopic('month', UINT_256),\n     new EthereumTopic('year', UINT_256)\n    ],\n     new EthereumTopic('hash', IPFS_HASH)\n    );\n\nexport const New2DMapping = new EthereumEventLog(\n    'New2DMapping(bytes32)',\n    [\n     new EthereumTopic('ipfsHash', IPFS_HASH)\n    ],\n\n    );\n\nexport const PublicMessageSent = new EthereumEventLog(\n    'PublicMessageSent(address,address,bytes32,bytes32)',\n    [\n        new EthereumTopic('fromUser', ADDRESS),\n        new EthereumTopic('toUser', ADDRESS),\n        new EthereumTopic('referenceHash', IPFS_HASH),\n    ],\n    new EthereumTopic('messageHash', IPFS_HASH),\n    );\n\nexport const SampleCopyStrike = new EthereumEventLog(\n    'SampleCopyStrike(address,bytes32,bytes32)',\n    [\n        new EthereumTopic('user', ADDRESS),\n        new EthereumTopic('sampleHash', IPFS_HASH),\n        new EthereumTopic('referenceHash', IPFS_HASH),\n    ]\n    );\n\nexport const SampleTakenDown = new EthereumEventLog(\n    'SampleTakenDown(bytes32)',\n    [\n        new EthereumTopic('sampleHash', IPFS_HASH),\n    ]\n    );\n\nexport const FoldersUpdated = new EthereumEventLog(\n    'FoldersUpdated(address,bytes32)',\n    [\n        new EthereumTopic('user', ADDRESS),\n        new EthereumTopic('foldersHash', IPFS_HASH),\n    ]\n    );\n\nexport const NewIndex = new EthereumEventLog(\n    'NewIndex(uint32,bytes32)',\n    [\n        new EthereumTopic('guildId', INT_32),\n    ],\n    new EthereumTopic('indexHash', IPFS_HASH),\n    );\n\nexport const NewGuildSequence = new EthereumEventLog(\n    'NewGuildSequence(address,bytes32,uint32,bytes32,bytes32,bytes32[9],bytes32[6])',\n    [\n        new EthereumTopic('user', ADDRESS),\n        new EthereumTopic('contentHash', IPFS_HASH),\n        new EthereumTopic('guildId', INT_32),\n    ],\n    new EthereumTopic('previousHash', IPFS_HASH),\n    new EthereumTopic('encryptedName', BYTES_32_ENCRYPTED),\n    new EthereumTopic('encryptedContentKey', BYTES_32_ARRAY(9), 9),\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\nexport const NewGuildClassification = new EthereumEventLog(\n    'NewGuildClassification(uint32,bytes32)',\n    [\n        new EthereumTopic('guildId', INT_32),\n        new EthereumTopic('contentHash', IPFS_HASH),\n    ]);;\n\n export const Transfer = new EthereumEventLog(\n    'Transfer(address,address,uint256)',\n    [\n        new EthereumTopic('fromUser', ADDRESS),\n        new EthereumTopic('toUser', ADDRESS),\n    ],\n     new EthereumTopic('amount', INT_32 ),\n );;\n\nexport const SequenceTagged= new EthereumEventLog(\n    'SequenceTagged(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('tag', BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SequenceFavorited = new EthereumEventLog(\n    'SequenceFavorited(bytes32,address,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SequenceStarred = new EthereumEventLog(\n    'SequenceStarred(bytes32,address,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SequenceUnfavorited = new EthereumEventLog(\n    'SequenceUnfavorited(bytes32,address,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\n\nexport const SequenceUnstarred = new EthereumEventLog(\n    'SequenceUnstarred(bytes32,address,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\n\nexport const NewDataType = new EthereumEventLog(\n    'NewDataType(bytes32,string)',\n    [new EthereumTopic('dataType', BYTES_32),\n    ],\n    new EthereumTopic('description', STRING));\n\nexport const NewLinkType = new EthereumEventLog(\n    'NewLinkType(bytes32,string)',\n    [new EthereumTopic('linkType', BYTES_32),\n    ],\n    new EthereumTopic('description', STRING));\n\nexport const NewAnnotationType = new EthereumEventLog(\n    'NewAnnotationType(bytes32,string)',\n    [new EthereumTopic('annotationType', BYTES_32),\n    ],\n    new EthereumTopic('description', STRING));\n\nexport const NewAnnotation = new EthereumEventLog(\n    'NewAnnotation(bytes32,bytes32,bytes32,address)',\n    [\n        new EthereumTopic('annotationType', BYTES_32),\n        new EthereumTopic('data', IPFS_HASH),\n        new EthereumTopic('address', ADDRESS),\n    ],\n    new EthereumTopic('annotationData', BYTES_32),\n);\n\nexport const NewLink = new EthereumEventLog(\n    'NewLink(bytes32,bytes32,bytes32,address)',\n    [new EthereumTopic('linkType', BYTES_32),\n     new EthereumTopic('fromData', IPFS_HASH),\n     new EthereumTopic('toData', IPFS_HASH),\n    ],\n     new EthereumTopic('address', ADDRESS),\n    );\n\nexport const NewMix= new EthereumEventLog(\n    'NewMix(address,bytes32,bytes32,string,uint32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('mixHash', IPFS_HASH),\n     new EthereumTopic('previousHash', IPFS_HASH),\n    ],\n     new EthereumTopic('title', STRING),\n     new EthereumTopic('guildId', INT_32),\n    );\n\nexport const NewEffect = new EthereumEventLog(\n    'NewEffect(address,bytes32,bytes32,string,uint32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('effectHash', IPFS_HASH),\n     new EthereumTopic('effectType', BYTES_32),\n    ],\n     new EthereumTopic('title', STRING),\n     new EthereumTopic('guildId', INT_32),\n    );\n\nexport const ReleaseInfo = new EthereumEventLog(\n    'ReleaseInfo(bytes32,uint32,string,bytes32,bytes32)',\n    [new EthereumTopic('artistName', BYTES_32),\n     new EthereumTopic('releaseId', INT_32),\n    ],\n     new EthereumTopic('releaseName', STRING),\n     new EthereumTopic('coverArtHash', IPFS_HASH),\n     new EthereumTopic('releaseType', BYTES_32),\n    );\n\nexport const SampleByArtist = new EthereumEventLog(\n    'SampleByArtist(bytes32,bytes32)',\n    [new EthereumTopic('artistName', BYTES_32),\n     new EthereumTopic('ipfsHash', IPFS_HASH),\n     ]\n    );\n\nexport const ArtistInfo = new EthereumEventLog(\n    'ArtistInfo(bytes32,bytes32,string)',\n    [new EthereumTopic('artistName', BYTES_32),\n     new EthereumTopic('linkType', BYTES_32),\n    ],\n     new EthereumTopic('link', STRING),\n    );\n\nexport const MidiCCParameter = new EthereumEventLog(\n    'MidiCCParameter(bytes32,uint32,bytes32,address)',\n    [new EthereumTopic('deviceName', BYTES_32),\n     new EthereumTopic('ccNumber', INT_32),\n     new EthereumTopic('parameterName', BYTES_32),\n    ],\n     new EthereumTopic('user', ADDRESS),\n    );\n\nexport const SampleInSequence = new EthereumEventLog(\n    'SampleInSequence(bytes32,bytes32)',\n    [new EthereumTopic('sequenceHash', IPFS_HASH),\n     new EthereumTopic('sampleHash', IPFS_HASH)\n    ]\n    );\n\nexport const ListEdited = new EthereumEventLog(\n    'ListEdited(bytes32,bytes32,address,bytes32,uint32)',\n    [new EthereumTopic('newContent', IPFS_HASH),\n     new EthereumTopic('previousContent', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n    ],\n    new EthereumTopic('title', BYTES_32),\n    new EthereumTopic('guildId', INT_32),\n    );\n\nexport const ListHighlighted = new EthereumEventLog(\n    'ListHighlighted(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('user', ADDRESS)\n    );\n\nexport const ListUnhighlighted = new EthereumEventLog(\n    'ListUnhighlighted(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('user', ADDRESS)\n    );\n\nexport const ListFavorited = new EthereumEventLog(\n    'ListFavorited(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('user', ADDRESS)\n    );\n\nexport const ListUnfavorited = new EthereumEventLog(\n    'ListUnfavorited(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('user', ADDRESS)\n    );\n\nexport const ListDeleted = new EthereumEventLog(\n    'ListDeleted(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    new EthereumTopic('user', ADDRESS)\n    ],\n    );\n\nexport const NewWallpaper = new EthereumEventLog(\n    'NewWallpaper(address,bytes32,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('wallpaperHash', IPFS_HASH),\n     new EthereumTopic('thumbnailHash', IPFS_HASH)\n    ]);\n\nexport const DefaultWallpaper = new EthereumEventLog(\n    'DefaultWallpaper(address,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('wallpaperHash', IPFS_HASH)\n    ]);\n\nexport const NewPack = new EthereumEventLog(\n    'NewPack(address,bytes32,bytes32,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('packHash', IPFS_HASH),\n     new EthereumTopic('previousHash', IPFS_HASH)\n    ],\n     new EthereumTopic('title', BYTES_32)\n);\n\nexport const PackHasContent = new EthereumEventLog(\n    'PackHasContent(bytes32,bytes32)',\n    [new EthereumTopic('packHash', IPFS_HASH),\n     new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n);\n\nexport const UserLeftGuild = new EthereumEventLog(\n    'UserLeftGuild(uint256,address)',[\n     new EthereumTopic('guildId', INT_32),\n    ],\n    new EthereumTopic('user', ADDRESS),\n);\n\nexport const NewScript = new EthereumEventLog(\n    'NewScript(address,bytes32,bytes32,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('scriptHash', IPFS_HASH),\n     new EthereumTopic('scriptType', BYTES_32)\n    ],\n     new EthereumTopic('title', BYTES_32)\n);\n\nexport const NewCreatorProject = new EthereumEventLog(\n    'NewCreatorProject(address,uint256,bytes32,uint256,string)',\n    [\n        new EthereumTopic('creator', ADDRESS),\n        new EthereumTopic('projectId', UINT_256),\n        new EthereumTopic('contentHash', IPFS_HASH)\n    ],\n    new EthereumTopic('maxInvocations', UINT_256),\n    new EthereumTopic('title', STRING)\n);\n\nexport const NewTokenSeed = new EthereumEventLog(\n    'NewTokenSeed(uint256,uint256,bytes32)',\n    [\n        new EthereumTopic('projectId', UINT_256),\n        new EthereumTopic('tokenId', UINT_256)\n    ],\n    new EthereumTopic('seedHash', BYTES_32)\n);\n\nexport const ZoraProject = new EthereumEventLog(\n    'ZoraProject(bytes32,uint256)',\n    [\n        new EthereumTopic('projectHash', IPFS_HASH),\n        new EthereumTopic('zoraId', UINT_256)\n    ]);\n\nexport const AccountAuthorized = new EthereumEventLog(\n    'AccountAuthorized(address,address,string,uint8,bytes32,bytes32)',\n    [\n        new EthereumTopic('zequencerAddress', ADDRESS),\n        new EthereumTopic('walletAddress', ADDRESS),\n    ],\n    new EthereumTopic('message', STRING),\n    new EthereumTopic('v', INT_8),\n    new EthereumTopic('r', BYTES_32_ENCRYPTED),\n    new EthereumTopic('s', BYTES_32_ENCRYPTED)\n);\n\nexport const PluginCreated = new EthereumEventLog(\n    'PluginCreated(uint256,address,string)',\n    [\n        new EthereumTopic(\"tokenId\", UINT_256),\n        new EthereumTopic(\"creator\", ADDRESS),\n    ],\n    new EthereumTopic(\"name\", STRING)\n);\n\nexport const NewPluginVersion = new EthereumEventLog(\n    'NewPluginVersion(uint256,uint256,bytes32,string)',\n    [\n        new EthereumTopic(\"tokenId\", UINT_256),\n        new EthereumTopic(\"versionNumber\", UINT_256),\n    ],\n    new EthereumTopic(\"pluginContentHash\", IPFS_HASH),\n    new EthereumTopic(\"pluginMetadataURI\", STRING)\n);\n\nexport const ProjectHasArrangement = new EthereumEventLog(\n    'ProjectHasArrangement(bytes32)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n);\n\nexport const ProjectBPM = new EthereumEventLog(\n    'ProjectBPM(bytes32,int16)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n    new EthereumTopic(\"bpm\", UINT_256),\n);\n\nexport const ProjectVisuals = new EthereumEventLog(\n    'ProjectVisuals(bytes32,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n    new EthereumTopic(\"thumbnailhash\", IPFS_HASH),\n);\n\nexport const ProjectUsesPreset = new EthereumEventLog(\n    'ProjectUsesPreset(bytes32,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n    new EthereumTopic(\"presetHash\", IPFS_HASH),\n);\n\nexport const ProjectPatternsCount = new EthereumEventLog(\n    'ProjectPatternsCount(bytes32,int8)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n    new EthereumTopic(\"patterns\", UINT_256),\n);\n\nexport const NewSporeCreated = new EthereumEventLog(\n    'NewSporeCreated(uint256,uint256,address,address,bytes32,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"sporeId\", UINT_256),\n    new EthereumTopic(\"tokenId\", UINT_256),\n    new EthereumTopic(\"proxy\", ADDRESS),\n    new EthereumTopic(\"creator\", ADDRESS),\n    new EthereumTopic(\"sporeHash\", IPFS_HASH),\n    new EthereumTopic(\"dataHash\", IPFS_HASH),\n);\n\nexport const NewChainCreated = new EthereumEventLog(\n    'NewChainCreated(uint256,bytes32,address,address,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"chainId\", UINT_256),\n    new EthereumTopic(\"name\", BYTES_32),\n    new EthereumTopic(\"proxy\", ADDRESS),\n    new EthereumTopic(\"creator\", ADDRESS),\n    new EthereumTopic(\"chainHash\", IPFS_HASH),\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import {SampleTagged} from 'decentralized/EthereumEvents.js';\nimport {web3, web3WSS} from './web3.js';\nimport {SampleYoutube} from 'decentralized/EthereumEvents.js';\nimport {STRING} from 'decentralized/EthereumDataTypes.js';\nconst metamaskInstalled = typeof window.web3 !== 'undefined';\n\nclass EthereumQuery {\n    constructor(address) {\n        this.address = address;\n        this.distinct = false;\n        this.selectStatements = [];\n        this.whereClauses = [];\n        this.groupBy = [];\n        this.joinClauses = [];\n        this.limitSize = undefined;\n        this.fromBlockNumber = '0x2';\n        this.toBlockNumber = undefined;\n    }\n\n    from(eventLog) {\n        this.eventLog = eventLog;\n        return this;\n    }\n\n    select(arg) {\n        this.selectStatements.push(arg);\n        return this;\n    }\n\n    // only selects distinct items in the select clause\n    distinct() {\n        this.distinct = true;\n        return this;\n    }\n\n    groupBy(col) {\n        this.groupBy.push(col);\n        return this;\n    }\n\n    where(name, value) {\n        this.whereClauses.push(new WhereClause(name, value));\n        return this;\n    }\n\n    whereIn(name, valueList) {\n        this.whereClauses.push(new WhereClause(name, undefined, valueList));\n        return this;\n    }\n\n    join(event, field) {\n        this.joinClauses.push(new JoinClause(event, field));\n    }\n\n    fromBlock(fromBlock) {\n        this.fromBlockNumber = web3.utils.toHex(fromBlock);\n        return this;\n    }\n\n    toBlock(toBlock) {\n        this.toBlockNumber = web3.utils.toHex(toBlock);\n        return this;\n    }\n\n    limit(limit) {\n        this.limitSize = limit;\n        return this;\n    }\n\n    getTopics() {\n        let topics = [web3.utils.sha3(this.eventLog.event)];\n\n        for (let i in this.eventLog.topics) {\n            let arg = this.eventLog.topics[parseInt(i)];\n            let toAdd = null;\n            for (let j in this.whereClauses) {\n                let whereClause = this.whereClauses[parseInt(j)];\n                if (whereClause.name === arg.name) {\n                    let value = whereClause.value !== undefined ?\n                        whereClause.value : whereClause.valueList[0];\n                    toAdd = arg.convertTo(value);\n                    // console.log(\"where %s = %s / %s\", whereClause.name, value, toAdd);\n                }\n              }\n            topics.push(toAdd);\n        }\n        return topics;\n    }\n\n    executeQuery() {\n        return new Promise((resolve, reject) => {\n            web3.eth.getPastLogs({\n                address: this.address,\n                topics: this.getTopics(),\n                toBlock: this.toBlockNumber,\n                fromBlock: this.fromBlockNumber}, (err, results) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        let parsedResults = [];\n                        results.reverse();\n                        let limit = Math.min(results.length, this.limitSize || results.length);\n                        for (let i=0; i < limit; i++) {\n                            parsedResults.push(this.parseResult(results[i]));\n                        }\n                        resolve(parsedResults);\n                    }\n                });\n        });\n    }\n\n    async watchQuery(callback) {\n        let blockNumber = await web3.eth.getBlockNumber();\n        let web3ToUse = metamaskInstalled ? web3 : web3WSS;\n        web3ToUse.eth.subscribe(\n            'logs',\n            {\n                address: this.address,\n                topics: this.getTopics(),\n                fromBlock: web3.utils.toHex(blockNumber),\n            },\n            (err, result) => {\n                if (err) {\n                    console.log('error watching ');\n                    console.log(err);\n                }\n                let ret = this.parseResult(result);\n                console.log('watch query got ');\n                console.log(ret);\n                callback(ret);\n            });\n    }\n\n    parseResult(data) {\n        if (data === undefined || data === null) {\n            return undefined;\n        }\n        let resultSet = {};\n\n        for (let j in this.selectStatements) {\n            let select = this.selectStatements[parseInt(j)];\n            for (let i in this.eventLog.topics) {\n                let field = data.topics[1 + parseInt(i)];\n                let arg = this.eventLog.topics[parseInt(i)];\n                if (arg.name === select) {\n                    // convert field\n                    resultSet[select] = arg.type.convertFrom(field);\n                }\n            }\n            \n            let dataIndexSoFar = 0;\n            for (let fieldIndex in this.eventLog.data) {\n                fieldIndex = parseInt(fieldIndex);\n                let fieldData = this.eventLog.data[fieldIndex];\n                \n                if (fieldData !== undefined) {\n                    if (select == fieldData.name) {\n                        // the data field in ethereum event logs is basically a huge hex string\n                        // divided into 64-length pieces, for each data point.\n                        // Also, it starts with 0x, so we must skip the first 2 characters when\n                        // slicing out the desired data\n                        let d = data.data.slice(2 + dataIndexSoFar, 2 + dataIndexSoFar + fieldData.size);\n                        d = '0x' + d;\n                        \n                        if (fieldData.type == STRING ) {\n                            d = '0x' + data.data.slice(130 + 64*fieldIndex);\n                        } \n                        resultSet[select] = fieldData.convertFrom(d);\n                    }\n                }\n                dataIndexSoFar += fieldData.size;\n                \n            }\n        }\n        \n        resultSet.blockNumber = data.blockNumber;\n        return resultSet;\n    }\n\n    getCopy() {\n        let query = new EthereumQuery(this.address);\n        query.eventLog = this.eventLog;\n        query.selectStatements = [... this.selectStatements];\n        query.joinClauses = [... this.joinClauses];\n        query.groupBy = [... this.groupBy];\n        query.fromBlockNumber = this.fromBlockNumber;\n        query.toBlockNumber = this.toBlockNumber;\n        query.limitSize = this.limitSize;\n        return query;\n    }\n\n    getJson() {\n        return {\n            address: this.address,\n            eventLog: this.eventLog.event,\n            selectStatements: [... this.selectStatements],\n            whereClauses: [... this.whereClauses],\n            joinClauses: [... this.joinClauses],\n            groupBy: [... this.groupBy],\n            fromBlockNumber: web3.utils.hexToNumber(this.fromBlockNumber),\n            toBlockNumber: this.toBlockNumber === undefined ? undefined : web3.utils.hexToNumber(this.toBlockNumber),\n            limitSize: this.limitSize,\n            distinct: this.distinct,\n        };\n    }\n}\n\nclass WhereClause {\n    constructor(argName, argValue, valueList=[]) {\n        this.name = argName;\n        this.value = argValue;\n        this.valueList = valueList;\n    }\n}\n\nclass JoinClause {\n    constructor(event, field) {\n        this.event = event;\n        this.field = field;\n    }\n}\n\nexport default EthereumQuery;\n","import EthereumQuery from './EthereumQuery.js';\nimport {SampleCreated} from './EthereumEvents.js';\nimport BackendQueryRunner from './BackendQueryRunner.js';\n\nconst runner = new BackendQueryRunner();\n\nclass BackendQuery extends EthereumQuery {\n    constructor(address) {\n        super(address);\n    }\n\n    /*\n    async executeQuery() {\n        let queries = [];\n        for (let i in this.whereClauses) {\n            let whereClause = this.whereClauses[i];\n            let {valueList} = whereClause;\n            if (valueList.length > 0) {\n                for (let j in valueList) {\n                    let query = this.getCopy();\n                    query.whereClauses = this.whereClauses.filter(\n                        x =>\n                            x.value !== undefined);\n                    query.where(whereClause.name, valueList[j]);\n                    console.log('making of copy = ', this.getJson(), query.getJson());\n                    queries.push(query);\n                }\n            } \n        }\n\n        if (queries.length === 0) {\n            return super.executeQuery();\n        }\n        console.log('queries = ', queries);\n\n        let results  = [];\n        for (let i in queries) {\n            results = [... results, ... await queries[i].executeQuery(true)];;\n        }\n        return results;\n    }\n    */\n\n    executeQuery(useBackend=true) { \n        return new Promise((resolve, reject) => {\n            if (window.isNFT) {\n                // thenn we dont have a query\n                return resolve([]);\n            }\n            runner.submit(this.getJson())\n                .then(resolve);\n        });\n    }\n}\n\nexport default BackendQuery;\n","/**\n * Blocking query\n */\nconst MAX_QUERIES = 4;\nconst SLEEP_TIME = 20;\n\nclass BackendQueryRunner {\n    constructor() {\n        this.runningQueries = new Set();\n    }\n\n    submit(queryJson) {\n        return new Promise(async (resolve, reject) => {\n            while (this.runningQueries.size >= MAX_QUERIES) {\n                await this.sleep(SLEEP_TIME);\n            }\n\n            this.runningQueries.add(queryJson);\n\n            let url = \"/search\";\n            if (window.spores) {\n                url = \"https://zequencer.io\" + url;\n            }\n            fetch(url , {\n                method: 'POST',\n                body: JSON.stringify(queryJson),\n                \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                }\n            })\n                .then(resp => resp.json())\n                .then(resp => {\n                    this.removeQuery(queryJson);\n                    resolve(resp || []);\n                })\n                .catch(err => {\n                    console.log(err);\n                    this.removeQuery(queryJson);\n                });\n        });\n    }\n\n    removeQuery(queryJson) {\n        this.runningQueries.delete(queryJson);\n    }\n\n    sleep(time) {\n        return new Promise((resolve, reject) => {\n            setTimeout(resolve, time);\n        });\n    }\n}\n\nexport default BackendQueryRunner;\n","export default class SporeContract {\n    constructor() {\n        this.abi = [\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"sporeHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"dataHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"message\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"v\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"r\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"s\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"newSpore\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"NewSporeCreated\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"message\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"v\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"r\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"s\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"verifyString\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"signer\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"pure\",\n\t\t\"type\": \"function\"\n\t}\n        ];\n\n        \n        this.contractAddress = '0x335355fc5F5Fd3fC1b307d8468275f402C8B6dB2';\n    }\n\n    getContract(web3) {\n        return new web3.eth.Contract(this.abi, this.contractAddress);\n    }\n}\n\t\n\n","/*\n    This file is part of Universal Sequencer.\n    Universal Sequencer is free software: you can redistribute it and/or modif\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Universal Sequencer is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport Tone from 'tone';\nimport ipfsClient from 'decentralized/Ipfs.js';\nvar bufferToArrayBuffer = require('buffer-to-arraybuffer');\n\nclass AudioUnit {\n    constructor(context=Tone.Master.context) {\n        this.duration = 0;\n        this.source = undefined;\n        this.buffer = undefined;\n        this.playbackRate = 1;\n        this.looping = false;\n        this.playSound.bind(this);\n        this.context = context;\n        this.seek.bind(this);\n        this.stopSound.bind(this);\n    }\n\n    dispose() {\n        if (this.source !== undefined) {\n            this.source.disconnect();\n        }\n        this.buffer = undefined;\n        this.source = undefined;\n    }\n\n    getContext() {\n        return this.context;\n    }\n\n    playSound(x, duration) {\n        if (x == undefined) {\n            x = 0;\n        }\n        if (this.source != undefined) {\n            this.source.stop();\n        }\n        this.source = Tone.Master.context.createBufferSource(); // creates a sound source\n        this.source.connect(Tone.Master.context.destination);       // connect the source to the context's destination (the speakers)\n        this.source.buffer = this.buffer;\n        this.source.playbackRate.value = this.playbackRate;\n        this.source.loop = false;\n        this.source.start(0, Math.max(0, x), duration);\n    }\n\n    seek(x) {\n        this.stopSound();\n        this.playSound(x);\n    }\n\n    stopSound() {\n        if (this.source != undefined) {\n            this.source.stop();\n        }\n    }\n\n    loadRawBuffer(buffer) {\n        this.buffer = buffer;\n        this.duration = buffer.duration;\n    }\n    \n    setBuffer(buffer) {\n        this.buffer = buffer;\n        this.duration = buffer.duration;\n    }\n}\n\nexport default AudioUnit;\n\n","import SporeContract from \"decentralized/contracts/SporeContract.js\";\nimport axios from 'axios';\nimport AudioUnit from 'engine/audio.js';\nimport Tone from 'tone';\nimport BackendQuery from \"decentralized/BackendQuery.js\";\nimport {NewSporeCreated} from \"decentralized/EthereumEvents.js\"\nimport ipfs from 'decentralized/Ipfs.js';\nconst bufferToArrayBuffer = require('buffer-to-arraybuffer');\n\nexport const getAllSpores = async (tokenId) => {\n\n   let query = new BackendQuery(new SporeContract().contractAddress)\n        .from(NewSporeCreated);\n    let results = await query.executeQuery();\n    for (let result of results) {\n        if (result.sporeId === 4) {\n            result.tokenId = 3;\n        }\n    }\n    if (tokenId !== undefined) {\n        results = results.filter(x => (x.tokenId === null && tokenId === 1) || x.tokenId === tokenId);\n    }\n    return results;\n};\n\nexport const getLatestSpore = async (spore, tokenId, setSporeMetadata) => {\n    let query = new BackendQuery(new SporeContract().contractAddress)\n        .from(NewSporeCreated);\n\n    if (spore) {\n        query.where(\"sporeId\", spore.sporeId);\n    }\n\n    let results = await query.executeQuery();\n    console.log(\"RESULTS=\", results, spore, query);\n    for (let result of results) {\n        if (result.sporeId === 4) {\n            result.tokenId = 3;\n        }\n    }\n    if (tokenId !== undefined) {\n        results = results.filter(x => (x.tokenId === null && tokenId === 1) || x.tokenId === tokenId);\n    }\n    if (results.length === 0) {\n        return null;\n    }\n    let latest = results[0];\n\n    setSporeMetadata(latest);\n\n    let sporeHash = latest.sporeHash;\n    let dataHash = latest.dataHash;\n\n\n    let dateA = new Date().getTime();\n    let blob = await ipfs.getSound(sporeHash, 10000000);\n    let dateB = new Date().getTime();\n    let audioBuffer = await Tone.Master.context.decodeAudioData(bufferToArrayBuffer(blob));\n    let player = new AudioUnit(Tone.Master.context);\n    player.setBuffer(audioBuffer);\n    let ret = {\n        audioUnit: player, \n        audioBuffer,\n        ... latest\n    };\n\n    if (dataHash) {\n        console.log(\"data hash=\", dataHash);\n        ret.heat = await ipfs.getJson(dataHash);\n    }\n    return ret; \n};\n\nexport const pinAll = async () => {\n    let query = new BackendQuery(new SporeContract().contractAddress)\n        .from(NewSporeCreated);\n\n    let results = await query.executeQuery();\n    for (let result of results) {\n        await saveOnPinata(result.sporeHash);\n    }\n\n};\n\nconst saveOnPinata = (hash) => {\n    return new Promise((resolve) => {\n    const url = `https://api.pinata.cloud/pinning/pinByHash`;\n    axios\n        .post(url, \n            {\n                hashToPin: hash,\n            },\n              {\n            headers: {\n                pinata_api_key: '819763bfd08f709bc8f1',\n                pinata_secret_api_key: '48cd285bcb2a634fa7d1ae033779793c655baf3faa1fc68bf235b1f15f8549a1'\n            }\n        })\n        .then(function (response) {\n            resolve();\n            //handle your response here\n        })\n        .catch(function (error) {\n            //handle error here\n        });\n    });\n};\n","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport PulseLoader from 'react-spinners/PulseLoader'\nconst WIDTH = 390;\n\nconst UnknownProgressBar = ({\n    text,\n    className=\"\",\n    width=WIDTH,\n    intervalTime=100,\n    intervalPiece=10}) => {\n    let [loadingProgress, setLoadingProgress] = useState(0);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setLoadingProgress(x => (x + intervalPiece) % 100);\n        }, intervalTime);\n        return () => clearInterval(interval);\n    }, []);\n    \n    let style = {\n        width: width * loadingProgress / 100.0\n    };\n    return (\n        <div className={\"progress-bar \" + className}>\n          <div className=\"inner-progress-bar\">\n          <div className=\"progress\" style={style}/>\n            <div className=\"loading-text\">\n              {text} ...\n            </div>\n          </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props)=> {\n    return {\n    };\n};\n\n\nexport default connect(mapStateToProps, null)(UnknownProgressBar);\n","import React, { useEffect, useRef, useCallback, useState} from 'react';\nimport AudioPlayer from './AudioPlayer.js';\nimport BackendQuery from \"decentralized/BackendQuery.js\";\nimport {connect} from 'react-redux';\nimport {getLatestSpore} from './getSpores.js';\nimport UnknownProgressBar from \"components/progressbar/UnknownProgressBar.js\";\n\nconst links = {\n    1: \"https://opensea.io/assets/0x7269c1a1b8aba1390770193771f92bd722c6a77b/1\",\n    2: \"https://opensea.io/assets/0x7269c1a1b8aba1390770193771f92bd722c6a77b/2\",\n    3: \"https://opensea.io/assets/0x7269c1a1b8aba1390770193771f92bd722c6a77b/3\",\n    4: \"https://opensea.io/assets/0x7269c1a1b8aba1390770193771f92bd722c6a77b/4\",\n};\nconst SimplePlayer = ({store, audioUnit, selected, tokenId, spore, setShowStemPlayer, setPreset, preset}) => { \n    let [playing, setPlaying] = useState(false);\n    let [latestSpore, setLatestSpore] = useState(undefined);\n    let [sporeMetadata, setSporeMetadata] = useState();\n    let left = useRef(false);\n\n    useEffect(() => {\n        if (audioUnit.current) {\n            audioUnit.current.dispose();\n            audioUnit.current = undefined;\n        }\n        setLatestSpore(undefined);\n        getLatestSpore(selected, tokenId, setSporeMetadata).then((spore) => {\n            if (left.current) {\n                spore.audioUnit.dispose();\n                return;\n            }\n            if (spore) {\n                audioUnit.current = spore.audioUnit;\n            }\n            setLatestSpore(spore);\n        });\n\n        return () => {\n        };\n    }, [setLatestSpore, tokenId, selected, setSporeMetadata]);\n\n    useEffect(() => {\n        return () =>{\n            left.current = true;\n            if (audioUnit.current) {\n                audioUnit.current.dispose();\n            }\n        }\n    }, []);\n\n\n    const goToLink = useCallback(() => {\n        window.open(links[tokenId], '_blank');\n    }, [tokenId]);\n\n    let className = \"simple-player\";\n    if (!latestSpore) {\n        className += \" hide\";\n    }\n    return (\n        <div className={className}>\n          {latestSpore === null ? <div\n                                    className=\"no-spores\">No spores have been made yet.</div> :\n           <div>\n             {!latestSpore && <UnknownProgressBar intervalTime={100} intervalPiece={3} text={selected ? \"Loading Spore #\" + selected.sporeId : \"Loading Latest Spore\"}/>}\n             {sporeMetadata &&\n              <AudioPlayer\n                store={store}\n                spore={latestSpore}\n                setPreset={setPreset}\n                sporeMetadata={sporeMetadata}\n                preset={preset}\n                saturation={80}\n                heat={latestSpore && latestSpore.heat}\n                creator={sporeMetadata.creator}\n                audioUnit={latestSpore && latestSpore.audioUnit}/>}\n           </div>}\n        {!selected && <div\n            onClick={() => setShowStemPlayer(true)}\n            className=\"pushable stem-player-button\">\n            Expand Player\n                      </div>}\n          {!selected &&\n           <div\n             onClick={() => goToLink()}\n             className=\"pushable stem-player-button view-on-opensea\">\n           {links[tokenId] ? <div>\n               OpenSea <span>↗</span>\n                             </div> : \"Soon\"}\n           </div>}\n          {selected &&\n           <div className=\"stem-player-button mint-spore\">\n             Mint Spore\n             <div className=\"spore-tooltip\">\n               to mint, you must own a spore player\n             </div>\n           </div>}\n       </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SimplePlayer);\n","class LStorage {\n    constructor() {\n    }\n\n    setItem(a,b) {\n        if (window.isNFT) {\n            return;\n        }\n        return window.localStorage.setItem(a,b);\n        \n    }\n\n    removeItem(a) {\n        if (window.isNFT) {\n            return;\n        }\n        window.localStorage.removeItem(a);\n    }\n\n    getItem(a) {\n        if (window.isNFT) {\n            return null;\n        }\n        return window.localStorage.getItem(a);\n    }\n}\n\nexport const lstorage = new LStorage();\n","import {web3} from 'decentralized/web3.js';\nimport {lstorage} from 'utils/lstorage.js';\n\nlet cache = {};\n\nexport const getBlockDate = async (blockNumber) => {\n    let storage = lstorage;\n    if (storage.getItem('blockDate.' + blockNumber)) {\n        return new Date(storage.getItem('blockDate.' + blockNumber) * 1000);\n    }\n    if (blockNumber === undefined) {\n        return undefined;\n    }\n    let block = await web3.eth.getBlock(blockNumber);\n    if (block === null) {\n        return new Date();\n    }\n    let date = new Date(block.timestamp * 1000);\n    storage.setItem('blockDate.' + blockNumber, block.timestamp);\n    return date;\n}\n\n \n","import React, { useEffect, useCallback, useState} from 'react';\nimport SporeHeatMap from './SporeHeatMap.js';\nimport {formatDate} from 'utils/formatDate.js';\nimport {truncate} from './AudioPlayer.js';\nimport {connect} from 'react-redux';\nimport ipfs from 'decentralized/Ipfs.js';\nimport {getBlockDate} from 'utils/getBlockDate.js';\n\nconst CLOSER = 60*48*60*1000;\nconst CLOSER_MIN = 60*60*1000;\nconst _formatDate = (date) => {\n    let dist = new Date().getTime() - date.getTime() \n    if (dist < CLOSER_MIN) {\n        return `${Math.round(dist / 1000 / 60 )} min. ago`;\n    } else if (dist < CLOSER) {\n        let hours = Math.round(dist / 1000 / 60 / 60);\n        if (hours === 1) {\n            return `${hours} hours ago`;\n        }\n        return `${hours} hour ago`;\n    }\n    return formatDate(date);\n};\n\nconst SporeItem = ({spore, isSelected, setSelected}) => { \n    let [date, setDate] = useState();\n    let [heat, setHeat] = useState();\n    useEffect(() => {\n        getBlockDate(spore.blockNumber).then(setDate);\n    }, [spore]);\n\n    useEffect(() => {\n        ipfs.getJson(spore.dataHash).then(\n            setHeat);\n    }, [spore]);\n\n    return (\n        <div\n          onClick={() => {\n              ipfs.cancel();\n              setSelected(spore);\n          }}\n          className={isSelected ? \"spore-item selected\" : \"spore-item\"}>\n          <div className=\"spore-id\">\n            Spore #{spore.sporeId}\n          </div>\n          <SporeHeatMap heat={heat}/>\n          {/*<div className=\"hyphen\"/>*/}\n          <div className=\"spore-creator\">\n            {truncate(spore.creator)}\n          </div>\n          <div className=\"spore-date\">\n            {date && _formatDate(date)}\n          </div>\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SporeItem);\n","export function formatDate(date) {\n    return (date.getMonth() + 1) + '/' + date.getDate();\n}\n\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport SimplePlayer from \"components/spore/SimplePlayer.js\";\nimport {useConsumeWheel} from \"components/hooks/useConsumeWheel.js\"\nimport SporeItem from './SporeItem.js';\nimport {getAllSpores} from './getSpores.js';\nimport {connect} from 'react-redux';\n\nconst SporesView = ({store, setShowStemPlayer, tokenId, audioUnit, preset, setPreset}) => { \n    let [spores, setSpores] = useState([]);\n    let ref = useRef();\n    let [selected, setSelected] = useState();\n\n    useEffect(() => {\n        getAllSpores(tokenId).then((spores) => {\n            setSpores(spores);\n        });\n    }, [setSpores, tokenId]);\n\n    // useConsumeWheel(ref);\n\n    return (\n        <div className=\"list-and-player\">\n          <div ref={ref} className=\"spores-list\">\n            {spores.length === 0 && <div className=\"no-spores-yet\">No spores have been detected on-chain.</div>}\n            {spores.map(x =>\n                <SporeItem isSelected={x === selected} setSelected={setSelected} spore={x}/>)}\n          </div>\n          {selected &&\n           <SimplePlayer\n             preset={preset}\n             setPreset={setPreset}\n             store={store} audioUnit={audioUnit} selected={selected} setShowStemPlayer={setShowStemPlayer}/>}\n          \n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SporesView);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\n\nconst Mushroom = ({materials, nodes, mushroomMat, position, scale=0.6}) => { \n    return (\n        <group name=\"mushroom\" position={position} rotation={[0.12, 0, 0]} scale={scale}>\n          <mesh\n            name=\"hat\"\n            //ref={mushroom}\n            geometry={nodes.hat.geometry}\n            material={mushroomMat}\n            castShadow\n            receiveShadow\n            position={[109.15, 398.99, 297.3]}\n            scale={[0.49, 1.1, 0.49]}\n          />\n          <mesh\n            name=\"feet\"\n            geometry={nodes.feet.geometry}\n            material={materials.feet}\n            castShadow\n            receiveShadow\n            position={[103.16, 165.95, 307.5]}\n            scale={[0.36, 1, 0.5]}\n          />\n      </group>);\n}\n\nexport default Mushroom;\n","import * as THREE from 'three'\nimport {isMobile} from 'react-device-detect';\nimport useSpline from '@splinetool/r3f-spline'\nimport { Html, OrthographicCamera } from '@react-three/drei'\nimport React, { useEffect, useRef } from 'react'\nimport Mushroom from './Mushroom.js';\n\nexport default function Scene({ ...props }) {\n  const { nodes, materials } = useSpline('https://prod.spline.design/op65hSiiaIVTXxKw/scene.splinecode')\n  const sceneCamera = useRef()\n  const mushroom = useRef()\n\n  const textureLoader = new THREE.TextureLoader();\n  const threeTone = textureLoader.load( 'threeTone.jpg' );\n  threeTone.minFilter = THREE.NearestFilter;\n  threeTone.magFilter = THREE.NearestFilter;\n\n  const mushroomMat = new THREE.MeshToonMaterial( { color: 0x049EF4, gradientMap: threeTone });\n\n  window.addEventListener(\"message\", receiveMessage, false);\n  function receiveMessage(event) {\n    if (event.origin !== \"https://zequencer.mypinata.cloud\") {\n      return;\n    } else {\n      var message = event.data;\n\n      if (Array.isArray(message)) {\n        if (message.length == 4) {\n          mushroomMat.color.r = message[3]\n          mushroomMat.color.g = message[1]\n          mushroomMat.color.b = message[0]\n          mushroomMat.color.addScalar(0.25 * message[2])\n        }\n      }\n    }\n  }\n\n  return (\n    <>\n      <group {...props} dispose={null}>\n        <Mushroom position={[-30, -100, 0]} mushroomMat={mushroomMat} nodes={nodes} materials={materials} />\n        <Mushroom position={[-160, -80, 0]} scale={0.5} mushroomMat={mushroomMat} nodes={nodes} materials={materials} />\n        <Mushroom position={[145, -45, 0]} mushroomMat={mushroomMat} nodes={nodes} materials={materials} />\n        <Mushroom position={[60, -45, -190]} scale={0.3} mushroomMat={mushroomMat} nodes={nodes} materials={materials} />\n        <Mushroom position={[95, -5, -190]} scale={0.2} mushroomMat={mushroomMat} nodes={nodes} materials={materials} />\n        <Mushroom position={[-75, -15, -190]} scale={0.25} mushroomMat={mushroomMat} nodes={nodes} materials={materials} />\n        <directionalLight\n          name=\"Directional Light\"\n          castShadow\n          intensity={1}\n          shadow-mapSize-width={1024}\n          shadow-mapSize-height={1024}\n          shadow-camera-near={1}\n          shadow-camera-far={2500}\n          shadow-camera-left={-1250}\n          shadow-camera-right={1250}\n          shadow-camera-top={1250}\n          shadow-camera-bottom={-1250}\n          position={[-461.22, 260.59, 1269.06]}\n        />\n       <OrthographicCamera\n          name=\"Personal Camera\"\n          ref={sceneCamera}\n          makeDefault={true}\n          far={100000}\n          near={-100000}\n          position={[0, 0, 1000]}\n          zoom={isMobile ? .15 : .27}\n        />\n        <hemisphereLight name=\"Default Ambient Light\" intensity={1} color=\"#eaeaea\" position={[0, 1, 0]} />\n      </group>\n    </>\n  )\n}\n","import React from 'react';\nimport { EffectComposer, Bloom } from '@react-three/postprocessing'\nimport { Suspense } from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport { OrbitControls } from '@react-three/drei'\nimport Scene from './Scene'\nimport { KernelSize } from 'postprocessing'\nimport './styles.scss';\n\nexport default function App() {\n  return (\n    <Suspense fallback={null}>\n      <div className='canvas-container'>\n        <Canvas shadows flat linear>\n          <EffectComposer>\n            <Bloom\n              intensity={0.85}\n              kernelSize={KernelSize.LARGE}\n              luminanceThreshold={0.01}\n              luminanceSmoothing={0.5}\n            />\n          </EffectComposer>\n          <Scene />\n          <OrbitControls enableZoom={false} enableRotate={false} enablePan={false}/>\n        </Canvas>\n      </div>\n    </Suspense>\n  )\n}\n","import React, { useEffect, useCallback, useState} from 'react';\nimport App from 'components/SP-2D/App.js';\nimport {connect} from 'react-redux';\n\nlet players = {\n    // LUXURY\n    1: \"https://zequencer.mypinata.cloud/ipfs/QmU4WDJwh2Ya6jqt8hXMvWdpWmt5Afq9LrmbKbgbevY3oQ/?tokenId=1\", // SMOKE LUXURY\n    2: \"https://zequencer.mypinata.cloud/ipfs/QmP5o4XjJGikxKw1KkDCgmgmxwwCkNFKezZFPyzWPPpNax/?tokenId=2\",\n    3: \"https://zequencer.mypinata.cloud/ipfs/QmYBEvQD3GqEU8Wzd6kCCEBeRjXvVJgecP4MMn3HCmcA8U/?tokenId=3\",\n    4: \"https://zequencer.mypinata.cloud/ipfs/QmWtqt2UAj8mJaxT2gztD22gBELPNsBpsrnSvhngMMP28d/?tokenId=4\",\n    5: \"https://zequencer.mypinata.cloud/ipfs/QmSaawSKPp5E27Rw72crmLwuAk5UkoHJWMCM9eK9WekiKe/?tokenId=5\",\n    6: \"https://zequencer.mypinata.cloud/ipfs/QmRCyZfaPevNRrxbExgtykHka1Tf1UjKf5C2c6z2PoVTDZ/?tokenId=6\"\n    // colors:\n    /*\n    1: \"https://zequencer.mypinata.cloud/ipfs/QmPV4fERYfcESR5aguCUGCwUhLPJWL45ZBvwgXoBD8xmNh/?tokenId=1\",\n    2: \"https://zequencer.mypinata.cloud/ipfs/QmPLV5GuxQuzZoD5MizDd1AzfgoDRUt7gzm8B2VfAVhqA6/?tokenId=2\",\n    3: \"https://zequencer.mypinata.cloud/ipfs/QmSY5bybSoRxkJxaenK4r3VRCci9nZqz3QvonZCWzaqWAV/?tokenId=3\",\n    4: \"https://zequencer.mypinata.cloud/ipfs/QmWtqt2UAj8mJaxT2gztD22gBELPNsBpsrnSvhngMMP28d/?tokenId=4\",\n    5: \"https://zequencer.mypinata.cloud/ipfs/QmSaawSKPp5E27Rw72crmLwuAk5UkoHJWMCM9eK9WekiKe/?tokenId=5\",\n    6: \"https://zequencer.mypinata.cloud/ipfs/QmXBLreHXuW3dj9UxtdrktVrUr64TuTSEFBNQ323CKpxHc/?tokenId=6\"\n    */\n    // SLIDER CALIBRATION\n    //1: \"https://zequencer.mypinata.cloud/ipfs/QmNciiSvquyNLpy2Uq6PSKW3k82UHb3UbSbe9tUMKa9S5L/?tokenId=1\",\n    //2: \"https://zequencer.mypinata.cloud/ipfs/QmSM8A1o2QsxjK7jdmaAZGML8FtbfJ6osMjvfSudAcGU4Z/?tokenId=2\",\n    //3: \"https://zequencer.mypinata.cloud/ipfs/QmaZki4iZPcMXehtNLMVkggUjZZ29fJZmqaZG7KVppRrdq/?tokenId=3\",\n    //RAINBOW\n    /*\n    1: \"https://zequencer.mypinata.cloud/ipfs/QmWzy4h8nXafokLDtK8aUGnZU7ikBVbNQfVZXYJxRtas2x/?tokenId=1\",\n    2: \"https://zequencer.mypinata.cloud/ipfs/QmNevpN2mqWhZzFQGHDENbLQSPJeGRv9aL2JT9bh4cBeBm/?tokenId=2\",\n    3: \"https://zequencer.mypinata.cloud/ipfs/QmbNqiGkNPgwQvZzo7CevedRhig8eD7P3PtKNCZgAutfBu/?tokenId=3\",\n    */\n    //UNIT CIRCLE\n    //1: \"https://zequencer.mypinata.cloud/ipfs/Qmdx16tRNijEMMU3U1aocBHfQRi8Lf8R2zPcPQEtBewGVP/?tokenId=1\",\n    //1: \"https://zequencer.mypinata.cloud/ipfs/QmXk1VHJLJjxsEVwHFicYgTbs1BCiWf4vFxxdgeZTNUY6q/?tokenId=1\",\n    //2: \"https://zequencer.mypinata.cloud/ipfs/QmVubUHozCNQPD9ExCnBgd3Lv7j9xoRXavJpc7apB64g55/?tokenId=2\",\n    //3: \"https://zequencer.mypinata.cloud/ipfs/QmYgH6NV9URi4mnpJVDejtbeQodiCVL2rk9in9yU63Y1tA/?tokenId=3\"\n    //1: \"https://zequencer.mypinata.cloud/ipfs/QmbfvpDvPAH9F1p2jmHDXC52a4ho4bbBeAQ8kqgp25CyUM/?tokenId=1\",\n    //1: \"https://zequencer.mypinata.cloud/ipfs/QmUcPkhq5ZpXfjKTUnwraJG1vDpWmkRYMNVp7yh2vGsD72/?tokenId=1\",\n    //1: \"https://zequencer.mypinata.cloud/ipfs/QmaTizVBjcKG6vsjLQ2qW4B4wYBFJYTsmDkEGXk7V2q8Ri/?tokenId=1\",\n    //1: \"https://zequencer.mypinata.cloud/ipfs/QmY9yhU4WsnXPf28uCQ6n5rm9SzS4QWuNjaJ5cUWp43iNp/?tokenId=1\",\n    //1: \"https://zequencer.mypinata.cloud/ipfs/QmYErgGMEmZLnnP1vAvMKQNMVTPqKJh2WiLETujZXDS2HR/?tokenId=1\",\n    //2: \"https://zequencer.mypinata.cloud/ipfs/QmVoDtvCGKnVdr7jiTBDhmetqZ6sDXM5ufXKxfsrGWB5oi/?tokenId=2\",\n    //2: \"https://zequencer.mypinata.cloud/ipfs/QmTBM3fb6fq4eDQEvAdavaJhfCAf3rfBRoPTsRk6JChFKc/?tokenId=2\",\n    //2: \"https://zequencer.mypinata.cloud/ipfs/QmRbr2iXG5z75LTBXccxF8vKfHzT34ZtrCvPhG5RLXLf57/?tokenId=2\",\n    //\"https://zequencer.mypinata.cloud/ipfs/QmeGU4SzFDPdkv38kwAqWZFSXjiwaw4yb6DaNgmRax56P2/?tokenId=2\",\n    //3: \"https://zequencer.mypinata.cloud/ipfs/QmdmGpP8EwuDweUrcyXoB1HghvuyLFCVbzKrp4YVLGoCh7/?tokenId=3\"\n    //3: \"https://zequencer.mypinata.cloud/ipfs/QmaZXaJfv41yV9SeyiyxHPGmgxbAPktpYBezY9SHMkzD2V/?tokenId=3\",\n            \n    //3: \"https://zequencer.mypinata.cloud/ipfs/QmRYo8dbhz2RsoPHATi2FL81hXoziT2R6zzxHSRhQbHn3S/?tokenId=3\"\n    //3: \"https://zequencer.mypinata.cloud/ipfs/QmbxrsWoPFFjfSgLK6AytVzBnCUwWDTR3J5ApFRh4yZzWD/?tokenId=3\"\n};\nconst StemPlayer = ({tokenId}) => { \n\n    useEffect(() => {\n        var root = document.getElementsByTagName( 'html' )[0]; // '0' to assign the first (and only `HTML` tag)\n        root.setAttribute( 'class', 'bad-scroll' );\n        return () => {\n            root.setAttribute( 'class', '' );\n        };\n    }, []);\n\n    return [\n        <App/>,\n        (<iframe sandbox=\"allow-scripts allow-same-origin\"\n                 height=\"450\"\n                 width=\"300\"\n                 aria-describedby=\"spore\"\n                 alt=\"spore.vision\"\n                 src={players[tokenId]}\n                 className=\"zora-mediaObject css-hnzuw7 zora-mediaObject--mediaLoaded zora-mediaObject--isFullPage\"\n                 style={{borderWidth: \"0px\"}}>\n         </iframe>)\n    ];\n}\n\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StemPlayer);\n","\nimport {isMobile} from 'react-device-detect';\nimport React, { useRef, useEffect, useCallback, useState} from 'react';\nimport PlayerHelper from './PlayerHelper.js';\nimport Credits from './Credits.js';\nimport Caurosel from './Caurosel.js';\nimport {useConsumeWheel} from \"components/hooks/useConsumeWheel.js\";\nimport SporesView from './SporesView.js';\nimport {pinAll} from './getSpores.js';\nimport {sleep} from 'utils/sleep.js';\nimport {useShader} from './sketch.js';\nimport StemPlayer from './StemPlayer.js';\nimport SimplePlayer from './SimplePlayer.js';\nimport {connect} from 'react-redux';\nimport './spore.scss';\n\nconst Spore = ({setPlayerChosen, playerChosen ,setShowStemPlayer, showStemPlayer, ...props}) => { \n    console.log('store in spore.js =', props.store);\n\n    let [preset, setPreset] = useState();\n\n    let tokenId = props.match && props.match.params.tokenId;\n    if (tokenId) {\n        tokenId = parseInt(tokenId);\n    }\n    let audioUnit = useRef();\n    let [showCredits, setShowCredits] = useState(undefined);\n    //let [playerChosen, setPlayerChosen] = useState(tokenId);\n    //let [showStemPlayer, setShowStemPlayer] = useState(tokenId !== undefined);\n    let [showSpores, setShowSpores] = useState(false);\n    let [s, setS] = useState(false);\n    let [sequencerEngine, setSequencerEngine] = useState();\n    let [canvasBackground, setCanvasBackground]= useState();\n    let ref = useRef();\n\n //   useEffect(() => {\n//        pinAll();\n  //  }, []);\n\n    useEffect(() => {\n        setShowSpores(false);\n    }, [showStemPlayer, setShowSpores]);\n\n    useEffect(() => {\n        window.addEventListener(\"mousewheel\", preventDefault, {passive: false});\n        return () => window.removeEventListener(\"mousewheel\", preventDefault);\n    }, []);\n\n    useEffect(() => {\n        if (audioUnit.current && audioUnit.current.buffer) {\n            console.log(\"DISPOSING CUZ SHOWING PLAYER\");\n            audioUnit.current.dispose();\n        }\n    }, [showStemPlayer]);\n\n    const preventDefault = (e) => e.preventDefault();\n\n    useEffect(() => {\n        document. title = \"Spores\"\n    }, []);\n\n    //useShader(ref, showStemPlayer);\n\n    let className = \"spore\";\n    if (showStemPlayer) {\n        className += \" showing-spore-player\";\n    }\n    if (showSpores) {\n        className += \" showing-spores\";\n    }\n    return (\n        <div ref={ref} className={className}>\n          <video\n            playsInline\n            className=\"rain-video\"\n            autoPlay\n            loop\n            src={isMobile ? \"/mobile-rain.mp4\" : \"/desktop-rain.mp4\"}/>\n          {showCredits && (showStemPlayer ? <PlayerHelper clear={() => setShowCredits(undefined)}/> : <Credits setShowCredits={setShowCredits}/>)}\n          {<Caurosel showStemPlayer={showStemPlayer || showSpores}\n                     setShowStemPlayer={(x) => {\n                         setShowStemPlayer(x);\n                         setShowSpores(x);\n                     }}\n                     playerChosen={playerChosen} setPlayerChosen={setPlayerChosen}/>}\n          {(playerChosen && !showStemPlayer && showSpores) && <SporesView\n                                                                setPreset={setPreset}\n                                                                preset={preset}\n                                                                store={props.store}\n                                                                audioUnit={audioUnit}\n                                                                tokenId={playerChosen} setShowStemPlayer={setShowStemPlayer}/>}\n          {playerChosen && !showSpores && (showStemPlayer ? <StemPlayer tokenId={playerChosen}/> :\n                                           <SimplePlayer\n                                             setPreset={setPreset}\n                                             preset={preset}\n                                             store={props.store}\n                                             audioUnit={audioUnit}\n                                             tokenId={playerChosen} setShowStemPlayer={setShowStemPlayer}/>)}\n          {playerChosen && (showSpores || showStemPlayer) &&\n           <div\n             onClick={() => {\n                 setShowStemPlayer(false);\n                 setShowSpores(false);\n             }}\n             className=\"spore-button pushable stem-player-button\">\n             See Latest Spore\n             <img className=\"spore-icon one-spore\" src=\"/one-spore.svg\"/>\n           </div>}\n          {playerChosen && !showSpores && !showStemPlayer &&\n           <div\n             onClick={() => setShowSpores(true)}\n             className=\"spore-button pushable stem-player-button\">\n             See All Spores <img className=\"spore-icon\" src=\"/spores-icon-glow2.svg\"/>\n           </div>}\n          <div onClick={() => setShowCredits(true)} className=\"explainer-button\">\n            ?\n          </div>\n        </div>\n    );\n};\n          \nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Spore);\n","import React from 'react';\nimport * as THREE from \"three\";\nimport useSpline from '@splinetool/r3f-spline'\nimport { PerspectiveCamera, Stars, Sparkles } from '@react-three/drei'\nimport { useEffect, useRef } from 'react'\nimport { useFrame } from \"@react-three/fiber\";\n\nexport default function Scene({ scroll, ...props }) {\n  const { nodes, materials } = useSpline('https://prod.spline.design/3Ksr4pXhJtOTxLZG/scene.splinecode')\n  const camera = useRef();\n  const lerpedScroll = useRef(0);\n\n  const curve = new THREE.CatmullRomCurve3([\n    new THREE.Vector3( -2, 0, 195 ), \n    new THREE.Vector3( -2, -15, 30 ),\n    new THREE.Vector3( -2, -100, 50 )\n  ]);\n\n  useEffect(() => {\n    if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)){\n      camera.current.fov = 60\n    }\n  })\n\n  useFrame(() => {\n    lerpedScroll.current += (scroll.current - lerpedScroll.current) * 0.04;\n    const t = lerpedScroll.current;\n    if (t < 1) {\n      camera.current.position.set(\n        curve.getPointAt(t).x,\n        curve.getPointAt(t).y,\n        curve.getPointAt(t).z\n      );\n    }\n  })\n\n  return (\n    <>\n      <color attach=\"background\" args={['#4b4d52']} />\n      <fog attach=\"fog\" args={['#4b4d52', 73.518, 187.199]} />\n      <group {...props} dispose={null}>\n      <Sparkles count={100} scale={[50,70,40]} size={20} speed={1.5} position={[-2, -75, -5]}/>\n      <Stars radius={350} depth={50} count={5000} factor={8} saturation={1} fade speed={0.5} />\n      <PerspectiveCamera\n          name=\"Personal Camera\"\n          ref={camera}\n          makeDefault={true}\n          far={100000}\n          near={5}\n          fov={45}\n          position={[0,0,200]}\n          rotation={[0.1,0,0]}\n        />\n        <mesh\n          name=\"root 4\"\n          geometry={nodes['root 4'].geometry}\n          material={nodes['root 4'].material}\n          castShadow\n          receiveShadow\n          position={[-39.88, -125.68, -61]}\n          rotation={[-0.43, 0.4, 1.3]}\n          scale={[16.18, 17.1, 20.82]}\n        />\n        <mesh\n          name=\"root 3\"\n          geometry={nodes['root 3'].geometry}\n          material={nodes['root 3'].material}\n          castShadow\n          receiveShadow\n          position={[31.88, -78.42, -53.6]}\n          rotation={[-0.24, -0.68, 0.21]}\n          scale={[28.63, 22.5, 9.4]}\n        />\n        <mesh\n          name=\"root 2\"\n          geometry={nodes['root 2'].geometry}\n          material={nodes['root 2'].material}\n          castShadow\n          receiveShadow\n          position={[-36.47, -47.67, -43.45]}\n          rotation={[0.55, 0.32, 0]}\n          scale={[11.68, 12.35, 9.4]}\n        />\n        <mesh\n          name=\"root\"\n          geometry={nodes.root.geometry}\n          material={nodes.root.material}\n          castShadow\n          receiveShadow\n          position={[-0.97, -20.37, -6.91]}\n          rotation={[Math.PI / 2, 0, 0]}\n          scale={[11.68, 9.4, 9.4]}\n        />\n        <mesh\n          name=\"cover\"\n          geometry={nodes.cover.geometry}\n          material={materials.ground}\n          castShadow\n          receiveShadow\n          position={[17.99, -14.47, 21.13]}\n          rotation={[-Math.PI / 2, 0, 0]}\n        />\n        <pointLight\n          name=\"Point Light 3\"\n          castShadow\n          intensity={15}\n          decay={7}\n          distance={100}\n          shadow-mapSize-width={256}\n          shadow-mapSize-height={256}\n          shadow-camera-near={100}\n          shadow-camera-far={2500}\n          color=\"#00fbfe\"\n          position={[28.37, -82.6, -42.87]}\n          scale={0.21}\n        />\n        <pointLight\n          name=\"Point Light 4\"\n          castShadow\n          intensity={15}\n          decay={7}\n          distance={100}\n          shadow-mapSize-width={256}\n          shadow-mapSize-height={256}\n          shadow-camera-near={100}\n          shadow-camera-far={2500}\n          color=\"#83d9fe\"\n          position={[-26, -110.71, -29.43]}\n          scale={0.21}\n        />\n        <pointLight\n          name=\"Point Light 2\"\n          castShadow\n          intensity={15}\n          decay={7}\n          distance={100}\n          shadow-mapSize-width={256}\n          shadow-mapSize-height={256}\n          shadow-camera-near={100}\n          shadow-camera-far={2500}\n          color=\"#63ebf4\"\n          position={[-33.08, -48.62, -36.51]}\n          scale={0.21}\n        />\n        <mesh\n          name=\"filler\"\n          geometry={nodes.filler.geometry}\n          material={materials.ground}\n          castShadow\n          receiveShadow\n          position={[-0.71, -14.22, -21.18]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          scale={[3.44, 2.84, 0.21]}\n        />\n        <mesh\n          name=\"underground\"\n          geometry={nodes.underground.geometry}\n          material={materials.ground}\n          castShadow\n          receiveShadow\n          position={[-0.77, -72.19, -34.95]}\n          scale={[2.06, 3.71, 1.37]}\n        />\n        <mesh\n          name=\"Rock_Moss_3\"\n          geometry={nodes.Rock_Moss_3.geometry}\n          material={nodes.Rock_Moss_3.material}\n          castShadow\n          receiveShadow\n          position={[22.34, -6.66, -17.11]}\n          rotation={[-Math.PI / 2, 0, -2.96]}\n          scale={[12.55, 19.32, 19.32]}\n        />\n        <mesh\n          name=\"Rock_Moss_1\"\n          geometry={nodes.Rock_Moss_1.geometry}\n          material={nodes.Rock_Moss_1.material}\n          castShadow\n          receiveShadow\n          position={[-39.03, -6.29, -3.84]}\n          rotation={[-Math.PI / 2, 0, -0.02]}\n          scale={34.86}\n        />\n        <mesh\n          name=\"Plant_1 6\"\n          geometry={nodes['Plant_1 6'].geometry}\n          material={nodes['Plant_1 6'].material}\n          castShadow\n          receiveShadow\n          position={[26.99, -10.43, 142.73]}\n          rotation={[-Math.PI / 2, 0, 1.53]}\n          scale={[3.27, 3.65, 3.46]}\n        />\n        <mesh\n          name=\"Plant_1 13\"\n          geometry={nodes['Plant_1 13'].geometry}\n          material={nodes['Plant_1 13'].material}\n          castShadow\n          receiveShadow\n          position={[4.22, -11.49, 58.39]}\n          rotation={[-1.58, 0.01, 2.21]}\n          scale={[8.57, 8.57, 6.3]}\n        />\n        <mesh\n          name=\"Plant_1 5\"\n          geometry={nodes['Plant_1 5'].geometry}\n          material={nodes['Plant_1 5'].material}\n          castShadow\n          receiveShadow\n          position={[-21.52, -10.43, 154.94]}\n          rotation={[-Math.PI / 2, 0, 1.53]}\n          scale={8.57}\n        />\n        <mesh\n          name=\"Plant_1 3\"\n          geometry={nodes['Plant_1 3'].geometry}\n          material={nodes['Plant_1 3'].material}\n          castShadow\n          receiveShadow\n          position={[-18.97, -10.43, 104.6]}\n          rotation={[-Math.PI / 2, 0, 0.29]}\n          scale={8.57}\n        />\n        <mesh\n          name=\"Plant_1 2\"\n          geometry={nodes['Plant_1 2'].geometry}\n          material={nodes['Plant_1 2'].material}\n          castShadow\n          receiveShadow\n          position={[-20.49, -10.43, 80.95]}\n          rotation={[-Math.PI / 2, 0, 1.38]}\n          scale={6.48}\n        />\n        <mesh\n          name=\"Plant_1 10\"\n          geometry={nodes['Plant_1 10'].geometry}\n          material={nodes['Plant_1 10'].material}\n          castShadow\n          receiveShadow\n          position={[-23.72, -10.43, 17.69]}\n          rotation={[-Math.PI / 2, 0, 2.8]}\n          scale={[3.12, 4.42, 6.02]}\n        />\n        <mesh\n          name=\"Plant_1 9\"\n          geometry={nodes['Plant_1 9'].geometry}\n          material={nodes['Plant_1 9'].material}\n          castShadow\n          receiveShadow\n          position={[-35.51, -10.43, 33.82]}\n          rotation={[-Math.PI / 2, 0, 3.58]}\n          scale={[3.12, 4.42, 7.7]}\n        />\n        <mesh\n          name=\"Plant_1 4\"\n          geometry={nodes['Plant_1 4'].geometry}\n          material={nodes['Plant_1 4'].material}\n          castShadow\n          receiveShadow\n          position={[10.43, -10.43, 88.31]}\n          rotation={[-1.36, -0.08, 2.81]}\n          scale={[3.12, 4.42, 7.7]}\n        />\n        <mesh\n          name=\"Plant_1 8\"\n          geometry={nodes['Plant_1 8'].geometry}\n          material={nodes['Plant_1 8'].material}\n          castShadow\n          receiveShadow\n          position={[-10.97, -11.75, 118.47]}\n          rotation={[-Math.PI / 2, 0, 1.97]}\n          scale={[8.57, 13.55, 4.8]}\n        />\n        <mesh\n          name=\"Plant_1 11\"\n          geometry={nodes['Plant_1 11'].geometry}\n          material={nodes['Plant_1 11'].material}\n          castShadow\n          receiveShadow\n          position={[14.22, -6.62, 2.35]}\n          rotation={[-1.45, -0.07, -0.61]}\n          scale={[12.72, 9.24, 8.26]}\n        />\n        <mesh\n          name=\"Plant_1 7\"\n          geometry={nodes['Plant_1 7'].geometry}\n          material={nodes['Plant_1 7'].material}\n          castShadow\n          receiveShadow\n          position={[-1.92, -11.75, 80.9]}\n          rotation={[-1.53, -0.09, 0.47]}\n          scale={8.57}\n        />\n        <mesh\n          name=\"Plant_1 12\"\n          geometry={nodes['Plant_1 12'].geometry}\n          material={nodes['Plant_1 12'].material}\n          castShadow\n          receiveShadow\n          position={[-19.89, -10.43, 57.32]}\n          rotation={[-1.5, 0.14, 2.69]}\n          scale={8.57}\n        />\n        <mesh\n          name=\"Plant_1\"\n          geometry={nodes.Plant_1.geometry}\n          material={nodes.Plant_1.material}\n          castShadow\n          receiveShadow\n          position={[33.26, -10.43, 71.65]}\n          rotation={[-Math.PI / 2, 0, 1.38]}\n          scale={8.57}\n        />\n        <mesh\n          name=\"Plant_4 4\"\n          geometry={nodes['Plant_4 4'].geometry}\n          material={nodes['Plant_4 4'].material}\n          castShadow\n          receiveShadow\n          position={[-0.99, -11.07, 142.88]}\n          rotation={[-Math.PI / 2, 0, 0.69]}\n          scale={4.22}\n        />\n        <mesh\n          name=\"Plant_4 2\"\n          geometry={nodes['Plant_4 2'].geometry}\n          material={nodes['Plant_4 2'].material}\n          castShadow\n          receiveShadow\n          position={[12.05, -11.07, 123.52]}\n          rotation={[-Math.PI / 2, 0, -0.75]}\n          scale={7.51}\n        />\n        <mesh\n          name=\"Plant_4 3\"\n          geometry={nodes['Plant_4 3'].geometry}\n          material={nodes['Plant_4 3'].material}\n          castShadow\n          receiveShadow\n          position={[28.36, -10.43, 111.41]}\n          rotation={[-Math.PI / 2, 0, -0.35]}\n          scale={8.34}\n        />\n        <mesh\n          name=\"Plant_4 6\"\n          geometry={nodes['Plant_4 6'].geometry}\n          material={nodes['Plant_4 6'].material}\n          castShadow\n          receiveShadow\n          position={[-16.63, -7.86, 0.12]}\n          rotation={[-1.56, -0.02, 0.11]}\n          scale={8.22}\n        />\n        <mesh\n          name=\"Plant_4 5\"\n          geometry={nodes['Plant_4 5'].geometry}\n          material={nodes['Plant_4 5'].material}\n          castShadow\n          receiveShadow\n          position={[26.04, -10.43, 40.82]}\n          rotation={[-Math.PI / 2, 0, -0.21]}\n          scale={13.08}\n        />\n        <mesh\n          name=\"Plant_4\"\n          geometry={nodes.Plant_4.geometry}\n          material={nodes.Plant_4.material}\n          castShadow\n          receiveShadow\n          position={[-28.57, -10.43, 93.01]}\n          rotation={[-1.55, 0.05, -0.35]}\n          scale={13.08}\n        />\n        <mesh\n          name=\"Plant_5 2\"\n          geometry={nodes['Plant_5 2'].geometry}\n          material={nodes['Plant_5 2'].material}\n          castShadow\n          receiveShadow\n          position={[27.86, -12.28, 132.65]}\n          rotation={[-Math.PI / 2, 0, -1.18]}\n          scale={6.95}\n        />\n        <mesh\n          name=\"Plant_5 3\"\n          geometry={nodes['Plant_5 3'].geometry}\n          material={nodes['Plant_5 3'].material}\n          castShadow\n          receiveShadow\n          position={[-21.31, -7.6, -33.41]}\n          rotation={[-Math.PI / 2, 0, -0.66]}\n          scale={10.19}\n        />\n        <mesh\n          name=\"Plant_5\"\n          geometry={nodes.Plant_5.geometry}\n          material={nodes.Plant_5.material}\n          castShadow\n          receiveShadow\n          position={[-24.42, -7.6, 44.64]}\n          rotation={[-Math.PI / 2, 0, -0.66]}\n          scale={10.19}\n        />\n        <mesh\n          name=\"PineTree_1\"\n          geometry={nodes.PineTree_1.geometry}\n          material={nodes.PineTree_1.material}\n          castShadow\n          receiveShadow\n          position={[49.88, -9.7, 94.77]}\n          rotation={[-1.52, -0.08, -0.87]}\n          scale={20}\n        />\n        <mesh\n          name=\"PineTree_2 2\"\n          geometry={nodes['PineTree_2 2'].geometry}\n          material={nodes['PineTree_2 2'].material}\n          castShadow\n          receiveShadow\n          position={[34.82, -7.81, 49.22]}\n          rotation={[-Math.PI / 2, 0.03, 0]}\n          scale={24.02}\n        />\n        <mesh\n          name=\"PineTree_2 3\"\n          geometry={nodes['PineTree_2 3'].geometry}\n          material={nodes['PineTree_2 3'].material}\n          castShadow\n          receiveShadow\n          position={[30.28, -7.81, -112.55]}\n          rotation={[-Math.PI / 2, 0, 0.32]}\n          scale={20}\n        />\n        <mesh\n          name=\"PineTree_2\"\n          geometry={nodes.PineTree_2.geometry}\n          material={nodes.PineTree_2.material}\n          castShadow\n          receiveShadow\n          position={[48.86, -7.81, 2.77]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          scale={20}\n        />\n        <mesh\n          name=\"PineTree_3 3\"\n          geometry={nodes['PineTree_3 3'].geometry}\n          material={nodes['PineTree_3 3'].material}\n          castShadow\n          receiveShadow\n          position={[66.02, -17.17, 34.76]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 5\"\n          geometry={nodes['PineTree_3 5'].geometry}\n          material={nodes['PineTree_3 5'].material}\n          castShadow\n          receiveShadow\n          position={[61.8, -7.3, -54.45]}\n          rotation={[-Math.PI / 2, 0, 1.93]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 11\"\n          geometry={nodes['PineTree_3 11'].geometry}\n          material={nodes['PineTree_3 11'].material}\n          castShadow\n          receiveShadow\n          position={[-17.75, -13.56, -104.06]}\n          rotation={[-Math.PI / 2, 0, 0.61]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 10\"\n          geometry={nodes['PineTree_3 10'].geometry}\n          material={nodes['PineTree_3 10'].material}\n          castShadow\n          receiveShadow\n          position={[-98.48, -14.56, -66.63]}\n          rotation={[-Math.PI / 2, 0, 0.61]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 8\"\n          geometry={nodes['PineTree_3 8'].geometry}\n          material={nodes['PineTree_3 8'].material}\n          castShadow\n          receiveShadow\n          position={[101.28, -14.56, 50.98]}\n          rotation={[-Math.PI / 2, 0, 0.02]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 7\"\n          geometry={nodes['PineTree_3 7'].geometry}\n          material={nodes['PineTree_3 7'].material}\n          castShadow\n          receiveShadow\n          position={[89.79, -14.56, -73.29]}\n          rotation={[-Math.PI / 2, 0, 0.02]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 6\"\n          geometry={nodes['PineTree_3 6'].geometry}\n          material={nodes['PineTree_3 6'].material}\n          castShadow\n          receiveShadow\n          position={[-99.92, -14.56, 30.17]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 4\"\n          geometry={nodes['PineTree_3 4'].geometry}\n          material={nodes['PineTree_3 4'].material}\n          castShadow\n          receiveShadow\n          position={[-51.31, -14.56, -53.36]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 2\"\n          geometry={nodes['PineTree_3 2'].geometry}\n          material={nodes['PineTree_3 2'].material}\n          castShadow\n          receiveShadow\n          position={[-44.87, -17.17, 132.34]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3\"\n          geometry={nodes.PineTree_3.geometry}\n          material={nodes.PineTree_3.material}\n          castShadow\n          receiveShadow\n          position={[-43.35, -7.81, 32.37]}\n          rotation={[-Math.PI / 2, 0.02, 0]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_5 2\"\n          geometry={nodes['PineTree_5 2'].geometry}\n          material={nodes['PineTree_5 2'].material}\n          castShadow\n          receiveShadow\n          position={[-42.02, -5.71, 78.2]}\n          rotation={[-1.51, 0.05, -1.64]}\n          scale={31.23}\n        />\n        <mesh\n          name=\"PineTree_5\"\n          geometry={nodes.PineTree_5.geometry}\n          material={nodes.PineTree_5.material}\n          castShadow\n          receiveShadow\n          position={[34.89, -12.34, 127.44]}\n          rotation={[-1.51, 0.05, 0]}\n          scale={20}\n        />\n        <mesh\n          name=\"WoodLog_Moss\"\n          geometry={nodes.WoodLog_Moss.geometry}\n          material={nodes.WoodLog_Moss.material}\n          castShadow\n          receiveShadow\n          position={[10.38, -6.49, -49.1]}\n          rotation={[-1.39, 0.13, 2.18]}\n          scale={13.21}\n        />\n        <mesh\n          name=\"Rock_Moss_2\"\n          geometry={nodes.Rock_Moss_2.geometry}\n          material={nodes.Rock_Moss_2.material}\n          castShadow\n          receiveShadow\n          position={[-12.74, -3.05, -66.99]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          scale={29.46}\n        />\n        <mesh\n          name=\"top-ground 3\"\n          geometry={nodes['top-ground 3'].geometry}\n          material={materials.ground}\n          castShadow\n          receiveShadow\n          position={[111.79, -18.3, 10.28]}\n          rotation={[-Math.PI / 2, 0, -1.55]}\n          scale={[0.76, 0.42, 1]}\n        />\n        <mesh\n          name=\"top-ground 2\"\n          geometry={nodes['top-ground 2'].geometry}\n          material={materials.ground}\n          castShadow\n          receiveShadow\n          position={[-96.19, -18.3, -21.01]}\n          rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n          scale={[0.5, 0.22, 1]}\n        />\n        <mesh\n          name=\"top-ground\"\n          geometry={nodes['top-ground'].geometry}\n          material={materials.ground}\n          castShadow\n          receiveShadow\n          position={[-0.04, -16.13, 39.95]}\n          rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n          scale={[1, 0.58, 1]}\n        />\n        <pointLight\n          name=\"Point Light\"\n          castShadow\n          intensity={10}\n          decay={3}\n          distance={100}\n          shadow-mapSize-width={256}\n          shadow-mapSize-height={256}\n          shadow-camera-near={100}\n          shadow-camera-far={2020.207}\n          color=\"#00a6fe\"\n          position={[-2.13, 7.31, -2.95]}\n        />\n        <group name=\"mushroom\" position={[-4, -8, 0.37]} rotation={[0.12, 0, 0]} scale={0.02}>\n          <mesh\n            name=\"hat\"\n            geometry={nodes.hat.geometry}\n            material={materials.hat}\n            castShadow\n            receiveShadow\n            position={[109.15, 398.99, 297.3]}\n            scale={[0.49, 1.1, 0.49]}\n          />\n          <mesh\n            name=\"feet\"\n            geometry={nodes.feet.geometry}\n            material={materials.feet}\n            castShadow\n            receiveShadow\n            position={[103.16, 165.95, 307.5]}\n            scale={[0.36, 1, 0.5]}\n          />\n        </group>\n        <hemisphereLight name=\"Default Ambient Light\" intensity={0.25} color=\"#eaeaea\" position={[0, 1, 0]} />\n      </group>\n    </>\n  )\n}\n","\nimport React from 'react';\nimport {useRef, useState, useEffect} from 'react';\nimport styles from \"./Overlay.module.css\";\n\nexport function Overlay({ playerChosen, scroll, setShowStemPlayer, setPlayerChosen }) {\n    const scrollContainer = useRef();\n    useEffect(() => {\n        if (!playerChosen && scroll.current !== 0) {\n            if (scrollContainer.current) {\n                scrollContainer.current.scrollTo(0, scrollContainer.current.scrollHeight* scroll.current);\n            }\n        }\n    }, [playerChosen]);\n\n  return (\n    <div\n      ref={scrollContainer}\n      className={styles.scrollContainer}\n      onScroll={(e) => {\n        const scroll01 =\n          e.target.scrollTop / (e.target.scrollHeight - window.innerHeight);\n        scroll.current = scroll01;\n      }}\n    >\n      <section\n        style={{ height: \"50vh\" }}\n        className={styles.sectionLeft + \" \" + styles.sectionHero}\n      >\n        <header>\n          <h1>\n            <strong>SPORES</strong>.vision\n          </h1>\n          <svg\n            width=\"15\"\n            height=\"30\"\n            viewBox=\"0 0 30 71\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <rect\n              x=\"1.5\"\n              y=\"1.5\"\n              width=\"27\"\n              height=\"45\"\n              rx=\"13.5\"\n              stroke=\"#2D3A94\"\n              stroke-opacity=\"0.6\"\n              stroke-width=\"3\"\n            />\n            <path\n              d=\"M15 12V20\"\n              stroke=\"#2D3A94\"\n              stroke-opacity=\"0.6\"\n              stroke-width=\"3\"\n              stroke-linecap=\"round\"\n            />\n            <path\n              d=\"M8 54L14.5 60.5L21 54\"\n              stroke=\"#2D3A94\"\n              stroke-opacity=\"0.6\"\n              stroke-width=\"3\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            />\n            <path\n              d=\"M8 63L14.5 69.5L21 63\"\n              stroke=\"#2D3A94\"\n              stroke-opacity=\"0.6\"\n              stroke-width=\"3\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            />\n          </svg>\n        </header>\n      </section>\n      <section style={{ height: \"180vh\" }} className={styles.sectionRight + \" \" + styles.sectionFirst}>\n        <p>\n          Do you see it?\n          <br />\n          That light in the dark?\n          <br />\n          It calls to you.\n        </p>\n      </section>\n      <section style={{ height: \"50vh\" }} className={styles.sectionLeft + \" \" + styles.sectionSecond}>\n       <p>\n          Deep underground...\n        </p>\n      </section>\n      <section style={{ height: \"150vh\" }} className={styles.sectionRight + \" \" + styles.sectionLast}>\n        <p>\n          The spores resonate.\n          <br />\n          Awakening from their slumber.\n        </p>\n        <div className={styles.spButtons}>\n          <button\n            onClick={() => {\n                setPlayerChosen(1);\n                setShowStemPlayer(1);\n            }}\n            className={styles.spButton + \" pushable\"}> SP-1</button>\n          <button\n            onClick={() => {\n                setPlayerChosen(2);\n                setShowStemPlayer(2);\n            }}\n            className={styles.spButton + \" pushable\"}> SP-2</button>\n          <button\n            onClick={() => {\n                setPlayerChosen(3);\n                setShowStemPlayer(3);\n            }}\n            className={styles.spButton + \" pushable\"}> SP-3</button>\n          <button\n            onClick={() => {\n                setPlayerChosen(4);\n                setShowStemPlayer(4);\n            }}\n            className={\"pushable \" + styles.spButton}> SP-4</button>\n          <button\n            onClick={() => {\n                setPlayerChosen(5);\n                setShowStemPlayer(5);\n            }}\n            className={\"pushable \" + styles.spButton}> SP-5</button>\n           <button\n            onClick={() => {\n                setPlayerChosen(6);\n                setShowStemPlayer(6);\n            }}\n            className={\"pushable \" + styles.spButton}> SP-6</button>\n        </div>\n        <div>\n          <p className={styles.smallText}>\n            Powered by\n          </p>\n          <img\n            onClick={() => {\n                window.location.href = \"https://www.ghostwaveform.one\";\n            }\n                    }\n            src=\"/indigo-logo.png\" style={{height: 30}} className={styles.logo + \" pushable\"}></img>\n          <img src=\"/x.png\" id={styles.x}></img>\n          <img\n            onClick={() => {\n                window.location.href = \"https://zequencer.io\";\n            }\n                    }\n            src=\"/zeq-logo.png\" className={styles.logo + \" pushable \" + styles.zeqLogo}></img>\n        </div>\n      </section>\n    </div>\n  );\n}\n","import React from 'react';\nimport Spore from 'components/spore/Spore.js';\nimport {useState, useEffect} from 'react';\nimport { Suspense, useRef } from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport Scene from './Scene'\nimport { Overlay } from './Overlay';\nimport { EffectComposer, SSAO, Bloom } from \"@react-three/postprocessing\";\nimport { KernelSize } from 'postprocessing'\nimport './styles.css';\n\nexport default function App(props) {\n    console.log(props, props.match);\n\n    useEffect(() => {\n        document.title = \"Spores\";\n    }, []);\n\n    let tokenId = props.match && props.match.params.tokenId;\n    if (tokenId) {\n        tokenId = parseInt(tokenId);\n    }\n\n    console.log(\"tokenId=\", tokenId);\n    let [playerChosen, setPlayerChosen] = useState(tokenId);\n    let [showStemPlayer, setShowStemPlayer] = useState(tokenId !== undefined);\n\n    useEffect(() => {\n        if (playerChosen !== undefined) {\n            window.history.pushState('page2', 'Title', '/sp/' + playerChosen);\n        } else {\n            window.history.pushState('page2', 'Title', '/');\n        }\n    }, [playerChosen]);\n \n    const scroll = useRef(0);\n    console.log(\"store in app.js =\", props.store);\n\n    if (showStemPlayer || playerChosen) {\n        return (<Spore\n                  store={props.store}\n                  playerChosen={playerChosen}\n                  setPlayerChosen={setPlayerChosen}\n                  setShowStemPlayer={setShowStemPlayer}\n                  showStemPlayer={showStemPlayer}/>);\n    }\n    return [\n        <Canvas shadows flat linear>,\n          <EffectComposer smaa>\n            <Bloom\n              intensity={1}\n              kernelSize={KernelSize.VERY_LARGE}\n              luminanceThreshold={0.01}\n              luminanceSmoothing={0.9}\n            />\n          </EffectComposer>\n          <Scene scroll={scroll} />\n        </Canvas>,\n        <Overlay\n          playerChosen={playerChosen}\n          setPlayerChosen={setPlayerChosen}\n          setShowStemPlayer={setShowStemPlayer} scroll={scroll}/>\n    ];\n}\n","import React, { useEffect, useCallback, useState} from 'react';\nimport App from 'components/spores-landing/App.js';\nimport {connect} from 'react-redux';\n\nconst SporeLanding = (props) => { \n    return (<App {...props}></App>);\n};\n\nexport default SporeLanding;\n","import React, { Suspense, Component } from 'react';\nimport { BrowserRouter, StaticRouter, withRouter, Route, Switch } from 'react-router-dom';\nimport SporeLanding from \"components/spore/SporeLanding.js\";\nimport SporeWrapper from \"components/spore/SporeWrapper.js\";\nimport './App.scss';\n\nconst App = (props) => {\n    window.spores = true;\n    return (\n        <Suspense fallback={() => <div>Loading...</div>}>\n          <BrowserRouter>\n            <Switch>\n              <Route  path=\"/sp/:tokenId\" \n                      render={(props) => <SporeLanding {...props} store={props.store}/>}/>\n              <Route  path=\"/\" \n                      render={(props) => <SporeLanding {...props} store={props.store}/>}/>\n            </Switch>\n          </BrowserRouter>\n        </Suspense>);\n};\n\nexport default App;\n\n","import React, { useEffect, useCallback, useState} from 'react';\nimport Spore from './Spore.js';\nimport {connect} from 'react-redux';\n\nconst SporeWrapper = (props) => { \n    let tokenId = props.match && props.match.params.tokenId;\n    if (tokenId) {\n        tokenId = parseInt(tokenId);\n    }\n    let [playerChosen, setPlayerChosen] = useState(tokenId);\n    let [showStemPlayer, setShowStemPlayer] = useState(tokenId !== undefined);\n    console.log(\"tokenId=\", tokenId, playerChosen, showStemPlayer);\n \n    return (<Spore\n              playerChosen={playerChosen}\n              setPlayerChosen={setPlayerChosen}\n              setShowStemPlayer={setShowStemPlayer}\n              showStemPlayer={showStemPlayer}/>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SporeWrapper);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n      console.log(\"UNREGISTERING\");\n    navigator.serviceWorker.ready.then(registration => {\n        console.log(\"regstieration UNREGISTERING\", registration);\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\n\nconst rootReducer = combineReducers(\n    {\n    });\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {unregister} from './registerServiceWorker';\nimport store from \"./store/index\";\nimport { Provider } from \"react-redux\";\nimport { setResolution } from \"./actions/index\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n      <App store={store}/>\n    </Provider>\n    , document.getElementById('root'));\n\nunregister();\n","import Web3 from 'web3';\nimport {web3} from '../web3.js';\n\nexport const noteToAscii= {\n    'A': 'a',\n    'A#': 'A',\n    'B': 'b',\n    'C': 'c',\n    'C#': 'C',\n    'D': 'd',\n    'D#': 'D',\n    'E': 'e',\n    'F': 'f',\n    'F#': 'F',\n    'G': 'g',\n    'G#': 'G'\n};\n\nexport const noteToBytes32 = {\n    'A': web3.utils.asciiToHex('a'),\n    'A#': web3.utils.asciiToHex('A'),\n    'B': web3.utils.asciiToHex('b'),\n    'C': web3.utils.asciiToHex('c'),\n    'C#': web3.utils.asciiToHex('C'),\n    'D': web3.utils.asciiToHex('d'),\n    'D#': web3.utils.asciiToHex('D'),\n    'E': web3.utils.asciiToHex('e'),\n    'F': web3.utils.asciiToHex('f'),\n    'F#': web3.utils.asciiToHex('F'),\n    'G': web3.utils.asciiToHex('g'),\n    'G#': web3.utils.asciiToHex('G')\n};\n\nlet tmp = {};\n\nfor (let i in noteToBytes32) {\n    tmp[noteToBytes32[i]] = i;\n}\n\nexport const bytes32ToNote = tmp;\ntmp = {};\n\nfor (let i in noteToAscii) {\n    tmp[noteToAscii[i]] = i;\n}\n\n\nexport const asciiToNote = tmp;\n","import Web3 from 'web3';\n\nconst metamaskInstalled = false; // typeof window.web3 !== 'undefined';\nexport const web3 = metamaskInstalled ?\n      new Web3(window.web3.currentProvider) :\n      new Web3(new Web3.providers.HttpProvider('https://ropsten.infura.io/v3/2f3dce2af1044e88b4851c3d73c3d00c'));\nexport const web3WSS = \n    new Web3(new Web3.providers.WebsocketProvider('wss://ropsten.infura.io/ws/v3/2f3dce2af1044e88b4851c3d73c3d00c'));\n\n/*\n\nclass Contract {\n    constructor() {\n        this.methods = {};\n        this.options = {\n            address: ''\n        };\n    }\n}\n\nexport const web3 = {\n    eth: {\n        Contract: Contract,\n        net: {\n            isListening: () => true\n        }\n    },\n    utils: {\n        asciiToHex: () => 'aa',\n        padLeft: () => '',\n        padRight: () => '',\n    }\n};\n\nexport const web3WSS = web3;\n*/\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollContainer\":\"Overlay_scrollContainer__1qCGl\",\"spButtons\":\"Overlay_spButtons__3Py-c\",\"spButton\":\"Overlay_spButton__3jJAG\",\"logo\":\"Overlay_logo__3zoYc\",\"zeqLogo\":\"Overlay_zeqLogo__1g8a0\",\"x\":\"Overlay_x__3K0dz\",\"smallText\":\"Overlay_smallText__NJCJw\",\"sectionHero\":\"Overlay_sectionHero__2TBrR\",\"sectionLeft\":\"Overlay_sectionLeft__31YKq\",\"sectionFirst\":\"Overlay_sectionFirst__3a0Ww\",\"sectionSecond\":\"Overlay_sectionSecond__101hd\",\"sectionLast\":\"Overlay_sectionLast__2alRK\",\"sectionRight\":\"Overlay_sectionRight__1Q46X\",\"selected\":\"Overlay_selected__3wQx1\"};","import Web3 from 'web3';\nimport {bytes32ToNote} from './chords/NoteConstants.js';\nimport {noteToBytes32} from './chords/NoteConstants.js';\nimport {asciiToNote} from './chords/NoteConstants.js';\nimport {web3} from './web3.js';\n\nconst bs58 = require('bs58');\nconst metamaskInstalled = typeof window.web3 !== 'undefined';\nconst nullBytes32 = web3.utils.padLeft('0x0', 64);\n\nclass EthereumDataType {\n    constructor(toConversion, fromConversion) {\n        this.toConversion = toConversion;\n        this.fromConversion = fromConversion;\n    }\n\n    convertTo(jsValue) {\n        return this.toConversion(jsValue);\n    }\n\n    convertFrom(ethereumValue) {\n        if (ethereumValue === nullBytes32) {\n            return null;\n        }\n        return this.fromConversion(ethereumValue);\n    }\n}\n\nfunction ipfsHashToBytes32(ipfs_hash) {\n    var h = bs58.decode(ipfs_hash).toString('hex').replace(/^1220/, '');\n    if (h.length != 64) {\n        return null;\n    }\n    return '0x' + h;\n}\n\nfunction bytes32ToIPFSHash(hash_hex) {\n    var buf = new Buffer(hash_hex.replace(/^0x/, '1220'), 'hex')\n    return bs58.encode(buf)\n}\n\nfunction trimEmpty(str) {\n    let trimmed = \"\";\n    for (let i in str) {\n        if (str.charCodeAt(i) == 0) {\n            continue;\n        }\n        trimmed += str.charAt(i);\n    }\n    return trimmed;\n}\n\nexport const IPFS_HASH = new EthereumDataType(\n    (x) => ipfsHashToBytes32(x),\n    (x) => bytes32ToIPFSHash(x));\n\nexport const INT_8 = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.numberToHex(x), 64),\n    (x) => web3.utils.hexToNumber(x));\n\nexport const INT_16 = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.numberToHex(x), 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\nexport const INT_32 = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.numberToHex(x), 64),\n    (x) => web3.utils.hexToNumber(x));\n\nexport const UINT_256 = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.numberToHex(parseInt(x)), 64),\n    (x) => web3.utils.hexToNumber(x));\n\nexport const BYTES_32 = new EthereumDataType(\n    (x) => web3.utils.padRight(web3.utils.fromAscii(x), 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\nexport const BYTES_32_LEFT = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.fromAscii(x), 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\n\nexport const BYTES_32_ENCRYPTED = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.toHex(x), 64),\n    (x) => stripLeadingZeroes(x.slice(2)));\n\nfunction stripLeadingZeroes(str) {\n    for (let i=0; i < str.length; i++) {\n        if (str.slice(i, i+1) !== '0') {\n            return str.slice(i);\n        }\n    }\n \n    return str;\n}\n\n\n\n\nexport const RIGHT_PADDED_BYTES_32 = new EthereumDataType(\n    (x) => web3.utils.padRight(web3.utils.toHex(x), 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\nexport const NOTES_BYTES_32 = new EthereumDataType(\n    (x) => web3.utils.padRight(x, 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)).split('').map(x => asciiToNote[x]));\n\nexport const NOTE_BYTES_32 = new EthereumDataType(\n    (x) => web3.utils.padRight(x, 64),\n    (x) => asciiToNote[trimEmpty(web3.utils.toAscii(x))]);\n\nexport const ADDRESS = new EthereumDataType(\n    (x) => web3.utils.padLeft(x, 64),\n    (x) => getAddress(x));\n\nexport const STRING = new EthereumDataType(\n    (x) => web3.utils.padLeft(x[0], 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\nexport const BYTES_32_ARRAY = (len) =>\n    new EthereumDataType(\n        (x) => x, // no need to convert to\n        (data) => data.slice(2, 2 + len * 64));\n\nfunction getAddress(x) {\n    return '0x' + x.slice(x.length - 40);\n}\n\n\n"],"sourceRoot":""}