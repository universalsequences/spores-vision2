{"version":3,"sources":["components/drops/ZorbAnimation.js","components/drops/ZorbOption.js","utils/zorbs.js","components/drops/ZorbSelector.js","decentralized/EthereumEventLog.js","decentralized/EthereumTopic.js","decentralized/EthereumEvents.js","decentralized/EthereumQuery.js","decentralized/BackendQuery.js","decentralized/BackendQueryRunner.js","spores/getSporeRemixes.js","engine/audio.js","utils/sleep.js","utils/mp3.js","utils/decode.js","components/hooks/useAudioPlayer.js","components/ens/ENSName.js","components/progressbar/UnknownProgressBar.js","components/spore/JollyRancherPlayer.js","components/Colors.js","components/spore/SporeHeatMap.js","components/hooks/useInterval.js","components/buttons/PlayButton.js","components/spore/AudioPlayer.js","components/nft-jacker/ShareButton.js","components/remix/RemixPlayer.js","components/remix/RemixList.js","spores/getSporeHashIcon.js","components/hooks/useTokensOnSale.js","components/buy/test.js","components/hooks/useBuy.js","components/buy/FinalizePurchase.js","components/buy/BuyPlayerFlow.js","components/drops/Glossary.js","components/player/SimpleControls.js","components/waveform/SongWaveform.js","components/hooks/useSporesMessageHandler.js","spores/samples.js","components/samples/SampleInfo.js","constants/collections.js","actions/index.js","constants/action-types.js","components/nft-jacker/BuyUnsold.js","spores/sign.js","spores/newSpore.js","components/heatmap-player/HeatmapPlayer.js","jacker/jack.js","components/hooks/useTokenMetadata.js","utils/getJackFromToken.js","components/recording/FinishedUploading.js","components/modal/Modal.js","components/recording/SporeRecorded.js","components/nft-jacker/ShuffleButton.js","components/hooks/useRemixListener.js","components/player/SporeEmbed.js","components/hooks/useSporeListener.js","components/drops/Drop.js","components/drops/Zpore.js","components/drops/useZporeHideUI.js","components/lock/TimeRemaining.js","spores/chillRX.js","utils/getGateway.js","jacker/save.js","components/nft-jacker/HistoryItemSource.js","utils/shuffle.js","components/nft-jacker/History.js","components/hooks/useJacker.js","jacker/artist.js","components/hooks/useLatestJacks.js","components/nft-jacker/EchoSearchBox.js","components/nft-jacker/BuyThisSkin.js","components/metadata/TokenMetadata.js","constants/cheat-codes.js","components/hooks/useTokenLock.js","decentralized/contracts/SporesPlaylistContract.js","components/lock/LockedNotification.js","spores/playlist.js","components/chart/PlaylistInfo.js","components/chart/JuicePlaylists.js","components/hooks/usePlaylists.js","components/chart/Chart.js","components/hooks/useScroll.js","components/spore/VisualLinks.js","components/spore/docs.js","components/spore/HelperLines.js","components/spore/PlayerHelper.js","components/nft-jacker/Info.js","components/nft-jacker/JackerPlayer.js","jacker/stem-splitter.js","components/nft-jacker/Navigation.js","components/nft-jacker/NFTJacker.js","flags/flags.js","components/hooks/useCoverArtColors.js","components/drops/Thugger.js","components/drops/InMySoul.js","App.js","registerServiceWorker.js","reducers/index.js","reducers/playlist.js","reducers/spore.js","store/index.js","index.js","decentralized/chords/NoteConstants.js","decentralized/web3.js","utils/ipfs.js","decentralized/EthereumDataTypes.js","decentralized/Ipfs.js"],"names":["connect","state","props","dispatch","_ref","zorbStartPosition","image","x","y","_useState","useState","_useState2","Object","slicedToArray","animating","setAnimating","set","property","value","document","documentElement","style","setProperty","useEffect","width","window","innerWidth","height","innerHeight","setTimeout","react_default","a","createElement","left","top","className","src","setZorbId","zorbId","zorb","setZorbStartPosition","ref","useRef","selected","parseInt","tokenId","rect","current","getBoundingClientRect","url","onClick","args","endPoint","networks","network","ZDKNetwork","Ethereum","chain","ZDKChain","Mainnet","zdk","ZDK","account","zorbs","isLoading","setIsLoading","_useState3","_useState4","setZorbs","address","console","log","tokens","where","collectionAddresses","ownerAddresses","then","results","nodes","map","token","useTokenOwners","length","chunk_UIIB4ABT","accountStatus","showBalance","smallScreen","largeScreen","label","drops_ZorbOption","EthereumEventLog","event","topics","classCallCheck","this","_len","arguments","data","Array","_key","EthereumTopic","name","type","size","undefined","convertTo","convertFrom","SampleTagged","IPFS_HASH","BYTES_32","INT_32","SampleCreated","INT_16","RIGHT_PADDED_BYTES_32","ADDRESS","STRING","NewUnofficialSporeCreated","UINT_256","NOTE_BYTES_32","NOTES_BYTES_32","INT_8","BYTES_32_ENCRYPTED","BYTES_32_ARRAY","BYTES_32_LEFT","NewSporesPlaylist","metamaskInstalled","web3","EthereumQuery","distinct","selectStatements","whereClauses","groupBy","joinClauses","limitSize","fromBlockNumber","toBlockNumber","eventLog","arg","push","col","WhereClause","valueList","field","JoinClause","fromBlock","utils","toHex","toBlock","limit","sha3","i","toAdd","j","whereClause","_this","Promise","resolve","reject","eth","getPastLogs","getTopics","err","parsedResults","reverse","Math","min","parseResult","_callee","callback","blockNumber","_this2","regenerator_default","wrap","_context","prev","next","getBlockNumber","sent","web3WSS","subscribe","result","ret","stop","resultSet","select","dataIndexSoFar","fieldIndex","fieldData","d","slice","query","toConsumableArray","hexToNumber","argName","argValue","runner","BackendQueryRunner","runningQueries","Set","queryJson","asyncToGenerator","_regeneratorRuntime","mark","sleep","add","LOCAL_BACKEND_FLAG","location","hostname","fetch","method","body","JSON","stringify","headers","Accept","Content-Type","resp","json","removeQuery","catch","_x","_x2","apply","delete","time","BackendQuery","_super","call","isNFT","submit","getJson","getSporeRemixes","_ref2","getSporeRemixes_regeneratorRuntime","_callee2","collectionAddress","big","parsed","pend","_context2","from","executeQuery","toLowerCase","ethers","BigNumber","padLeft","toHexString","isNaN","getPending","filter","concat","abrupt","_x3","_x4","getRemixByNumber","_ref3","_callee3","id","_context3","_x5","getRemixesMap","_ref4","_callee4","unfiltered","pending","collections","_iterator","_step","_context4","updatePending","_createForOfIteratorHelper","s","n","done","e","f","_step2","localStorage","getItem","_iterator2","parse","sporeHash","recordingHash","_step3","_pending","_iterator3","_step4","r","skip","_iterator4","setItem","AudioUnit","require","context","Tone","Master","duration","source","buffer","playbackRate","looping","playSound","bind","seek","stopSound","disconnect","createBufferSource","destination","loop","start","max","mp3Recorder","_counter","decode","mp3_regeneratorRuntime","mp3Data","counter","Worker","onmessage","postMessage","decodeMP3","_yield$decode","decoded","sampleRate","position","ctxt","_buffer","channelDataL","channelDataR","l","createBuffer","getChannelData","cache","decodeAudioData","blob","hash","decode_regeneratorRuntime","sliced","_r","TextDecoder","Int8Array","t0","t1","bufferToArrayBuffer","useAudioPlayer","audioPlayer","setAudioPlayer","playerRef","dispose","useCallback","ipfs","getSound","useAudioPlayer_regeneratorRuntime","arrayBuffer","audioBuffer","player","setBuffer","ENSName","_useEnsName","useEnsName","isError","truncate","text","_ref$className","_ref$intervalTime","intervalTime","_ref$intervalPiece","intervalPiece","setLoadingProgress","interval","setInterval","clearInterval","borderRadius","margin","right","bottom","spore","progress","_ref$height","loaded","addEventListener","onMessage","removeEventListener","sendHeatmapHash","datahash","dataHash","contentWindow","sandbox","allowtransparency","aria-describedby","alt","borderWidth","brightCache","getHSLString","h","getHSLFromString","str","_str$split","substring","split","_str$split2","hPart","sPart","lPart","index","indexOf","parseFloat","hslToHex","k","color","round","toString","padStart","colors","Colors","opacity","c","toUpperCase","shift","_getHSLFromString","warmth","rotate","_getHSLFromString2","factor","lightFactor","startsWith","_getHSLFromString3","_RGBToHSL","g","b","cmin","cmax","delta","abs","toFixed","RGBToHSL","getRGB","hsl","brightenHSL","cacheResult","floor","rgb","_getHSLFromString4","heatRoot","bucketSize","saturation","getBuckets","heat","sliderData","sliderChanges","modeData","modeChanges","regions","buckets","SporeHeatMap_createForOfIteratorHelper","values","q","_loop","some","_ref$width","_ref$center","center","_ref$saturation","maxStep","keys","step","pow","fill","warm","useInterval","delay","savedCallback","PlayButton","onPlayClicked","stopPropagation","target","parentNode","blur","currentTarget","play","isPlaying","onMouseDown","onTouchStart","borderColor","creator","formatTime","minutes","seconds","_ref$songName","songName","_ref$artist","artist","externalURL","audioUnit","store","preset","setPreset","sporeMetadata","WIDTH","isMobile","playing","setPlaying","playTime","setPlayTime","startPoint","_useState5","_useState6","setProgress","_useState7","_useState8","setMouseSeeker","diff","currentTime","onClickPlay","mouseSeek","clientX","startTime","buttons_PlayButton","progressbar_UnknownProgressBar","spore_JollyRancherPlayer","href","ens_ENSName","lowerGradInverted","buttonBgColor","showShareModal","setShowModal","isCopied","setIsCopied","shareUrl","title","Fragment","index_esm","fa_index_esm","cursor","navigator","clipboard","writeText","TwitterShareButton","TwitterIcon","FacebookMessengerShareButton","quote","FacebookMessengerIcon","RedditShareButton","RedditIcon","TelegramShareButton","TelegramIcon","WhatsappShareButton","separator","WhatsappIcon","EmailShareButton","subject","EmailIcon","remix","setRemix","shareLink","_useAudioPlayer","nft_jacker_ShareButton","sporeId","spore_AudioPlayer","RemixListItem","clear","setRemixToPlay","spTokenId","hashedIcon","svgToTinyDataUri","uid","c1","c1_","c2","triad","getSporeHashIcon","backgroundImage","_ref$creatorsToIgnore","creatorsToIgnore","remixToPlay","remixData","setRemixData","noRemixes","setNoRemixes","includes","RemixList_RemixListItem","useTokensOnSale","tokensOnSale","setTokensOnSale","getTokensOnSale","loading","useTokensOnSale_regeneratorRuntime","baseURL","_askPrice","_thumbnail","onCompletedBuy","onCancel","cart","onDone","contractAddress","balanceData","useBalance","addressOrName","useSigner","balance","formatted","finished","setFinished","error","setError","setCurrent","waitingForWallet","setWaitingForWallet","_useState9","_useState10","confirming","setConfirming","buy","contract","_useSigner","signer","signerRef","useBuy_regeneratorRuntime","fillAmount","askModuleContract","ask","tx","AsksV11__factory","mainnetZoraAddresses","AsksV1_1","askForNFT","parseEth","askPrice","fillAsk","useBuy","thumbnail","find","number","total","obj","completeBuy","wait","playsInline","muted","autoPlay","PulseLoader_default","sizeUnit","open","setBuying","setCompletedBuy","_useAccount","useAccount","_useTokensOnSale","buy_FinalizePurchase","setCart","started","setStarted","RATIO","SongWaveform","memo","waveform","_ref$isWaveformRainbo","isWaveformRainbow","parts","p","HEIGHT","part","useSporesMessageHandler","GUILD_SAMPLES","getSampleInfo","samples_regeneratorRuntime","item","tagsQuery","tagResults","objectSpread","SampleInfo","currentSample","setCurrentSample","sampleInfo","setSampleInfo","sampleWaveform","setSampleWaveform","goToPrevious","goToNext","waveform_SongWaveform","CHILL_RX_COLLECTION","setCurrentPlaylistSong","song","payload","setSoldPlayers","sold","soldPlayers","upperGradInverted","_ref$soldPlayers","showRemaining","onCompleteSale","buying","unsold","borderBottomColor","BuyPlayerFlow","signMessage","sign_regeneratorRuntime","msg","flatSig","flatSignature","splitSignature","newSpore","newSpore_regeneratorRuntime","message","_yield$signMessage","v","ipfsHashToBytes32","transactionHash","disabled","CHAOS_COLLECTION","getMetadata","replace","animation_url","audio_url","jack","jack_regeneratorRuntime","getTokenMetadata","_yield$getParts","release","meta","getParts","getZoraAPI","metadata","re","matches","_indexOf","soundxyzPath","_baseURL","_indexOf2","_soundxyzPath","_ret","_json","match","_indexOf3","soundxyz","_indexOf4","_ret2","_args3","join","useTokenMetadata","useTokenMetadata_regeneratorRuntime","provider","providers","InfuraProvider","IERC721Metadata__factory","tokenURI","getJackFromToken","getJackFromToken_regeneratorRuntime","link","jacked","usedCheatCode","playlistLoaded","playlist","currentSong","setPendingSpores","setCurrentSong","recordedRemix","complete","loadJack","waitingOnSign","setWaitingOnSign","recording","setTransactionHash","save","FinishedUploading_regeneratorRuntime","removeItem","nextSong","loadNext","inner","heatmap_player_HeatmapPlayer","children","hide","uploadingRemix","onRemixSigningCompleted","savedToLocal","setSavedToLocal","modal_Modal","recording_FinishedUploading","hideWaveform","buttonTextColor","innerControls","scrubRef","setWaveform","scrubbing","setScrubbing","_useState11","_useState12","scrub","setScrub","finishScrub","onMouseMove","touches","percent","backgroundColor","useRemixListener","remixId","setRecordedRemix","TEST_REMIX_UPLOAD_FLAG","setUploadingRemix","addJson","SporeEmbed","simpleControls","isFullScreen","_ref$songTitle","songTitle","stems","setStems","_ref$url","hideControls","isSimple","_ref$color","_useRemixListener","totalRemixes","setLoaded","onReceive","origin","useSporeListener","recording_SporeRecorded","nft_jacker_ShuffleButton","player_SimpleControls","samples_SampleInfo","CREATORS_TO_IGNORE","Drop","_ref$askPrice","remixes","remix_RemixPlayer","remix_RemixList","drops_Glossary","entered","setEntered","remove","setRemove","insertedZorb","setInsertedZorb","hideUI","setHideUI","useZporeHide","drops_ZorbSelector","drops_ZorbAnimation","drops_Drop","secondsRemaining","SONG_NAMES","SONG_TO_TOKENS","1","2","3","4","5","6","7","8","9","10","getChillRXSongs","songs","coverArt","songId","tokenIds","PINATAS","mintsongs","zora","sound.xyz","zequencer","catalog","extractIPFS","getGatewayLink","externalLink","save_regeneratorRuntime","Source","textColor","setData","HistoryItemSource_Source","shuffle","array","temporaryValue","randomIndex","currentIndex","random","cachedTokens","KEYON_SONGS","History_regeneratorRuntime","_unsold","bpm","isSporeTrack","trim","len","latestJacks","loadHistory","keyonSongs","setKeyonSongs","load","history","nft_jacker_HistoryItemSource","useJacker","setLatestJacks","setShowHistory","setLink","setShowLinkInput","chillTokenId","defaultSearch","directCollectionAddress","directTokenId","_ref$updateURL","updateURL","currentLink","setCurrentLink","setSongId","setShowDesc","setCollectionAddress","jackedAudio","setJackedAudio","buyThisSkin","setBuyThisSkin","_useState13","_useState14","setTokenId","_useState15","_useState16","setCoverArt","_useState17","_useState18","setSongName","_useState19","_useState20","description","setDescription","_useState21","_useState22","showPlayer","setShowPlayer","_useState23","_useState24","setArtist","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","searchTerm","setSearchTerm","pushState","getChillTokenId","onJack","useJacker_regeneratorRuntime","isPlaylist","loadChillRX","shouldSave","external_url","toSave","ipfsHash","artwork","info","uri","attributes","EchoSearchBox","showLinkInput","setShowInfo","cheatCodeActivating","showHistory","onKeyDown","key","onFocus","placeholder","onChange","nft_jacker_BuyUnsold","showBuyThisSkin","rel","nft_jacker_BuyThisSkin","CHEAT_CODES","isValidCheatCode","code","SporesPlaylistContract","clearPlayer","showConnectWallet","setShowConnectWallet","abi","inputs","internalType","outputs","stateMutability","anonymous","indexed","Contract","getJuicePlaylists","playlist_regeneratorRuntime","metadataCID","playlist_createForOfIteratorHelper","finish","isLoaded","playlistId","setPlaylistLoaded","react_collapsible_dist_default","transitionTime","easing","trigger","JuicePlaylists","playlists","setPlaylists","usePlaylists","chart_PlaylistInfo","CHARTS_FLAG","SongInfo","_ref5","selectedTab","section","thumb","setThumb","collectionName","possibleThumbnail","_coverArt","content","numRemixes","_token","onError","_ref$history","showChart","setLoading","chartData","setChartData","setRemixes","setChillRXData","searchTermRef","lastCursorUsed","setSelectedTab","searchId","initialSize","padding","setSize","scrollPosition","scrollTo","onScroll","el","scrollTop","offsetHeight","scrollHeight","useScroll","ceil","Chart_regeneratorRuntime","_searchTerm","display","PLAYLIST_FLAG","chart_JuicePlaylists","Chart_SongInfo","getLocation","element","bounding","bound","offsetWidth","helperBox","helperRefs","locations","setLocations","playerEl","helperEl","playerLocation","helperLocation","points","offset","stopColor","docs","centerButton","ledButton","spButton1","spButton2","slider2","slider4","slider3","slider1","sliderHovered","doc","isArray","spore_VisualLinks","setSliderHovered","setSelected","spore_HelperLines","onTouchEnd","onMouseLeave","onMouseOver","calculateTimeLeft","year","Date","getFullYear","difference","timeLeft","D","H","M","S","setTimeLeft","timerComponents","forEach","getKeyonBPM","JackerPlayer_regeneratorRuntime","DEFAULT_JACKER_URL","CHILL_RX_URL","locked","showLoops","loadedURL","preloaded","setPreloaded","lastLoaded","setURL","getTime","_tokens","tokensToChoose","samples","drums","vocals","bass","other","visible","setVisibility","marginTop","bi_index_esm","io_index_esm","setUsedCheatCode","setSecondsRemaining","TOKEN_LOCK_FLAG","CHILLRX_FLAG","ABOUT_TO_END_FLAG","OWN_FAKE_SPORE_FLAG","showHelp","setShowHelp","_useLatestJacks","useLatestJacks_regeneratorRuntime","useLatestJacks","showInfo","showRemixes","setShowRemixes","passed","setPassed","failed","setFailed","password","setPassword","clearChart","_useTokenLock","cheatcode","setCheatCodeActivating","setLocked","isSporeOwner","setIsSporeOwner","timeElapsed","cheatOverriden","setCheatOverriden","_tokensOnSale","owner","_timeElapsed","LOCK_TIME","useTokenLock","_useJacker","isChillRX","params","_useCoverArtColors","coverGrad","setCoverGrad","setButtonTextColor","setButtonBgColor","setUpperGradInverted","setLowerGradInverted","mainColor","setMainColor","prominent","amount","group","format","invertedLowerColor","invert","invertedMidColor","invertedUpperColor","clearColors","useCoverArtColors","onClickPassword","background","spore_PlayerHelper","nft_jacker_Navigation","chart_Chart","nft_jacker_JackerPlayer","nft_jacker_EchoSearchBox","metadata_TokenMetadata","nft_jacker_Info","hi_index_esm","configureChains","mainnet","infuraProvider","infuraId","publicProvider","chains","connectors","getDefaultWallets","appName","wagmiClient","createClient","autoConnect","App","spores","react","fallback","wagmi_esm","client","theme","darkTheme","accentColor","accentColorForeground","BrowserRouter","Switch","Route","path","render","drops_InMySoul","assign","drops_Thugger","drops_Zpore","nft_jacker_NFTJacker","Boolean","rootReducer","combineReducers","action","showPlaylistMenu","pendingSpores","createStore","ReactDOM","es","src_App_0","getElementById","serviceWorker","ready","registration","unregister","__webpack_require__","__webpack_exports__","asciiToNote","_web3_js__WEBPACK_IMPORTED_MODULE_1__","noteToAscii","A","A#","B","C","C#","D#","E","F","F#","G","G#","noteToBytes32","asciiToHex","tmp","web3__WEBPACK_IMPORTED_MODULE_0__","web3__WEBPACK_IMPORTED_MODULE_0___default","Web3","HttpProvider","WebsocketProvider","Buffer","bs58","ipfs_hash","nullBytes32","EthereumDataType","toConversion","fromConversion","_Users_alecresende_code_spores_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","jsValue","ethereumValue","trimEmpty","trimmed","charCodeAt","charAt","hash_hex","buf","encode","bytes32ToIPFSHash","numberToHex","toAscii","padRight","fromAscii","stripLeadingZeroes","getAddress","xhr","XMLHttpRequest","IPFS_ADDRESS","END","httpV","httpsV","IpfsClient","_Users_alecresende_code_spores_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","controllers","protocol","backupIpfs","ipfsClient","centralIpfs","_centralIpfs","self","connectedLocally","finishedTestingLocalConnection","onreadystatechange","readyState","status","connectToCentral","keepSwarmConnectionAlive","timeout","ontimeout","send","list","refs","local","dht","findprovs","maxNumProviders","res","swarm","_this3","sequencerEngine","getSequenceId","getState","sequencer","addHelper","addBlobAndSaveToDB","Blob","Uint8Array","_this4","_ipfs","_this5","ipfsObject","pin","_this6","noUTF","ipfsPath","_this7","useCentral","isBytes","restart","cat","file","controller","AbortController","signal","abort","_url","getIPFSPrefix","_Users_alecresende_code_spores_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","dateA","response","dateB","readAllChunks","merged","mergeArrays","bytesArray","_callee5","_context5","_this8","fileReader","FileReader","onload","_this9","readAsArrayBuffer","filereader","readasarraybuffer","readableStream","reader","getReader","chunks","pump","read","_this11","_callee6","_context6","_callee7","dateC","processed","_context7","processArray","_x6","ArrayBuffer","findEnd","arrays","skipEnd","count","subarray","ending","iter","foundIndex","_this12"],"mappings":"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","file":"static/js/main.f613c4ac.chunk.js","sourcesContent":["import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './animation.scss';\n\nconst ZorbAnimation = ({zorbStartPosition}) => { \n    let {image, x, y} = zorbStartPosition;\n    let [animating, setAnimating] = useState(false);\n\n    const set = (property, value) => {\n        property = '--' + property;\n        document.documentElement.style.setProperty(property, value);\n    };\n\n    useEffect(() => {\n        let width = window.innerWidth;\n        let height = window.innerHeight;\n        set(\"zorb-start-x\", x+-25+'px');\n        set(\"zorb-start-y\", y+-25+'px');\n        set(\"zorb-mid-x\", width/2-25+'px');\n        set(\"zorb-mid-y\", width/2-25+'px');\n        set(\"zorb-end-x\", width/2-25+'px');\n        set(\"zorb-end-y\", height/2-25+'px');\n        setAnimating(true);\n        setTimeout(() => {\n            setAnimating(false);\n        }, 1000);\n    }, [zorbStartPosition, x, y, setAnimating]);\n\n    if (!animating) {\n        return '' ;\n    }\n\n    return (<img\n              style={{left: x, top: y}}\n              className=\"zorb-animation animate-it\" src={image}/>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ZorbAnimation);\n","import React, { useEffect, useCallback, useRef, useState} from 'react';\nimport {connect} from 'react-redux';\n\nconst ZorbOption = ({setZorbId, zorbId, zorb, setZorbStartPosition}) => { \n    let ref = useRef();\n\n    let selected = zorbId === parseInt(zorb.tokenId);\n    useEffect(() => {\n    }, []);\n\n    useEffect(() => {\n        if (selected) {\n            let rect = ref.current.getBoundingClientRect();\n            setZorbStartPosition({x: rect.left, y: rect.top, image: zorb.image.url});\n        }\n    }, [selected, setZorbStartPosition]);\n\n    return (\n        <div\n          ref={ref}\n          onClick={() => setZorbId(parseInt(zorb.tokenId))}\n          className={\"pushable zorb-option \" + (selected ? \"selected\" : \" unselected\")}>\n          <img src={zorb.image.url}  \n               className={(selected ? \"selected\" : \" unselected\")}/>\n        </div>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ZorbOption);\n","import React, {useState, useEffect} from 'react';\nimport { ZDK, ZDKNetwork, ZDKChain } from \"@zoralabs/zdk\";\n\nconst networkInfo = {\n    network: ZDKNetwork.Ethereum,\n    chain: ZDKChain.Mainnet,\n};\n\nconst API_ENDPOINT = \"https://api.zora.co/graphql\";\nconst args = { \n    endPoint:API_ENDPOINT, \n    networks:[networkInfo], \n};\n\nconst zdk = new ZDK(args) // All arguments are optional\n\nexport const useTokenOwners = ({account}) => {\n    let [isLoading, setIsLoading] = useState(true);\n    let [zorbs, setZorbs] = useState([]);\n\n    useEffect(() => {\n        if (account && account.address) {\n            // use the ultra futuristic zora api to get see if they own\n            // one of these open editions\n            setIsLoading(true);\n            console.log('loading collection info for account=', account.address);\n            zdk.tokens({\n                where: {\n                    collectionAddresses: [\"0xCa21d4228cDCc68D4e23807E5e370C07577Dd152\"],\n                    ownerAddresses: [account.address]\n                }})\n                .then(\n                    results => {\n                        setZorbs(results.tokens.nodes.map(x => x.token));\n                    });\n        }\n    }, [account, setIsLoading, setZorbs]);\n\n    return {zorbs, isLoading};\n};\n","import React, { useEffect, useCallback, useState} from 'react';\nimport ZorbOption from './ZorbOption.js';\nimport { ConnectButton, lightTheme} from '@rainbow-me/rainbowkit';\nimport {connect} from 'react-redux';\nimport {useTokenOwners} from 'utils/zorbs.js';\nimport './zorb.scss';\n\nconst ZorbSelector = ({account, setZorbId, zorbId, setZorbStartPosition}) => { \n    let {zorbs} = useTokenOwners({account})\n\n    useEffect(() => {\n        if (zorbs[0]) {\n            //setZorbId(parseInt(zorbs[0].tokenId));\n        }\n    }, [zorbs]);\n\n    return (<div className=\"zs-container\">\n            <div className=\"zorb-selector\">\n              <p>\n                spores + zorb = zpores, an experimental morphing music interface \n              </p>\n              <p>\n                + use your zorb to remix sound, insert it into the spore𓍊\n              </p>\n              {zorbs.length === 0 && account ? <div className=\"no-zorbs\">No zorbs detected. </div> : zorbs.length === 0 &&\n               <div className=\"connect-button-wrapper zorb-connect\">\n                 <ConnectButton\n                   accountStatus=\"address\" \n                   showBalance={{ smallScreen: false, largeScreen: false }}\n                   label=\"Connect Wallet\"\n                 />\n               </div>}\n\n              <div className=\"zorbs-list\">\n                {zorbs.map(\n                    x => <ZorbOption setZorbStartPosition={setZorbStartPosition} zorbId={zorbId} setZorbId={setZorbId} zorb={x}/>\n                )}\n              </div>\n            </div>\n            </div>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ZorbSelector);\n","class EthereumEventLog {\n    // for example, SampleTagged(bytes32,bytes32) would be the event\n    // and the arguments would be EthereumTopic(\"ipfsHash\", IPFS_HASH),\n    // EthereumTopic(\"tag\", BYTES_32)\n    constructor(event, topics, ...data) {\n        this.event = event;\n        this.topics = topics;\n        this.data = data;\n    }\n}\n\nexport default EthereumEventLog;\n","class EthereumTopic {\n    constructor(name, type, size=1) {\n        this.name = name;\n        this.type = type;\n        this.size = size*64;\n    }\n\n    convertTo(x) {\n        if (x === undefined || x === null) {\n            return undefined;\n        }\n        return this.type.convertTo(x);\n    }\n   \n    convertFrom(x) {\n        if (x === undefined || x === null) {\n            return undefined;\n        }\n        return this.type.convertFrom(x);\n    }\n}\n\nexport default EthereumTopic;\n","import {IPFS_HASH} from 'decentralized/EthereumDataTypes.js';\nimport {INT_8} from 'decentralized/EthereumDataTypes.js';\nimport {INT_16} from 'decentralized/EthereumDataTypes.js';\nimport {INT_32} from 'decentralized/EthereumDataTypes.js';\nimport {UINT_256} from 'decentralized/EthereumDataTypes.js';\nimport {RIGHT_PADDED_BYTES_32} from 'decentralized/EthereumDataTypes.js';\nimport {BYTES_32, BYTES_32_LEFT} from 'decentralized/EthereumDataTypes.js';\nimport {BYTES_32_ENCRYPTED} from 'decentralized/EthereumDataTypes.js';\nimport {BYTES_32_ARRAY} from 'decentralized/EthereumDataTypes.js';\nimport {NOTE_BYTES_32} from 'decentralized/EthereumDataTypes.js';\nimport {NOTES_BYTES_32} from 'decentralized/EthereumDataTypes.js';\nimport {ADDRESS} from 'decentralized/EthereumDataTypes.js';\nimport {STRING} from 'decentralized/EthereumDataTypes.js';\n\nimport EthereumEventLog from 'decentralized/EthereumEventLog.js';\nimport EthereumTopic from 'decentralized/EthereumTopic.js';\n\nexport const SampleTagged = new EthereumEventLog(\n    'SampleTagged(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('tag', BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\n export const SampleStyle = new EthereumEventLog(\n    'SampleStyle(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('style', BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n                                                 \n export const SampleYear = new EthereumEventLog(\n    'SampleYear(bytes32,int16,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('year', INT_16),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SampleCountry = new EthereumEventLog(\n    'SampleCountry(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('country', BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SampleYoutube = new EthereumEventLog(\n    'SampledYoutube(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('videoId', RIGHT_PADDED_BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n \nexport const SequenceCreated = new EthereumEventLog(\n    'SequenceCreated(address,bytes32,string)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('ipfsHash', IPFS_HASH)],\n    new EthereumTopic('title', STRING));\n\nexport const SampleCreated = new EthereumEventLog(\n    'SampleCreated(address,bytes32,string,uint32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('guildId', INT_32)\n    ],\n    new EthereumTopic('title', STRING),\n);\n\nexport const NewNoteSequence = new EthereumEventLog(\n    'NewNoteSequence(bytes32,bytes32)',\n    [new EthereumTopic('sampleHash', IPFS_HASH),\n     new EthereumTopic('noteSequenceHash', IPFS_HASH)]);\n\nexport const NewDiscogsSample = new EthereumEventLog(\n    'NewDiscogsSample(bytes32,uint256,bytes32,uint32)',\n    [new EthereumTopic('sampleHash', IPFS_HASH),\n     new EthereumTopic('coverArtHash', IPFS_HASH),\n     new EthereumTopic('guildId', INT_32)\n    ],\n     new EthereumTopic('discogsId', UINT_256),\n);\n\nexport const NewNoteSequenceAggregation = new EthereumEventLog(\n    'NewNotesAggregation(bytes32,bytes32,bytes32,uint32,uint32,bytes32)',\n    [new EthereumTopic('sampleHash', IPFS_HASH),\n     new EthereumTopic('noteA', NOTE_BYTES_32),\n     new EthereumTopic('noteB', NOTE_BYTES_32)],\n    new EthereumTopic('startTime', INT_32),\n    new EthereumTopic('endTime', INT_32),\n    new EthereumTopic('remainingNotes', NOTES_BYTES_32));\n\nexport const SampleFavorited = new EthereumEventLog(\n    'SampleFavorited(address,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('sampleHash', IPFS_HASH)]);\n\nexport const SampleUnfavorited = new EthereumEventLog(\n    'SampleUnfavorited(address,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('sampleHash', IPFS_HASH)]);\n\nexport const SequenceEdited = new EthereumEventLog(\n    'SequenceEdited(address,bytes32,bytes32,bytes32,string)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('previousSequence', IPFS_HASH),\n     new EthereumTopic('newSequence', IPFS_HASH)],\n    new EthereumTopic('diff', IPFS_HASH),\n    new EthereumTopic('title', STRING),\n    );\n\nexport const TokenizedSequenceEdited = new EthereumEventLog(\n    'SequenceEdited(address,bytes32,bytes32,string,uint32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('previousSequence', IPFS_HASH),\n     new EthereumTopic('newSequence', IPFS_HASH)],\n    new EthereumTopic('title', STRING),\n    new EthereumTopic('bpm', INT_32),\n    );\n\n\nexport const PresetTag = new EthereumEventLog(\n    'PresetTagged(address,bytes32,bytes32,uint32)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n     new EthereumTopic('tag', BYTES_32),\n     new EthereumTopic('guildId', INT_32),\n    ],\n    new EthereumTopic('user', ADDRESS),\n);\n\nexport const NewGuild = new EthereumEventLog(\n    'NewGuild(address,uint32,string)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)],\n    new EthereumTopic('name', STRING),\n);\n\n//event NewGuildMemberRequest(address indexed, address indexed, uint256 indexed);\nexport const NewGuildMemberRequest = new EthereumEventLog(\n    'NewGuildMemberRequest(address,address,uint32)',\n    [new EthereumTopic('requester', ADDRESS),\n     new EthereumTopic('newMember', ADDRESS),\n     new EthereumTopic('guildId', INT_32)]);\n\n// event NewGuildMemberRequestAccepted(address indexed, uint256 indexed);\nexport const NewGuildMemberRequestAccepted = new EthereumEventLog(\n    'NewGuildMemberRequestAccepted(address,uint32)',\n    [new EthereumTopic('newMember', ADDRESS),\n     new EthereumTopic('guildId', INT_32)]);\n\n// event NewGuildMemberRequestRejected(address indexed, uint256 indexed);\nexport const NewGuildMemberRequestRejected = new EthereumEventLog(\n    'NewGuildMemberRequestRejected(address,uint32)',\n    [new EthereumTopic('newMember', ADDRESS),\n     new EthereumTopic('guildId', INT_32)]);\n\n// event NewGuildMemberRequestRejected(address indexed, uint256 indexed);\nexport const GuildKeyEncrypted = new EthereumEventLog(\n    'GuildKeyEncrypted(address,uint32,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32),\n     new EthereumTopic('ipfsHash',IPFS_HASH)]);\n\nexport const NewEncryptedContent = new EthereumEventLog(\n    'NewEncryptedContent(address,bytes32,bytes32,int8,bytes32,bytes32[9],bytes32[6])',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('newContent', IPFS_HASH),\n     new EthereumTopic('contentType', INT_8),\n    ],\n     new EthereumTopic('previousContent', IPFS_HASH),\n    new EthereumTopic('encryptedName', BYTES_32_ENCRYPTED),\n    new EthereumTopic('encryptedContentKey', BYTES_32_ARRAY(9), 9),\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\nexport const EncryptedContentShared = new EthereumEventLog(\n    'EncryptedContentShared(address,address,bytes32,bytes32[9],bytes32[6])',\n    [new EthereumTopic('sharedWith', ADDRESS),\n     new EthereumTopic('creator', ADDRESS),\n     new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('encryptedContentKey', BYTES_32_ARRAY(9), 9),\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\n\nexport const NewPublicKey = new EthereumEventLog(\n    'NewPublicKey(address,bytes32[6])',\n    [new EthereumTopic('user', ADDRESS),\n    ],\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\nexport const NewPreset2 = new EthereumEventLog(\n    'NewPreset(address,bytes32,uint32,bytes32,bytes32[9],bytes32[6])',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('contentHash', IPFS_HASH),\n     new EthereumTopic('guildId', INT_32)\n    ],\n    new EthereumTopic('encryptedName', BYTES_32_ENCRYPTED),\n    new EthereumTopic('encryptedContentKey', BYTES_32_ARRAY(9), 9),\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\nexport const PresetSample = new EthereumEventLog(\n    'PresetSample(bytes32,bytes32,uint32)',\n    [\n        new EthereumTopic('contentHash', IPFS_HASH),\n        new EthereumTopic('sampleHash', IPFS_HASH),\n        new EthereumTopic('guildId', INT_32)\n    ],\n    );\n\nexport const PresetInstrumentType = new EthereumEventLog(\n    'PresetInstrumentType(bytes32,bytes32,uint32)',\n    [\n        new EthereumTopic('contentHash', IPFS_HASH),\n        new EthereumTopic('instrumentType', BYTES_32_LEFT),\n        new EthereumTopic('guildId', INT_32)\n    ],\n    );\n\nexport const NewMonthlyIndex = new EthereumEventLog(\n    'NewMonthlyIndex(bytes32,uint32,uint64)',\n    [\n     new EthereumTopic('month', UINT_256),\n     new EthereumTopic('year', UINT_256)\n    ],\n     new EthereumTopic('hash', IPFS_HASH)\n    );\n\nexport const New2DMapping = new EthereumEventLog(\n    'New2DMapping(bytes32)',\n    [\n     new EthereumTopic('ipfsHash', IPFS_HASH)\n    ],\n\n    );\n\nexport const PublicMessageSent = new EthereumEventLog(\n    'PublicMessageSent(address,address,bytes32,bytes32)',\n    [\n        new EthereumTopic('fromUser', ADDRESS),\n        new EthereumTopic('toUser', ADDRESS),\n        new EthereumTopic('referenceHash', IPFS_HASH),\n    ],\n    new EthereumTopic('messageHash', IPFS_HASH),\n    );\n\nexport const SampleCopyStrike = new EthereumEventLog(\n    'SampleCopyStrike(address,bytes32,bytes32)',\n    [\n        new EthereumTopic('user', ADDRESS),\n        new EthereumTopic('sampleHash', IPFS_HASH),\n        new EthereumTopic('referenceHash', IPFS_HASH),\n    ]\n    );\n\nexport const SampleTakenDown = new EthereumEventLog(\n    'SampleTakenDown(bytes32)',\n    [\n        new EthereumTopic('sampleHash', IPFS_HASH),\n    ]\n    );\n\nexport const FoldersUpdated = new EthereumEventLog(\n    'FoldersUpdated(address,bytes32)',\n    [\n        new EthereumTopic('user', ADDRESS),\n        new EthereumTopic('foldersHash', IPFS_HASH),\n    ]\n    );\n\nexport const NewIndex = new EthereumEventLog(\n    'NewIndex(uint32,bytes32)',\n    [\n        new EthereumTopic('guildId', INT_32),\n    ],\n    new EthereumTopic('indexHash', IPFS_HASH),\n    );\n\nexport const NewGuildSequence = new EthereumEventLog(\n    'NewGuildSequence(address,bytes32,uint32,bytes32,bytes32,bytes32[9],bytes32[6])',\n    [\n        new EthereumTopic('user', ADDRESS),\n        new EthereumTopic('contentHash', IPFS_HASH),\n        new EthereumTopic('guildId', INT_32),\n    ],\n    new EthereumTopic('previousHash', IPFS_HASH),\n    new EthereumTopic('encryptedName', BYTES_32_ENCRYPTED),\n    new EthereumTopic('encryptedContentKey', BYTES_32_ARRAY(9), 9),\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\nexport const NewGuildClassification = new EthereumEventLog(\n    'NewGuildClassification(uint32,bytes32)',\n    [\n        new EthereumTopic('guildId', INT_32),\n        new EthereumTopic('contentHash', IPFS_HASH),\n    ]);;\n\n export const Transfer = new EthereumEventLog(\n    'Transfer(address,address,uint256)',\n    [\n        new EthereumTopic('fromUser', ADDRESS),\n        new EthereumTopic('toUser', ADDRESS),\n    ],\n     new EthereumTopic('amount', INT_32 ),\n );;\n\nexport const SequenceTagged= new EthereumEventLog(\n    'SequenceTagged(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('tag', BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SequenceFavorited = new EthereumEventLog(\n    'SequenceFavorited(bytes32,address,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SequenceStarred = new EthereumEventLog(\n    'SequenceStarred(bytes32,address,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SequenceUnfavorited = new EthereumEventLog(\n    'SequenceUnfavorited(bytes32,address,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\n\nexport const SequenceUnstarred = new EthereumEventLog(\n    'SequenceUnstarred(bytes32,address,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\n\nexport const NewDataType = new EthereumEventLog(\n    'NewDataType(bytes32,string)',\n    [new EthereumTopic('dataType', BYTES_32),\n    ],\n    new EthereumTopic('description', STRING));\n\nexport const NewLinkType = new EthereumEventLog(\n    'NewLinkType(bytes32,string)',\n    [new EthereumTopic('linkType', BYTES_32),\n    ],\n    new EthereumTopic('description', STRING));\n\nexport const NewAnnotationType = new EthereumEventLog(\n    'NewAnnotationType(bytes32,string)',\n    [new EthereumTopic('annotationType', BYTES_32),\n    ],\n    new EthereumTopic('description', STRING));\n\nexport const NewAnnotation = new EthereumEventLog(\n    'NewAnnotation(bytes32,bytes32,bytes32,address)',\n    [\n        new EthereumTopic('annotationType', BYTES_32),\n        new EthereumTopic('data', IPFS_HASH),\n        new EthereumTopic('address', ADDRESS),\n    ],\n    new EthereumTopic('annotationData', BYTES_32),\n);\n\nexport const NewLink = new EthereumEventLog(\n    'NewLink(bytes32,bytes32,bytes32,address)',\n    [new EthereumTopic('linkType', BYTES_32),\n     new EthereumTopic('fromData', IPFS_HASH),\n     new EthereumTopic('toData', IPFS_HASH),\n    ],\n     new EthereumTopic('address', ADDRESS),\n    );\n\nexport const NewMix= new EthereumEventLog(\n    'NewMix(address,bytes32,bytes32,string,uint32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('mixHash', IPFS_HASH),\n     new EthereumTopic('previousHash', IPFS_HASH),\n    ],\n     new EthereumTopic('title', STRING),\n     new EthereumTopic('guildId', INT_32),\n    );\n\nexport const NewEffect = new EthereumEventLog(\n    'NewEffect(address,bytes32,bytes32,string,uint32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('effectHash', IPFS_HASH),\n     new EthereumTopic('effectType', BYTES_32),\n    ],\n     new EthereumTopic('title', STRING),\n     new EthereumTopic('guildId', INT_32),\n    );\n\nexport const ReleaseInfo = new EthereumEventLog(\n    'ReleaseInfo(bytes32,uint32,string,bytes32,bytes32)',\n    [new EthereumTopic('artistName', BYTES_32),\n     new EthereumTopic('releaseId', INT_32),\n    ],\n     new EthereumTopic('releaseName', STRING),\n     new EthereumTopic('coverArtHash', IPFS_HASH),\n     new EthereumTopic('releaseType', BYTES_32),\n    );\n\nexport const SampleByArtist = new EthereumEventLog(\n    'SampleByArtist(bytes32,bytes32)',\n    [new EthereumTopic('artistName', BYTES_32),\n     new EthereumTopic('ipfsHash', IPFS_HASH),\n     ]\n    );\n\nexport const ArtistInfo = new EthereumEventLog(\n    'ArtistInfo(bytes32,bytes32,string)',\n    [new EthereumTopic('artistName', BYTES_32),\n     new EthereumTopic('linkType', BYTES_32),\n    ],\n     new EthereumTopic('link', STRING),\n    );\n\nexport const MidiCCParameter = new EthereumEventLog(\n    'MidiCCParameter(bytes32,uint32,bytes32,address)',\n    [new EthereumTopic('deviceName', BYTES_32),\n     new EthereumTopic('ccNumber', INT_32),\n     new EthereumTopic('parameterName', BYTES_32),\n    ],\n     new EthereumTopic('user', ADDRESS),\n    );\n\nexport const SampleInSequence = new EthereumEventLog(\n    'SampleInSequence(bytes32,bytes32)',\n    [new EthereumTopic('sequenceHash', IPFS_HASH),\n     new EthereumTopic('sampleHash', IPFS_HASH)\n    ]\n    );\n\nexport const ListEdited = new EthereumEventLog(\n    'ListEdited(bytes32,bytes32,address,bytes32,uint32)',\n    [new EthereumTopic('newContent', IPFS_HASH),\n     new EthereumTopic('previousContent', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n    ],\n    new EthereumTopic('title', BYTES_32),\n    new EthereumTopic('guildId', INT_32),\n    );\n\nexport const ListHighlighted = new EthereumEventLog(\n    'ListHighlighted(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('user', ADDRESS)\n    );\n\nexport const ListUnhighlighted = new EthereumEventLog(\n    'ListUnhighlighted(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('user', ADDRESS)\n    );\n\nexport const ListFavorited = new EthereumEventLog(\n    'ListFavorited(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('user', ADDRESS)\n    );\n\nexport const ListUnfavorited = new EthereumEventLog(\n    'ListUnfavorited(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('user', ADDRESS)\n    );\n\nexport const ListDeleted = new EthereumEventLog(\n    'ListDeleted(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    new EthereumTopic('user', ADDRESS)\n    ],\n    );\n\nexport const NewWallpaper = new EthereumEventLog(\n    'NewWallpaper(address,bytes32,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('wallpaperHash', IPFS_HASH),\n     new EthereumTopic('thumbnailHash', IPFS_HASH)\n    ]);\n\nexport const DefaultWallpaper = new EthereumEventLog(\n    'DefaultWallpaper(address,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('wallpaperHash', IPFS_HASH)\n    ]);\n\nexport const NewPack = new EthereumEventLog(\n    'NewPack(address,bytes32,bytes32,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('packHash', IPFS_HASH),\n     new EthereumTopic('previousHash', IPFS_HASH)\n    ],\n     new EthereumTopic('title', BYTES_32)\n);\n\nexport const PackHasContent = new EthereumEventLog(\n    'PackHasContent(bytes32,bytes32)',\n    [new EthereumTopic('packHash', IPFS_HASH),\n     new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n);\n\nexport const UserLeftGuild = new EthereumEventLog(\n    'UserLeftGuild(uint256,address)',[\n     new EthereumTopic('guildId', INT_32),\n    ],\n    new EthereumTopic('user', ADDRESS),\n);\n\nexport const NewScript = new EthereumEventLog(\n    'NewScript(address,bytes32,bytes32,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('scriptHash', IPFS_HASH),\n     new EthereumTopic('scriptType', BYTES_32)\n    ],\n     new EthereumTopic('title', BYTES_32)\n);\n\nexport const NewCreatorProject = new EthereumEventLog(\n    'NewCreatorProject(address,uint256,bytes32,uint256,string)',\n    [\n        new EthereumTopic('creator', ADDRESS),\n        new EthereumTopic('projectId', UINT_256),\n        new EthereumTopic('contentHash', IPFS_HASH)\n    ],\n    new EthereumTopic('maxInvocations', UINT_256),\n    new EthereumTopic('title', STRING)\n);\n\nexport const NewTokenSeed = new EthereumEventLog(\n    'NewTokenSeed(uint256,uint256,bytes32)',\n    [\n        new EthereumTopic('projectId', UINT_256),\n        new EthereumTopic('tokenId', UINT_256)\n    ],\n    new EthereumTopic('seedHash', BYTES_32)\n);\n\nexport const ZoraProject = new EthereumEventLog(\n    'ZoraProject(bytes32,uint256)',\n    [\n        new EthereumTopic('projectHash', IPFS_HASH),\n        new EthereumTopic('zoraId', UINT_256)\n    ]);\n\nexport const AccountAuthorized = new EthereumEventLog(\n    'AccountAuthorized(address,address,string,uint8,bytes32,bytes32)',\n    [\n        new EthereumTopic('zequencerAddress', ADDRESS),\n        new EthereumTopic('walletAddress', ADDRESS),\n    ],\n    new EthereumTopic('message', STRING),\n    new EthereumTopic('v', INT_8),\n    new EthereumTopic('r', BYTES_32_ENCRYPTED),\n    new EthereumTopic('s', BYTES_32_ENCRYPTED)\n);\n\nexport const PluginCreated = new EthereumEventLog(\n    'PluginCreated(uint256,address,string)',\n    [\n        new EthereumTopic(\"tokenId\", UINT_256),\n        new EthereumTopic(\"creator\", ADDRESS),\n    ],\n    new EthereumTopic(\"name\", STRING)\n);\n\nexport const NewPluginVersion = new EthereumEventLog(\n    'NewPluginVersion(uint256,uint256,bytes32,string)',\n    [\n        new EthereumTopic(\"tokenId\", UINT_256),\n        new EthereumTopic(\"versionNumber\", UINT_256),\n    ],\n    new EthereumTopic(\"pluginContentHash\", IPFS_HASH),\n    new EthereumTopic(\"pluginMetadataURI\", STRING)\n);\n\nexport const ProjectHasArrangement = new EthereumEventLog(\n    'ProjectHasArrangement(bytes32)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n);\n\nexport const ProjectBPM = new EthereumEventLog(\n    'ProjectBPM(bytes32,int16)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n    new EthereumTopic(\"bpm\", UINT_256),\n);\n\nexport const ProjectVisuals = new EthereumEventLog(\n    'ProjectVisuals(bytes32,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n    new EthereumTopic(\"thumbnailhash\", IPFS_HASH),\n);\n\nexport const ProjectUsesPreset = new EthereumEventLog(\n    'ProjectUsesPreset(bytes32,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n    new EthereumTopic(\"presetHash\", IPFS_HASH),\n);\n\nexport const ProjectPatternsCount = new EthereumEventLog(\n    'ProjectPatternsCount(bytes32,int8)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n    new EthereumTopic(\"patterns\", UINT_256),\n);\n\nexport const NewSporeCreated = new EthereumEventLog(\n    'NewSporeCreated(uint256,uint256,address,address,bytes32,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"sporeId\", UINT_256),\n    new EthereumTopic(\"tokenId\", UINT_256),\n    new EthereumTopic(\"proxy\", ADDRESS),\n    new EthereumTopic(\"creator\", ADDRESS),\n    new EthereumTopic(\"sporeHash\", IPFS_HASH),\n    new EthereumTopic(\"dataHash\", IPFS_HASH),\n);\n\nexport const NewChainCreated = new EthereumEventLog(\n    'NewChainCreated(uint256,bytes32,address,address,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"chainId\", UINT_256),\n    new EthereumTopic(\"name\", BYTES_32),\n    new EthereumTopic(\"proxy\", ADDRESS),\n    new EthereumTopic(\"creator\", ADDRESS),\n    new EthereumTopic(\"chainHash\", IPFS_HASH),\n);\n\nexport const NewOfficialSporeCreated = new EthereumEventLog(\n    'NewOfficialSporeCreated(uint256,uint256,address,bytes32,bytes32,string)',\n    [\n    ],\n    new EthereumTopic(\"spTokenId\", UINT_256),\n    new EthereumTopic(\"sporeId\", UINT_256),\n    new EthereumTopic(\"creator\", ADDRESS),\n    new EthereumTopic(\"sporeHash\", IPFS_HASH),\n    new EthereumTopic(\"dataHash\", IPFS_HASH),\n    new EthereumTopic(\"songName\", STRING),\n);\n\nexport const NewUnofficialSporeCreated = new EthereumEventLog(\n    'NewUnofficialSporeCreated(uint256,uint256,address,bytes32,bytes32,address,uint256)',\n    [\n    ],\n    new EthereumTopic(\"spTokenId\", UINT_256),\n    new EthereumTopic(\"sporeId\", UINT_256),\n    new EthereumTopic(\"creator\", ADDRESS),\n    new EthereumTopic(\"sporeHash\", IPFS_HASH),\n    new EthereumTopic(\"dataHash\", IPFS_HASH),\n    new EthereumTopic(\"collectionAddress\", ADDRESS),\n    new EthereumTopic(\"tokenId\", UINT_256),\n);\n\nexport const NewSporesPlaylist = new EthereumEventLog(\n    'NewSporesPlaylist(uint256,address,string)',\n    [\n    ],\n    new EthereumTopic(\"playlistId\", UINT_256),\n    new EthereumTopic(\"creator\", ADDRESS),\n    new EthereumTopic(\"metadataCID\", STRING),\n);\n\nexport const SporesPlaylistSong = new EthereumEventLog(\n    'SporesPlaylistSong(uint256,address,uint256)',\n    [\n    ],\n    new EthereumTopic(\"playlistId\", UINT_256),\n    new EthereumTopic(\"collecttionAddress\", ADDRESS),\n    new EthereumTopic(\"tokenId\", UINT_256),\n);\n\nexport const PlaylistBurned = new EthereumEventLog(\n    'PlaylistBurned(uint256)',\n    [\n    ],\n    new EthereumTopic(\"playlistId\", UINT_256)\n);\n\nexport const SongGenre = new EthereumEventLog(\n    'SongGenre(address,uint256,string,address,string)',\n    [\n    ],\n    new EthereumTopic(\"collectionAddress\", ADDRESS),\n    new EthereumTopic(\"tokenId\", UINT_256),\n    new EthereumTopic(\"genre\", STRING),\n    new EthereumTopic(\"user\", ADDRESS),\n    new EthereumTopic(\"metadataCID\", STRING)\n);\n\nexport const NewSkin = new EthereumEventLog(\n    'NewSkin(uint256,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"skinId\", UINT_256),\n    new EthereumTopic(\"imageHash\", IPFS_HASH),\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import {SampleTagged} from 'decentralized/EthereumEvents.js';\nimport {web3, web3WSS} from './web3.js';\nimport {SampleYoutube} from 'decentralized/EthereumEvents.js';\nimport {STRING} from 'decentralized/EthereumDataTypes.js';\nconst metamaskInstalled = typeof window.web3 !== 'undefined';\n\nclass EthereumQuery {\n    constructor(address) {\n        this.address = address;\n        this.distinct = false;\n        this.selectStatements = [];\n        this.whereClauses = [];\n        this.groupBy = [];\n        this.joinClauses = [];\n        this.limitSize = undefined;\n        this.fromBlockNumber = '0x2';\n        this.toBlockNumber = undefined;\n    }\n\n    from(eventLog) {\n        this.eventLog = eventLog;\n        return this;\n    }\n\n    select(arg) {\n        this.selectStatements.push(arg);\n        return this;\n    }\n\n    // only selects distinct items in the select clause\n    distinct() {\n        this.distinct = true;\n        return this;\n    }\n\n    groupBy(col) {\n        this.groupBy.push(col);\n        return this;\n    }\n\n    where(name, value) {\n        this.whereClauses.push(new WhereClause(name, value));\n        return this;\n    }\n\n    whereIn(name, valueList) {\n        this.whereClauses.push(new WhereClause(name, undefined, valueList));\n        return this;\n    }\n\n    join(event, field) {\n        this.joinClauses.push(new JoinClause(event, field));\n    }\n\n    fromBlock(fromBlock) {\n        this.fromBlockNumber = web3.utils.toHex(fromBlock);\n        return this;\n    }\n\n    toBlock(toBlock) {\n        this.toBlockNumber = web3.utils.toHex(toBlock);\n        return this;\n    }\n\n    limit(limit) {\n        this.limitSize = limit;\n        return this;\n    }\n\n    getTopics() {\n        let topics = [web3.utils.sha3(this.eventLog.event)];\n\n        for (let i in this.eventLog.topics) {\n            let arg = this.eventLog.topics[parseInt(i)];\n            let toAdd = null;\n            for (let j in this.whereClauses) {\n                let whereClause = this.whereClauses[parseInt(j)];\n                if (whereClause.name === arg.name) {\n                    let value = whereClause.value !== undefined ?\n                        whereClause.value : whereClause.valueList[0];\n                    toAdd = arg.convertTo(value);\n                    // console.log(\"where %s = %s / %s\", whereClause.name, value, toAdd);\n                }\n              }\n            topics.push(toAdd);\n        }\n        return topics;\n    }\n\n    executeQuery() {\n        return new Promise((resolve, reject) => {\n            web3.eth.getPastLogs({\n                address: this.address,\n                topics: this.getTopics(),\n                toBlock: this.toBlockNumber,\n                fromBlock: this.fromBlockNumber}, (err, results) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        let parsedResults = [];\n                        results.reverse();\n                        let limit = Math.min(results.length, this.limitSize || results.length);\n                        for (let i=0; i < limit; i++) {\n                            parsedResults.push(this.parseResult(results[i]));\n                        }\n                        resolve(parsedResults);\n                    }\n                });\n        });\n    }\n\n    async watchQuery(callback) {\n        let blockNumber = await web3.eth.getBlockNumber();\n        let web3ToUse = metamaskInstalled ? web3 : web3WSS;\n        web3ToUse.eth.subscribe(\n            'logs',\n            {\n                address: this.address,\n                topics: this.getTopics(),\n                fromBlock: web3.utils.toHex(blockNumber),\n            },\n            (err, result) => {\n                if (err) {\n                    console.log('error watching ');\n                    console.log(err);\n                }\n                let ret = this.parseResult(result);\n                console.log('watch query got ');\n                console.log(ret);\n                callback(ret);\n            });\n    }\n\n    parseResult(data) {\n        if (data === undefined || data === null) {\n            return undefined;\n        }\n        let resultSet = {};\n\n        for (let j in this.selectStatements) {\n            let select = this.selectStatements[parseInt(j)];\n            for (let i in this.eventLog.topics) {\n                let field = data.topics[1 + parseInt(i)];\n                let arg = this.eventLog.topics[parseInt(i)];\n                if (arg.name === select) {\n                    // convert field\n                    resultSet[select] = arg.type.convertFrom(field);\n                }\n            }\n            \n            let dataIndexSoFar = 0;\n            for (let fieldIndex in this.eventLog.data) {\n                fieldIndex = parseInt(fieldIndex);\n                let fieldData = this.eventLog.data[fieldIndex];\n                \n                if (fieldData !== undefined) {\n                    if (select == fieldData.name) {\n                        // the data field in ethereum event logs is basically a huge hex string\n                        // divided into 64-length pieces, for each data point.\n                        // Also, it starts with 0x, so we must skip the first 2 characters when\n                        // slicing out the desired data\n                        let d = data.data.slice(2 + dataIndexSoFar, 2 + dataIndexSoFar + fieldData.size);\n                        d = '0x' + d;\n                        \n                        if (fieldData.type == STRING ) {\n                            d = '0x' + data.data.slice(130 + 64*fieldIndex);\n                        } \n                        resultSet[select] = fieldData.convertFrom(d);\n                    }\n                }\n                dataIndexSoFar += fieldData.size;\n                \n            }\n        }\n        \n        resultSet.blockNumber = data.blockNumber;\n        return resultSet;\n    }\n\n    getCopy() {\n        let query = new EthereumQuery(this.address);\n        query.eventLog = this.eventLog;\n        query.selectStatements = [... this.selectStatements];\n        query.joinClauses = [... this.joinClauses];\n        query.groupBy = [... this.groupBy];\n        query.fromBlockNumber = this.fromBlockNumber;\n        query.toBlockNumber = this.toBlockNumber;\n        query.limitSize = this.limitSize;\n        return query;\n    }\n\n    getJson() {\n        return {\n            address: this.address,\n            eventLog: this.eventLog.event,\n            selectStatements: [... this.selectStatements],\n            whereClauses: [... this.whereClauses],\n            joinClauses: [... this.joinClauses],\n            groupBy: [... this.groupBy],\n            fromBlockNumber: web3.utils.hexToNumber(this.fromBlockNumber),\n            toBlockNumber: this.toBlockNumber === undefined ? undefined : web3.utils.hexToNumber(this.toBlockNumber),\n            limitSize: this.limitSize,\n            distinct: this.distinct,\n        };\n    }\n}\n\nclass WhereClause {\n    constructor(argName, argValue, valueList=[]) {\n        this.name = argName;\n        this.value = argValue;\n        this.valueList = valueList;\n    }\n}\n\nclass JoinClause {\n    constructor(event, field) {\n        this.event = event;\n        this.field = field;\n    }\n}\n\nexport default EthereumQuery;\n","import EthereumQuery from './EthereumQuery.js';\nimport {SampleCreated} from './EthereumEvents.js';\nimport BackendQueryRunner from './BackendQueryRunner.js';\n\nconst runner = new BackendQueryRunner();\n\nclass BackendQuery extends EthereumQuery {\n    constructor(address) {\n        super(address);\n    }\n\n    /*\n    async executeQuery() {\n        let queries = [];\n        for (let i in this.whereClauses) {\n            let whereClause = this.whereClauses[i];\n            let {valueList} = whereClause;\n            if (valueList.length > 0) {\n                for (let j in valueList) {\n                    let query = this.getCopy();\n                    query.whereClauses = this.whereClauses.filter(\n                        x =>\n                            x.value !== undefined);\n                    query.where(whereClause.name, valueList[j]);\n                    console.log('making of copy = ', this.getJson(), query.getJson());\n                    queries.push(query);\n                }\n            } \n        }\n\n        if (queries.length === 0) {\n            return super.executeQuery();\n        }\n        console.log('queries = ', queries);\n\n        let results  = [];\n        for (let i in queries) {\n            results = [... results, ... await queries[i].executeQuery(true)];;\n        }\n        return results;\n    }\n    */\n\n    executeQuery(useBackend=true) { \n        return new Promise((resolve, reject) => {\n            if (window.isNFT) {\n                // thenn we dont have a query\n                return resolve([]);\n            }\n            runner.submit(this.getJson())\n                .then(resolve);\n        });\n    }\n}\n\nexport default BackendQuery;\n","/**\n * Blocking query\n */\nconst MAX_QUERIES = 4;\nconst SLEEP_TIME = 20;\n\nclass BackendQueryRunner {\n    constructor() {\n        this.runningQueries = new Set();\n    }\n\n    submit(queryJson) {\n        return new Promise(async (resolve, reject) => {\n            while (this.runningQueries.size >= MAX_QUERIES) {\n                await this.sleep(SLEEP_TIME);\n            }\n\n            this.runningQueries.add(queryJson);\n\n            let url = \"/search\";\n            url = \"https://zequencer.io\" + url;\n            if (window.LOCAL_BACKEND_FLAG && window.location.hostname === \"localhost\") {\n                url = \"/search\";\n            }\n            fetch(url , {\n                method: 'POST',\n                body: JSON.stringify(queryJson),\n                \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                }\n            })\n                .then(resp => resp.json())\n                .then(resp => {\n                    this.removeQuery(queryJson);\n                    resolve(resp || []);\n                })\n                .catch(err => {\n                    console.log(err);\n                    this.removeQuery(queryJson);\n                });\n        });\n    }\n\n    removeQuery(queryJson) {\n        this.runningQueries.delete(queryJson);\n    }\n\n    sleep(time) {\n        return new Promise((resolve, reject) => {\n            setTimeout(resolve, time);\n        });\n    }\n}\n\nexport default BackendQueryRunner;\n","import BackendQuery from 'decentralized/BackendQuery.js';\nimport {ethers} from 'ethers';\nimport {NewUnofficialSporeCreated} from 'decentralized/EthereumEvents.js';\nimport {web3} from 'decentralized/web3.js';\n\nexport const getSporeWithHash = async (sporeHash, dataHash) => {\n    let query = new BackendQuery(\"0xD810401bAb352E3D1a75b2799b4D66819C25E225\")\n        .from(NewUnofficialSporeCreated)\n        .where('sporeHash', sporeHash)\n        .where('dataHash', dataHash);\n\n    let unfiltered = await query.executeQuery();\n    return unfiltered[0];\n};\n\nexport const getSporeRemixes = async (collectionAddress, tokenId) => {\n    let query = new BackendQuery(\"0xD810401bAb352E3D1a75b2799b4D66819C25E225\")\n        .from(NewUnofficialSporeCreated);\n\n    let unfiltered = await query.executeQuery();\n\n    if (collectionAddress) {\n        query.where(\"collectionAddress\", collectionAddress.toLowerCase());\n    }\n    \n    if (tokenId !== undefined) {\n        if (tokenId.length > 10) {\n            // then we have a bignumber\n            let big = ethers.BigNumber.from(tokenId);\n            big = web3.utils.padLeft(big.toHexString(), 64).toLowerCase();\n            query.where(\"tokenId\", big);\n        } else {\n            let parsed = parseInt(tokenId);\n            query.where(\"tokenId\", isNaN(parsed) ? tokenId : parsed);\n        }\n    }\n\n    let results = await query.executeQuery();\n\n    let pend = getPending().filter(x => x.collectionAddress === collectionAddress && parseInt(x.tokenId) === parseInt(tokenId));\n\n    results = [...pend, ... results];\n    return results;\n};\n\nexport const getRemixByNumber = async (id) => {\n    let query = new BackendQuery(\"0xD810401bAb352E3D1a75b2799b4D66819C25E225\")\n        .from(NewUnofficialSporeCreated)\n        .where('sporeId', parseInt(id));\n\n    let results = await query.executeQuery();\n    return results[0];\n};\n\nexport const getRemixesMap = async () => {\n    let query = new BackendQuery(\"0xD810401bAb352E3D1a75b2799b4D66819C25E225\")\n        .from(NewUnofficialSporeCreated);\n\n    let unfiltered = await query.executeQuery();\n    let pending = getPending();\n    updatePending(pending, unfiltered);\n    unfiltered = [... unfiltered, ... pending];\n\n    let collections = {};\n    for (let result of unfiltered) {\n        let {collectionAddress, tokenId} = result;\n        collectionAddress = collectionAddress.toLowerCase();\n        if (!collections[collectionAddress]) {\n            collections[collectionAddress] = {};\n        }\n        if (!collections[collectionAddress][tokenId]) {\n            collections[collectionAddress][tokenId] = [];\n        }\n        collections[collectionAddress][tokenId].push(result);\n\n    }\n    return collections;\n};\n\n\n\nconst getPending = () => {\n    let pending = window.localStorage.getItem(\"pending-spores\");;\n    if (pending === null) {\n        pending = [];\n    } else {\n        pending = JSON.parse(pending);\n    }\n    for (let s of pending) {\n        s.sporeHash = s.recordingHash;\n    }\n    return pending;\n};\n\nconst updatePending = (pending, results) => {\n    let _pending = [];\n    for (let r of pending) {\n        let skip = false;\n        for (let result of results) {\n            if (r.recordingHash === result.sporeHash) {\n                skip=true;\n                break;\n            }\n        }\n        if (!skip) {\n            _pending.push(r);\n        }\n    }\n    window.localStorage.setItem(\"pending-spores\", JSON.stringify(_pending));\n};\n","/*\n    This file is part of Universal Sequencer.\n    Universal Sequencer is free software: you can redistribute it and/or modif\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Universal Sequencer is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport Tone from 'tone';\nimport ipfsClient from 'decentralized/Ipfs.js';\nvar bufferToArrayBuffer = require('buffer-to-arraybuffer');\n\nclass AudioUnit {\n    constructor(context=Tone.Master.context) {\n        this.duration = 0;\n        this.source = undefined;\n        this.buffer = undefined;\n        this.playbackRate = 1;\n        this.looping = false;\n        this.playSound.bind(this);\n        this.context = context;\n        this.seek.bind(this);\n        this.stopSound.bind(this);\n    }\n\n    dispose() {\n        if (this.source !== undefined) {\n            this.source.disconnect();\n        }\n        this.buffer = undefined;\n        this.source = undefined;\n    }\n\n    getContext() {\n        return this.context;\n    }\n\n    playSound(x, duration) {\n        if (x == undefined) {\n            x = 0;\n        }\n        if (this.source != undefined) {\n            this.source.stop();\n        }\n        this.source = Tone.Master.context.createBufferSource(); // creates a sound source\n        this.source.connect(Tone.Master.context.destination);       // connect the source to the context's destination (the speakers)\n        this.source.buffer = this.buffer;\n        this.source.playbackRate.value = this.playbackRate;\n        this.source.loop = false;\n        this.source.start(0, Math.max(0, x), duration);\n    }\n\n    seek(x) {\n        this.stopSound();\n        this.playSound(x);\n    }\n\n    stopSound() {\n        if (this.source != undefined) {\n            this.source.stop();\n        }\n    }\n\n    loadRawBuffer(buffer) {\n        this.buffer = buffer;\n        this.duration = buffer.duration;\n    }\n    \n    setBuffer(buffer) {\n        this.buffer = buffer;\n        this.duration = buffer.duration;\n    }\n}\n\nexport default AudioUnit;\n\n","export const sleep = (time) => {\n    return new Promise((resolve, reject) => {\n        setTimeout(resolve, time);\n    });\n}\n","import { createDecoder } from './minimp3-wasm.js';\nimport {sleep} from 'utils/sleep.js';\nimport Tone from 'tone';\n\nlet _counter=0;\nlet decoder;\n\nlet cache = {};\n\nlet mp3Recorder;\nlet results = {};\n\nconst decode = async (mp3Data, counter) => {\n    if (!mp3Recorder) {\n        mp3Recorder = new Worker(window.isNFT ? \"mp3Worker.js\" : \"/mp3Worker.js\");\n        mp3Recorder.onmessage = (e) => {\n            results[e.data.id] = e.data;\n        };\n    }\n    mp3Recorder.postMessage({mp3Data, isNFT: window.isNFT, id: counter});\n\n    while (!results[counter]) {\n        await sleep(100);\n    }\n    return results[counter];\n}\n\nexport const decodeMP3 = async (mp3Data) => {\n    const {decoded, sampleRate, position} = await decode(mp3Data, _counter++);\n    let ctxt = Tone.Master.context;\n    let channels = 2;\n    const _buffer = ctxt.createBuffer(channels, position/2, sampleRate); \n    const channelDataL = _buffer.getChannelData(0);\n    const channelDataR = channels === 2 ? _buffer.getChannelData(1) : null;\n    // int16 -> float32\n    for (let i = 0; i < decoded.length; i+=2) {\n      const l = decoded[i];\n      const r = decoded[i+1];\n      channelDataL[i/2] = l >= 32768 ? -(65536 - l) / 32768 : l / 32767;\n        if (channels === 2) {\n            channelDataR[i/2] = r >= 32768 ? -(65536 - r) / 32768 : r / 32767;\n        }\n    }\n    return _buffer;\n};\n\nexport const initMP3 = async (engine) => {\n    /*\n    let name = \"/completed_live_0bf4d6d54e4b03be05f1a24f090ee4d0_vocals.mp3\";\n    const res = await fetch(name);\n    const buffer = await res.arrayBuffer();\n    const mp3Data = new Uint8Array(buffer);\n    const decoder = await createDecoder(mp3Data, '/decoder.opt.wasm');\n    decoder.seek(0);\n    const results = decoder.decode(30);\n    let pcm = results.pcm;\n    console.log(pcm);\n    let ctxt = Tone.Master.context;\n    const _buffer = ctxt.createBuffer(2, pcm.length/2, results.samplingRate);\n    const channelDataL = _buffer.getChannelData(0);\n    const channelDataR = _buffer.getChannelData(1);\n    // int16 -> float32\n    for (let i = 0; i < pcm.length; i+=2) {\n      const l = pcm[i];\n      const r = pcm[i+1];\n      channelDataL[i/2] = l >= 32768 ? -(65536 - l) / 32768 : l / 32767;\n      channelDataR[i/2] = r >= 32768 ? -(65536 - r) / 32768 : r / 32767;\n    }\n    let sample = new Sample(NOT_UPLOADED_YET);\n    sample.audioBuffer = _buffer;\n    sample.needsSave = true;\n    // await sample.fetchAudio();\n    sample.tags = [];\n    sample.name = \"test\";\n    await engine.addSound(sample);\n    */\n};\n","import {decodeMP3} from 'utils/mp3.js';\nimport Tone from 'tone';\n\nconst bufferToArrayBuffer = require('buffer-to-arraybuffer');\n\nlet cache = {};\nexport const decodeAudioData = (blob, hash) => {\n    return new Promise(async (resolve, reject) => {\n        if (cache[hash]) {\n            return resolve(cache[hash]);\n        }\n        if (blob === undefined) {\n            reject();\n            return;\n        }\n        try {\n            try {\n                let sliced = blob.slice(0,4);\n                let type = new TextDecoder().decode(sliced);\n                if (type === \"RIFF\") {\n                    let r = await Tone.Master.context.decodeAudioData(blob);\n                    console.log('r =', r);\n                    if (hash) {\n                        cache[hash] = r;\n                    }\n                    resolve(r);\n                } else {\n                    let r = await decodeMP3(new Int8Array(blob));\n                    if (hash) {\n                        cache[hash] = r;\n                    }\n                    resolve(r);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        } catch (e) {\n            reject(e);\n        }\n    });\n};\n\nexport const clearDecodeCache = () => {\n    cache = {};\n};\n","import AudioUnit from 'engine/audio.js';\nimport React, {useRef, useCallback, useEffect, useState} from 'react';\nimport {decodeAudioData} from 'utils/decode.js';\nimport Tone from 'tone';\nimport ipfs from 'decentralized/Ipfs.js';\n\nconst bufferToArrayBuffer = require('buffer-to-arraybuffer');\n\nexport const useAudioPlayer = (hash) => {\n    let [audioPlayer, setAudioPlayer] = useState();\n    let playerRef = useRef();\n\n    const dispose = useCallback(() => {\n        if (audioPlayer) {\n            audioPlayer.dispose();\n        }\n    }, [audioPlayer]);\n\n    useEffect(() => {\n        if (playerRef.current) {\n            setAudioPlayer(undefined);\n        }\n        ipfs.getSound(hash, 10000000).then(\n            async blob => {\n                let arrayBuffer = bufferToArrayBuffer(blob);\n                let audioBuffer = await decodeAudioData(arrayBuffer, hash);\n                let player = undefined;\n                if (playerRef.current) {\n                    player = playerRef.current;\n                    player.stopSound();\n                } else {\n                    player = new AudioUnit(Tone.Master.context);\n                }\n                player.setBuffer(audioBuffer);\n                setAudioPlayer(player);\n                playerRef.current = player;\n            });\n    }, [hash, setAudioPlayer]);\n\n    return {\n        audioPlayer,\n        dispose\n    };\n};\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {truncate} from 'components/spore/AudioPlayer.js';\nimport { useEnsName } from 'wagmi';\nimport './ens.scss';\n\nconst ENSName = ({address}) => { \n    const { data, isError, isLoading } = useEnsName({\n        address\n    });\n\n    if (isLoading) return '';\n    console.log(\"NAME=%s for address=%s\", data, address);\n    return (\n        <span className=\"ens-name\">\n          {data === null ? truncate(address) : data}\n        </span>);\n};\n\nexport default ENSName;\n","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport PulseLoader from 'react-spinners/PulseLoader'\nconst WIDTH = 390;\n\nconst UnknownProgressBar = ({\n    text,\n    className=\"\",\n    width=WIDTH,\n    intervalTime=100,\n    intervalPiece=10}) => {\n    let [loadingProgress, setLoadingProgress] = useState(24);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setLoadingProgress(x => (x + intervalPiece) % 100);\n        }, intervalTime);\n        return () => clearInterval(interval);\n    }, []);\n    \n    let style = {\n        width: width * loadingProgress / 100.0\n    };\n    return (\n      <div className={\"progress-bar\" + className}>\n        <div style={{\n          borderRadius: \"35px\",\n          height: \"70px\",\n          width: \"70px\",\n          position: \"absolute\",\n          margin: \"auto\",\n          left: \"0\",\n          right: \"0\",\n          top: \"0\",\n          bottom: \"0\"}}>\n          <img style={{width: \"100%\"}} src='/spores-icon-glow.svg'></img>\n        </div>\n      </div>\n        // <div className={\"progress-bar \" + className}>\n        //   <div className=\"inner-progress-bar\">\n        //   <div className=\"progress\" style={style}/>\n        //     <div className=\"loading-text\">\n        //       {text} ...\n        //     </div>\n        //   </div>\n        // </div>\n    );\n};\n\nconst mapStateToProps = (state, props)=> {\n    return {\n    };\n};\n\n\nexport default connect(mapStateToProps, null)(UnknownProgressBar);\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {isMobile} from 'react-device-detect';\nimport {connect} from 'react-redux';\nimport './jolly.scss';\nimport './heatmap.scss';\n\nconst JollyRancherPlayer = ({width, spore, progress, height=110}) => { \n    let ref = useRef();\n    let loaded = useRef();\n\n    // TODO: need to wait for the iframe to fully load before sending this\n    // likely need a post message listener for \"zequencerProjectLoaded\"\n\n    useEffect(() => {\n        window.addEventListener(\"message\", onMessage, false);\n        return () => {\n            window.removeEventListener(\"message\", onMessage);\n        };\n    }, [spore]);\n\n    const onMessage = useCallback((e) => {\n        if (e.data === \"sporeIFrameLoaded\") {\n            // then we need to send it over\n            sendHeatmapHash();\n            loaded.current = true;\n        }\n    }, [spore]);\n\n    useEffect(() => {\n        if (loaded.current) {\n            console.log(\"spore.dataHash =\", spore.datahash, spore);\n            sendHeatmapHash();\n        }\n    }, [spore]);\n\n    const sendHeatmapHash = useCallback(() => {\n        console.log('sending hash', spore.dataHash);\n        if (ref.current && ref.current.contentWindow) {\n            if (spore) {\n                ref.current.contentWindow.postMessage({\n                    type: \"heatmapHash\",\n                    body: spore.dataHash\n                }, \"*\");\n            }\n        }\n    }, [spore]);\n\n    useEffect(() => {\n        if (ref.current && ref.current.contentWindow) {\n            if (spore) {\n                ref.current.contentWindow.postMessage({\n                    type: \"heatmapHash\",\n                    body: spore.dataHash\n                }, \"*\");\n            }\n        }\n    }, [spore]);\n\n    useEffect(() => {\n        if (ref.current && ref.current.contentWindow) {\n            ref.current.contentWindow.postMessage({\n                type: \"sporePosition\",\n                body: progress\n            }, \"*\");\n        }\n    }, [progress]);\n\n    useEffect(() => {\n        if (ref.current && ref.current.contentWindow) {\n            ref.current.contentWindow.postMessage({\n                type: \"heatmapSize\",\n                body: [width, 90]\n            }, \"*\");\n        }\n    }, [width]);\n       \n    return (\n        <iframe\n          ref={ref}\n          sandbox=\"allow-scripts allow-same-origin\"\n          allowtransparency=\"true\"\n          height={height}\n          width={width}\n          aria-describedby=\"spore\"\n          alt=\"spore.vision\"\n          //src={\"https://zequencer.io/ipfs/QmTh6hkgEGGLpVP5XANvDToWMmLNq1VFXcS4vXnCMjrefC/\"}\n          //src={\"https://zequencer.io/ipfs/QmTp5n1FsKeqEj4u8MGRScVY9BGkkWPiR3AEgqe8gvbTeE/\"}\n          src={\"https://zequencer.mypinata.cloud/ipfs/QmVvhZjnEJCBLs7SK2ED9xjbk7ZzjQQq4DHzfh7PJp9314/\"}\n          className=\"spore-heatmap zora-mediaObject css-hnzuw7 zora-mediaObject--mediaLoaded zora-mediaObject--isFullPage\"\n          style={{borderWidth: \"0px\"}}/>\n        );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JollyRancherPlayer);\n","/*\n    This file is part of Universal Sequences.\n    Universal Sequences is free software: you can redistribute it and/or modif\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Universal Sequences is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\nconst MIN_BRIGHTNESS = 170;\nconst brightCache = {};\nconst trackCache = {};\n\nclass Colors {\n    constructor() {\n    }\n\n    transparent(color, opacity) {\n        return color.slice(0, color.length-1) + ', ' + opacity + ')';\n    }\n\n    intToRGB(i){\n        var c = (i & 0x00FFFFFF)\n            .toString(16)\n            .toUpperCase();\n        \n        return \"#\" + \"00000\".substring(0, 6 - c.length) + c;\n    }\n\n    hueShift(c, shift) {\n        let {h, s, l} = getHSLFromString(c);\n        return getHSLString({h: h + shift, s, l});\n    }\n\n    warm(warmth, start=141, s=100) {\n        let h = start;\n        let l = 50;\n        return getHSLString({h: h - warmth, s, l});\n    }\n\n    compliment(c, rotate=2) {\n        let {h, s, l} = getHSLFromString(c);\n        if (h === 0) {\n            h++;\n        }\n        h += rotate*10 % 255;\n        let x = getHSLString({h, s, l});\n        return x;\n    }\n\n    saturate(c, factor, lightFactor=1) {\n        if (!c) {\n            return undefined;\n        }\n        if (c.startsWith(\"hsl\")) {\n            let {h, s, l} = getHSLFromString(c);\n            l *= lightFactor;\n            s = Math.min(s*factor, 100);\n            c = getHSLString({h, s, l});\n            return c;\n        } else {\n            let rgb = this.getRGB(c);\n            let {h, s, l} = RGBToHSL(rgb);\n            l *= lightFactor;\n            s = Math.min(s*factor, 100);\n            c = getHSLString({h, s, l});\n            return c;\n        }\n    }\n\n    brighten(c, factor) {\n        if (c.startsWith(\"hsl\")) {\n            let hsl = getHSLFromString(c);\n            hsl = brightenHSL(hsl, factor);\n            return getHSLString(hsl);\n        }\n        let cacheResult = brightCache[(c + '.' + factor)];\n        if (cacheResult) {\n            return cacheResult;\n        }\n        let r = Math.min(255, Math.floor(parseInt(c.slice(1, 3), 16) * factor));\n        let g = Math.min(255, Math.floor(parseInt(c.slice(3, 5), 16) * factor));\n        let b = Math.min(255, Math.floor(parseInt(c.slice(5), 16) * factor));\n\n        r = r.toString(16);\n        g = g.toString(16);\n        b = b.toString(16);\n\n        if (r.length === 1) {\n            r = '0' + r;\n        }\n\n        if (g.length === 1) {\n            g = '0' + g;\n        }\n\n        if (b.length === 1) {\n            b = '0' + b;\n        }\n\n        let x = '#' + r + g + b;\n        brightCache[c + '.' + factor] = x;\n        return x;\n\n    }\n\n    getBrightness(c) {\n        let rgb = this.getRGB(c);\n\n        let color = 0.299*rgb.r + 0.587*rgb.g + 0.114*rgb.b;\n        return color;\n    }\n\n    rawHSLToHex({h,s,l}) {\n        return hslToHex(h,s,l);\n    }\n\n    hslToHex(color) {\n        let {h,s,l} = getHSLFromString(color);\n        return hslToHex(h,s,l);\n    }\n\n    getRGB(c) {\n        let r = Math.floor(parseInt(c.slice(1, 3), 16)); \n        let g = Math.floor(parseInt(c.slice(3, 5), 16));\n        let b = Math.floor(parseInt(c.slice(5), 16));\n        return {r:r, g:g, b:b};\n    }\n}\n\nfunction RGBToHSL({r,g,b}) {\n    // Make r, g, and b fractions of 1\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    // Find greatest and smallest channel values\n    let cmin = Math.min(r,g,b),\n        cmax = Math.max(r,g,b),\n        delta = cmax - cmin,\n        h = 0,\n        s = 0,\n        l = 0;\n\n    if (delta == 0)\n        h = 0;\n    // Red is max\n    else if (cmax == r)\n        h = ((g - b) / delta) % 6;\n    // Green is max\n    else if (cmax == g)\n        h = (b - r) / delta + 2;\n    // Blue is max\n    else\n        h = (r - g) / delta + 4;\n\n    h = Math.round(h * 60);\n\n    // Make negative hues positive behind 360°\n    if (h < 0)\n        h += 360;\n\n    // Calculate lightness\n    l = (cmax + cmin) / 2;\n\n    // Calculate saturation\n    s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n\n    // Multiply l and s by 100\n    s = +(s * 100).toFixed(1);\n    l = +(l * 100).toFixed(1);\n\n    return {h, s, l};\n}\n\nfunction getHSLString({h, s, l}) {\n    return \"hsl(\" + h + \",\" + s + \"%,\" + l +\"%)\";\n}\n\nfunction getHSLFromString(str) {\n    str = str.substring(4);\n    let [hPart, sPart, lPart] = str.split(\",\");\n    let index = sPart.indexOf(\"%\");\n    sPart = sPart.substring(0, index);\n    index = lPart.indexOf(\"%\");\n    lPart = lPart.substring(0, index);\n    return {\n        h: parseFloat(hPart),\n        s: parseFloat(sPart),\n        l: parseFloat(lPart),\n    };\n\n}\n\nfunction brightenHSL({h, s, l}, factor) {\n    return {\n        h,\n        s,\n        l: l* factor\n    };\n}\n\nfunction hslToHex(h, s, l) {\n  l /= 100;\n  const a = s * Math.min(l, 1 - l) / 100;\n  const f = n => {\n    const k = (n + h / 30) % 12;\n    const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    return Math.round(255 * color).toString(16).padStart(2, '0');   // convert to Hex and prefix \"0\" if needed\n  };\n  return `#${f(0)}${f(8)}${f(4)}`;\n}\n\n\n\nexport default Colors;\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport Colors from 'components/Colors.js';\nimport Tone from 'tone';\nconst colors = new Colors();\nwindow.heatRoot = 1.1;\n//window.bucketSize = 4;\nwindow.bucketSize = 1;\nwindow.saturation = 80;\n\nconst SporeHeatMap = ({heat, width=54, height=10, center=false, saturation=200, duration}) => { \n    // lets start with slider data\n    if (!heat) {\n        return '';\n    }\n\n    // first process the heat\n    let bucketSize = width === 54 ? window.bucketSize*2 : window.bucketSize;\n    let buckets = getBuckets(heat, bucketSize);\n    let max = Math.max(...Object.values(buckets))*.75;\n    let maxStep = Math.max(...Object.keys(buckets));\n    /*\n    if (duration) {\n        let oldMaxStep = maxStep;\n        maxStep = (duration/new Tone.Time('32n'))/(bucketSize);\n        console.log(\"max step=%s old max step=%s dur=%s\", maxStep, oldMaxStep, duration);\n    }\n    */\n    return (\n        <svg className=\"heatmap\" width={width} height={10}>\n          {Object.keys(buckets).map(\n              step => <rect\n                        width={width > 80 ? 4 : 1}\n                        height={center ? height* Math.min(1, Math.pow(buckets[step], window.heatRoot)/max) : height}\n                        opacity={Math.min(1, Math.pow(buckets[step], window.heatRoot)/max)}\n                        fill={colors.warm(190*Math.min(1, Math.pow(buckets[step], window.heatRoot)/max), 190,\n                                          Math.min(1, Math.pow(buckets[step], window.heatRoot)/max)*saturation)}\n                        x={width*step/maxStep}\n                        y={center ? height/2 - height* Math.min(1, Math.pow(buckets[step], window.heatRoot)/max)/2 : 0}/>)}\n        </svg>);\n};\n\nconst getBuckets = (heat, bucketSize) => {\n    let sliderData = heat.sliderChanges;\n    let modeData = heat.modeChanges;\n    let regions = sliderData.map(x => Math.round((isNaN(x[0]) ? 0 : x[0]) / bucketSize));\n    let buckets = {};\n    for (let x of regions) {\n        if (!buckets[x]) {\n            buckets[x] = 0;\n        }\n        buckets[x]+=1;\n    }\n\n    regions = modeData.map(x => Math.round((isNaN(x[0]) ? 0 : x[0]) / bucketSize));\n    let max = Math.max(...Object.values(regions));\n    for (let x of regions) {\n        if (!buckets[x]) {\n            buckets[x] = 0;\n        }\n        buckets[x]+=16;\n        let q=0;\n        for (let i=x+1; i < max; i++) {\n            if (regions.some(x => x === i)) {\n                break;\n            }\n            if (!buckets[i]) {\n                buckets[i] = 0;\n            }\n            buckets[i] += (50+q);\n            q+=8;\n        }\n    }\n    return buckets;\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SporeHeatMap);\n","import React, { useState, useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React, { Component, useCallback } from 'react';\nimport './buttons.scss';\n\nconst PlayButton = (props) => {\n    const onPlayClicked = useCallback((e) => {\n        e.stopPropagation();\n        e.target.parentNode.blur();\n        e.target.blur();\n        e.currentTarget.blur();\n        props.play();\n    }, [props.isPlaying]);\n\n    return (\n        <div\n          style={props.style || {}}\n          onClick={onPlayClicked}\n          onMouseDown={(e) => e.stopPropagation()}\n          onTouchStart={(e) => e.stopPropagation()}\n          className=\"play-btn-wrapper\">\n          <div\n            style={{\n                borderColor: props.isPlaying ? props.color: \"transparent transparent transparent \" + props.color,\n            }}\n            className={props.isPlaying ? \"play-btn playing\" : \"play-btn \"}/>\n        </div>\n    );\n}\n\n\nexport default PlayButton;\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport ENSName from 'components/ens/ENSName.js';\nimport UnknownProgressBar from 'components/progressbar/UnknownProgressBar.js';\nimport JollyRancherPlayer from './JollyRancherPlayer.js';\nimport {isMobile} from 'react-device-detect';\nimport SporeHeatMap from \"components/spore/SporeHeatMap.js\";\n\nimport {useInterval} from \"components/hooks/useInterval.js\";\nimport PlayButton from \"components/buttons/PlayButton.js\";\nimport {connect} from 'react-redux';\nimport Tone from 'tone';\n\nconst AudioPlayer = ({\n    songName=\"\",\n    artist=\"\",\n    heat,\n    externalURL,\n    creator,\n    audioUnit,\n    store,\n    spore,\n    preset,\n    setPreset,\n    sporeMetadata\n}) => { \n\n    let WIDTH=isMobile ? 230 : 500;\n    let ref = useRef();\n    let [playing, setPlaying] = useState(false);\n    let [playTime, setPlayTime] = useState(undefined);\n    let startPoint = useRef(0);\n    let [progress, setProgress] = useState(0);\n    let [mouseSeeker, setMouseSeeker] = useState();\n\n    useEffect(() => {\n        setPlaying(false);\n        setProgress(0);\n    }, [spore]);\n\n    useEffect(() => {\n        setPlaying(false);\n        setProgress(0);\n        setPlayTime(undefined);\n        startPoint.current = 0 ;\n    }, [spore, setPlaying, setProgress, setPlayTime]);\n\n    const onTick = useCallback(() => {\n        let diff = Tone.Master.context.currentTime - playTime;\n        if (playing) {\n            setProgress((diff + startPoint.current) / audioUnit.duration);\n        }\n    }, [playing, setProgress, playTime]);\n\n    useInterval(onTick, 40);\n\n    const onClickPlay = useCallback(() => {\n        if (playing) {\n            startPoint.current = startPoint.current + Tone.Master.context.currentTime - playTime;\n            audioUnit.stopSound();\n        } else {\n            audioUnit.playSound(startPoint.current);\n        }\n        setPlaying(!playing);\n        //setProgress(0);\n        setPlayTime(Tone.Master.context.currentTime);\n    }, [playing, setProgress, setPlaying, audioUnit, playTime]);\n\n    const mouseSeek = useCallback((e) => {\n        e.stopPropagation();\n        setMouseSeeker(undefined);\n        if (!playing) {\n            setPlaying(true);\n        }\n        let x = e.clientX - ref.current.getBoundingClientRect().left;\n        let percentage = x / WIDTH;\n        let startTime = percentage * audioUnit.duration;\n        audioUnit.playSound(startTime);\n        startPoint.current = startTime;\n        setPlayTime(Tone.Master.context.currentTime);\n        setMouseSeeker(x);\n        setTimeout(() => {\n            setMouseSeeker(undefined);\n        }, 300);\n    }, [playing, setPlaying, setPlayTime, setMouseSeeker, audioUnit]);\n\n    useEffect(() => {\n        return () => {\n            if (audioUnit) {\n                audioUnit.stopSound();\n            }\n        }\n    }, [audioUnit]);\n\n    progress = Math.min(100, progress);\n\n    return (\n        <div className={audioUnit ? \"audio-player\" : \"audio-player disabled\"}>\n          {audioUnit &&\n           <PlayButton isPlaying={playing}\n                       play={onClickPlay}/>}\n          <div\n            ref={ref}\n            onClick={mouseSeek}\n            className=\"play-time-and-slider\">\n            {!audioUnit && <div className=\"progress-container\">\n                           <UnknownProgressBar />\n                         </div>}\n            {sporeMetadata && <JollyRancherPlayer\n                        setPreset={setPreset}\n                                width={WIDTH}\n                        preset={preset}\n                        progress={progress}\n                        store={store}\n                        spore={sporeMetadata}\n                      />}\n           <div className=\"play-time\">\n              {audioUnit && <div className=\"time\">\n              {formatTime(progress*audioUnit.duration)} / {formatTime(audioUnit.duration)}\n                            </div>}\n              {creator && <div className=\"creator\">\n                            Remixed by <span className=\"wallet-address\"><a target=\"_blank\" href={\"https://etherscan.io/address/\"+creator}><ENSName address={creator}/></a></span>\n                          </div>}\n            </div>\n            <div className=\"song-title-and-author\">\n              <div className=\"song-title\">\n                {songName}\n              </div>\n              <div className=\"song-creator\">\n                Original by <span className=\"creator-name\"><a target=\"_blank\" href={externalURL}>{artist}</a></span>\n              </div>\n            </div>\n          </div>\n        </div>);\n}\n\nexport const truncate = (creator) => {\n    return creator.slice(0, 4) + '...' + creator.slice(-4);\n};\n\nconst formatTime = (time) => {\n    if (!time) {\n        time = 0;\n    }\n    let minutes = Math.floor(time/60);\n    let seconds = Math.floor(time - minutes * 60);\n    if (seconds < 10) {\n        seconds = '0' + seconds;\n    }\n\n    return `${minutes}:${seconds}`;\n\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\n            /*\n            <div\n              onClick={mouseSeek}\n              ref={ref} className=\"play-slider\">\n              {mouseSeeker && <div style={{left: mouseSeeker}} className=\"mouse-seeker\"/>}\n              <SporeHeatMap duration={audioUnit.duration} center={true} height={8} heat={heat} width={WIDTH}/>\n            <div\n              style={{width: WIDTH * progress}}\n              className=\"play-slider-inner\">\n            </div>\n            */\n \n\n/*\n\n\n*/\nexport default connect(mapStateToProps, mapDispatchToProps)(AudioPlayer);\n","import React, { useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {\n    EmailIcon,\n    EmailShareButton,\n    FacebookMessengerIcon,\n    FacebookMessengerShareButton,\n    RedditIcon,\n    RedditShareButton,\n    TelegramIcon,\n    TelegramShareButton,\n    TwitterIcon,\n    TwitterShareButton,\n    WhatsappIcon,\n    WhatsappShareButton,\n  } from \"react-share\";\n  import { BsShareFill } from 'react-icons/bs';\n  import { FaRegClipboard } from 'react-icons/fa';\nimport { isMobile } from 'react-device-detect';\n\n  const ShareButton = ({url, type, lowerGradInverted, buttonBgColor}) => {\n    const [showShareModal, setShowModal] = useState(false);\n    const [isCopied, setIsCopied] = useState(false);  \n    const shareUrl = url;\n    const title = \"Check out this song on Spores!\";\n\n    function copyText() {\n        {navigator.clipboard.writeText(url)};\n        setIsCopied(true);\n    }\n\n    return (\n        <>\n            <div className='share-button pushable' onClick={() => setShowModal(true)}>\n                <BsShareFill style={{fill: isMobile ? lowerGradInverted : buttonBgColor}}/>\n            </div>\n            {showShareModal && <div className='share-button-modal'>\n                <div className='share-upper-container'>\n                    <div><p>{type === \"remix\" ? \"Share Remix\" : \"Share Song\"}</p></div>\n                    <div onClick={() => setShowModal(false)} className=\"share-close-button\">x</div>\n                </div>\n                <div className='share-url-field'>\n                    <p>{url}</p>\n                    <FaRegClipboard className=\"pushable\" style={{color: isCopied ? \"#84ff98\" : \"white\", cursor: \"pointer\"}} onClick={copyText}/>\n                </div>\n                <div className='share-icon-container'>\n                    <div className='sharing-icon pushable'>\n                        <TwitterShareButton\n                            url={shareUrl}\n                            title={title}>\n                            <TwitterIcon size={32} round/>\n                        </TwitterShareButton>\n                    </div>\n                    <div className='sharing-icon pushable'>\n                        <FacebookMessengerShareButton\n                            url={shareUrl}\n                            quote={title}>\n                            <FacebookMessengerIcon size={32} round/>\n                        </FacebookMessengerShareButton>\n                    </div>\n                    <div className='sharing-icon pushable'>\n                        <RedditShareButton\n                            url={shareUrl}\n                            title={title}>\n                            <RedditIcon size={32} round/>\n                        </RedditShareButton>\n                    </div>\n                    <div className='sharing-icon pushable'>\n                        <TelegramShareButton\n                            url={shareUrl}\n                            title={title}>\n                            <TelegramIcon size={32} round/>\n                        </TelegramShareButton>\n                    </div>\n                    <div className='sharing-icon pushable'>\n                        <WhatsappShareButton\n                            url={shareUrl}\n                            title={title}\n                            separator=\":: \">\n                            <WhatsappIcon size={32} round/>\n                        </WhatsappShareButton>\n                    </div>\n                    <div className='sharing-icon pushable'>\n                        <EmailShareButton\n                            url={shareUrl}\n                            subject={title}>\n                            <EmailIcon size={32} round/>\n                        </EmailShareButton>\n                    </div>\n                </div>\n            </div>}\n            \n        </>\n    )\n  }\n\n  const mapStateToProps = (state, props) => {\n    return {\n    };\n  };\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n    };\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(ShareButton);","import React, { useEffect, useCallback, useState} from 'react';\nimport {useAudioPlayer} from 'components/hooks/useAudioPlayer.js';\nimport AudioPlayer from 'components/spore/AudioPlayer.js';\nimport {connect} from 'react-redux';\nimport './player.scss';\nimport ShareButton from '../nft-jacker/ShareButton';\n\nconst RemixPlayer = ({remix, setRemix, songName, artist, externalURL, shareLink}) => { \n    let {audioPlayer, dispose} = useAudioPlayer(remix.sporeHash);\n    return (\n        <div className=\"remix-player\">\n          <div className=\"pushable close-button\" onClick={() => setRemix(undefined)}>x</div>\n          <ShareButton\n            url={shareLink || (\"spores.vision/play/\" + remix.collectionAddress + \"/\" + remix.tokenId + \"/\" + remix.sporeId)}\n            type={\"remix\"}/>\n          <AudioPlayer\n            externalURL={externalURL}\n            artist={artist}\n            songName={songName}\n            creator={remix.creator}\n            audioUnit={audioPlayer}\n            spore={remix}\n            sporeMetadata={remix} />\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemixPlayer);\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {getSporeRemixes} from 'spores/getSporeRemixes.js';\nimport {getSporeHashIcon} from 'spores/getSporeHashIcon.js';\nimport hashAvatar from 'hash-avatar';\nimport svgToTinyDataUri from 'mini-svg-data-uri';\nimport ENSName from 'components/ens/ENSName.js';\nimport {connect} from 'react-redux';\nimport { isMobile } from 'react-device-detect';\nimport './remixlist.scss'\n\nconst RemixList = ({\n    creatorsToIgnore=[],\n    spTokenId,\n    setRemixToPlay,\n    remixToPlay,\n    collectionAddress,\n    tokenId,\n    clear\n}) => {\n    let [remixData, setRemixData] = useState([]);\n    const [noRemixes, setNoRemixes] = useState();\n\n    useEffect(() => {\n        if (collectionAddress && tokenId) {\n            getSporeRemixes(collectionAddress, tokenId)\n                .then(result => {\n                    result = result.filter(x => !creatorsToIgnore.includes(x.creator));\n                    setRemixData(result);\n                    setNoRemixes(result.length === 0 ? true : false);\n                });\n        }\n    }, [setRemixData, collectionAddress, tokenId]);\n\n    return (\n        <div className='remix-list-container'>\n            {isMobile && <div className='remix-close-button-container'><div className=\"pushable close-button\" onClick={() => clear()}>x</div></div>}\n            {noRemixes && <div className='no-remix-div'>No remixes have been made for this song yet. You could be the first...</div>}\n            {remixData.map(x => \n                <RemixListItem\n                  spTokenId={spTokenId}\n                  isPlaying={x === remixToPlay}\n                  setRemixToPlay={setRemixToPlay}\n                  clear={clear}\n                  data={x}/>\n            )}\n        </div>\n        );\n};\n\nexport const RemixListItem = ({clear, isPlaying, data, setRemixToPlay, spTokenId}) => {\n    let hashedIcon = svgToTinyDataUri(getSporeHashIcon(data.sporeHash, {size: 60}));\n    let className = \"remix-list-item-container pushable\";\n    if (isPlaying) {\n        className += \" playing\";\n    }\n    return(\n        <div\n          onClick={() => {\n              setRemixToPlay(data);\n              if (isMobile) {\n                  clear();\n              }\n          }}\n          className={className}>\n            <div className='remix-icon' style={{backgroundImage: 'url(\"' + hashedIcon + '\")'}}></div>\n            <div className='remix-info-container'>\n              {!data.sporeId ? <div className='remix-number'>Remix (Pending)</div>\n               : <div className='remix-number'>Remix #{data.sporeId}</div>}\n              <div className='remix-created-on'>Mixed on {spTokenId ? spTokenId : \"SP-\" + data.spTokenId}</div>\n              <div className='remix-address'>By {data.sporeId ? <ENSName address={data.creator}/> : \"You\"}</div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n    return {\n    };\n  };\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n    };\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(RemixList);\n","import color from \"tinycolor2\"\nimport hash from \"string-hash\"\n\nexport const getSporeHashIcon = (uid, {size}) => {\n    const n = hash(uid)\n    const c1 = color({ h: n % 360, s: 0.95, l: 0.5 })\n    const c1_ = c1.toHexString()\n    const c2 = c1.triad()[1].toHexString()\n\n    return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <svg width=\"${size}px\" height=\"${size}px\" viewBox=\"0 0 61 61\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n      <defs>\n      <circle cx=\"30.658\" cy=\"30.9537\" r=\"30\" fill=\"url(#paint0_radial_151_38)\" fill-opacity=\"0.58\"/>\n      <radialGradient id=\"paint0_radial_151_38\" cx=\"0\" cy=\"0\" r=\"1\" gradientUnits=\"userSpaceOnUse\" gradientTransform=\"translate(30.658 30.9537) rotate(90) scale(30)\">\n            <stop stop-color=\"${c1_}\"/>\n            <stop offset=\"1\" stop-color=\"${c2}\" stop-opacity=\"0\"/>\n        </radialGradient>\n      </defs>\n      <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <rect id=\"Rectangle\" fill=\"url(#paint0_radial_151_38)\" x=\"0\" y=\"0\" width=\"80\" height=\"80\"></rect>\n      </g>\n    </svg>`\n}","import { ethers } from \"ethers\";\nimport React, { useEffect, useCallback, useState} from 'react';\nimport {sleep} from 'utils/sleep.js';\n\nexport const useTokensOnSale = () => {\n    const [tokensOnSale, setTokensOnSale] = useState([]);\n\n    useEffect(() => {\n        // should query all of these along w buy-now price/whether theres an ask\n        getTokensOnSale().then(setTokensOnSale);\n        // for now just assume theyre for sale and for 0.4 eth\n    }, [setTokensOnSale]);\n\n    return {tokensOnSale, setTokensOnSale};\n};\n\nlet cache = undefined;\nlet loading = false;\nexport const getTokensOnSale = () => {\n    return new Promise(async (resolve) => {\n        if (loading) {\n            let i=0;\n            while (!cache && i++ < 15) {\n                await sleep(500);\n\n            }\n        }\n        if (cache) {\n            resolve(cache);\n            return;\n        }\n        loading=true;\n        let baseURL = \"https://zequencer.io\";\n        if (window.LOCAL_BACKEND_FLAG && window.location.hostname.includes(\"localhost\")) {\n            baseURL = \"\";\n        }\n\n        let url = baseURL + \"/nft-info\";\n        fetch(url)\n            .then(r => r.json())\n            .then(r => {\n                cache = r;\n                resolve(r);\n            });\n    });\n};\n\n/*\nconst getTokensOnSale = async () => {\n    let tokens = [];\n    for (let i=1; i <= 20; i++) {\n        tokens.push(await mockToken(i));\n    }\n    return tokens;\n};\n\nconst mockToken = (tokenId) => {\n    return new Promise(async (resolve) => {\n    let url = \"https://zora.co/_next/data/xBYNv8INPmebM7S5e_TsX/collections/0x7269c1A1b8aBA1390770193771F92bD722c6a77B/\" + tokenId + \".json\";\n    fetch(url)\n        .then(r => r.json())\n        .then(r => {\n            let isSold = r.ownerAddress === \"0x0Fb5e3b3F254cBDcCD69d31bcB0e92B83d381A0A\";\n            let {v3Ask} = r;\n            let askPrice = v3Ask ? r.ethPrice : undefined;\n            return {\n                tokenId: tokenId,\n                askPrice,\n                thumbnail: \"/sp-thumbnail-\" + tokenId + \".png\"\n            };\n        });\n    });\n};\n\n*/\n","import React, {useCallback, useEffect} from 'react';\nimport { AsksV11__factory } from \"@zoralabs/v3/dist/typechain/factories/AsksV11__factory\";\nimport { ethers } from \"ethers\";\nimport mainnetZoraAddresses from \"@zoralabs/v3/dist/addresses/4.json\"; // Mainnet addresses, 4.json would be Rinkeby Testnet \nimport { IERC721__factory } from \"@zoralabs/v3/dist/typechain/factories/IERC721__factory\";\nimport { IERC20__factory } from \"@zoralabs/v3/dist/typechain/factories/IERC20__factory\";\nimport { ZoraModuleManager__factory } from \"@zoralabs/v3/dist/typechain/factories/ZoraModuleManager__factory\";\nimport { useSigner } from 'wagmi';\n\n\nexport const useMintTest = () => {\n    useEffect(() => {\n        approve();\n    }, []);\n\n    const approve = useCallback(async () => {\n        const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n        // Prompt user for account connections\n        let accounts = await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n\n        const moduleManagerAddress = mainnetZoraAddresses.ZoraModuleManager;\n        const ownerAddress = \"0xdc94060e37dcb8816188508536595019c8F0C98a\";// Owner of the assets (my test acct)\n\n        const nftContractAddress = \"0x9efe0c372310e179104aa5f478e20355a2538e43\"; // zequencer test\n        const erc721Contract = IERC721__factory.connect(nftContractAddress, signer);\n\n        // Initialize ERC20 currency demo contract\n        // Initialize Zora V3 Module Manager contract \n        const moduleManagerContract = ZoraModuleManager__factory.connect(mainnetZoraAddresses.ZoraModuleManager, signer);\n        const erc721TransferHelperAddress = mainnetZoraAddresses.ERC721TransferHelper;\n        let approved = await erc721Contract.isApprovedForAll(\n            ownerAddress, // NFT owner address\n            erc721TransferHelperAddress // V3 Module Transfer Helper to approve\n        );\n        console.log(\"token transfer module approved?\", approved);\n        \n        // If the approval is not already granted, add it.\n        if (approved === false) {\n            // Notice: Since this interaction submits a transaction to the blockchain it requires an ethers signer.\n            // A signer interfaces with a wallet. You can use walletconnect or injected web3.\n            console.log(\"approving token transfer module\");\n            await erc721Contract.setApprovalForAll(erc721TransferHelperAddress, true);\n        }\n\n        // Approving Asks v1.1\n        approved = await moduleManagerContract.isModuleApproved(ownerAddress, mainnetZoraAddresses.AsksV1_1);\n        console.log(\"ASKS ARE APPROVED? \", approved);\n\n        if (approved === false) {\n            console.log(\"approving asks module\");\n            await moduleManagerContract.setApprovalForModule(mainnetZoraAddresses.AsksV1_1, true);\n        }\n\n        // create ask\n        const askModuleContract = AsksV11__factory.connect(mainnetZoraAddresses.AsksV1_1, signer);\n        let ask = await askModuleContract.askForNFT(nftContractAddress, 1);\n        if (ask.askPrice.toNumber() === 0) {\n            // create ask\n            const askPrice = ethers.utils.parseEther(\"0.001\") // 100 ETH Sale Price\n//            const ownerAddress = \"0xF296178d553C8Ec21A2fBD2c5dDa8CA9ac905A00\"; // Owner of the assets\n            const findersFeeBps = \"0\"; // 2% Finders Fee (in BPS)\n            \n            // Calling Create Ask\n            // Notice: Since this interaction submits a transaction to the blockchain it requires a signer.\n            // A signer interfaces with a wallet. You can use walletconnect or injected web3.\n            console.log(\"creating ask\");\n            await askModuleContract.createAsk(\n                nftContractAddress,\n                \"3\", // Token Id\n                askPrice,\n                \"0x0000000000000000000000000000000000000000\", // 0 address for ETH sale\n                ownerAddress,\n                findersFeeBps\n            );\n        }\n    }, []);\n\n};\n","import React, {useCallback, useRef} from 'react';\nimport { useSigner } from 'wagmi';\nimport { ethers } from \"ethers\";\nimport mainnetZoraAddresses from \"@zoralabs/v3/dist/addresses/1.json\"; // Mainnet addresses, 4.json would be Rinkeby Testnet \nimport { AsksV11__factory } from \"@zoralabs/v3/dist/typechain/factories/AsksV11__factory\";\n\nexport const useBuy = (contract=\"0x7269c1a1b8aba1390770193771f92bd722c6a77b\") => {\n    const { data: signer, isError, isLoading } = useSigner();\n    let signerRef =  useRef(signer);\n    signerRef.current = signer;\n\n    /*\n      * uncomment to test on rinkeby\n    contract = \"0xe81f2369e74debd9874466d3e31aecf700aed872\";\n    */\n\n    const buy = useCallback(async (tokenId, fillAmount) => {\n        try {\n            /*\n             * Uncomment to test on rinkeybey\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            // Prompt user for account connections\n            let accounts = await provider.send(\"eth_requestAccounts\", []);\n            const signer = provider.getSigner();\n\n            console.log(\"signer accounts=\", signer, accounts);\n\n            fillAmount = undefined;\n            tokenId = 3;\n            */\n\n            tokenId = tokenId.toString();\n            const askModuleContract = AsksV11__factory.connect(mainnetZoraAddresses.AsksV1_1, signerRef.current);\n            let ask = await askModuleContract.askForNFT(contract, tokenId);\n            fillAmount = fillAmount ? ethers.parseEth(fillAmount.toString()) : ask.askPrice.toString();\n            const finder = \"0x0000000000000000000000000000000000000000\"; // 0 address for finder\n            \n            let tx = await askModuleContract.fillAsk(\n                contract,\n                tokenId, // Token Id\n                \"0x0000000000000000000000000000000000000000\", // 0 address for ETH sale\n                fillAmount,\n                finder,\n                {\n                    value: fillAmount\n                }\n            );\n            return tx;\n        } catch (e) {\n            console.log(\"error = \", e);\n            return false;\n        }\n    }, [contract, signer]);\n\n    return buy;\n};\n","\nimport { ConnectButton, darkTheme } from '@rainbow-me/rainbowkit';\nimport React, { useEffect, useCallback, useState} from 'react';\nimport PulseLoader from 'react-spinners/PulseLoader'\nimport {connect} from 'react-redux';\nimport './finalize.scss';\nimport {useMintTest} from './test.js';\nimport {useBuy} from 'components/hooks/useBuy.js';\nimport {useBalance} from 'wagmi';\nimport {useSigner} from 'wagmi';\n\nconst FinalizePurchase = ({account, _askPrice, _thumbnail, name, tokensOnSale, onCompletedBuy, onCancel, cart, onDone, contractAddress}) => { \n    let balanceData = useBalance({addressOrName: account});\n    let {data} = useSigner();\n    let balance = balanceData.data && parseFloat(balanceData.data.formatted);\n    let [finished, setFinished] = useState(false);\n    let [error, setError] = useState();\n    let [current, setCurrent] = useState(cart[0]);\n    let [waitingForWallet, setWaitingForWallet] = useState(false);\n    let [confirming, setConfirming] = useState(false);\n\n    const buy = useBuy(contractAddress);\n   \n    let thumbnail = _thumbnail || tokensOnSale.find(x => x.tokenId === current).thumbnail;\n    let number = cart.indexOf(current) + 1;\n    let total = cart.length;\n\n    let obj = tokensOnSale && tokensOnSale.find(x => x.tokenId === current);\n    let askPrice = _askPrice || obj.askPrice;\n\n    const completeBuy = useCallback(() => {\n        console.log('complete buy called');\n        let tokenId = current;\n        // we wanna buy this one\n        setWaitingForWallet(true);\n        buy(tokenId).then(\n            x => {\n                if (x) {\n                    setConfirming(x.hash);\n                    x.wait(1).then(x => {\n                        setFinished(true);\n                        setConfirming(false);\n                        if (number === cart.length) {\n                            // we have truly completed\n                        } else {\n                            setCurrent(cart[number]);\n                        }\n                        onCompletedBuy(tokenId);\n                    });\n                    setWaitingForWallet(false);\n                    setError(undefined);\n                } else {\n                    setError(\"You rejected the transaction. Please try again or continue browsing.\");\n                }\n                setWaitingForWallet(false);\n            });\n    }, [current, setCurrent, number, setWaitingForWallet, cart]);\n\n    if (finished || confirming) {\n        return (\n        <div className=\"finalize-modal-drop\">\n          <video\n            playsInline\n            muted\n            className={confirming ? \"confirming shrooms-video\" : \"shrooms-video\"}\n            autoPlay\n            loop\n            src={\"/mushrooms-medium.mp4\"}/>\n          <div\n            onClick={(e) => e.stopPropagation()}\n            className=\"finalize-modal\">\n            <div onClick={onDone} className=\"close-button\">x</div>\n            <div className=\"logo-container\">\n              <img className=\"spores-logo-black\" src=\"/spores-logo-black.svg\"/>\n            </div>\n            <div className=\"sp-modal-title\">\n              <div className=\"sp-title\">\n                {confirming ? \"Completing Purchase\" : (name ? \"You`ve Bought the \" + name : \"You\\'ve Bought the SP-\" + current)}\n                \n              </div>\n            </div>\n            {confirming ? <div className=\"sp-modal-body\">\n              <p>\n                Your new Spore Player should arrive in your wallet in a few moments.\n              </p>\n                            <div className=\"pulse-container\">\n              <PulseLoader\n                sizeUnit={\"px\"}\n                size={10}\n                color={'#ffffff'}\n                loading={true}\n              />\n                            </div>\n                          </div> :\n             <div className=\"sp-modal-body\">\n               <p>\n                 Congrats, you can now dose yourself with some cyber psilocybin.\n               </p>\n             {!name && <div\n                 onClick={() => window.open(\"/sp/\" + current, '_newtab')}\n                 className=\"pushable open-your-player\">\n                 Open your New Player\n                       </div>}\n             </div>}\n            </div>\n        </div>\n        );\n    }\n\n    return (\n        <div onClick={onCancel} className=\"finalize-modal-drop\">\n          <div\n            onClick={(e) => e.stopPropagation()}\n            className=\"finalize-modal\">\n            <div onClick={onCancel} className=\"close-button\">x</div>\n            <div className=\"logo-container\">\n              <img className=\"spores-logo-black\" src=\"/spores-logo-black.svg\"/>\n            </div>\n            <div className=\"sp-modal-title\">\n              <div className=\"sp-title\">\n                Buy {name ? name : `SP-${current}`}\n              </div>\n              {cart.length > 1 && <div className=\"purchase-part\"><span className=\"part-number\">{number}</span> of <span className=\"total-parts\">{total}</span></div>}\n            </div>\n            <div className=\"sp-modal-body\">\n              <p>\n                 You're about to buy this Spore Player for a fixed price.\n              </p>\n              <div className=\"thumbnail-and-price\">\n                <img src={thumbnail}/>\n                <div className=\"token-price\">\n                  <div className=\"price-label\">\n                    PRICE\n                  </div>\n                  <div className=\"price-eth\">\n                    {askPrice} ETH\n                  </div>\n                </div>\n              </div>\n              {error && <div className=\"error-text\"><img src=\"/error-icon.svg\"/> {error}</div>}\n              {waitingForWallet ?\n               <div className=\"waiting-for-wallet\">\n                 <span className=\"inner\">\n                   <span className=\"helper-text\">\n                     Waiting for Wallet \n                   </span>\n                   <PulseLoader\n                     sizeUnit={\"px\"}\n                     size={10}\n                     color={'#ffffff'}\n                     loading={true}\n                   />\n                 </span>\n               </div> : balance < parseFloat(askPrice) ?\n               <div className=\"low-balance complete-buy\">\n                 Insufficient balance for purchase.\n               </div> :\n               !data ? <div className=\"connect-wallet-container\"><ConnectButton\n                         accountStatus=\"address\" \n                         showBalance={{ smallScreen: false, largeScreen: false }}\n                         label=\"Connect Wallet\"\n                       /> </div>: \n               <div\n                 onClick={() => completeBuy()}\n                 className=\"complete-buy\">\n                 Complete Purchase \n               </div>}\n            </div>\n          </div>\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FinalizePurchase);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {useTokensOnSale} from '../hooks/useTokensOnSale.js';\nimport {connect} from 'react-redux';\nimport FinalizePurchase from './FinalizePurchase.js';\nimport { useAccount } from 'wagmi';\n\nconst BuyPlayerFLow = ({name, setBuying, thumbnail, askPrice, setCompletedBuy, tokenId}) => { \n    const {data, isError, isLoading } = useAccount();\n    console.log(\"acc data =\", data);\n    let {setTokensOnSale, tokensOnSale} = useTokensOnSale();\n\n    if (!tokensOnSale || tokensOnSale.length === 0) {\n        return '';\n    }\n    return (\n        <FinalizePurchase\n          name={name}\n          _askPrice={askPrice}\n          _thumbnail={thumbnail}\n          account={data && data.address}\n          onCompletedBuy={() => setCompletedBuy(true)}\n          onDone={() => {\n              setBuying(false);\n              \n          }}\n          tokensOnSale={tokensOnSale} onCancel={() => setBuying(false)} cart={[tokenId]} setCart={() => 0}/>\n    );\n};\n\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BuyPlayerFLow);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './glossary.scss';\n\nconst Glossary = (props) => { \n  return (\n          <div className=\"glossary-items\">\n            <div\n              className=\"helper-item item-1\">\n              <p className=\"glossary-number\">\n                1\n              </p>\n              <p className=\"glossary-term\">\n                CHANGE MODE\n              </p>\n              <p className=\"glossary-definition\">\n                PRESS TO SWITCH TO LOOP MODE, ALLOWING YOU TO LOOP THE TRACK AND ACCESS SECONDARY SLIDERS*.\n              </p>\n            </div>\n            <div\n              className=\"helper-item item-2\">\n              <p className=\"glossary-number\">\n                2\n              </p>\n              <p className=\"glossary-term\">\n                JUICE / LOOP*\n              </p>\n              <p className=\"glossary-definition\">\n                ADJUST THE AMOUNT OF \"JUICE\", THAT THE EXTERNAL LOOP CONTRIBUTES, OR LOOP A SECTION OF THE TRACK.\n              </p>\n            </div>\n            <div\n              className=\"helper-item item-3\">\n              <p className=\"glossary-number\">\n                3\n              </p>\n              <p className=\"glossary-term\">\n                PITCH UP / PITCH DOWN*\n              </p>\n              <p className=\"glossary-definition\">\n                SLIDE TO RAISE THE PITCH AND SPEED UP, OR LOWER THE PITCH AND SLOW DOWN THE TRACK.\n              </p>\n            </div>\n            <div className=\"helper-item item-4\">\n              <p className=\"glossary-number\">\n                4\n              </p>\n              <p className=\"glossary-term\">\n                STUTTER / SPACE*\n              </p>\n              <p className=\"glossary-definition\">\n                CONTROL STUTTERING WHICH REPEATS THE TRACK OR ADD VASTNESS TO IT WITH SPACE.\n              </p>\n            </div>\n            <div className=\"helper-item item-5\">\n              <p className=\"glossary-number\">\n                5\n              </p>\n              <p className=\"glossary-term\">\n                ACOUSTIFY / GATE*\n              </p>\n              <p className=\"glossary-definition\">\n                RAISE THE GUITAR LEVELS OR CONTROL THE GATE EFFECT AT DIFFERENT RATES.\n              </p>\n            </div>\n            <div className=\"helper-item item-6\">\n              <p className=\"glossary-number\">\n                6\n              </p>\n              <p className=\"glossary-term\">\n                CHANGE LOOP\n              </p>\n              <p className=\"glossary-definition\">\n                SWITCH TO THE NEXT LOOP TO INTERWEAVE INTO THE TRACK.\n              </p>\n            </div>\n          </div>);\n \n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Glossary);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport PlayButton from '../buttons/PlayButton.js';\nimport {connect} from 'react-redux';\n\nconst SimpleControls = ({playerRef}) => { \n    let [playing, setPlaying] = useState(false);\n    let [started, setStarted] = useState(false);\n    useEffect(() => {\n        window.addEventListener(\"message\", onMessage);\n    }, [setPlaying, setStarted]);\n\n    const play = useCallback(() => {\n        console.log('sending toggle play');\n        playerRef.current.contentWindow.postMessage({\n            type: \"toggle-play\",\n            body: true\n        }, \"*\");\n    }, []);\n\n    const onMessage = useCallback((e) => {\n        if (e.data.type === \"jacker-status\") {\n            let playing = parseInt(e.data.body);\n            setPlaying(playing);\n            setStarted(true);\n        }\n    }, [setPlaying, setStarted]);\n    if (!started) {\n        return;\n    }\n    return (<div className=\"simple-controls\">\n              <PlayButton play={play} isPlaying={playing}/>\n            </div>\n           );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SimpleControls);\n","import React, { memo, useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\n\nwindow.RATIO = .3;\nconst HEIGHT = 50;\nconst SongWaveform = memo(({progress, waveform, isWaveformRainbow=true, width=330}) => { \n\n    if (!waveform) {\n        return '';\n    }\n\n    let parts = [];\n    for (let i=0; i < waveform.length - 4; i+=4) {\n        let height = Math.pow(waveform[i], window.RATIO)*(4/window.RATIO);\n        let p = {\n            height,\n            y: HEIGHT/2 - height/2,\n            r: waveform[i+1],\n            g: waveform[i+2],\n            b: waveform[i+3]\n        };\n        parts.push(p);\n    }\n    progress /= 100;\n    return (\n        <svg\n          width={width}\n          height={HEIGHT}\n          className={!isWaveformRainbow ? \"song-waveform  monochrome\" : \"song-waveform\"}>\n          {parts.map((part, i) =>\n              <rect\n                className={progress >= i / parts.length ? \"elapsed\" : \"\"}\n                x={i*(width/parts.length)}\n                y={part.y}\n                width={2}\n                height={part.height}\n                fill={!isWaveformRainbow ? 'white' : `rgb(${part.r}, ${part.g}, ${part.b})`}/>)}\n        </svg>\n    );\n});\n\nexport default SongWaveform;\n","import React, {useCallback, useEffect} from 'react';\n\n\nexport const useSporesMessageHandler = (type, callback) => {\n    useEffect(() => {\n        window.addEventListener(\"message\", onMessage, false);\n        return () => window.removeEventListener(\"message\", onMessage, false);\n    }, [type]);\n\n    const onMessage = useCallback((e) => {\n        if (e.data.type === type) {\n            callback(e.data.body);\n        }\n    }, [type]);\n};\n","import BackendQuery from 'decentralized/BackendQuery.js';\nimport {ethers} from 'ethers';\nimport {SampleTagged, SampleCreated} from 'decentralized/EthereumEvents.js';\nimport {web3} from 'decentralized/web3.js';\n\nconst GUILD_SAMPLES = \"0xc77d4e72dF7D0Bf96488eF543253af537fEb8737\";\n\nexport const getSampleInfo = async (id) => {\n    let query = new BackendQuery(GUILD_SAMPLES)\n        .from(SampleCreated)\n        .where(\"ipfsHash\", id);\n\n    let unfiltered = await query.executeQuery();\n\n    console.log(\"unfilteeded=\", unfiltered);\n\n    let item = unfiltered[0];\n    let tagsQuery = new BackendQuery(GUILD_SAMPLES)\n        .from(SampleTagged)\n        .where(\"ipfsHash\", id);\n\n    let tagResults = await tagsQuery.executeQuery();\n    console.log(\"TAG RESULTS=\", tagResults);\n    return {\n        ... item,\n        ... tagResults[0]\n    };\n};\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport SongWaveform from 'components/waveform/SongWaveform.js';\nimport {useSporesMessageHandler} from 'components/hooks/useSporesMessageHandler.js';\nimport {getSampleInfo} from 'spores/samples.js';\nimport './sample.scss';\n\nconst SampleInfo = ({playerRef}) => { \n    let [currentSample, setCurrentSample] = useState();\n    let [sampleInfo, setSampleInfo] = useState();\n    let [sampleWaveform, setSampleWaveform] = useState();\n\n    useSporesMessageHandler(\"sample-changed\", setCurrentSample);\n    useSporesMessageHandler(\"sample-waveform\", setSampleWaveform);\n\n    useEffect(() => {\n        if (currentSample) {\n            getSampleInfo(currentSample[0]).then(setSampleInfo);\n        }\n    }, [currentSample]);\n\n    const goToPrevious = useCallback(() => {\n        playerRef.current.contentWindow.postMessage({type: \"previous-shuffle-sample\", body: \"yo\"}, \"*\");\n    }, []);\n\n    const goToNext = useCallback(() => {\n        playerRef.current.contentWindow.postMessage({type: \"next-shuffle-sample\", body: \"yo\"}, \"*\");\n    }, []);\n\n    return (\n        <div className=\"sample-info\">\n          <div className=\"name-and-arrows\">\n            <div className=\"sample-name\">{sampleInfo && sampleInfo.title}</div>\n            <div className=\"arrows\">\n              <div\n                onClick={goToPrevious}\n                className=\"arrow-btn pushable\"/>\n              <div\n                onClick={goToNext}\n                className=\"arrow-btn flip pushable\"/>\n            </div>\n          </div>\n          {sampleWaveform && <SongWaveform width={200} waveform={sampleWaveform}/>}\n        </div>);\n};\n\nexport default SampleInfo;\n","export const CHILL_RX_COLLECTION = '0x48D22d2cADD5FfED166747Ddd26d80fff84417aB';\nexport const CHAOS_COLLECTION = \"0x8427e46826a520b1264b55f31fcb5ddfdc31e349\";\nexport const TWINS_COLLECTION = \"0x47595d0a091686ca15732edadf532dc174fe2893\";\n","import {NEW_SEQUENCE} from 'constants/action-types.js';\nimport {SET_PLAYLIST_LOADED} from 'constants/action-types.js';\nimport {SET_PENDING_SPORES} from 'constants/action-types.js';\nimport {SET_SECONDS_REMAINING} from 'constants/action-types.js';\nimport {SET_USED_CHEAT_CODE} from 'constants/action-types.js';\nimport {SET_SHOW_PLAYLIST_MENU} from 'constants/action-types.js';\nimport {SET_CURRENT_PLAYLIST_SONG} from 'constants/action-types.js';\nimport {SET_DROPPED_SAMPLES} from 'constants/action-types.js';\nimport {SET_OBJECT_DRAGGING} from 'constants/action-types.js';\nimport {SET_RECENTLY_ADDED_SOUNDS} from 'constants/action-types.js';\nimport {SET_SHOW_FORMANT_PRESETS} from 'constants/action-types.js';\nimport {SET_PLANAR} from 'constants/action-types.js';\nimport {SET_PLANAR_GRADIENT_COLOR} from 'constants/action-types.js';\nimport {SET_PLANAR_OPACITY} from 'constants/action-types.js';\nimport {SET_RESOLUTION} from 'constants/action-types.js';\nimport {SET_SEQUENCER_ENGINE} from 'constants/action-types.js';\nimport {SET_VIEW_MODE} from 'constants/action-types.js';\nimport {SET_ALTERNATE_VIEW_MODE} from 'constants/action-types.js';\nimport {SET_DETAILS_VIEW} from 'constants/action-types.js';\nimport {SET_DECENTRALIZED} from 'constants/action-types.js';\nimport {SET_SELECTOR_MODE} from 'constants/action-types.js';\nimport {SET_NUMBER_PATTERNS} from 'constants/action-types.js';\nimport {SET_CURRENT_PATTERN} from 'constants/action-types.js';\nimport {SET_CURRENT_STEP} from 'constants/action-types.js';\nimport {SET_CURRENT_AND_GLOBAL_STEPS} from 'constants/action-types.js';\nimport {SET_CURRENT_GLOBAL_STEP} from 'constants/action-types.js';\n\n// tracks\nimport {NEW_TRACK} from 'constants/action-types.js';\n\n// samples\nimport {SET_SAMPLE} from 'constants/action-types.js';\n\n// animation triggers \nimport {START_TRIGGER_TRACK} from 'constants/action-types.js';\nimport {STOP_TRIGGER_TRACK} from 'constants/action-types.js';\n\n// sample packs\nimport {SET_SAMPLE_PACK} from 'constants/action-types.js';\nimport {ADD_SAMPLE_PACK} from 'constants/action-types.js';\nimport {REMOVE_SAMPLE_PACK} from 'constants/action-types.js';\n\nimport {DRAG_SAMPLE} from 'constants/action-types.js';\nimport {DRAG_EFFECT} from 'constants/action-types.js';\nimport {DRAG_PATTERN} from 'constants/action-types.js';\n\nimport {MOUSE_DOWN} from 'constants/action-types.js';\nimport {DRAG_TOGGLE} from 'constants/action-types.js';\nimport {DRAG_STEP_TRANSPOSE} from 'constants/action-types.js';\nimport {COMMAND_DOWN} from 'constants/action-types.js';\n\nimport {TRACK_RECORDING} from 'constants/action-types.js';\nimport {TRACK_PREPARING_TO_RECORD} from 'constants/action-types.js';\n\nimport {SET_TRACK_STEPS} from 'constants/action-types.js';\nimport {SET_TRACK_FILLS} from 'constants/action-types.js';\nimport {SET_TRACK_PIANO_ROLL_STEPS} from 'constants/action-types.js';\nimport {SET_ALL_TRACK_STEPS} from 'constants/action-types.js';\n\nimport {SET_SELECTED_GROUP} from 'constants/action-types.js';\nimport {SET_SELECTED_TRACK} from 'constants/action-types.js';\nimport {SET_SELECTED_STEP} from 'constants/action-types.js';\nimport {SET_HOVERED_STEP} from 'constants/action-types.js';\n\nimport {SET_STEP_DRAGGING} from 'constants/action-types.js';\nimport {SET_STEP_DATA_DRAGGING} from 'constants/action-types.js';\nimport {SET_STEP_AND_DATA_DRAGGING} from 'constants/action-types.js';\nimport {SET_STEP_TO_COPY} from 'constants/action-types.js';\n\nimport {SET_TRACK_VOLUME} from 'constants/action-types.js';\nimport {SET_TRACK_MUTED} from 'constants/action-types.js';\nimport {SET_TRACK_SOLO} from 'constants/action-types.js';\n\nimport {SET_GROUP_VOLUME} from 'constants/action-types.js';\nimport {SET_GROUP_MUTED} from 'constants/action-types.js';\n\nimport {SET_QUANTIZED} from 'constants/action-types.js';\nimport {SET_IS_RECORDING} from 'constants/action-types.js';\nimport {SET_IS_RECORDING_EXPANDED} from 'constants/action-types.js';\nimport {SET_IS_RECORDING_MIX} from 'constants/action-types.js';\nimport {SET_IS_PLAYING} from 'constants/action-types.js';\nimport {SET_IS_PLAYING_MIX} from 'constants/action-types.js';\n\nimport {SET_SEND_MUTED} from 'constants/action-types.js';\n\nimport {SET_SELECTION} from 'constants/action-types.js';\n\nimport {SET_SEQUENCE_NAME} from 'constants/action-types.js';\n\nimport {SET_SELECTED_EFFECT} from 'constants/action-types.js';\n\nimport {SET_EFFECT_PARAMETER_VALUE} from 'constants/action-types.js';\n\nimport {SET_EFFECTS_PANE_OPTION} from 'constants/action-types.js';\n\nimport {SET_SELECTED_PARAMETER} from 'constants/action-types.js';\nimport {SET_SHOW_LOGIN} from 'constants/action-types.js';\nimport {SET_USER_TOKEN} from 'constants/action-types.js';\nimport {SET_SIGNING_UP} from 'constants/action-types.js';\n\nimport {SET_SELECTED_PARAMETER_FLASHING} from 'constants/action-types.js';\n\nimport {SET_MIXES} from 'constants/action-types.js';\nimport {SET_CURRENT_MIX} from 'constants/action-types.js';\nimport {SET_ERASING_AUTOMATION} from 'constants/action-types.js';\n\nimport {SET_TRACK_SEND_VOLUME} from 'constants/action-types.js';\n\nimport {SET_TRACK_FOCUSED} from 'constants/action-types.js';\n\nimport {SET_YEAR_SELECTED} from 'constants/action-types.js';\nimport {SET_TAGS_SELECTED} from 'constants/action-types.js';\nimport {SET_STYLES_SELECTED} from 'constants/action-types.js';\nimport {SET_COUNTRIES_SELECTED} from 'constants/action-types.js';\nimport {SET_VIDEOS_SELECTED} from 'constants/action-types.js';\nimport {SET_HIERARCHY_ROOT} from 'constants/action-types.js';\nimport {SET_HIERARCHY_TREE} from 'constants/action-types.js';\nimport {SET_SHOW_YEAR_SLIDER} from 'constants/action-types.js';\nimport {SET_SHOW_COUNTRIES} from 'constants/action-types.js';\nimport {SET_SHOW_VIDEOS} from 'constants/action-types.js';\nimport {SET_SHOW_STYLES} from 'constants/action-types.js';\nimport {SET_SHOW_TAGS} from 'constants/action-types.js';\nimport {SET_SHOW_CHORD_FILTER} from 'constants/action-types.js';\nimport {SET_CHORD_SELECTED} from 'constants/action-types.js';\n\nimport {SET_IS_DRAGGING_DURATION} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_SELECTION} from 'constants/action-types.js';\nimport {SET_SELECTED_PIANO_ROLL_STEPS} from 'constants/action-types.js';\n\nimport {SET_SEARCH_RESULTS_SAMPLES} from 'constants/action-types.js';\n\nimport {SET_SELECTED_CHORD_SAMPLE} from 'constants/action-types.js';\nimport {SET_STEPS_TO_COPY} from 'constants/action-types.js';\n\nimport {SET_LOADING_SEQUENCE} from 'constants/action-types.js';\n\nimport {SET_EASY_PATTERN_TO_COPY} from 'constants/action-types.js';\nimport {SET_SAMPLE_AUDITIONING} from 'constants/action-types.js';\n\nimport {SET_LAST_MIDI_KEY_MAPPED} from 'constants/action-types.js';\nimport {SET_TRACK_IS_ENABLED} from 'constants/action-types.js';\n\nimport {SET_SELECTED_SAMPLE_TAG} from 'constants/action-types.js';\n\nimport {SET_TRANSPOSE_DRAGGING} from 'constants/action-types.js';\n\nimport {SET_MASTER_VOLUME} from 'constants/action-types.js';\n\nimport {SET_USER_VIEW_MODE} from 'constants/action-types.js';\nimport {SET_CURRENT_USER_MIX} from 'constants/action-types.js';\nimport {SET_USER_HAS_EDITS_TO_SAVE} from 'constants/action-types.js';\n\nimport {SET_PATTERN_TO_EDIT_COLOR} from 'constants/action-types.js';\nimport {SET_PATTERN_COLOR} from 'constants/action-types.js';\n\nimport {SET_COMPACT_MODE} from 'constants/action-types.js';\nimport {SET_SHOW_LFOS} from 'constants/action-types.js';\nimport {SET_SHOW_ENVELOPES} from 'constants/action-types.js';\n\nimport {SET_TRACKS_TO_RESAMPLE} from 'constants/action-types.js';\n\nimport {SET_PROJECT_AUTOMATION_MODE} from 'constants/action-types.js';\n\nimport {SET_STEPS_SELECTION} from 'constants/action-types.js';\nimport {SET_SELECTED_STEPS} from 'constants/action-types.js';\nimport {SET_STEP_NUMBER_DRAGGING_FROM} from 'constants/action-types.js';\n\nimport {SET_SEQUENCE_PATTERN_LOCKED} from 'constants/action-types.js';\nimport {SET_SEQUENCE_PATTERN_LOCKS} from 'constants/action-types.js';\n\nimport {SET_TRACK_PATTERN_LOCKED} from 'constants/action-types.js';\nimport {SET_TRACK_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {SET_EFFECT_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {UPDATE_STEPS_FOR_ALL_TRACKS} from 'constants/action-types.js';\nimport {SET_LFO_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {SET_ENVELOPE_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_PAGINATION} from 'constants/action-types.js';\n\nimport {SET_IS_RESAMPLING} from 'constants/action-types.js';\nimport {SET_RESAMPLE_DURATION} from 'constants/action-types.js';\n\nimport {SET_KEY_MAPPINGS} from 'constants/action-types.js';\nimport {SET_PAD_MAPPINGS} from 'constants/action-types.js';\n\nimport {SET_SHOW_SEQUENCE_MODAL} from 'constants/action-types.js';\n\nimport {SET_MULTI_PARAMETER_SLIDER} from 'constants/action-types.js';\n\nimport {SET_SHOW_MODS_MODAL} from 'constants/action-types.js';\n\nimport {SET_SEQUENCE_ROLLING} from 'constants/action-types.js';\n\nimport {SET_TRACK_EFFECTS_CHAIN} from 'constants/action-types.js';\n\nimport {SET_SHOW_SEQUENCES} from 'constants/action-types.js';\nimport {SET_SHOW_PRESETS} from 'constants/action-types.js';\nimport {SET_SHOW_INSTRUMENTS} from 'constants/action-types.js';\nimport {SET_TRACK_ROLLING} from 'constants/action-types.js';\n\nimport {SET_Z_INDEX_HACK} from 'constants/action-types.js';\n\nimport {SET_LOADED_TRACKS} from 'constants/action-types.js';\nimport {SET_BPM} from 'constants/action-types.js';\nimport {SET_RESAMPLE_MASTER} from 'constants/action-types.js';\n\nimport {SET_YOUTUBE_SEARCH_TERMS} from 'constants/action-types.js';\n\nimport {SET_AUDIO_INPUT_SOURCE} from 'constants/action-types.js';\n\nimport {SET_WAVEFORM_SELECTION} from 'constants/action-types.js';\nimport {SET_WAVEFORM_SELECTION_END} from 'constants/action-types.js';\n\nimport {SET_MIDI_MAP_MODE} from 'constants/action-types.js';\nimport {SET_PARAMETER_MIDI_MAP_SELECTION} from 'constants/action-types.js';\nimport {DELETE_PARAMETER_MIDI_MAPPING} from 'constants/action-types.js';\nimport {SET_PARAMETER_MIDI_MAPPING} from 'constants/action-types.js';\n\nimport {SET_ACTION_MIDI_MAP_SELECTION} from 'constants/action-types.js';\nimport {DELETE_MIDI_MAPPINGS} from 'constants/action-types.js';\nimport {SET_ACTION_MIDI_MAPPING} from 'constants/action-types.js';\n\nimport {SET_LATENCY} from 'constants/action-types.js';\n\nimport {SET_SPOTLIGHT_TRACKS} from 'constants/action-types.js';\n\nimport {SET_CLOCK_TYPE} from 'constants/action-types.js';\nimport {SET_CLOCK_TICK} from 'constants/action-types.js';\nimport {SET_CONNECTION_STATUS} from 'constants/action-types.js';\nimport {SET_CONNECTED_USER_NAME} from 'constants/action-types.js';\nimport {SET_PLAY_SCHEDULED} from 'constants/action-types.js';\nimport {SET_AVAILABLE_USERS_TO_SYNC} from 'constants/action-types.js';\n\nimport {SET_THEME} from 'constants/action-types.js';\nimport {SET_SHOW_THEME_GRID} from 'constants/action-types.js';\n\nimport {SET_SEARCH_SORT_BY} from 'constants/action-types.js';\n\nimport {SET_MIDI_EFFECT_DRAGGING} from 'constants/action-types.js';\n\nimport {SET_SHOW_TRACK_EFFECTS} from 'constants/action-types.js';\n\nimport {SET_SHOW_CONVOLVER_MODAL} from 'constants/action-types.js';\nimport {SET_SHOW_PASSWORD_MODAL} from 'constants/action-types.js';\nimport {SET_PASSWORD_MODAL_CALLBACK} from 'constants/action-types.js';\n\nimport {SET_SHOW_SHARE_SEQUENCE_MODAL} from 'constants/action-types.js';\n\nimport {HIDE_ALL_EFFECTS} from 'constants/action-types.js';\n\nimport {SET_EFFECT_COLLAPSED} from 'constants/action-types.js';\n\nimport {SET_CONTEXTUAL_HELP} from 'constants/action-types.js';\n\nimport {SET_SELECTED_LFO} from 'constants/action-types.js';\nimport {SET_SELECTED_ENVELOPE} from 'constants/action-types.js';\nimport {SET_SIDEBAR_COLLAPSED} from 'constants/action-types.js';\n\nimport {SET_MIX_EVENTS} from 'constants/action-types.js';\n\nimport {SET_SHOW_GROUPS} from 'constants/action-types.js';\n\nimport {SET_CURRENT_SUB_SEQUENCE} from 'constants/action-types.js';\nimport {SET_SUB_SEQUENCES} from 'constants/action-types.js';\n\nimport {SET_ALL_TRACK_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {SET_ALL_LFO_LOCKS} from 'constants/action-types.js';\nimport {SET_ALL_ENVELOPE_LOCKS} from 'constants/action-types.js';\n\nimport {SET_MIX_VIEW_MODE} from 'constants/action-types.js';\nimport {SET_SUB_SEQUENCE_FADE} from 'constants/action-types.js';\n\nimport {SET_SAMPLE_SLICES} from 'constants/action-types.js';\n\nimport {SET_SELECTED_ARRANGEMENT_EVENTS} from 'constants/action-types.js';\n\nimport {SET_SHOW_DATE_SAMPLED} from 'constants/action-types.js';\nimport {SET_DATE_SAMPLED} from 'constants/action-types.js';\n\nimport {SET_EFFECT_PARAMETER_VALUES} from 'constants/action-types.js';\n\nimport {SET_TRACK_PANNING} from 'constants/action-types.js';\nimport {SET_GROUP_PANNING} from 'constants/action-types.js';\nimport {SET_SENDS_PANNING} from 'constants/action-types.js';\n\nimport {SET_SELECTED_RECORD} from 'constants/action-types.js';\nimport {SET_2D_SELECTION} from 'constants/action-types.js';\nimport {SET_SIMILAR_SOUNDS_TO_FIND} from 'constants/action-types.js';\nimport {SET_SHOW_SAMPLES_2D} from 'constants/action-types.js';\nimport {SET_LAST_NOTE_PLAYED} from 'constants/action-types.js';\nimport {SET_SIDEBAR_VIEW_MODE} from 'constants/action-types.js';\nimport {SET_DISCOGS_SELECTED} from 'constants/action-types.js';\nimport {SET_SELECTED_FOLDER} from 'constants/action-types.js';\nimport {SET_SELECTED_PRESET} from 'constants/action-types.js';\nimport {SET_HAS_CHANGES_TO_FOLDERS} from 'constants/action-types.js';\n\nimport {SET_CURSOR_STEP} from 'constants/action-types.js';\nimport {SET_CURSOR_TRACK} from 'constants/action-types.js';\nimport {SET_CURSOR_SHOW} from 'constants/action-types.js';\nimport {SET_FOLDER_DRAGGING} from 'constants/action-types.js';\nimport {SET_PRESET_DRAGGING} from 'constants/action-types.js';\nimport {SET_SAMPLE_DRAGGING} from 'constants/action-types.js';\nimport {SET_EFFECTS_CHAIN_TO_SHOW} from 'constants/action-types.js';\nimport {SET_EFFECTS_CHAINS_TO_SHOW} from 'constants/action-types.js';\nimport {SET_SUB_SEQUENCE_MUTED} from 'constants/action-types.js';\nimport {SET_TRACK_FROZEN} from 'constants/action-types.js';\nimport {SET_TRACK_TO_FREEZE} from 'constants/action-types.js';\nimport {SET_FROZEN_TRACK_PLAYING} from 'constants/action-types.js';\nimport {SET_FROZEN_TRACKS} from 'constants/action-types.js';\nimport {SET_FROZEN_TRACKS_PLAYING} from 'constants/action-types.js';\nimport {SET_SELECTED_ONSETS} from 'constants/action-types.js';\n\nimport {SET_SINGLE_STEP_TO_DRAG} from 'constants/action-types.js';\nimport {SET_STEP_NUMBER_DRAGGED_TO} from 'constants/action-types.js';\nimport {SET_SEARCH_RESULTS_START} from 'constants/action-types.js';\nimport {SET_SHOW_STEP_OPTIONS} from 'constants/action-types.js';\nimport {SET_MASTER_STEP_TOGGLES} from 'constants/action-types.js';\nimport {SET_PARAMETERS_TO_RECORD} from 'constants/action-types.js';\nimport {SET_ONSET_THRESHOLD} from 'constants/action-types.js';\nimport {SET_SHOW_ONSETS} from 'constants/action-types.js';\n\nimport {SET_SELECTED_GUILD} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_DRAG_OFFSET} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_NOTES} from 'constants/action-types.js';\n\nimport {SET_PENDING_TRANSACTIONS} from 'constants/action-types.js';\nimport {SET_COMMAND_INPUT} from 'constants/action-types.js';\nimport {SET_COMMAND_PREFIX} from 'constants/action-types.js';\nimport {SET_VI_MODE} from 'constants/action-types.js';\nimport {SET_TRACK_WARP} from 'constants/action-types.js';\nimport {SET_SUB_SEQUENCE_WARPS} from 'constants/action-types.js';\n\nimport {SET_ARRANGEMENT_SELECTION} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_MOUSE_X} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_AUTOMATION_TO_SHOW} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_LOOPING} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_SELECTED_ROWS} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_LOOP_SELECTED} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_ROW_SELECTIONS} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_ZOOM} from 'constants/action-types.js';\n\nimport {SET_SELECTED_SEQUENCE} from 'constants/action-types.js';\nimport {SET_EXPLORE_MIXER_EFFECT} from 'constants/action-types.js';\nimport {SET_EXPLORE_EQ_EFFECT} from 'constants/action-types.js';\nimport {SET_SELECTED_SEND_EFFECT} from 'constants/action-types.js';\nimport {SET_INSTRUMENT_TYPE_DRAGGING} from 'constants/action-types.js';\n\nimport {SET_TRACK_IS_LOADING} from 'constants/action-types.js';\n\nimport {SET_PIANO_ROLL_CURSOR} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_X_SCALE} from 'constants/action-types.js';\nimport {SET_TOTAL_ARRANGEMENT_LENGTH} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_BOTTOM_HEIGHT} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_BOTTOM_MODE} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_BOTTOM_RESIZING} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_PATTERN_DRAGGING} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_PATTERN_START_STEP} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_CURSOR_STEP} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_PATTERN_RESIZING} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_BROWSER_MODE} from 'constants/action-types.js';\nimport {SET_SAMPLE_TO_EXPLORE} from 'constants/action-types.js';\nimport {SET_EFFECT_RACK_NODE_POSITION} from 'constants/action-types.js';\nimport {SET_ANNOTATION_DRAGGING} from 'constants/action-types.js';\n\nimport {SET_TRACK_AUTOMATION_DEVICE} from 'constants/action-types.js';\nimport {SET_TRACK_AUTOMATION_SUB_DEVICE} from 'constants/action-types.js';\nimport {SET_TRACK_AUTOMATION_RACK_DEVICE} from 'constants/action-types.js';\nimport {SET_TRACK_AUTOMATION_PARAMETER} from 'constants/action-types.js';\nimport {SET_SHOW_AUTOMATION} from 'constants/action-types.js';\nimport {SET_PARAMETER_AUTOMATIONS} from 'constants/action-types.js';\n\nimport {SET_ACTIONS_REMAINING} from 'constants/action-types.js';\nimport {SET_TIME_REMAINING} from 'constants/action-types.js';\n\nimport {SET_SHOW_PIANO_ROLL} from 'constants/action-types.js';\nimport {SET_SELECTED_RACK_SUB_TRACK} from 'constants/action-types.js';\nimport {DELETE_AUTOMATIONS_FOR_PARAMETERS} from 'constants/action-types.js';\nimport {SET_AUTOMATION_GUIDE_POINT} from 'constants/action-types.js';\nimport {SET_AUTOMATION_POINT_DRAGGING} from 'constants/action-types.js';\nimport {SET_AUTOMATION_POINT_HAS_MOVED} from 'constants/action-types.js';\nimport {SET_AUTOMATION_POINT_HOVERED} from 'constants/action-types.js';\nimport {SET_TRACK_TO_CONVERT} from 'constants/action-types.js';\nimport {SET_AUTOMATION_POINTS_SELECTED} from 'constants/action-types.js';\nimport {SET_AUTOMATION_SELECTION} from 'constants/action-types.js';\n\nimport {SET_EXPLORE_PERSON_SELECTED} from 'constants/action-types.js';\nimport {SET_EXPLORE_ALL_SEQUENCES}from 'constants/action-types.js';\n\nimport {DELETE_AUTOMATIONS_FOR_ENGINE}from 'constants/action-types.js';\nimport {SET_RECORDING_EXPLORE_MIX} from 'constants/action-types.js';\nimport {SET_WORKS_LOADED} from 'constants/action-types.js';\nimport {SET_WORK_TRANSPOSE} from 'constants/action-types.js';\nimport {SET_WORK_VOLUME} from 'constants/action-types.js';\nimport {SET_EXPLORE_MIX_LOADED} from 'constants/action-types.js';\n\nimport {SET_IS_MACRO_MAPPING} from 'constants/action-types.js';\nimport {SET_PARAMETER_TO_MAP} from 'constants/action-types.js';\n\nimport {SET_MIX_COLOR_VALUE} from 'constants/action-types.js';\nimport {SET_MIX_HAS_EDITS} from 'constants/action-types.js';\n\nimport {SET_SCRIPT_VARIABLES} from 'constants/action-types.js';\n\nimport {SET_EXPLORE_OPTION} from 'constants/action-types.js';\n\nimport {SET_ANNOTATIONS_VIEW} from 'constants/action-types.js';\nimport {SET_EXPLORE_TOAST} from 'constants/action-types.js';\n\nimport {SET_PARAMETER_SLIDER_DOWN} from 'constants/action-types.js';\nimport {MOVE_ENGINE_AUTOMATIONS} from 'constants/action-types.js';\nimport {SET_SEQUENCE_LOADING_PROGRESS} from 'constants/action-types.js';\n\nimport {SET_TRACK_BROWSED_SAMPLES} from 'constants/action-types.js';\nimport {SET_TRACK_BROWSED_PRESETS} from 'constants/action-types.js';\nimport {SET_BOTTOM_TOOLBAR_OFFSET} from 'constants/action-types.js';\nimport {SET_TRACK_UPDATES} from 'constants/action-types.js';\nimport {SET_IS_TRANSCRIBING} from 'constants/action-types.js';\nimport {SET_SAMPLE_TOOLTIP} from 'constants/action-types.js';\nimport {SET_SELECTED_FREEZE} from 'constants/action-types.js';\nimport {SET_TRACK_LENGTH_MODE} from 'constants/action-types.js';\nimport {SET_TRACK_LENGTH_CHOICE} from 'constants/action-types.js';\nimport {SET_FREEZE_DRAGGING} from 'constants/action-types.js';\nimport {SET_FREEZE_COLUMN_SAMPLES} from 'constants/action-types.js';\nimport {SET_UPLOADING_FILE} from 'constants/action-types.js';\nimport {SET_GROUP_COLLAPSED} from 'constants/action-types.js';\nimport {SET_SELECTED_MIX_EFFECT} from 'constants/action-types.js';\nimport {SET_SAMPLES_DRAGGING} from 'constants/action-types.js';\nimport {SET_DISPLAY_RESOLUTION} from 'constants/action-types.js';\nimport {SET_OFFLINE_ENGINE} from 'constants/action-types.js';\nimport {SET_CURRENT_EXPORT_INFO} from 'constants/action-types.js';\nimport {SET_MIX_TRACK_DRAGGING} from 'constants/action-types.js';\nimport {SET_GROUP_TRACKS} from 'constants/action-types.js';\nimport {SET_LOADING_TEXT} from 'constants/action-types.js';\nimport {SET_TRACK_ENVELOPES} from 'constants/action-types.js';\nimport {SET_COPIED_NODES_FOR_RACK} from 'constants/action-types.js';\nimport {SET_LAST_MIDI_CC_PLAYED} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_MOUSE_DOWN_X} from 'constants/action-types.js';\n\nimport {SET_TRACKER_PARAMETER_TO_EDIT} from 'constants/action-types.js';\nimport {SET_TRACKS_TO_HIDE} from 'constants/action-types.js';\nimport {SET_SELECTED_PALETTE} from 'constants/action-types.js';\nimport {SET_SEQUENCED_PALETTE} from 'constants/action-types.js';\nimport {SET_PROJECT_DRAGGING} from 'constants/action-types.js';\nimport {SET_EXPLORE_UNPUBLISHED} from 'constants/action-types.js';\nimport {SET_QUICK_ADD_SEARCH_TEXT} from 'constants/action-types.js';\nimport {SET_SHOW_TRACK_FREEZE_HISTORY} from 'constants/action-types.js';\nimport {SET_SELECTED_MIDI_TRACK} from 'constants/action-types.js';\nimport {SET_SELECTED_TRACK_SLICE} from 'constants/action-types.js';\nimport {SET_CIRKLON_PARAMETER_SELECTED} from 'constants/action-types.js';\nimport {SET_CIRKLON_MODE} from 'constants/action-types.js';\nimport {SET_NOTES_DOWN} from 'constants/action-types.js';\nimport {SET_SCENES} from 'constants/action-types.js';\nimport {SET_CURRENT_SCENE} from 'constants/action-types.js';\nimport {SET_SHOW_SETTINGS} from 'constants/action-types.js';\nimport {SET_WALLPAPER} from 'constants/action-types.js';\nimport {SET_ANIMATE_WALLPAPER} from 'constants/action-types.js';\nimport {SET_EXPANDED_PROJECT} from 'constants/action-types.js';\nimport {SET_ACCUMULATOR_PARAMETER_SELECTED} from 'constants/action-types.js';\nimport {SET_PLANE_MAPPING} from 'constants/action-types.js';\nimport {SET_TRACK_PRESET_SAVING} from 'constants/action-types.js';\nimport {SET_SAMPLE_TAG_DRAGGING} from 'constants/action-types.js';\nimport {SET_PARAMETER_MIX_AUTOMATIONS} from 'constants/action-types.js';\nimport {SET_SHOW_ARRANGEMENT_TRACKS} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_PATTERN_SELECTED} from 'constants/action-types.js';\nimport {SET_SIDEBAR_SEARCH_INPUT} from 'constants/action-types.js';\nimport {SET_SHOW_ARRANGEMENT_SEARCHER} from 'constants/action-types.js';\nimport {SET_VI_SELECT_MODE} from 'constants/action-types.js';\nimport {SET_EXPLORE_WORK} from 'constants/action-types.js';\nimport {SET_CREATING_NEW_PACK} from 'constants/action-types.js';\nimport {SET_PACK_WINDOW_POSITION} from 'constants/action-types.js';\nimport {SET_DRAGGING_PACK_WINDOW} from 'constants/action-types.js';\nimport {SET_PACK_TO_EDIT} from 'constants/action-types.js';\nimport {SET_IS_MANAGING_GUILDS} from 'constants/action-types.js';\n\nimport {NEW_STEP_GROUP} from 'constants/action-types.js';\nimport {SET_STEPS_GROUP_MODE} from 'constants/action-types.js';\nimport {SET_TRANSFORMATION_EDGE_DRAGGING} from 'constants/action-types.js';\nimport {SET_SHOW_FORMANT_EFFECT} from 'constants/action-types.js';\nimport {SET_SHOWING_FORMANTS} from 'constants/action-types.js';\nimport {SET_PULLED_EFFECTS} from 'constants/action-types.js';\nimport {SET_LOOPS_TO_FREEZE} from 'constants/action-types.js';\nimport {SET_PARAMETER_MIN_MAX} from 'constants/action-types.js';\nimport {SET_CURRENT_SOUND_IN_LIST} from 'constants/action-types.js';\nimport {SET_SHOWING_SOUND_LIST} from 'constants/action-types.js';\nimport {SET_CURRENT_TAG_IN_LIST} from 'constants/action-types.js';\nimport {SET_LINKING_EFFECTS} from 'constants/action-types.js';\nimport {SET_PACK_SELECTED} from 'constants/action-types.js';\nimport {SET_SAMPLE_EXPLORER_SELECTED} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_SLIDE} from 'constants/action-types.js';\nimport {SET_MAXIMIZE_EXPLORER} from 'constants/action-types.js';\n\nimport {SET_PADS} from 'constants/action-types.js';\nimport {SET_PAD_SLOTS} from 'constants/action-types.js';\nimport {SET_PAD_HOVERED} from 'constants/action-types.js';\nimport {SET_WAVEFORM_SHOWING} from 'constants/action-types.js';\nimport {SET_TRACK_DRAGGING} from 'constants/action-types.js';\nimport {SET_HIDE_MIXER} from 'constants/action-types.js';\nimport {SET_SOURCE_EXPLORING} from 'constants/action-types.js';\nimport {SET_YEAR_EXPLORING} from 'constants/action-types.js';\nimport {SET_PULLABLE_PART_DRAGGING} from 'constants/action-types.js';\nimport {SET_PADS_EXPAND} from 'constants/action-types.js';\n\nimport {SET_SEQUENCERS} from 'constants/action-types.js';\nimport {SET_SEQUENCER_TRACKS} from 'constants/action-types.js';\nimport {SET_PLANE_MACROS} from 'constants/action-types.js';\nimport {SET_WINDOW_POSITION} from 'constants/action-types.js';\nimport {SET_BULK_WINDOW_POSITIONS} from 'constants/action-types.js';\nimport {SET_PAD_EFFECTS} from 'constants/action-types.js';\nimport {SET_DRAWING_PAD_EDGE} from 'constants/action-types.js';\nimport {SET_MOVING_PAD_EDGE} from 'constants/action-types.js';\nimport {SET_SELECTED_PAD_EDGE} from 'constants/action-types.js';\nimport {SET_BULK_EFFECTS_COLLAPSED} from 'constants/action-types.js';\nimport {SET_SELECTED_PULLED_ELEMENTS} from 'constants/action-types.js';\nimport {SET_ALL_EFFECT_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {SET_MODULE_COLLAPSED} from 'constants/action-types.js';\nimport {SET_TRACK_MIDI_EFFECTS} from 'constants/action-types.js';\nimport {SET_EFFECT_STARRED} from 'constants/action-types.js';\nimport {SET_BULK_EFFECTS_STARRED} from 'constants/action-types.js';\nimport {SET_BULK_MODULES_COLLAPSED} from 'constants/action-types.js';\nimport {DELETE_TRACK_ID} from 'constants/action-types.js';\nimport {SET_SHOWING_CONTEXT_MENU} from 'constants/action-types.js';\nimport {SET_HIGHER_ORDER_MATRIX} from 'constants/action-types.js';\nimport {SET_MODULE_COLOR} from 'constants/action-types.js';\nimport {SET_MODULES_ROUTING} from 'constants/action-types.js';\nimport {SET_HIGHER_ORDER_STEPS_SELECTED} from 'constants/action-types.js';\nimport {SET_ORIENTATION_ROUTINGS} from 'constants/action-types.js';\nimport {SET_SHOW_HIGHER_ORDER_SEQUENCER} from 'constants/action-types.js';\nimport {SET_MODULE_SIZE} from 'constants/action-types.js';\nimport {SET_INLET_CONNECTIONS} from 'constants/action-types.js';\nimport {SET_ZOBJECTS} from 'constants/action-types.js';\nimport {SET_ZMESSAGES} from 'constants/action-types.js';\nimport {SET_BACKGROUND_COLOR} from 'constants/action-types.js';\nimport {SET_VIEWABLE_SUBPATCHES} from 'constants/action-types.js';\nimport {SET_VIEWABLE_ZOBJECTS} from 'constants/action-types.js';\nimport {SET_SELECTED_ZOBJECT} from 'constants/action-types.js';\nimport {SET_JAKI_GRID} from 'constants/action-types.js';\nimport {SET_ZOBJECT_TYPE_DRAGGING} from 'constants/action-types.js';\nimport {SET_UX_LOCKED} from 'constants/action-types.js';\nimport {SET_MINTED_TOKENS} from 'constants/action-types.js';\nimport {SET_HIC_DIALOG} from 'constants/action-types.js';\nimport {SET_ZORA_DIALOG} from 'constants/action-types.js';\nimport {SET_IS_PREPARING_NFT} from 'constants/action-types.js';\nimport {SET_FULL_SCREEN_ZOBJECT} from 'constants/action-types.js';\nimport {SET_MAIN_SCROLL_REF} from 'constants/action-types.js';\nimport {SET_VIEWPORT_POSITION} from 'constants/action-types.js';\nimport {SET_SIDEBARS_SHOWING} from 'constants/action-types.js';\nimport {SET_SHOW_PAD_SEQUENCER} from 'constants/action-types.js';\nimport {SET_SHOW_PROJECTS_MODAL} from 'constants/action-types.js';\nimport {SET_SHOW_SEARCH_WINDOW} from 'constants/action-types.js';\nimport {SET_STEP_PARAMETER_SELECTED} from 'constants/action-types.js';\nimport {SET_SHOW_TRACK_INSTRUMENT} from 'constants/action-types.js';\nimport {SET_SHOW_MODULATORS} from 'constants/action-types.js';\nimport {SET_CABLE_SEGMENTATION} from 'constants/action-types.js';\nimport {SET_CABLE_SEGMENTATIONS} from 'constants/action-types.js';\n\nimport {SET_UX_LOCK_OBJECT} from 'constants/action-types.js';\nimport {SET_UX_LOCK_OBJECTS} from 'constants/action-types.js';\nimport {SET_UX_HIDE_OBJECT} from 'constants/action-types.js';\nimport {SET_UX_HIDE_OBJECTS} from 'constants/action-types.js';\nimport {SET_ZOBJECT_INPUT_TEXT} from 'constants/action-types.js';\nimport {SET_SHOW_EDITOR_BOTTOM} from 'constants/action-types.js';\nimport {SET_MINTING_PROGRESS} from 'constants/action-types.js';\nimport {SET_NEW_ZORA_TOKEN_ID} from 'constants/action-types.js';\nimport {SET_TRANSACTION_UPON_LOGIN} from 'constants/action-types.js';\nimport {SET_KEYBOARD_CONTEXT} from 'constants/action-types.js';\nimport {SET_PAD_FX_MODE} from 'constants/action-types.js';\nimport {SET_JAKI_GRID_MODE} from 'constants/action-types.js';\nimport {SET_OBJECT_STYLING} from 'constants/action-types.js';\nimport {SET_SELECTED_PLANAR_PARAMETERS} from 'constants/action-types.js';\nimport {SET_FILTERED_PLANAR_PARAMETERS} from 'constants/action-types.js';\nimport {SET_PLANAR_MACRO_TO_SHOW} from 'constants/action-types.js';\nimport {SET_PLANAR_REGION_MODE} from 'constants/action-types.js';\nimport {SET_GROUP_PRESETS_BY_PACKS} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_LEFT_SPACE} from 'constants/action-types.js';\nimport {SET_ZOBJECT_SIZE} from 'constants/action-types.js';\nimport {SET_SECONDARY_ZOBJECT} from 'constants/action-types.js';\nimport {CLEAR_DRAG_DROP} from 'constants/action-types.js';\nimport {SET_SAMPLES_TO_SAVE} from 'constants/action-types.js';\nimport {SET_EDITOR_PADDING} from 'constants/action-types.js';\nimport {SET_EDGES_PADDING} from 'constants/action-types.js';\nimport {SET_EDGES_SIZE} from 'constants/action-types.js';\nimport {SET_LEFT_SIDEBAR_WIDTH} from 'constants/action-types.js';\nimport {SET_DOCUMENTATION_SUB_SECTION} from 'constants/action-types.js';\nimport {SET_RIGHT_SIDEBAR_OPTION} from 'constants/action-types.js';\nimport {SET_SELECTED_FM_ENVELOPE_TYPE} from 'constants/action-types.js';\nimport {SET_SELECTED_FM_OPERATOR_DETAILS} from 'constants/action-types.js';\nimport {SET_SELECTED_FM_FORMANT} from 'constants/action-types.js';\nimport {SET_SHOW_SAVE_MODAL} from 'constants/action-types.js';\nimport {SET_ZOBJECT_FLASHING} from 'constants/action-types.js';\nimport {SET_SAMPLE_DOWNLOAD_PROGRESS} from 'constants/action-types.js';\nimport {SET_PRESET_SAVED} from 'constants/action-types.js';\nimport {SET_COMPLETELY_DONE_LOADING} from 'constants/action-types.js';\nimport {SET_PLUGIN_TO_SAVE} from 'constants/action-types.js';\nimport {SET_SHOW_PLUGINS} from 'constants/action-types.js';\nimport {SET_PLUGINS_LOADED} from 'constants/action-types.js';\nimport {SET_SHOW_PLUGINS_PANE} from 'constants/action-types.js';\nimport {SET_PLUGINS_PANE_HEIGHT} from 'constants/action-types.js';\nimport {SET_ZOBJECT_BACKGROUND} from 'constants/action-types.js';\nimport {SET_PRESENTATION_MODE} from 'constants/action-types.js';\nimport {SET_PRESENTATION_WINDOW_POSITION} from 'constants/action-types.js';\nimport {SET_BULK_PRESENTATION_WINDOW_POSITIONS} from 'constants/action-types.js';\nimport {SET_SHOW_FREEZE_MODAL} from 'constants/action-types.js';\nimport {SET_ZOBJECT_TOOLTIP} from 'constants/action-types.js';\nimport {SET_ZOBJECTS_STACK} from 'constants/action-types.js';\nimport {SET_ZOBJECT_CONTEXT_MENU} from 'constants/action-types.js';\nimport {SET_ENABLE_ROLL_VIEWER} from 'constants/action-types.js';\nimport {SET_ZOBJECT_MODAL} from 'constants/action-types.js';\nimport {SET_ZOBJECT_PROGRESSBAR} from 'constants/action-types.js';\nimport {SET_SPORE_TOKEN_ID} from 'constants/action-types.js';\nimport {SET_SOLD_PLAYERS} from 'constants/action-types.js';\n\nexport const setResolution = resolution => ({ type: SET_RESOLUTION, payload: resolution });\nexport const setSequencerEngine = sequencerEngine => ({ type: SET_SEQUENCER_ENGINE, payload: sequencerEngine});\nexport const setViewMode = viewMode => ({ type: SET_VIEW_MODE, payload: viewMode});\nexport const setAlternateViewMode = viewMode => ({ type: SET_ALTERNATE_VIEW_MODE, payload: viewMode});\nexport const setDetailsView = trackNumber => ({ type: SET_DETAILS_VIEW, payload: trackNumber});\nexport const setDecentralized = decentralized => ({ type: SET_DECENTRALIZED, payload: decentralized});\nexport const setSelectorMode = selectorMode => ({ type: SET_SELECTOR_MODE , payload: selectorMode});\nexport const setNumberOfPatterns = (id, numberOfPatterns) => (\n    {\n        type: SET_NUMBER_PATTERNS,\n        payload: {\n            id,\n            numberOfPatterns\n        }\n    });\nexport const setCurrentPattern =\n    (sequenceId, currentPattern) =>\n    ({\n        type: SET_CURRENT_PATTERN ,\n        payload: {\n            sequenceId: sequenceId,\n            currentPattern: currentPattern}});\nexport const setCurrentStep =\n    (sequenceId, currentStep) =>\n    ({\n        type: SET_CURRENT_STEP ,\n        payload: {\n            sequenceId: sequenceId,\n            currentStep: currentStep}});\nexport const setCurrentGlobalStep =\n    (sequenceId, currentStep) =>\n    ({\n        type: SET_CURRENT_GLOBAL_STEP,\n        payload: {\n            sequenceId: sequenceId,\n            currentGlobalStep: currentStep\n        }\n    });\n\nexport const setCurrentAndGlobalSteps =\n    (sequenceId, currentStep, currentGlobalStep) =>\n    ({\n        type: SET_CURRENT_AND_GLOBAL_STEPS,\n        payload: {\n            sequenceId: sequenceId,\n            currentStep: currentStep,\n            currentGlobalStep: currentGlobalStep,\n        }\n    }\n    );\n\n// samples\n\nexport const setSample = (id, sample) => ({ type: SET_SAMPLE, payload: {sampleId: id, sample: sample}});\n\nexport const startTriggerTrack = (trackNumber, sliceNumber) => ({ type: START_TRIGGER_TRACK, payload: {trackNumber: trackNumber, sliceNumber: sliceNumber}});\nexport const stopTriggerTrack = (trackNumber, sliceNumber) => ({ type: STOP_TRIGGER_TRACK, payload: {trackNumber: trackNumber, sliceNumber: sliceNumber}});\n\nexport const setSamplePack = (samplePack) => ({ type: SET_SAMPLE_PACK , payload: samplePack});\n\n// add sample pack to your palette\nexport const addSamplePack = (samplePack) => ({ type: ADD_SAMPLE_PACK , payload: samplePack});\nexport const removeSamplePack = (samplePack) => ({ type: REMOVE_SAMPLE_PACK , payload: samplePack});\n\n\nexport const dragSample = (sample) => ({ type: DRAG_SAMPLE , payload: sample});\nexport const dragEffect = (effectNumber) => ({ type: DRAG_EFFECT , payload: effectNumber});\nexport const dragPattern = (patternNumber) => ({ type: DRAG_PATTERN, payload: patternNumber});\n\nexport const mouseDown = (m) => ({ type: MOUSE_DOWN, payload: m});\nexport const dragToggle = (toggle) => ({ type: DRAG_TOGGLE, payload: toggle});\nexport const dragStepTranspose = (transpose) => ({ type: DRAG_STEP_TRANSPOSE, payload: transpose});\nexport const setCommandDown = (c) => ({ type: COMMAND_DOWN, payload: c});\n\nexport const trackRecording = (t, r) => ({ type: TRACK_RECORDING, payload: {id: t, recording: r}});\nexport const trackPreparingToRecord = (t, r) => ({ type: TRACK_PREPARING_TO_RECORD, payload: {trackNumber: t, preparing: r}});\n\nexport const setAllTrackSteps = (t, steps, pianoSteps, fills, stepToId, stepToPosition, pianoRollDurations, patternSteps, groups) => (\n    {\n        type: SET_ALL_TRACK_STEPS,\n        payload: {\n            id: t,\n            steps: steps,\n            pianoRollSteps: pianoSteps,\n            fills: fills,\n            stepToId: stepToId,\n            stepToPosition: stepToPosition,\n            pianoRollDurations: pianoRollDurations,\n            patternSteps: patternSteps,\n            groups\n        }});\n\nexport const setTrackSteps = (t, s) => ({ type: SET_TRACK_STEPS, payload: {id: t, steps: s}});\nexport const setTrackFills = (t, s) => ({ type: SET_TRACK_FILLS, payload: {id: t, fills: s}});\nexport const setTrackPianoRollSteps = (t, s) => ({ type: SET_TRACK_PIANO_ROLL_STEPS, payload: {id: t, steps: s}});\n\nexport const setSelectedTrack = (track) => ({ type: SET_SELECTED_TRACK, payload: track});\nexport const setSelectedStep = (step) => ({ type: SET_SELECTED_STEP, payload: step});\nexport const setHoveredStep = (step) => ({ type: SET_HOVERED_STEP, payload: step});\nexport const setSelectedGroup = (group) => ({ type: SET_SELECTED_GROUP, payload: group});\n\n\nexport const setTrackVolume = (trackNumber, volume) => ({ type: SET_TRACK_VOLUME, payload:\n                                                          {id: trackNumber, volume: volume }});\nexport const setTrackMuted = (id, muted) => ({ type: SET_TRACK_MUTED, payload: {\n    id: id, muted: muted}});\n\nexport const setTrackSolo = (id, solo) => ({ type: SET_TRACK_SOLO, payload: {\n    id, solo: solo}});\n\nexport const setGroupVolume = (groupNumber, volume) => ({ type: SET_GROUP_VOLUME, payload:\n                                                          {groupNumber: groupNumber, volume: volume }});\nexport const setGroupMuted = (groupNumber, muted) => ({ type: SET_GROUP_MUTED, payload: {\n    groupNumber: groupNumber, muted: muted}});\n\nexport const setQuantized = (quantized) => ({ type: SET_QUANTIZED, payload: quantized});\nexport const setIsRecording = (isRecording) => ({ type: SET_IS_RECORDING, payload: isRecording});\nexport const setIsRecordingExpanded = (isRecordingExpanded) => ({ type: SET_IS_RECORDING_EXPANDED, payload: isRecordingExpanded});\nexport const setIsRecordingMix = (isRecordingMix) => ({ type: SET_IS_RECORDING_MIX, payload: isRecordingMix});\nexport const setIsPlaying =\n    (sequenceId, isPlaying) =>\n    ({\n        type: SET_IS_PLAYING,\n        payload: {\n            sequenceId: sequenceId,\n            isPlaying: isPlaying\n        }});\nexport const setIsPlayingMix = (isPlayingMix) => ({ type: SET_IS_PLAYING_MIX, payload: isPlayingMix});\n\nexport const setSendMuted = (sendNumber, muted) => ({ type: SET_SEND_MUTED, payload: {\n    sendNumber: sendNumber, muted: muted}});\n\nexport const setStepDragging = (step) => ({ type: SET_STEP_DRAGGING, payload: step});\nexport const setStepToCopy = (step) => ({ type: SET_STEP_TO_COPY, payload: step});\n\nexport const setSequenceName = (name) => ({ type: SET_SEQUENCE_NAME, payload: name});\n\nexport const setSelectedEffect = (effectNumber) => ({ type: SET_SELECTED_EFFECT, payload: effectNumber});\n\nexport const setEffectParameterValue = (id, value) => ({ type: SET_EFFECT_PARAMETER_VALUE, payload: {id: id, value: value}});\n\nexport const setEffectsPaneOption = (option) => ({ type: SET_EFFECTS_PANE_OPTION, payload: option});\n\nexport const setSelectedParameter = (parameter) => ({ type: SET_SELECTED_PARAMETER, payload: parameter});\nexport const setSelectedParameterFlashing = (parameter) => ({ type: SET_SELECTED_PARAMETER_FLASHING, payload: parameter});\n\nexport const setMixes = (mixes) => ({ type: SET_MIXES, payload: mixes});\nexport const setCurrentMix = (mix) => ({ type: SET_CURRENT_MIX, payload: mix});\n\nexport const setErasingAutomation = (mix) => ({ type: SET_ERASING_AUTOMATION, payload: mix});\n\nexport const setTrackSendVolume = (subSequenceId, trackNumber, sendNumber, volume) => (\n    { type: SET_TRACK_SEND_VOLUME,\n      payload: {\n          subSequenceId: subSequenceId,\n          trackNumber: trackNumber,\n          sendNumber: sendNumber,\n          volume: volume\n      }});\n\nexport const setTrackFocused = (track) => ({ type: SET_TRACK_FOCUSED, payload: track});\n\nexport const setYearSelected = (year) => ({ type: SET_YEAR_SELECTED, payload: year});\nexport const setCountriesSelected = (countries) => ({ type: SET_COUNTRIES_SELECTED, payload: countries});\nexport const setVideosSelected = (videos) => ({ type: SET_VIDEOS_SELECTED, payload: videos});\nexport const setStylesSelected = (styles) => ({ type: SET_STYLES_SELECTED, payload: styles});\nexport const setTagsSelected = (tags) => ({ type: SET_TAGS_SELECTED, payload: tags});\nexport const setChordSelected = (chord) => ({ type: SET_CHORD_SELECTED, payload: chord});\nexport const setHierarchyRoot = (root) => ({ type: SET_HIERARCHY_ROOT, payload: root});\nexport const setHierarchyTree = (tree) => ({ type: SET_HIERARCHY_TREE, payload: tree});\n\nexport const setShowYearSlider = (show) => ({ type: SET_SHOW_YEAR_SLIDER, payload: show});\nexport const setShowCountries = (show) => ({ type: SET_SHOW_COUNTRIES, payload: show});\nexport const setShowVideos  = (show) => ({ type: SET_SHOW_VIDEOS, payload: show});\nexport const setShowStyles = (show) => ({ type: SET_SHOW_STYLES, payload: show});\nexport const setShowTags = (show) => ({ type: SET_SHOW_TAGS, payload: show});\nexport const setShowChordFilter = (show) => ({ type: SET_SHOW_CHORD_FILTER, payload: show});\n\nexport const setIsDraggingDuration = (duration) => ({ type: SET_IS_DRAGGING_DURATION, payload: duration});\nexport const setStepDataDragging = (stepData) => ({ type: SET_STEP_DATA_DRAGGING, payload: stepData});\nexport const setPianoRollSelection =\n    (stepNumber, transpose, numSteps, numNotes) =>\n    ({\n        type: SET_PIANO_ROLL_SELECTION,\n        payload: {\n            stepNumber: stepNumber,\n            transpose: transpose,\n            numSteps: numSteps,\n            numNotes: numNotes,\n        }});\n\n\nexport const setSelectedPianoRollSteps =\n    (selectedSteps) =>\n    ({\n        type: SET_SELECTED_PIANO_ROLL_STEPS,\n        payload: selectedSteps\n    });\n\nexport const setSearchResultsSamples =\n    (sampleHashes) =>\n    ({\n        type: SET_SEARCH_RESULTS_SAMPLES,\n        payload: sampleHashes\n    });\n\nexport const setSelectedChordSample =\n    (obj =>\n    ({\n        type: SET_SELECTED_CHORD_SAMPLE,\n        payload: obj\n    }));\n\nexport const setStepsToCopy =\n    (steps =>\n    ({\n        type: SET_STEPS_TO_COPY,\n        payload: steps\n    }));\n\nexport const setLoadingSequence = (id, loading) => ({ type: SET_LOADING_SEQUENCE, payload: {id: id, loading: loading}});\n\nexport const setEasyPatternToCopy = (easyPattern) => ({ type: SET_EASY_PATTERN_TO_COPY, payload: easyPattern});\n\nexport const setSampleAuditioning = (sampleId) => ({ type: SET_SAMPLE_AUDITIONING, payload: sampleId});\n\nexport const setLastMidiKeyMapped = (midiKey) => ({ type: SET_LAST_MIDI_KEY_MAPPED, payload: midiKey});\nexport const setTrackIsEnabled = (subSequenceId, trackNumber, isEnabled) => (\n    {\n        type: SET_TRACK_IS_ENABLED,\n        payload: {\n            subSequenceId: subSequenceId,\n            trackNumber: trackNumber,\n            isEnabled: isEnabled\n        }\n    });\n\nexport const setSelectedSampleTag = (sampleId, tag) => ({ type: SET_SELECTED_SAMPLE_TAG, payload: {sampleId: sampleId, tag: tag}});\n\nexport const setTransposeDragging = (dragging) => ({ type: SET_TRANSPOSE_DRAGGING, payload: {transpose: dragging}});\n\nexport const setMasterVolume =\n    (sequenceId, volume) => (\n        { type: SET_MASTER_VOLUME,\n          payload: {\n              sequenceId: sequenceId,\n              volume: volume\n          }\n        });\n\nexport const setUserViewMode = (userViewMode) => ({ type: SET_USER_VIEW_MODE, payload: userViewMode});\nexport const setCurrentUserMix = (mix) => ({ type: SET_CURRENT_USER_MIX, payload: mix});\nexport const setUserHasEditsToSave = (hasEdits) => ({ type: SET_USER_HAS_EDITS_TO_SAVE, payload: hasEdits});\n\nexport const setPatternToEditColor = (pattern) => ({ type: SET_PATTERN_TO_EDIT_COLOR, payload: pattern});\nexport const setPatternColor = (pattern, color) => (\n    { type: SET_PATTERN_COLOR,\n      payload: {\n          pattern: pattern,\n          color: color}});\n\nexport const setCompactMode = (isCompact) => ({ type: SET_COMPACT_MODE, payload: isCompact});\n\nexport const setShowLFOs = (show) => ({ type: SET_SHOW_LFOS, payload: show});\nexport const setShowEnvelopes = (show) => ({ type: SET_SHOW_ENVELOPES, payload: show});\n\nexport const setTracksToResample = (tracks) => ({ type: SET_TRACKS_TO_RESAMPLE, payload: tracks});\n\nexport const setProjectAutomationMode  = (mode) => ({ type: SET_PROJECT_AUTOMATION_MODE, payload: mode});\n\nexport const newSequence = () => ({ type: NEW_SEQUENCE, payload: {}});\n\nexport const setStepsSelection = (trackNumber, stepFrom, stepTo) =>\n    ({\n        type: SET_STEPS_SELECTION ,\n        payload: {\n            trackNumber: trackNumber,\n            fromStep: stepFrom,\n            toStep: stepTo\n        }\n    });\nexport const setSelectedSteps = (trackNumber, patternNumber, steps) => ({ type: SET_SELECTED_STEPS, payload: {trackNumber: trackNumber, patternNumber: patternNumber, steps: steps}});\nexport const setStepNumberDraggingFrom = (stepNumber) => ({ type: SET_STEP_NUMBER_DRAGGING_FROM, payload: stepNumber});\n\nexport const setSequencePatternLocks = (patternLocks) => (\n    { type: SET_SEQUENCE_PATTERN_LOCKS,\n      payload: {\n          patternLocks: patternLocks,\n      }});\n\nexport const setSequencePatternLocked = (patternNumber, locked) => (\n    {\n        type: SET_SEQUENCE_PATTERN_LOCKED,\n        payload: {\n            patternNumber: patternNumber,\n            locked: locked\n        }});\n\nexport const setTrackPatternLocked = (subSequence, trackNumber, patternNumber, locked) => (\n    {\n        type: SET_TRACK_PATTERN_LOCKED,\n        payload: {\n            subSequence: subSequence,\n            trackNumber: trackNumber,\n            patternNumber: patternNumber,\n            locked: locked\n        }});\n\nexport const setTrackPatternLocks = (subSequence, trackNumber, patternLocks) => (\n    { type: SET_TRACK_PATTERN_LOCKS,\n      payload: {\n          subSequence: subSequence,\n          trackNumber: trackNumber,\n          patternLocks: patternLocks,\n      }});\n\nexport const setEffectPatternLocks = (effectId, patternLocks) => (\n    { type: SET_EFFECT_PATTERN_LOCKS,\n      payload: {\n          id: effectId,\n          patternLocks: patternLocks\n      }});\n\nexport const updateStepsForAllTracks = (updateData) => ({ type: UPDATE_STEPS_FOR_ALL_TRACKS, payload: updateData});\n\nexport const setLFOPatternLocks = (subSequence, patternLocks) =>\n    ({\n        type: SET_LFO_PATTERN_LOCKS,\n        payload: {\n            patternLocks: patternLocks,\n            subSequence: subSequence,}\n    });\n\nexport const setEnvelopePatternLocks = (subSequence, patternLocks) =>\n    ({\n        type: SET_ENVELOPE_PATTERN_LOCKS,\n        payload: {\n            patternLocks: patternLocks,\n            subSequence: subSequence\n        }\n    });\n\nexport const setPianoRollPagination = (start, end) => ({ type: SET_PIANO_ROLL_PAGINATION, payload: {start : start, end: end}});\n\nexport const setIsResampling = (isResampling) => ({ type: SET_IS_RESAMPLING, payload: isResampling});\nexport const setResampleDuration = (resampleDuration) => ({ type: SET_RESAMPLE_DURATION, payload: resampleDuration});\n\nexport const setKeyMappings = (keyMappings) => ({ type: SET_KEY_MAPPINGS, payload: keyMappings});\nexport const setPadMappings = (padMappings) => ({ type: SET_PAD_MAPPINGS, payload: padMappings});\n\nexport const setShowSequenceModal = (show) => ({ type: SET_SHOW_SEQUENCE_MODAL, payload: show});\n\nexport const setShowModsModal = (show) => ({ type: SET_SHOW_MODS_MODAL, payload: show});\n\nexport const setMultiParameterSliderValue = (id, value) => (\n    {\n        type: SET_MULTI_PARAMETER_SLIDER,\n        payload: {\n            id: id,\n            value: value\n        }\n    });\n\nexport const setSequenceRolling = (rolling) => ({ type: SET_SEQUENCE_ROLLING, payload: rolling});\n\nexport const setTrackEffectsChain = (trackNumber, effectsChain) => (\n    {\n        type: SET_TRACK_EFFECTS_CHAIN,\n        payload: {\n            trackNumber: trackNumber,\n            effectsChain: effectsChain\n        }\n    });\n\nexport const setShowSequences = (show) => ({ type: SET_SHOW_SEQUENCES, payload: show});\nexport const setShowPresets = (show) => ({ type: SET_SHOW_PRESETS, payload: show});\nexport const setShowInstruments = (show) => ({ type: SET_SHOW_INSTRUMENTS, payload: show});\n\nexport const setTrackRolling = (rolling) => ({ type: SET_TRACK_ROLLING, payload: rolling});\n\nexport const setZIndexHack = (hack) => ({ type: SET_Z_INDEX_HACK, payload: hack});\n\nexport const setLoadedTracks = (tracks) => ({ type: SET_LOADED_TRACKS, payload: tracks});\n\nexport const setBPM = (bpm) => ({ type: SET_BPM, payload: bpm});\n\nexport const setResampleMaster = (flag) => ({ type: SET_RESAMPLE_MASTER, payload: flag});\n\nexport const setYoutubeSearchTerms = (s) => ({ type: SET_YOUTUBE_SEARCH_TERMS, payload: s});\n\nexport const setAudioInputSource = (s) => ({ type: SET_AUDIO_INPUT_SOURCE, payload: s});\n\nexport const setWaveformSelection = (x) => (\n    {\n        type: SET_WAVEFORM_SELECTION,\n        payload: x\n    });\n\nexport const setWaveformSelectionEnd = (x) => (\n    {\n        type: SET_WAVEFORM_SELECTION_END,\n        payload: x\n    });\n\nexport const setMidiMapMode= (mode) => (\n    {\n        type: SET_MIDI_MAP_MODE,\n        payload: mode\n    });\n\nexport const setParameterMidiMapSelection= (parameter) => (\n    {\n        type: SET_PARAMETER_MIDI_MAP_SELECTION,\n        payload: parameter\n    });\n\nexport const setParameterMidiMapping= (parameter, midiControl) => (\n    {\n        type: SET_PARAMETER_MIDI_MAPPING,\n        payload: {\n            parameter: parameter,\n            midiControl: midiControl\n        }\n    });\n\nexport const deleteParameterMidiMapping = (parameter) => (\n    {\n        type: DELETE_PARAMETER_MIDI_MAPPING,\n        payload: parameter,\n    });\n\nexport const setActionMidiMapSelection= (action) => (\n    {\n        type: SET_ACTION_MIDI_MAP_SELECTION,\n        payload: action\n    });\n\nexport const setActionMidiMapping= (action, midiControl) => (\n    {\n        type: SET_ACTION_MIDI_MAPPING,\n        payload: {\n            action: action,\n            midiControl: midiControl\n        }\n    });\n\nexport const deleteMidiMappings = (control) => (\n    {\n        type: DELETE_MIDI_MAPPINGS,\n        payload: control,\n    });\n\n\nexport const setLatency = (latency) => (\n    {\n        type: SET_LATENCY,\n        payload: latency,\n    });\n\nexport const setSpotlightTracks = (tracks) => (\n    {\n        type: SET_SPOTLIGHT_TRACKS,\n        payload: tracks,\n    });\n\nexport const setClockType = (type) => (\n    {\n        type: SET_CLOCK_TYPE,\n        payload: type,\n    });\n\nexport const setConnectionStatus = (status) => (\n    {\n        type: SET_CONNECTION_STATUS,\n        payload: status,\n    });\n\nexport const setConnectedUserName = (userName) => (\n    {\n        type: SET_CONNECTED_USER_NAME,\n        payload: userName,\n    });\n\nexport const setClockTick = (step) => (\n    {\n        type: SET_CLOCK_TICK,\n        payload: step,\n    });\n\nexport const setPlayScheduled = (flag) => (\n    {\n        type: SET_PLAY_SCHEDULED,\n        payload: flag,\n    });\n\nexport const setAvailableUsersToSync = (users) => (\n    {\n        type: SET_AVAILABLE_USERS_TO_SYNC,\n        payload: users,\n    });\n\nexport const setSearchSortBy = (sortBy) => (\n    {\n        type: SET_SEARCH_SORT_BY,\n        payload: sortBy,\n    });\n\nexport const setMidiEffectDragging = (effect) => (\n    {\n        type: SET_MIDI_EFFECT_DRAGGING,\n        payload: effect,\n    });\n\nexport const setShowTrackEffects = (trackNumber, show) => (\n    {\n        type: SET_SHOW_TRACK_EFFECTS,\n        payload: {\n            trackNumber: trackNumber,\n            show: show\n        },\n    });\n\nexport const setShowConvolverModal = (show, sample) => (\n    {\n        type: SET_SHOW_CONVOLVER_MODAL,\n        payload: {\n            show: show,\n            convolverSample: sample\n        },\n    });\n\nexport const setShowPasswordModal = (show) => (\n    {\n        type: SET_SHOW_PASSWORD_MODAL,\n        payload: show\n    });\n\nexport const setPasswordModalCallback = (callback) => (\n    {\n        type: SET_PASSWORD_MODAL_CALLBACK,\n        payload: callback\n    });\n\nexport const setShowShareSequenceModal = (show) => (\n    {\n        type: SET_SHOW_SHARE_SEQUENCE_MODAL,\n        payload: show\n    });\n\nexport const hideAllEffects = () => (\n    {\n        type: HIDE_ALL_EFFECTS,\n        payload: {},\n    });\n\nexport const setEffectCollapsed = (id, isCollapsed) => (\n    {\n        type: SET_EFFECT_COLLAPSED,\n        payload: {\n            id: id,\n            isCollapsed: isCollapsed\n        },\n    });\n\nexport const setContextualHelp = (element, arg) => (\n    {\n        type: SET_CONTEXTUAL_HELP,\n        payload: {element, arg}\n    });\n\nexport const setSelectedLFO = (lfo) => (\n    {\n        type: SET_SELECTED_LFO,\n        payload: lfo,\n    });\n\nexport const setSelectedEnvelope = (envelope) => (\n    {\n        type: SET_SELECTED_ENVELOPE,\n        payload: envelope\n    });\n\nexport const setSidebarCollapsed = (collapsed) => (\n    {\n        type: SET_SIDEBAR_COLLAPSED,\n        payload: collapsed\n    });\n\nexport const setMixEvents = (subSequenceId, type, events) => (\n    {\n        type: SET_MIX_EVENTS,\n        payload: {\n            subSequenceId: subSequenceId,\n            type: type,\n            events: events\n        }\n    });\n\nexport const setShowGroups = (showGroups) => (\n    {\n        type: SET_SHOW_GROUPS,\n        payload: showGroups\n    });\n\nexport const setCurrentSubSequence = (sequenceId, subSequenceId) => (\n    {\n        type: SET_CURRENT_SUB_SEQUENCE,\n        payload: {\n            sequenceId: sequenceId,\n            subSequenceId: subSequenceId,\n        }\n    });\n\n\nexport const setSubSequences = (id, ids) => (\n    {\n        type: SET_SUB_SEQUENCES,\n        payload: {\n            sequenceId: id,\n            ids: ids,\n        },\n    });\n\nexport const setAllTrackPatternLocks = (locks) => (\n    {\n        type: SET_ALL_TRACK_PATTERN_LOCKS,\n        payload: locks\n    });\n\nexport const setAllLFOLocks = (locks) => (\n    {\n        type: SET_ALL_LFO_LOCKS,\n        payload: locks,\n    });\n\nexport const setAllEnvelopeLocks= (locks) => (\n    {\n        type: SET_ALL_ENVELOPE_LOCKS,\n        payload: locks\n    });\n\nexport const setMixViewMode = (mode) => (\n    {\n        type: SET_MIX_VIEW_MODE,\n        payload: mode\n    });\n\nexport const setSubSequenceFade = (id, value) => (\n    {\n        type: SET_SUB_SEQUENCE_FADE,\n        payload: {\n            subSequenceId: id,\n            value: value,\n        },\n    });\n\nexport const setSampleSlices= (id, slices) => (\n    {\n        type: SET_SAMPLE_SLICES,\n        payload: {\n            id: id,\n            slices: slices,\n        },\n    });\n\nexport const setSelectedArrangementEvents  = (events) => (\n    {\n        type: SET_SELECTED_ARRANGEMENT_EVENTS,\n        payload: events,\n    });\n\nexport const setShowDateSampled = (show) => (\n    {\n        type: SET_SHOW_DATE_SAMPLED,\n        payload: show\n    });\n\nexport const setDateSampled = (dates) => (\n    {\n        type: SET_DATE_SAMPLED,\n        payload: dates\n    });\n\nexport const setEffectParameterValues = (values) => (\n    {\n        type: SET_EFFECT_PARAMETER_VALUES,\n        payload: values\n    });\n\nexport const setTrackPanning = (trackNumber, pan) => (\n    {\n        type: SET_TRACK_PANNING,\n        payload: {\n            trackNumber: trackNumber,\n            pan: pan\n        }\n    });\n\nexport const setGroupPanning = (groupNumber, pan) => (\n    {\n        type: SET_GROUP_PANNING,\n        payload: {\n            groupNumber: groupNumber,\n            pan: pan\n        }\n    });\n\nexport const setSelectedRecord = (record) => (\n    {\n        type: SET_SELECTED_RECORD,\n        payload: record,\n    });\n\nexport const set2DSelection = (startX, startY, endX, endY) => (\n    {\n        type: SET_2D_SELECTION,\n        payload: {\n            startX: startX,\n            startY: startY,\n            endX: endX,\n            endY: endY\n        },\n    });\n\nexport const setSimilarSoundsToFind = (sampleId) => (\n    {\n        type: SET_SIMILAR_SOUNDS_TO_FIND,\n        payload: sampleId,\n    });\n\nexport const setShowSamples2D = (show) => (\n    {\n        type: SET_SHOW_SAMPLES_2D,\n        payload: show,\n    });\n\nexport const setLastNotePlayed = (lastNote) => (\n    {\n        type: SET_LAST_NOTE_PLAYED,\n        payload: lastNote,\n    });\n\nexport const setSidebarViewMode = (mode) => (\n    {\n        type: SET_SIDEBAR_VIEW_MODE,\n        payload: mode,\n    });\n\nexport const setDiscogsSelected = (selected) => (\n    {\n        type: SET_DISCOGS_SELECTED,\n        payload: selected,\n    });\n\nexport const setSelectedFolder = (selected) => (\n    {\n        type: SET_SELECTED_FOLDER,\n        payload: selected,\n    });\n\nexport const setSelectedPreset = (selected) => (\n    {\n        type: SET_SELECTED_PRESET,\n        payload: selected,\n    });\n\nexport const setHasChangesToFolders = (flag) => (\n    {\n        type: SET_HAS_CHANGES_TO_FOLDERS,\n        payload: flag,\n    });\n\nexport const setCursorTrack = (track) => (\n    {\n        type: SET_CURSOR_TRACK,\n        payload: track,\n    });\n\nexport const setCursorStep = (step) => (\n    {\n        type: SET_CURSOR_STEP,\n        payload: step,\n    });\n\nexport const setCursorShow = (show) => (\n    {\n        type: SET_CURSOR_SHOW,\n        payload: show,\n    });\n\nexport const setFolderDragging = (folder) => (\n    {\n        type: SET_FOLDER_DRAGGING,\n        payload: folder,\n    });\n\nexport const setPresetDragging = (preset) => (\n    {\n        type: SET_PRESET_DRAGGING,\n        payload: preset,\n    });\n\nexport const setSampleDragging = (sample) => (\n    {\n        type: SET_SAMPLE_DRAGGING,\n        payload: sample,\n    });\n\nexport const setEffectsChainToShow = (subSequenceId, track, chainNumber) => (\n    {\n        type: SET_EFFECTS_CHAIN_TO_SHOW,\n        payload: {\n            subSequenceId: subSequenceId,\n            trackNumber: track,\n            chainNumber: chainNumber\n        },\n    });\n\nexport const setSubSequenceMuted = (id, muted) => (\n    {\n        type: SET_SUB_SEQUENCE_MUTED,\n        payload: {\n            id: id,\n            muted: muted,\n        },\n    });\n\nexport const setTrackFrozen = (subSequenceId, trackNumber, frozen) => (\n    {\n        type: SET_TRACK_FROZEN,\n        payload: {\n            subSequenceId: subSequenceId,\n            trackNumber: trackNumber,\n            frozen: frozen,\n        },\n    });\n\nexport const setTrackToFreeze = (subSequenceId, trackNumber) => (\n    {\n        type: SET_TRACK_TO_FREEZE,\n        payload: {\n            subSequenceId: subSequenceId,\n            trackNumber: trackNumber,\n        },\n    });\n\nexport const setFrozenTrackPlaying = (subSequenceId, trackNumber, playing) => (\n    {\n        type: SET_FROZEN_TRACK_PLAYING,\n        payload: {\n            subSequenceId: subSequenceId,\n            trackNumber: trackNumber,\n            playing: playing,\n        },\n    });\n\nexport const setFrozenTracksPlaying = (subSequenceId, frozenTracksPlaying) => (\n    {\n        type: SET_FROZEN_TRACKS_PLAYING,\n        payload: {\n            subSequenceId: subSequenceId,\n            frozenTracksPlaying: frozenTracksPlaying,\n        },\n    });\n\nexport const setFrozenTracks = (subSequenceId, frozenTracks) => (\n    {\n        type: SET_FROZEN_TRACKS,\n        payload: {\n            subSequenceId: subSequenceId,\n            frozenTracks: frozenTracks,\n        },\n    });\n\nexport const setEffectsChainsToShow = (subSequenceId, effectsChains) => (\n    {\n        type: SET_EFFECTS_CHAINS_TO_SHOW,\n        payload: {\n            subSequenceId: subSequenceId,\n            effectsChains: effectsChains,\n        },\n    });\n\nexport const setSelectedOnsets = (id, selectedOnsets) => (\n    {\n        type: SET_SELECTED_ONSETS,\n        payload: {\n            id: id,\n            selectedOnsets: selectedOnsets,\n        },\n    });\n\nexport const setSingleStepToDrag = (stepData) => (\n    {\n        type: SET_SINGLE_STEP_TO_DRAG,\n        payload: stepData\n    });\n\nexport const setStepNumberDraggedTo = (stepNumber) => (\n    {\n        type: SET_STEP_NUMBER_DRAGGED_TO,\n        payload: stepNumber\n    });\n\nexport const setSearchResultsStart = (start) => (\n    {\n        type: SET_SEARCH_RESULTS_START,\n        payload: start\n    });\n\nexport const setShowStepOptions = (option, effect) => (\n    {\n        type: SET_SHOW_STEP_OPTIONS,\n        payload: {\n            option: option,\n            effect: effect,\n        }\n    });\n\nexport const setMasterStepToggles = (steps) => (\n    {\n        type: SET_MASTER_STEP_TOGGLES,\n        payload:  steps\n    });\n\nexport const setParametersToRecord = (params) => (\n    {\n        type: SET_PARAMETERS_TO_RECORD,\n        payload:  params\n    });\n\nexport const setOnsetThreshold = (threshold) => (\n    {\n        type: SET_ONSET_THRESHOLD,\n        payload: threshold\n    });\n\nexport const setShowOnsets = (show) => (\n    {\n        type: SET_SHOW_ONSETS,\n        payload: show\n    });\n\nexport const setSelectedGuild = (guild) => (\n    {\n        type: SET_SELECTED_GUILD,\n        payload: guild\n    });\n\nexport const setPianoRollDragOffset = (offset) => (\n    {\n        type: SET_PIANO_ROLL_DRAG_OFFSET,\n        payload: offset\n    });\n\nexport const setPianoRollNotes = (notes) => (\n    {\n        type: SET_PIANO_ROLL_NOTES,\n        payload: notes\n    });\n\nexport const setStepAndDataDragging = (stepNumber, stepData) => (\n    {\n        type: SET_STEP_AND_DATA_DRAGGING,\n        payload: {\n            stepNumber: stepNumber,\n            stepData: stepData\n        }\n    });\n\nexport const setShowLogin= (show) => (\n    {\n        type: SET_SHOW_LOGIN,\n        payload: show\n    });\n\nexport const setSigningUp = (signingUp) => (\n    {\n        type: SET_SIGNING_UP,\n        payload: signingUp\n    });\n\nexport const setUserToken = (userName, token) => (\n    {\n        type: SET_USER_TOKEN,\n        payload: {\n            userName,\n            token\n        }\n    });\n\nexport const setPendingTransactions = (pendingTransactions) => (\n    {\n        type: SET_PENDING_TRANSACTIONS,\n        payload: pendingTransactions\n    });\n\nexport const setCommandInput = (input) => (\n    {\n        type: SET_COMMAND_INPUT,\n        payload: input\n    });\n\nexport const setCommandPrefix = (prefix) => (\n    {\n        type: SET_COMMAND_PREFIX,\n        payload: prefix\n    });\n\nexport const setViMode = (mode) => (\n    {\n        type: SET_VI_MODE,\n        payload: mode\n    });\n\nexport const setTrackWarp = (subSequenceId, trackNumber, warp) => (\n    {\n        type: SET_TRACK_WARP,\n        payload: {\n            subSequenceId,\n            trackNumber,\n            warp,\n        }\n    });\n\nexport const setSubSequenceWarps = (subSequenceId, warps) => (\n    {\n        type: SET_SUB_SEQUENCE_WARPS,\n        payload: {\n            subSequenceId,\n            warps,\n        }\n    });\n\nexport const setArrangementSelection = (start, end) => (\n    {\n        type: SET_ARRANGEMENT_SELECTION,\n        payload: {\n            start: start,\n            end: end,\n        }\n    });\n\nexport const setArrangementMouseX= (mouseX) => (\n    {\n        type: SET_ARRANGEMENT_MOUSE_X,\n        payload: mouseX\n    });\n\nexport const setArrangementAutomationToShow = (subSequenceId, type) => (\n    {\n        type: SET_ARRANGEMENT_AUTOMATION_TO_SHOW,\n        payload: {\n            subSequenceId,\n            type\n        }\n    });\n\nexport const setArrangementLooping = (looping) => (\n    {\n        type: SET_ARRANGEMENT_LOOPING,\n        payload: looping\n    });\n\nexport const setArrangementSelectedRows = (rows) => (\n    {\n        type: SET_ARRANGEMENT_SELECTED_ROWS,\n        payload: rows\n    });\n\nexport const setArrangementLoopSelected = (selected) => (\n    {\n        type: SET_ARRANGEMENT_LOOP_SELECTED,\n        payload: selected\n    });\n\nexport const setArrangementRowSelections = (selections) => (\n    {\n        type: SET_ARRANGEMENT_ROW_SELECTIONS,\n        payload: selections\n    });\n\nexport const setArrangementZoom = (zoom) => (\n    {\n        type: SET_ARRANGEMENT_ZOOM,\n        payload: zoom\n    });\n\nexport const setSelectedSequence = (id) => (\n    {\n        type: SET_SELECTED_SEQUENCE,\n        payload: id\n    });\n\nexport const setExploreMixerEffect = (effect, toggle) => (\n    {\n        type: SET_EXPLORE_MIXER_EFFECT,\n        payload: {\n            effect,\n            toggle\n        }\n    });\n\nexport const setExploreEQEffect = (type, toggle) => (\n    {\n        type: SET_EXPLORE_EQ_EFFECT,\n        payload: {\n            type,\n            toggle\n        }\n    });\n\nexport const setSelectedSendEffect = (effect) => (\n    {\n        type: SET_SELECTED_SEND_EFFECT,\n        payload: effect\n    });\n\nexport const setInstrumentTypeDragging = (type) => (\n    {\n        type: SET_INSTRUMENT_TYPE_DRAGGING,\n        payload: type\n    });\n\nexport const setTrackIsLoading = (subSequenceId, trackNumber, isLoading) => {\n    return {\n        type: SET_TRACK_IS_LOADING,\n        payload: {\n            subSequenceId,\n            trackNumber,\n            isLoading\n        }\n    };\n}\n\nexport const setPianoRollCursor = (cursor) => (\n    {\n        type: SET_PIANO_ROLL_CURSOR,\n        payload: cursor\n    });\n\nexport const setArrangementXScale = (xScale) => (\n    {\n        type: SET_ARRANGEMENT_X_SCALE,\n        payload: xScale\n    });\n\nexport const setTotalArrangementLength = (len) => (\n    {\n        type: SET_TOTAL_ARRANGEMENT_LENGTH,\n        payload: len\n    });\n\nexport const setArrangementBottomHeight = (height) => (\n    {\n        type: SET_ARRANGEMENT_BOTTOM_HEIGHT,\n        payload: height\n    });\n\nexport const setArrangementBottomMode = (mode) => (\n    {\n        type: SET_ARRANGEMENT_BOTTOM_MODE,\n        payload: mode\n    });\n\nexport const setArrangementBottomResizing = (isResizing) => (\n    {\n        type: SET_ARRANGEMENT_BOTTOM_RESIZING,\n        payload: isResizing,\n    });\n\nexport const setArrangementPatternDragging = (patternDragging, offsetX) => (\n    {\n        type: SET_ARRANGEMENT_PATTERN_DRAGGING,\n        payload: patternDragging === undefined ? undefined :\n            {\n                patternDragging,\n                offsetX\n            }\n    });\n\nexport const setArrangementPatternStartStep = (subSequenceId, patternId, startStep) => (\n    {\n        type: SET_ARRANGEMENT_PATTERN_START_STEP,\n        payload:  {\n            subSequenceId,\n            patternId,\n            startStep\n        }\n    });\n\nexport const setArrangementCursorStep = (step) => (\n    {\n        type: SET_ARRANGEMENT_CURSOR_STEP,\n        payload: step\n    });\n\nexport const setArrangementPatternResizing = (pattern, direction) => (\n    {\n        type: SET_ARRANGEMENT_PATTERN_RESIZING,\n        payload: pattern === undefined ? undefined :\n            {\n                pattern,\n                direction\n            }\n    });\n\nexport const setArrangementBrowserMode = (mode) => (\n    {\n        type: SET_ARRANGEMENT_BROWSER_MODE,\n        payload: mode\n    });\n\nexport const setSampleToExplore = (sampleToExplore) => (\n    {\n        type: SET_SAMPLE_TO_EXPLORE,\n        payload: sampleToExplore\n    });\n\nexport const setEffectRackNodePosition = (rackId, effectId, x, y) => (\n    {\n        type: SET_EFFECT_RACK_NODE_POSITION,\n        payload: {\n            rackId,\n            effectId,\n            x,\n            y\n        },\n    });\n\nexport const setAnnotationDragging = (dragging) => (\n    {\n        type: SET_ANNOTATION_DRAGGING,\n        payload: dragging\n    });\n\nexport const setTrackAutomationDevice = (trackId, device) => (\n    {\n        type: SET_TRACK_AUTOMATION_DEVICE,\n        payload: {\n            trackId,\n            device\n        }\n    });\n\nexport const setTrackAutomationRackDevice = (trackId, device) => (\n    {\n        type: SET_TRACK_AUTOMATION_RACK_DEVICE,\n        payload: {\n            trackId,\n            device\n        }\n    });\n\nexport const setTrackAutomationSubDevice = (trackId, subDevice) => (\n    {\n        type: SET_TRACK_AUTOMATION_SUB_DEVICE,\n        payload: {\n            trackId,\n            subDevice \n        }\n    });\n\nexport const setTrackAutomationParameter = (trackId, parameter) => (\n    {\n        type: SET_TRACK_AUTOMATION_PARAMETER,\n        payload: {\n            trackId,\n            parameter\n        }\n    });\n\nexport const setShowAutomation = (show) => (\n    {\n        type: SET_SHOW_AUTOMATION,\n        payload: {\n            show,\n        }\n    });\n\nexport const setParameterAutomations = (parameter, automations, scheduler) => (\n    {\n        type: SET_PARAMETER_AUTOMATIONS,\n        payload: {\n            parameter,\n            automations,\n            scheduler\n        }\n    });\n\nexport const setActionsRemaining = (actionsRemaining) => (\n    {\n        type: SET_ACTIONS_REMAINING,\n        payload: actionsRemaining\n    });\n\nexport const setTimeRemaining = (timeRemaining) => (\n    {\n        type: SET_TIME_REMAINING,\n        payload: timeRemaining\n    });\n\nexport const setShowPianoRoll = (showPianoRoll) => (\n    {\n        type: SET_SHOW_PIANO_ROLL,\n        payload: showPianoRoll\n    });\n\nexport const setSelectedRackSubTrack  = (trackId, track) => (\n    {\n        type: SET_SELECTED_RACK_SUB_TRACK,\n        payload: {\n            trackId,\n            track\n        }\n    });\n\nexport const deleteAutomationsForParameters = (parameters) => (\n    {\n        type: DELETE_AUTOMATIONS_FOR_PARAMETERS,\n        payload: parameters\n    });\n\nexport const deleteAutomationsForEngine = (engineId) => (\n    {\n        type: DELETE_AUTOMATIONS_FOR_ENGINE,\n        payload: engineId\n    });\n\nexport const setAutomationGuidePoint = (id, guidePoint) => (\n    {\n        type: SET_AUTOMATION_GUIDE_POINT,\n        payload: {id, guidePoint}\n    });\n\nexport const setAutomationPointDragging  = (id, point) => (\n    {\n        type: SET_AUTOMATION_POINT_DRAGGING,\n        payload: {id, point},\n    });\n\nexport const setAutomationPointHasMoved  = (id, hasMoved) => (\n    {\n        type: SET_AUTOMATION_POINT_HAS_MOVED,\n        payload: {id, hasMoved},\n    });\n\nexport const setAutomationPointHovered  = (id, pt) => (\n    {\n        type: SET_AUTOMATION_POINT_HOVERED,\n        payload: {id, pt}\n    });\n\nexport const setTrackToConvert = (track) => ({\n        type: SET_TRACK_TO_CONVERT,\n        payload: track\n    });\n\nexport const setAutomationSelection = (id, selection) => ({\n    type: SET_AUTOMATION_SELECTION,\n    payload: {id, selection}\n});\n\nexport const setAutomationPointsSelected = (id, points) => ({\n    type: SET_AUTOMATION_POINTS_SELECTED,\n    payload: {id, points}\n});\n\nexport const setExplorePersonSelected = (person) => ({\n        type: SET_EXPLORE_PERSON_SELECTED,\n        payload: person\n    });\n\nexport const setExploreAllSequences = (sequences) => ({\n        type: SET_EXPLORE_ALL_SEQUENCES,\n        payload: sequences\n    });\n\nexport const setRecordingExploreMix = (isRecording) => ({\n        type: SET_RECORDING_EXPLORE_MIX,\n        payload: isRecording\n    });\n\nexport const setWorksLoaded = (worksLoaded) => ({\n    type: SET_WORKS_LOADED,\n    payload: worksLoaded\n});\n\nexport const setWorkTranspose = (sequenceId, transpose) => ({\n    type: SET_WORK_TRANSPOSE,\n    payload: {\n        sequenceId,\n        transpose\n    }\n});\n\nexport const setWorkVolume = (sequenceId, volume) => ({\n    type: SET_WORK_VOLUME,\n    payload: {\n        sequenceId,\n        volume\n    }\n});\n\nexport const setExploreMixLoaded = (mix) => ({\n    type: SET_EXPLORE_MIX_LOADED,\n    payload: mix\n});\n\nexport const setIsMacroMapping = (isMapping) => ({\n    type: SET_IS_MACRO_MAPPING,\n    payload: isMapping\n});\n\nexport const setParameterToMap = (parameter) => ({\n    type: SET_PARAMETER_TO_MAP,\n    payload: parameter\n});\n\nexport const setMixColorValue = (id, value) => ({\n    type: SET_MIX_COLOR_VALUE,\n    payload: {id, value}\n});\n\nexport const setMixHasEdits = (hasEdits) => ({\n    type: SET_MIX_HAS_EDITS,\n    payload: hasEdits\n});\n\nexport const setScriptVariables = (id, variables) => ({\n    type: SET_SCRIPT_VARIABLES,\n    payload: {\n        id, variables\n    }\n});\n\nexport const setExploreOption = (opt) => ({\n    type: SET_EXPLORE_OPTION,\n    payload: opt\n});\n\nexport const setAnnotationsView = (work) => ({\n    type: SET_ANNOTATIONS_VIEW,\n    payload: work\n});\n\nexport const setExploreToast = (toast) => ({\n    type: SET_EXPLORE_TOAST,\n    payload: toast\n});\n\nexport const setParameterSliderDown = (param) => ({\n    type: SET_PARAMETER_SLIDER_DOWN,\n    payload: param\n});\n\nexport const moveEngineAutomations = (oldId, newId) => ({\n    type: MOVE_ENGINE_AUTOMATIONS,\n    payload: {oldId, newId}\n});\n\nexport const setSequenceLoadingProgress = (sequenceId, progress) => ({\n    type: SET_SEQUENCE_LOADING_PROGRESS,\n    payload: {sequenceId, progress}\n});\n\nexport const setTrackBrowsedSamples = (trackId, samples) => ({\n    type: SET_TRACK_BROWSED_SAMPLES,\n    payload: {trackId, samples}\n});\n\nexport const setTrackBrowsedPresets = (trackId, presets) => ({\n    type: SET_TRACK_BROWSED_PRESETS,\n    payload: {trackId, presets}\n});\n\nexport const setBottomToolbarOffset = (off) => ({\n    type: SET_BOTTOM_TOOLBAR_OFFSET,\n    payload: off\n});\n\nexport const setTrackUpdates = (updates) => ({\n    type: SET_TRACK_UPDATES,\n    payload: updates\n});\n\nexport const setIsTranscribing = (isTranscribing) => ({\n    type: SET_IS_TRANSCRIBING,\n    payload: isTranscribing\n});\n\nexport const setSampleTooltip = (sampleInfo) => ({\n    type: SET_SAMPLE_TOOLTIP,\n    payload: sampleInfo\n});\n\nexport const setSelectedFreeze = (id) => ({\n    type: SET_SELECTED_FREEZE,\n    payload: id\n});\n\nexport const setTrackLengthMode = (mode) => ({\n    type: SET_TRACK_LENGTH_MODE,\n    payload: mode\n});\n\nexport const setTrackLengthChoice = (length) => ({\n    type: SET_TRACK_LENGTH_CHOICE,\n    payload: length\n});\n\nexport const setFreezeDragging = (freeze) => ({\n    type: SET_FREEZE_DRAGGING,\n    payload: freeze\n});\n\nexport const setFreezeColumnSamples = (trackId, column, samples) => ({\n    type: SET_FREEZE_COLUMN_SAMPLES,\n    payload: {\n        trackId,\n        column,\n        samples\n    }\n});\n\nexport const setUploadingFile = (f) => ({\n    type: SET_UPLOADING_FILE,\n    payload: f\n});\n\nexport const setGroupCollapsed = (subSequenceId, groupNumber, collapsed) => ({\n    type: SET_GROUP_COLLAPSED,\n    payload: {\n        subSequenceId,\n        groupNumber,\n        collapsed\n    }\n});\n\nexport const setSelectedMixEffect = (subSequenceId, trackNumber, groupNumber, effectType, effect) => ({\n    type: SET_SELECTED_MIX_EFFECT,\n    payload: {\n        subSequenceId,\n        trackNumber,\n        groupNumber,\n        effectType,\n        effect\n    }\n});\n\nexport const setSamplesDragging = (samples) => ({\n    type: SET_SAMPLES_DRAGGING,\n    payload: samples\n});\n\nexport const setDisplayResolution = (resolution) => ({\n    type: SET_DISPLAY_RESOLUTION,\n    payload: resolution\n});\n\nexport const setOfflineEngine = (offlineEngine) => ({\n    type: SET_OFFLINE_ENGINE,\n    payload: offlineEngine\n});\n\nexport const setCurrentExportInfo = (name, index, total) => ({\n    type: SET_CURRENT_EXPORT_INFO,\n    payload: name === undefined ?\n        undefined :\n        {\n            name, index, total\n        }\n});\n\nexport const setMixTrackDragging = (track) => ({\n    type: SET_MIX_TRACK_DRAGGING,\n    payload: track\n});\n\nexport const setGroupTracks = (groupId, tracks) => ({\n    type: SET_GROUP_TRACKS,\n    payload: {\n        groupId,\n        tracks\n    }\n});\n\nexport const setLoadingText = (loadingText) => ({\n    type: SET_LOADING_TEXT,\n    payload: loadingText\n});\n\nexport const setTrackEnvelopes = (id, envelopes) => ({\n    type: SET_TRACK_ENVELOPES,\n    payload:  {\n        id, envelopes \n    }\n});\n\nexport const setCopiedNodesForRack = (nodes) => ({\n    type: SET_COPIED_NODES_FOR_RACK,\n    payload: nodes\n});\n\nexport const setLastMidiCCPlayed = (midiCC) => ({\n    type: SET_LAST_MIDI_CC_PLAYED,\n    payload: midiCC\n});\n\nexport const setArrangementMouseDownX = (mouseX) => ({\n    type: SET_ARRANGEMENT_MOUSE_DOWN_X,\n    payload: mouseX\n});\n\nexport const setTrackerParameterToEdit= (parameter) => ({\n    type: SET_TRACKER_PARAMETER_TO_EDIT,\n    payload: parameter\n});\n\nexport const setTracksToHide = (tracks) => ({\n    type: SET_TRACKS_TO_HIDE,\n    payload: tracks\n});\n\nexport const setSelectedPalette = (trackId, palette) => ({\n    type: SET_SELECTED_PALETTE,\n    payload: {trackId, palette}\n});\n\nexport const setSequencedPalette = (trackId, palette) => ({\n    type: SET_SEQUENCED_PALETTE,\n    payload: {trackId, palette}\n});\n\n\nexport const setProjectDragging = (project) => ({\n    type: SET_PROJECT_DRAGGING,\n    payload: project\n});\n\nexport const setExploreUnpublished = (changed) => ({\n    type: SET_EXPLORE_UNPUBLISHED,\n    payload: changed\n});\n\nexport const setQuickAddSearchText = (text) => ({\n    type: SET_QUICK_ADD_SEARCH_TEXT,\n    payload: text\n});\n\nexport const setShowTrackFreezeHistory = (id, show) => ({\n    type: SET_SHOW_TRACK_FREEZE_HISTORY,\n    payload: {id, show}\n});\n\nexport const setSelectedMidiTrack = (track) => ({\n    type: SET_SELECTED_MIDI_TRACK,\n    payload: track\n});\n\nexport const setSelectedTrackSlice = (track, slice) => ({\n    type: SET_SELECTED_TRACK_SLICE,\n    payload: {\n        track, slice\n    }\n});\n\nexport const setCirklonParameterSelected = (track, parameter) => ({\n    type: SET_CIRKLON_PARAMETER_SELECTED,\n    payload: {\n        track,\n        parameter\n    }\n});\n\nexport const setCirklonMode = (track, mode) => ({\n    type: SET_CIRKLON_MODE,\n    payload: {\n        track,\n        mode\n    }\n});\n\nexport const setNotesDown = (notes) => ({\n    type: SET_NOTES_DOWN,\n    payload: notes\n\n});\n\nexport const setScenes = (scenes) => ({\n    type: SET_SCENES,\n    payload: scenes\n});\n\nexport const setCurrentScene = (scene) => ({\n    type: SET_CURRENT_SCENE,\n    payload: scene\n});\n\nexport const setShowSettings = (show) => ({\n    type: SET_SHOW_SETTINGS,\n    payload: show\n});\n\nexport const setWallpaper  = (wallpaper) => ({\n    type: SET_WALLPAPER,\n    payload: wallpaper\n});\n\nexport const setAnimateWallpaper  = (wallpaper) => ({\n    type: SET_ANIMATE_WALLPAPER,\n    payload: wallpaper\n});\n\nexport const setExpandedProject = (project) => ({\n    type: SET_EXPANDED_PROJECT,\n    payload: project\n});\n\nexport const setAccumulatorParameterSelected = (param) => ({\n    type: SET_ACCUMULATOR_PARAMETER_SELECTED,\n    payload: param\n});\n\nexport const setPlaneMapping = (plane) => ({\n    type: SET_PLANE_MAPPING,\n    payload: plane\n});\n\nexport const setTrackPresetSaving = (track) => ({\n    type: SET_TRACK_PRESET_SAVING,\n    payload: track\n});\n\nexport const setSampleTagDragging = (tag) => ({\n    type: SET_SAMPLE_TAG_DRAGGING,\n    payload: tag\n});\n\nexport const setParameterMixAutomations = (parameter, automations, scheduler) => ({\n    type: SET_PARAMETER_MIX_AUTOMATIONS,\n    payload: {\n        parameter,\n        automations,\n        scheduler\n    }\n});\n\nexport const setShowArrangementTracks = (subSequenceId, show) => ({\n    type: SET_SHOW_ARRANGEMENT_TRACKS,\n    payload: {\n        subSequenceId,\n        show\n    }\n});\n\nexport const setArrangementPatternSelected = (pattern) => ({\n    type: SET_ARRANGEMENT_PATTERN_SELECTED,\n    payload: pattern\n});\n\nexport const setSidebarSearchInput = (element) => ({\n    type: SET_SIDEBAR_SEARCH_INPUT,\n    payload: element\n});\n\nexport const setShowArrangementSearcher = (show) => ({\n    type: SET_SHOW_ARRANGEMENT_SEARCHER,\n    payload: show\n});\n\nexport const setExploreWork = (work) => ({\n    type: SET_EXPLORE_WORK,\n    payload: work\n});\n\nexport const setCreatingNewPack = (creating) => ({\n    type: SET_CREATING_NEW_PACK,\n    payload: creating\n});\n\nexport const setPackWindowPosition = (x,y) => ({\n    type: SET_PACK_WINDOW_POSITION,\n    payload: {x,y}\n});\n\nexport const setDraggingPackWindow = (dragging) => ({\n    type: SET_DRAGGING_PACK_WINDOW,\n    payload: dragging\n});\n\nexport const setPackToEdit = (pack) => ({\n    type: SET_PACK_TO_EDIT,\n    payload: pack\n});\n\nexport const setIsManagingGuilds = (s) => ({\n    type: SET_IS_MANAGING_GUILDS,\n    payload: s\n});\n\nexport const newStepGroup = (g) => ({\n    type: NEW_STEP_GROUP,\n    payload: g\n});\n\nexport const setStepsGroupMode = (g) => ({\n    type: SET_STEPS_GROUP_MODE,\n    payload: g\n});\n\nexport const setTransformationEdgeDragging= (tr) => ({\n    type: SET_TRANSFORMATION_EDGE_DRAGGING,\n    payload: tr\n});\n\nexport const setShowFormantEffect = (formant) => ({\n    type: SET_SHOW_FORMANT_EFFECT,\n    payload: formant\n});\n\nexport const setShowingFormants = (show) => ({\n    type: SET_SHOWING_FORMANTS,\n    payload: show\n});\n\nexport const setPulledEffects = (effects) => ({\n    type: SET_PULLED_EFFECTS,\n    payload: effects\n});\n\nexport const setLoopsToFreeze = (loops) => ({\n    type: SET_LOOPS_TO_FREEZE,\n    payload: loops\n});\n\nexport const setParameterMinMax = (bulk) => ({\n    type: SET_PARAMETER_MIN_MAX,\n    payload: bulk\n});\n\nexport const setCurrentSoundInList = (number) => ({\n    type: SET_CURRENT_SOUND_IN_LIST,\n    payload: number\n});\n\nexport const setShowingSoundList = (show) => ({\n    type: SET_SHOWING_SOUND_LIST,\n    payload: show\n});\n\nexport const setCurrentTagInList = (number) => ({\n    type: SET_CURRENT_TAG_IN_LIST,\n    payload: number\n});\n\nexport const setLinkingEffects = (effect, name) => ({\n    type: SET_LINKING_EFFECTS,\n    payload: effect ? {\n        effect,\n        name\n    } : undefined\n});\n\nexport const setPackSelected = (number) => ({\n    type: SET_PACK_SELECTED,\n    payload: number\n});\n\nexport const setSampleExplorerSelected = (f) => ({\n    type: SET_SAMPLE_EXPLORER_SELECTED,\n    payload: f\n});\n\nexport const setPianoRollSlide = (f) => ({\n    type: SET_PIANO_ROLL_SLIDE,\n    payload: f\n});\n\nexport const setMaximizeExplorer = (f) => ({\n    type: SET_MAXIMIZE_EXPLORER,\n    payload: f\n});\n\nexport const setPads = (id, pads) => ({\n    type: SET_PADS,\n    payload: {\n        id, pads\n    }\n});\n\nexport const setPadSlots = (id, slots) => ({\n    type: SET_PAD_SLOTS,\n    payload: {\n        id, slots\n    }\n});\n\nexport const setPadHovered = (f) => ({\n    type: SET_PAD_HOVERED,\n    payload: f\n});\n\nexport const setWaveformShowing = (f) => ({\n    type: SET_WAVEFORM_SHOWING,\n    payload: f\n});\n\nexport const setTrackDragging = (f) => ({\n    type: SET_TRACK_DRAGGING,\n    payload: f\n});\n\nexport const setHideMixer = (h) => ({\n    type: SET_HIDE_MIXER,\n    payload: h\n});\n\nexport const setSourceExploring = (h) => ({\n    type: SET_SOURCE_EXPLORING,\n    payload: h\n});\n\nexport const setYearExploring = (year) => ({\n    type: SET_YEAR_EXPLORING,\n    payload: year\n});\n\nexport const setPullablePartDragging = (part) => ({\n    type: SET_PULLABLE_PART_DRAGGING,\n    payload: part\n});\n\nexport const setPadsExpand = (id) => ({\n    type: SET_PADS_EXPAND,\n    payload: id\n});\n\nexport const setSequencers = (id, sequencers) => ({\n    type: SET_SEQUENCERS,\n    payload: {id, sequencers}\n});\n\nexport const setSequencerTracks = (id, tracks) => ({\n    type: SET_SEQUENCER_TRACKS,\n    payload: {id, tracks}\n});\n\nexport const setPlaneMacros = (id, macros) => ({\n    type: SET_PLANE_MACROS,\n    payload: {id, macros}\n});\n\nexport const setWindowPosition = (id, position) => ({\n    type: SET_WINDOW_POSITION,\n    payload: {id, position}\n});\n\nexport const setPresentationWindowPosition = (id, position) => ({\n    type: SET_PRESENTATION_WINDOW_POSITION,\n    payload: {id, position}\n});\n\nexport const setPadEffects = (id, effects) => ({\n    type: SET_PAD_EFFECTS,\n    payload: {id, effects}\n});\n\nexport const setDrawingPadEdge = (id, edge) => ({\n    type: SET_DRAWING_PAD_EDGE,\n    payload: {id, edge}\n});\n\nexport const setSelectedPadEdge  = (edge) => ({\n    type: SET_SELECTED_PAD_EDGE,\n    payload: edge\n});\n\nexport const setBulkEffectsCollapsed = (x) => ({\n    type: SET_BULK_EFFECTS_COLLAPSED,\n    payload: x\n});\n\nexport const setSelectedPulledElements = (x) => ({\n    type: SET_SELECTED_PULLED_ELEMENTS,\n    payload: x\n});\n\nexport const setBulkWindowPositions = (bulk) => ({\n    type: SET_BULK_WINDOW_POSITIONS,\n    payload: bulk\n});\n\nexport const setBulkPresentationWindowPositions = (bulk) => ({\n    type: SET_BULK_PRESENTATION_WINDOW_POSITIONS,\n    payload: bulk\n});\n\nexport const setAllEffectPatternLocks = (bulk) => ({\n    type: SET_ALL_EFFECT_PATTERN_LOCKS,\n    payload: bulk\n});\n\nexport const setModuleCollapsed = (id, collapsed) => ({\n    type: SET_MODULE_COLLAPSED,\n    payload: {\n        id, collapsed\n    }\n});\n\nexport const setTrackMidiEffects = (id, effects) => ({\n    type: SET_TRACK_MIDI_EFFECTS,\n    payload: {\n        id, effects\n    }\n});\n\nexport const setEffectStarred = (id, starred) => ({\n    type: SET_EFFECT_STARRED,\n    payload: {\n        id, starred\n    }\n});\n\nexport const setBulkEffectsStarred = (bulk) => ({\n    type: SET_BULK_EFFECTS_STARRED,\n    payload: bulk\n});\n\nexport const setBulkModulesCollapsed = (bulk) => ({\n    type: SET_BULK_MODULES_COLLAPSED,\n    payload: bulk\n});\n\nexport const deleteTrackId = (id) => ({\n    type: DELETE_TRACK_ID,\n    payload: id\n});\n\nexport const setShowingContextMenu = (show) => ({\n    type: SET_SHOWING_CONTEXT_MENU,\n    payload: show\n});\n\nexport const setHigherOrderMatrix = (matrix) => ({\n    type: SET_HIGHER_ORDER_MATRIX,\n    payload: matrix\n});\n\nexport const setModuleColor = (id, color) => ({\n    type: SET_MODULE_COLOR,\n    payload: {\n        id, color\n    }\n});\n\nexport const setModulesRouting = (inputModules, outputModules) => ({\n    type: SET_MODULES_ROUTING,\n    payload: {inputModules, outputModules}\n});\n\nexport const setHigherOrderStepsSelected = (steps) => ({\n    type: SET_HIGHER_ORDER_STEPS_SELECTED,\n    payload: steps\n});\n\nexport const setOrientationRoutings = (routings) => ({\n    type: SET_ORIENTATION_ROUTINGS,\n    payload: routings\n});\n\nexport const setShowHigherOrderSequencer = (show) => ({\n    type: SET_SHOW_HIGHER_ORDER_SEQUENCER,\n    payload: show\n});\n\nexport const setPlanar = (track, planar) => ({\n    type: SET_PLANAR,\n    payload: {track, planar}\n});\n\nexport const setPlanarGradientColor = (id, color) => ({\n    type: SET_PLANAR_GRADIENT_COLOR,\n    payload: {id, color}\n});\n\nexport const setPlanarOpacity = (id, opacity) => ({\n    type: SET_PLANAR_OPACITY,\n    payload: {id, opacity}\n});\n\nexport const setModuleSize = (id, size) => ({\n    type: SET_MODULE_SIZE,\n    payload: {id, size}\n});\n\nexport const setInletConnections = (id, connections) => ({\n    type: SET_INLET_CONNECTIONS,\n    payload: {id, connections}\n});\n\nexport const setZObjects = (id, objects) => ({\n    type: SET_ZOBJECTS,\n    payload: {id, objects}\n});\n\nexport const setZMessages = (id, messages) => ({\n    type: SET_ZMESSAGES,\n    payload: {id, messages}\n});\n   \nexport const setBackgroundColor = (color) => ({\n    type: SET_BACKGROUND_COLOR,\n    payload: color\n});\n\nexport const setViewableSubPatches = (subpatches) => ({\n    type: SET_VIEWABLE_SUBPATCHES,\n    payload: subpatches\n});\n\nexport const setViewableZObjects = (zobjects) => ({\n    type: SET_VIEWABLE_ZOBJECTS,\n    payload: zobjects\n});\n\nexport const setSelectedZObject = (obj) => ({\n    type: SET_SELECTED_ZOBJECT,\n    payload: obj\n});\n\nexport const setJakiGrid = (id, grid) => ({\n    type: SET_JAKI_GRID,\n    payload: {id, grid}\n});\n\nexport const setZObjectTypeDragging = (type) => ({\n    type: SET_ZOBJECT_TYPE_DRAGGING,\n    payload: type\n});\n\nexport const setUXLocked = (locked) => ({\n    type: SET_UX_LOCKED,\n    payload: locked\n});\n\nexport const setMintedTokens = (tokens) => ({\n    type: SET_MINTED_TOKENS,\n    payload: tokens\n});\n\nexport const setHicDialog = (data) => ({\n    type: SET_HIC_DIALOG,\n    payload: data\n});\n\nexport const setIsPreparingNFT = (flag) => ({\n    type: SET_IS_PREPARING_NFT,\n    payload: flag\n});\n\nexport const setFullScreenZObject = (zobject) => ({\n    type: SET_FULL_SCREEN_ZOBJECT,\n    payload: zobject\n});\n\nexport const setMainScrollRef = (ref) => ({\n    type: SET_MAIN_SCROLL_REF,\n    payload: ref\n});\n\nexport const setViewportPosition = (position) => ({\n    type: SET_VIEWPORT_POSITION,\n    payload: position\n});\n\nexport const setSidebarsShowing= (s) => ({\n    type: SET_SIDEBARS_SHOWING,\n    payload: s\n});\n\nexport const setShowPadSequencer= (s) => ({\n    type: SET_SHOW_PAD_SEQUENCER,\n    payload: s\n});\n\nexport const setShowProjectsModal= (s) => ({\n    type: SET_SHOW_PROJECTS_MODAL,\n    payload: s\n});\n\nexport const setShowSearchWindow = (s) => ({\n    type: SET_SHOW_SEARCH_WINDOW,\n    payload: s\n});\n\n\nexport const setStepParameterSelected = (s) => ({\n    type: SET_STEP_PARAMETER_SELECTED,\n    payload: s\n});\n\nexport const setShowTrackInstrument = (s) => ({\n    type: SET_SHOW_TRACK_INSTRUMENT,\n    payload: s\n});\n\nexport const setShowModulators = (s) => ({\n    type: SET_SHOW_MODULATORS,\n    payload: s\n});\n\nexport const setCableSegmentation = (id, segmentation) => ({\n    type: SET_CABLE_SEGMENTATION,\n    payload: {\n        id,\n        segmentation\n    }\n});\n\nexport const setCableSegmentations = (segmentations) => ({\n    type: SET_CABLE_SEGMENTATIONS,\n    payload: segmentations\n});\n\nexport const setUXLockObject= (id, lock) => ({\n    type: SET_UX_LOCK_OBJECT,\n    payload: {id, lock}\n});\n\nexport const setUXLockObjects = ( locks) => ({\n    type: SET_UX_LOCK_OBJECTS,\n    payload: locks\n});\n\nexport const setUXHideObject = ( id, hide) => ({\n    type: SET_UX_HIDE_OBJECT,\n    payload: {id, hide}\n});\n\nexport const setUXHideObjects = ( locks) => ({\n    type: SET_UX_HIDE_OBJECTS,\n    payload: locks\n});\n\nexport const setZoraDialog = (zora) => ({\n    type: SET_ZORA_DIALOG,\n    payload: zora\n});\n\nexport const setZObjectInputText = (txt) => ({\n    type: SET_ZOBJECT_INPUT_TEXT,\n    payload: txt\n});\n\nexport const setShowEditorBottom = (show) => ({\n    type: SET_SHOW_EDITOR_BOTTOM,\n    payload: show\n});\n\nexport const setMintingProgress = (progress) => ({\n    type: SET_MINTING_PROGRESS,\n    payload: progress\n});\n\nexport const setNewZoraTokenId  = (tokenId) => ({\n    type: SET_NEW_ZORA_TOKEN_ID,\n    payload: tokenId\n});\n\nexport const setTransactionUponLogin = (transaction) => ({\n    type: SET_TRANSACTION_UPON_LOGIN,\n    payload: transaction\n});\n\nexport const setKeyboardContext = (object) => ({\n    type: SET_KEYBOARD_CONTEXT,\n    payload: object\n});\n\nexport const setPadFXMode = (id, mode) => ({\n    type: SET_PAD_FX_MODE,\n    payload: {id, mode}\n});\n\nexport const setJakiGridMode = (mode) => ({\n    type: SET_JAKI_GRID_MODE,\n    payload: mode\n});\n\nexport const setObjectStyling = (id, styling) => ({\n    type: SET_OBJECT_STYLING,\n    payload: {\n        id, styling\n    }\n});\n\nexport const setSelectedPlanarParameters = (id, selected) => ({\n    type: SET_SELECTED_PLANAR_PARAMETERS,\n    payload: {\n        id, selected\n    }\n});\n\nexport const setFilteredPlanarParameters = (id, filtered) => ({\n    type: SET_FILTERED_PLANAR_PARAMETERS,\n    payload: {\n        id, filtered\n    }\n});\n\nexport const setPlanarMacroToShow = (id, macro) => ({\n    type: SET_PLANAR_MACRO_TO_SHOW,\n    payload: {\n        id, macro\n    }\n});\n\nexport const setPlanarRegionMode = (id, isRegionMode) => ({\n    type: SET_PLANAR_REGION_MODE,\n    payload: {\n        id, isRegionMode\n    }\n});\n\nexport const setGroupPresetsByPacks  = (groupBy) => ({\n    type: SET_GROUP_PRESETS_BY_PACKS,\n    payload: groupBy\n});\n\nexport const setPianoRolllLeftSpace = (leftSpace) => ({\n    type: SET_PIANO_ROLL_LEFT_SPACE,\n    payload: leftSpace\n});\n\nexport const setZObjectSize = (id, size) => ({\n    type: SET_ZOBJECT_SIZE,\n    payload: {id, size}\n});\n\nexport const setSecondaryZObject = (zobject) => ({\n    type: SET_SECONDARY_ZOBJECT,\n    payload: zobject\n});\n\nexport const clearDragDrop = () => ({\n    type: CLEAR_DRAG_DROP,\n    payload: {}\n});\n\nexport const setSamplesToSave = (samples) => ({\n    type: SET_SAMPLES_TO_SAVE,\n    payload: samples\n});\n\nexport const setEditorPadding = (x,y) => ({\n    type: SET_EDITOR_PADDING,\n    payload: {x,y}\n});\n\nexport const setEdgesPadding = (x,y) => ({\n    type: SET_EDGES_PADDING,\n    payload: {x,y}\n});\n\nexport const setEdgesSize = (width, height) => ({\n    type: SET_EDGES_SIZE,\n    payload: {\n        width,\n        height}\n});\n\nexport const setLeftSidebarWidth = (width) => ({\n    type: SET_LEFT_SIDEBAR_WIDTH,\n    payload: width\n        \n});\n\nexport const setMovingPadEdge = (edge) => ({\n    type: SET_MOVING_PAD_EDGE,\n    payload: edge\n});\n\nexport const setDocumentationSubSection = (sub) => ({\n    type: SET_DOCUMENTATION_SUB_SECTION,\n    payload: sub\n});\n\nexport const setRightSidebarOption = (sub) => ({\n    type: SET_RIGHT_SIDEBAR_OPTION,\n    payload: sub\n});\n\n\nexport const setSelectedFMEnvelopeType = (type) => ({\n    type: SET_SELECTED_FM_ENVELOPE_TYPE,\n    payload: type\n});\n\nexport const setSelectedFMOperatorDetails  = (type) => ({\n    type: SET_SELECTED_FM_OPERATOR_DETAILS,\n    payload: type\n});\n\nexport const setSelectedFMFormant  = (type) => ({\n    type: SET_SELECTED_FM_FORMANT,\n    payload: type\n});\n\nexport const setShowSaveModal = (show) => ({\n    type: SET_SHOW_SAVE_MODAL,\n    payload: show\n});\n\nexport const setZObjectFlashing = (id, timestamp) => ({\n    type: SET_ZOBJECT_FLASHING,\n    payload: {\n        id,\n        timestamp\n    }\n});\n\nexport const setSampleDownloadProgress = (downloaded, total) => ({\n    type: SET_SAMPLE_DOWNLOAD_PROGRESS,\n    payload: {\n        downloaded,\n        total\n    }\n});\n\nexport const setPresetSaved = (preset) => ({\n    type: SET_PRESET_SAVED,\n    payload: preset\n});\n\nexport const setCompletelyDoneLoading = (load) => ({\n    type: SET_COMPLETELY_DONE_LOADING,\n    payload: load\n});\n\nexport const setPluginToSave = (zobject) => ({\n    type: SET_PLUGIN_TO_SAVE,\n    payload: zobject\n});\n\n\nexport const setShowPlugins = (show) => ({\n    type: SET_SHOW_PLUGINS,\n    payload: show\n});\n\nexport const setPluginsLoaded = (plugins) => ({\n    type: SET_PLUGINS_LOADED,\n    payload: plugins\n});\n\nexport const setShowPluginsPane = (show) => ({\n    type: SET_SHOW_PLUGINS_PANE,\n    payload: show\n});\n\nexport const setPluginsPaneHeight = (h) => ({\n    type: SET_PLUGINS_PANE_HEIGHT,\n    payload: h\n});\n\nexport const setDroppedSamples = (h) => ({\n    type: SET_DROPPED_SAMPLES,\n    payload: h\n});\n\nexport const setShowFormantPresets= (show) => ({\n    type: SET_SHOW_FORMANT_PRESETS,\n    payload: show\n});\n\nexport const setZObjectBackground = (zobject) => ({\n    type: SET_ZOBJECT_BACKGROUND,\n    payload: zobject\n});\n\nexport const setPresentationMode = (mode) => ({\n    type: SET_PRESENTATION_MODE,\n    payload: mode\n});\n\nexport const setShowFreezeModal = (show) => ({\n    type: SET_SHOW_FREEZE_MODAL,\n    payload: show\n});\n\nexport const setTheme = (theme) => ({\n    type: SET_THEME,\n    payload: theme\n});\n\nexport const setShowThemeGrid = (show) => ({\n    type: SET_SHOW_THEME_GRID,\n    payload: show\n});\n\n\nexport const setRecentlyAddedSounds = (samples) => ({\n    type: SET_RECENTLY_ADDED_SOUNDS,\n    payload: samples\n});\n\nexport const setZObjectTooltip = (id, position, text) => ({\n    type: SET_ZOBJECT_TOOLTIP,\n    payload: {\n        id,\n        position,\n        text\n    }\n});\n\nexport const setZObjectsStack = (stack) => ({\n    type: SET_ZOBJECTS_STACK,\n    payload: stack\n});\n\nexport const setZObjectContextMenu = (id, position, zobject) => ({\n    type: SET_ZOBJECT_CONTEXT_MENU,\n    payload: {\n        id,\n        position,\n        zobject\n    }\n});\n\nexport const setObjectDragging = (object) => ({\n    type: SET_OBJECT_DRAGGING,\n    payload: object\n});\n\nexport const setEnableRollViewer = (enable) => ({\n    type: SET_ENABLE_ROLL_VIEWER,\n    payload: enable\n});\n\nexport const setZObjectModal = (modal) => ({\n    type: SET_ZOBJECT_MODAL,\n    payload: modal\n});\n\nexport const setZObjectProgressBar = (text) => ({\n    type: SET_ZOBJECT_PROGRESSBAR,\n    payload: text\n});\n\nexport const setShowPlaylistMenu = (show) => ({\n    type: SET_SHOW_PLAYLIST_MENU,\n    payload: show\n});\n\nexport const setCurrentPlaylistSong = (song) => ({\n    type: SET_CURRENT_PLAYLIST_SONG,\n    payload: song\n});\n\nexport const setSporeTokenId = (tokenId) => ({\n    type: SET_SPORE_TOKEN_ID,\n    payload: tokenId\n});\n\nexport const setSoldPlayers = (sold) => ({\n    type: SET_SOLD_PLAYERS,\n    payload: sold\n});\n\nexport const setPendingSpores = (spores) => ({\n    type: SET_PENDING_SPORES,\n    payload: spores\n});\n\nexport const setUsedCheatCode = (spores) => ({\n    type: SET_USED_CHEAT_CODE,\n    payload: spores\n});\n\nexport const setSecondsRemaining = (time) => ({\n    type: SET_SECONDS_REMAINING,\n    payload: time\n});\n\nexport const setPlaylistLoaded = (playlist) => ({\n    type: SET_PLAYLIST_LOADED,\n    payload: playlist\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","export const SET_RESOLUTION = 1;\nexport const SET_SEQUENCER_ENGINE = 2;\nexport const SET_VIEW_MODE = 3;\nexport const SET_DETAILS_VIEW = 4;\nexport const SET_DECENTRALIZED = 5;\nexport const SET_SELECTOR_MODE = 6;\nexport const SET_NUMBER_PATTERNS= 7;\nexport const SET_CURRENT_PATTERN = 8;\nexport const SET_CURRENT_STEP = 9;\nexport const SET_CURRENT_GLOBAL_STEP = 10;\n\nexport const SET_SAMPLE = 11;\n\nexport const START_TRIGGER_TRACK = 12;\nexport const STOP_TRIGGER_TRACK = 13;\n\nexport const TOGGLE_TRACK = 14;\nexport const UNTOGGLE_TRACK = 15;\n\nexport const SET_SAMPLE_PACK = 16;\n\nexport const ADD_SAMPLE_PACK = 17;\nexport const REMOVE_SAMPLE_PACK = 18;\n\nexport const DRAG_SAMPLE = 19;\nexport const DRAG_EFFECT = 20;\nexport const DRAG_PATTERN = 21;\n\n// for when the user drags across steps to quickly toggle them,\n// either true (the mouse is currently clicking and dragging) or\n// false (the mouse is not clicking right now)\nexport const MOUSE_DOWN = 22;\n\n// when MOUSE_DOWN is true, this is used to tell you whether it should\n// toggle the step should toggle on or off\nexport const DRAG_TOGGLE = 23;\nexport const DRAG_STEP_TRANSPOSE = 24;\n\n// true when the \"command\" key is held down, this mode allows\n// people to drag the durations of steps\nexport const COMMAND_DOWN = 25;\n\nexport const TRACK_RECORDING = 26;\nexport const TRACK_PREPARING_TO_RECORD = 27;\n\nexport const SET_TRACK_STEPS = 28;\nexport const UPDATE_STEPS_FOR_ALL_TRACKS = 29;\nexport const SET_ALL_TRACK_STEPS = 30;\nexport const SET_TRACK_FILLS = 31;\nexport const SET_TRACK_PIANO_ROLL_STEPS = 32;\n\nexport const SET_SELECTED_TRACK = 33;\nexport const SET_SELECTED_GROUP = 34;\n\nexport const SET_TRACK_VOLUME = 35;\nexport const SET_TRACK_MUTED = 36;\nexport const SET_TRACK_SOLO = 37;\n\nexport const SET_GROUP_VOLUME = 38;\nexport const SET_GROUP_MUTED = 39;\n\nexport const SET_QUANTIZED = 40;\nexport const SET_IS_RECORDING = 41;\nexport const SET_IS_RECORDING_EXPANDED  = 42;\nexport const SET_IS_RECORDING_MIX = 43;\nexport const SET_IS_PLAYING = 44; \nexport const SET_IS_PLAYING_MIX = 45;\n\nexport const SET_SEND_MUTED = 46;\n\nexport const SET_SELECTED_STEP = 47;\nexport const SET_HOVERED_STEP = 48;\n\nexport const SET_STEP_DRAGGING = 49;\nexport const SET_STEP_TO_COPY = 50;\n\nexport const SET_SEQUENCE_NAME = 51;\n\nexport const SET_SELECTED_EFFECT = 52;\n\nexport const SET_EFFECT_PARAMETER_VALUE = 53;\n\nexport const SET_EFFECTS_PANE_OPTION = 54;\n\nexport const SET_SELECTED_PARAMETER = 55;\nexport const SET_SELECTED_PARAMETER_FLASHING = 56;\n\nexport const SET_MIXES = 57;\nexport const SET_CURRENT_MIX = 58;\n\nexport const SET_ERASING_AUTOMATION = 59;\n\nexport const SET_TRACK_SEND_VOLUME = 60;\n\nexport const SET_TRACK_FOCUSED = 61;\n\nexport const SET_YEAR_SELECTED = 62;\nexport const SET_COUNTRIES_SELECTED = 63;\nexport const SET_VIDEOS_SELECTED = 64;\nexport const SET_STYLES_SELECTED = 65;\nexport const SET_TAGS_SELECTED = 66;\nexport const SET_HIERARCHY_ROOT = 67;\nexport const SET_HIERARCHY_TREE = 68;\nexport const SET_SHOW_YEAR_SLIDER = 69;\nexport const SET_SHOW_COUNTRIES = 70;\nexport const SET_SHOW_VIDEOS = 71;\nexport const SET_SHOW_STYLES = 72;\nexport const SET_SHOW_TAGS = 73;\nexport const SET_SHOW_CHORD_FILTER = 74;\nexport const SET_CHORD_SELECTED = 75;\n\nexport const SET_IS_DRAGGING_DURATION = 76;\nexport const SET_STEP_DATA_DRAGGING = 77;\n\nexport const SET_PIANO_ROLL_SELECTION = 78;\nexport const SET_SELECTED_PIANO_ROLL_STEPS  = 79;\n\nexport const SET_SEARCH_RESULTS_SAMPLES = 80;\n\nexport const SET_SELECTED_CHORD_SAMPLE = 81;\n\nexport const SET_STEPS_TO_COPY = 82;\n\nexport const SET_LOADING_SEQUENCE = 83;\n\nexport const SET_EASY_PATTERN_TO_COPY = 84;\n\nexport const SET_SAMPLE_AUDITIONING = 85;\n\nexport const SET_LAST_MIDI_KEY_MAPPED = 86;\n\nexport const SET_TRACK_IS_ENABLED = 87;\n\nexport const SET_SELECTED_SAMPLE_TAG = 88;\n\nexport const SET_TRANSPOSE_DRAGGING = 89;\n\nexport const SET_MASTER_VOLUME = 90;\n\nexport const SET_USER_VIEW_MODE = 91;\n\nexport const SET_CURRENT_USER_MIX = 92;\n\nexport const SET_USER_HAS_EDITS_TO_SAVE = 93;\n\nexport const SET_PATTERN_TO_EDIT_COLOR = 94;\nexport const SET_PATTERN_COLOR = 95;\n\nexport const SET_COMPACT_MODE = 96;\n\nexport const SET_SHOW_LFOS = 97;\n\nexport const SET_TRACKS_TO_RESAMPLE = 98;\n\nexport const SET_PROJECT_AUTOMATION_MODE = 99;\n\nexport const NEW_SEQUENCE = 100;\n\nexport const SET_STEPS_SELECTION = 101;\nexport const SET_SELECTED_STEPS = 102;\nexport const SET_STEP_NUMBER_DRAGGING_FROM = 103;\n\nexport const SET_ALL_TRACK_PATTERN_LOCKS = 104;\nexport const SET_ALL_ENVELOPE_LOCKS = 105;\nexport const SET_ALL_LFO_LOCKS = 106;\nexport const SET_TRACK_PATTERN_LOCKED = 107;\nexport const SET_TRACK_PATTERN_LOCKS = 108;\nexport const SET_LFO_PATTERN_LOCKS = 109;\nexport const SET_ENVELOPE_PATTERN_LOCKS = 110;\nexport const SET_PIANO_ROLL_PAGINATION = 111;\n\nexport const SET_IS_RESAMPLING = 112;\n\nexport const SET_RESAMPLE_DURATION = 113;\n\nexport const SET_KEY_MAPPINGS = 114;\n\nexport const SET_SHOW_SEQUENCE_MODAL = 115;\n\nexport const SET_MULTI_PARAMETER_SLIDER = 116;\n\nexport const SET_SHOW_MODS_MODAL = 117;\n\nexport const SET_SEQUENCE_ROLLING = 118;\n\nexport const SET_TRACK_EFFECTS_CHAIN = 119;\n\nexport const SET_SHOW_SEQUENCES = 120;\nexport const SET_SHOW_PRESETS = 121;\nexport const SET_SHOW_INSTRUMENTS = 122;\n\nexport const SET_TRACK_ROLLING = 123;\n\nexport const SET_Z_INDEX_HACK = 124;\n\nexport const SET_LOADED_TRACKS = 125;\n\nexport const SET_BPM = 126;\n\nexport const SET_RESAMPLE_MASTER = 127;\n\nexport const SET_YOUTUBE_SEARCH_TERMS = 128;\n\nexport const SET_AUDIO_INPUT_SOURCE = 129;\n\nexport const SET_WAVEFORM_SELECTION = 130;\n\nexport const SET_WAVEFORM_SELECTION_END = 131;\n\nexport const SET_MIDI_MAP_MODE = 132;\nexport const SET_PARAMETER_MIDI_MAP_SELECTION = 133;\nexport const SET_PARAMETER_MIDI_MAPPING = 134;\nexport const DELETE_PARAMETER_MIDI_MAPPING = 135;\n\nexport const SET_LATENCY = 136;\n\nexport const SET_PAD_MAPPINGS = 137;\n\nexport const SET_ACTION_MIDI_MAP_SELECTION = 138;\nexport const SET_ACTION_MIDI_MAPPING = 139;\nexport const DELETE_MIDI_MAPPINGS = 140;\n\nexport const SET_SEQUENCE_PATTERN_LOCKED = 141;\nexport const SET_SEQUENCE_PATTERN_LOCKS = 142;\n\nexport const SET_SPOTLIGHT_TRACKS = 143;\n\nexport const SET_CLOCK_TYPE = 144;\n\nexport const SET_CONNECTION_STATUS = 145;\nexport const SET_CONNECTED_USER_NAME = 146;\nexport const SET_CLOCK_TICK = 147;\nexport const SET_PLAY_SCHEDULED = 148;\nexport const SET_AVAILABLE_USERS_TO_SYNC = 149;\n\nexport const SET_SEARCH_SORT_BY = 150;\n\nexport const SET_MIDI_EFFECT_DRAGGING = 151;\n\nexport const SET_SHOW_TRACK_EFFECTS = 152;\n\nexport const SET_SHOW_CONVOLVER_MODAL = 153;\n\nexport const SET_SHOW_PASSWORD_MODAL = 154;\nexport const SET_PASSWORD_MODAL_CALLBACK = 155;\n\nexport const SET_SHOW_SHARE_SEQUENCE_MODAL = 156;\n\nexport const HIDE_ALL_EFFECTS = 157;\n\nexport const SET_SHOW_ENVELOPES = 158;\n\nexport const SET_EFFECT_COLLAPSED = 159;\n\nexport const SET_CONTEXTUAL_HELP = 160;\n\nexport const SET_SELECTED_LFO = 161;\nexport const SET_SELECTED_ENVELOPE= 162;\n\nexport const SET_SIDEBAR_COLLAPSED = 163;\n\nexport const SET_MIX_EVENTS = 164;\n\nexport const SET_SHOW_GROUPS = 165;\n\nexport const SET_SUB_SEQUENCES = 166;\nexport const SET_CURRENT_SUB_SEQUENCE = 167;\n\nexport const SET_MIX_VIEW_MODE = 168;\n\nexport const SET_SUB_SEQUENCE_FADE = 169;\n\nexport const SET_SAMPLE_SLICES = 170;\n\nexport const SET_SELECTED_ARRANGEMENT_EVENTS = 171;\n\nexport const SET_SHOW_DATE_SAMPLED = 172;\nexport const SET_DATE_SAMPLED = 173;\n\nexport const SET_EFFECT_PARAMETER_VALUES = 174;\n\nexport const SET_TRACK_PANNING = 175;\nexport const SET_GROUP_PANNING = 176;\nexport const SET_SEND_PANNING = 177;\n\nexport const SET_SELECTED_RECORD = 178;\n\nexport const SET_2D_SELECTION = 179;\nexport const SET_SIMILAR_SOUNDS_TO_FIND = 180;\nexport const SET_SHOW_SAMPLES_2D = 181;\n\nexport const SET_LAST_NOTE_PLAYED = 182;\n\nexport const SET_SIDEBAR_VIEW_MODE = 183;\n\nexport const SET_DISCOGS_SELECTED = 184;\n\nexport const SET_SELECTED_FOLDER = 185;\nexport const SET_SELECTED_PRESET = 186;\nexport const SET_HAS_CHANGES_TO_FOLDERS = 187;\n\nexport const SET_CURSOR_TRACK = 188;\nexport const SET_CURSOR_STEP = 189;\nexport const SET_CURSOR_SHOW = 190;\n\nexport const SET_FOLDER_DRAGGING = 191;\nexport const SET_PRESET_DRAGGING = 192;\n\nexport const SET_SAMPLE_DRAGGING = 193;\n\nexport const SET_EFFECTS_CHAIN_TO_SHOW = 194;\nexport const SET_SUB_SEQUENCE_MUTED = 195;\n\nexport const SET_TRACK_FROZEN = 196;\nexport const SET_TRACK_TO_FREEZE = 197;\nexport const SET_FROZEN_TRACK_PLAYING = 198;\nexport const SET_FROZEN_TRACKS = 199;\nexport const SET_FROZEN_TRACKS_PLAYING = 200;\nexport const SET_EFFECTS_CHAINS_TO_SHOW = 201;\nexport const SET_SELECTED_ONSETS = 202;\nexport const SET_SINGLE_STEP_TO_DRAG = 203;\nexport const SET_STEP_NUMBER_DRAGGED_TO = 204;\n\nexport const SET_SEARCH_RESULTS_START = 205;\nexport const SET_SHOW_STEP_OPTIONS = 206;\n\nexport const SET_MASTER_STEP_TOGGLES = 207;\nexport const SET_PARAMETERS_TO_RECORD = 208;\nexport const SET_ONSET_THRESHOLD = 209;\nexport const SET_SHOW_ONSETS = 210;\n\nexport const SET_SELECTED_GUILD = 211;\nexport const SET_CURRENT_AND_GLOBAL_STEPS = 212;\n\nexport const SET_PIANO_ROLL_DRAG_OFFSET= 213;\nexport const SET_PIANO_ROLL_NOTES = 214;\nexport const SET_STEP_AND_DATA_DRAGGING = 215;\n\nexport const SET_SHOW_LOGIN= 216;\nexport const SET_SIGNING_UP= 217;\nexport const SET_USER_TOKEN = 218;\n\nexport const SET_PENDING_TRANSACTIONS = 219;\n\nexport const SET_COMMAND_INPUT = 220;\nexport const SET_COMMAND_PREFIX = 221;\nexport const SET_VI_MODE = 222;\nexport const SET_TRACK_WARP = 223;\nexport const SET_SUB_SEQUENCE_WARPS = 224;\n\nexport const SET_ARRANGEMENT_SELECTION = 225;\nexport const SET_ARRANGEMENT_MOUSE_X = 226;\nexport const SELECT_COMPOUND_EVENT = 227;\nexport const UNSELECT_COMPOUND_EVENT = 228;\n\nexport const SET_ARRANGEMENT_AUTOMATION_TO_SHOW= 229;\nexport const SET_ARRANGEMENT_LOOPING = 230;\n\nexport const SET_ALTERNATE_VIEW_MODE = 231;\nexport const SET_ARRANGEMENT_SELECTED_ROWS = 232;\nexport const SET_ARRANGEMENT_LOOP_SELECTED = 233;\nexport const SET_ARRANGEMENT_ROW_SELECTIONS = 234;\nexport const SET_ARRANGEMENT_ZOOM = 235;\n\nexport const SET_SELECTED_SEQUENCE = 236;\nexport const SET_EXPLORE_MIXER_EFFECT = 237;\nexport const SET_EXPLORE_EQ_EFFECT = 238;\nexport const SET_SELECTED_SEND_EFFECT= 239;\nexport const SET_INSTRUMENT_TYPE_DRAGGING = 240;\nexport const SET_TRACK_IS_LOADING = 241;\n\nexport const SET_PIANO_ROLL_CURSOR = 242;\nexport const SET_ARRANGEMENT_X_SCALE = 243;\nexport const SET_TOTAL_ARRANGEMENT_LENGTH = 244;\nexport const SET_ARRANGEMENT_BOTTOM_HEIGHT = 245;\nexport const SET_ARRANGEMENT_BOTTOM_MODE = 246;\nexport const SET_ARRANGEMENT_BOTTOM_RESIZING = 247;\nexport const SET_ARRANGEMENT_PATTERN_DRAGGING = 248;\nexport const SET_ARRANGEMENT_PATTERN_START_STEP = 249;\nexport const SET_ARRANGEMENT_CURSOR_STEP = 250;\nexport const SET_ARRANGEMENT_PATTERN_RESIZING = 251;\nexport const SET_ARRANGEMENT_BROWSER_MODE = 252;\nexport const SET_SAMPLE_TO_EXPLORE = 253;\nexport const SET_EFFECT_RACK_NODE_POSITION = 254;\n\nexport const SET_ANNOTATION_DRAGGING = 255;\n\nexport const SET_TRACK_AUTOMATION_DEVICE = 256;\nexport const SET_TRACK_AUTOMATION_PARAMETER = 257;\nexport const SET_SHOW_AUTOMATION = 258;\nexport const SET_TRACK_AUTOMATION_SUB_DEVICE = 259;\nexport const SET_PARAMETER_AUTOMATIONS = 260;\n\nexport const SET_ACTIONS_REMAINING = 261;\nexport const SET_TIME_REMAINING = 262;\n\nexport const SET_SHOW_PIANO_ROLL = 263;\n\nexport const SET_SELECTED_RACK_SUB_TRACK= 264;\n\nexport const DELETE_AUTOMATIONS_FOR_PARAMETERS = 265;\n\nexport const SET_TRACK_AUTOMATION_RACK_DEVICE = 266;\nexport const SET_AUTOMATION_GUIDE_POINT = 267;\nexport const SET_AUTOMATION_POINT_DRAGGING  = 268;\nexport const SET_AUTOMATION_POINT_HAS_MOVED= 269;\nexport const SET_AUTOMATION_POINT_HOVERED = 270;\n\nexport const SET_TRACK_TO_CONVERT = 271;\n\nexport const SET_AUTOMATION_SELECTION = 272;\nexport const SET_AUTOMATION_POINTS_SELECTED = 273;\n\nexport const SET_EXPLORE_PERSON_SELECTED = 274;\nexport const SET_EXPLORE_ALL_SEQUENCES = 275;\n\nexport const DELETE_AUTOMATIONS_FOR_ENGINE = 276;\n\nexport const SET_RECORDING_EXPLORE_MIX = 277;\n\nexport const SET_WORKS_LOADED = 278;\n\nexport const SET_WORK_TRANSPOSE = 279;\nexport const SET_WORK_VOLUME = 280;\n\nexport const SET_EXPLORE_MIX_LOADED = 281;\n\nexport const SET_IS_MACRO_MAPPING = 282;\n\nexport const SET_PARAMETER_TO_MAP = 283;\n\nexport const SET_MIX_COLOR_VALUE = 284;\n\nexport const SET_MIX_HAS_EDITS = 285;\nexport const SET_SCRIPT_VARIABLES = 286;\n\nexport const SET_EXPLORE_OPTION = 287;\n\nexport const SET_ANNOTATIONS_VIEW = 288;\n\nexport const SET_EXPLORE_TOAST = 289;\nexport const SET_PARAMETER_SLIDER_DOWN = 290;\n\nexport const MOVE_ENGINE_AUTOMATIONS = 291;\n\nexport const SET_SEQUENCE_LOADING_PROGRESS = 292;\n\nexport const SET_TRACK_BROWSED_SAMPLES = 293;\n\nexport const SET_BOTTOM_TOOLBAR_OFFSET = 294;\n\nexport const SET_TRACK_UPDATES = 295;\n\nexport const SET_IS_TRANSCRIBING = 296;\n\nexport const SET_SAMPLE_TOOLTIP = 297;\nexport const SET_TRACK_BROWSED_PRESETS = 298;\n\nexport const SET_SELECTED_FREEZE = 299;\n\nexport const SET_TRACK_LENGTH_MODE = 300;\nexport const SET_TRACK_LENGTH_CHOICE = 301;\nexport const SET_FREEZE_DRAGGING = 302;\nexport const SET_FREEZE_COLUMN_SAMPLES = 303;\nexport const SET_UPLOADING_FILE = 304;\nexport const SET_GROUP_COLLAPSED = 305;\n\nexport const SET_SELECTED_MIX_EFFECT = 306;\nexport const SET_SAMPLES_DRAGGING = 307;\n\nexport const SET_DISPLAY_RESOLUTION = 308;\n\nexport const SET_OFFLINE_ENGINE = 309;\n\nexport const SET_CURRENT_EXPORT_INFO = 310;\nexport const SET_MIX_TRACK_DRAGGING = 311;\nexport const SET_GROUP_TRACKS = 312;\n\nexport const SET_LOADING_TEXT = 313;\nexport const SET_TRACK_ENVELOPES = 314;\n\nexport const SET_COPIED_NODES_FOR_RACK= 315;\n\nexport const SET_LAST_MIDI_CC_PLAYED = 316;\n\nexport const SET_ARRANGEMENT_MOUSE_DOWN_X = 317;\n\nexport const SET_TRACKER_PARAMETER_TO_EDIT = 318;\n\nexport const SET_TRACKS_TO_HIDE = 319;\n\nexport const SET_SELECTED_PALETTE = 320;\n\nexport const SET_PROJECT_DRAGGING = 321;\n\nexport const SET_EXPLORE_UNPUBLISHED = 322;\nexport const SET_QUICK_ADD_SEARCH_TEXT = 323;\n\nexport const SET_SHOW_TRACK_FREEZE_HISTORY = 324;\nexport const SET_SELECTED_MIDI_TRACK = 325;\n\nexport const SET_SELECTED_TRACK_SLICE = 326;\n\nexport const SET_CIRKLON_PARAMETER_SELECTED = 327;\nexport const SET_CIRKLON_MODE = 328;\n\nexport const SET_NOTES_DOWN = 329;\nexport const SET_SEQUENCED_PALETTE = 330;\n\nexport const SET_SCENES = 331;\nexport const SET_CURRENT_SCENE = 332;\n\nexport const SET_SHOW_SETTINGS = 333;\nexport const SET_WALLPAPER = 334;\nexport const SET_ANIMATE_WALLPAPER = 335;\n\nexport const SET_EXPANDED_PROJECT = 336;\n\nexport const SET_ACCUMULATOR_PARAMETER_SELECTED= 337;\n\nexport const SET_PLANE_MAPPING = 338;\n\nexport const SET_TRACK_PRESET_SAVING = 339;\n\nexport const SET_SAMPLE_TAG_DRAGGING = 340;\n\nexport const SET_PARAMETER_MIX_AUTOMATIONS = 341;\n\nexport const SET_SHOW_ARRANGEMENT_TRACKS= 342;\n\nexport const SET_ARRANGEMENT_PATTERN_SELECTED = 343;\n\nexport const SET_SIDEBAR_SEARCH_INPUT = 344;\n\nexport const SET_SHOW_ARRANGEMENT_SEARCHER = 345;\n\nexport const SET_VI_SELECT_MODE = 346;\n\nexport const SET_EXPLORE_WORK = 347;\n\nexport const SET_CREATING_NEW_PACK = 348;\n\nexport const SET_PACK_WINDOW_POSITION = 349;\n\nexport const SET_DRAGGING_PACK_WINDOW = 350;\n\nexport const SET_PACK_TO_EDIT = 351;\n\nexport const SET_IS_MANAGING_GUILDS= 352;\n\nexport const NEW_STEP_GROUP = 353;\nexport const SET_STEPS_GROUP_MODE = 354;\n\nexport const SET_TRANSFORMATION_EDGE_DRAGGING = 355;\nexport const SET_SHOW_FORMANT_EFFECT = 356;\nexport const SET_SHOWING_FORMANTS= 357;\n\nexport const SET_PULLED_EFFECTS = 358;\n\nexport const SET_LOOPS_TO_FREEZE = 359;\nexport const SET_PARAMETER_MIN_MAX = 360;\n\nexport const SET_CURRENT_SOUND_IN_LIST = 361;\nexport const SET_SHOWING_SOUND_LIST = 362;\nexport const SET_CURRENT_TAG_IN_LIST = 363;\n\nexport const SET_LINKING_EFFECTS = 364;\nexport const SET_PACK_SELECTED = 365;\nexport const SET_SAMPLE_EXPLORER_SELECTED = 366;\n\nexport const SET_PIANO_ROLL_SLIDE = 367;\nexport const SET_MAXIMIZE_EXPLORER = 368;\n\nexport const SET_PADS = 369;\nexport const SET_PAD_SLOTS = 370;\n\nexport const SET_PAD_HOVERED = 371;\n\nexport const SET_WAVEFORM_SHOWING = 372;\nexport const SET_TRACK_DRAGGING = 373;\n\nexport const SET_HIDE_MIXER = 374;\n\nexport const SET_SOURCE_EXPLORING = 375;\nexport const SET_YEAR_EXPLORING = 376;\nexport const SET_PULLABLE_PART_DRAGGING= 377;\nexport const SET_PADS_EXPAND = 378;\n\nexport const SET_SEQUENCERS = 379;\nexport const SET_SEQUENCER_TRACKS = 379;\n\nexport const SET_PLANE_MACROS = 380;\nexport const SET_WINDOW_POSITION = 381;\nexport const SET_PAD_EFFECTS = 382;\nexport const SET_SELECTED_PAD_EDGE = 383;\nexport const SET_DRAWING_PAD_EDGE = 384;\nexport const SET_BULK_EFFECTS_COLLAPSED = 385;\nexport const SET_SELECTED_PULLED_ELEMENTS= 386;\nexport const SET_BULK_WINDOW_POSITIONS = 387;\nexport const SET_EFFECT_PATTERN_LOCKS = 388;\nexport const SET_ALL_EFFECT_PATTERN_LOCKS = 389;\nexport const SET_MODULE_COLLAPSED = 390;\nexport const SET_TRACK_MIDI_EFFECTS = 391;\nexport const SET_EFFECT_STARRED= 392;\nexport const SET_BULK_EFFECTS_STARRED= 393;\nexport const SET_BULK_MODULES_COLLAPSED = 394;\nexport const DELETE_TRACK_ID = 395;\nexport const SET_SHOWING_CONTEXT_MENU = 396;\nexport const SET_HIGHER_ORDER_MATRIX= 397;\nexport const SET_MODULE_COLOR=398;\nexport const SET_MODULES_ROUTING =399;\nexport const SET_HIGHER_ORDER_STEPS_SELECTED=400;\nexport const SET_ORIENTATION_ROUTINGS=401;\nexport const SET_SHOW_HIGHER_ORDER_SEQUENCER=402;\nexport const SET_PLANAR = 403;\n\nexport const SET_PLANAR_GRADIENT_COLOR = 404;\nexport const SET_PLANAR_OPACITY = 405;\n\nexport const SET_MODULE_SIZE = 406;\nexport const SET_INLET_CONNECTIONS = 407;\nexport const SET_ZOBJECTS = 408;\nexport const SET_ZMESSAGES = 409;\n\nexport const SET_BACKGROUND_COLOR = 410;\n\nexport const SET_VIEWABLE_SUBPATCHES = 411;\nexport const SET_SELECTED_ZOBJECT = 412;\n\nexport const SET_JAKI_GRID = 413;\n\nexport const SET_ZOBJECT_TYPE_DRAGGING= 414;\n\nexport const SET_UX_LOCKED = 415;\n\nexport const SET_MINTED_TOKENS = 416;\n\nexport const SET_HIC_DIALOG = 417;\nexport const SET_IS_PREPARING_NFT = 418;\nexport const SET_FULL_SCREEN_ZOBJECT = 419;\n\nexport const SET_MAIN_SCROLL_REF= 420;\nexport const SET_VIEWPORT_POSITION = 421;\nexport const SET_SIDEBARS_SHOWING = 422;\nexport const SET_SHOW_PAD_SEQUENCER = 423;\nexport const SET_SHOW_PROJECTS_MODAL = 424;\nexport const SET_SHOW_SEARCH_WINDOW = 425;\n\nexport const SET_STEP_PARAMETER_SELECTED = 426;\nexport const SET_SHOW_TRACK_INSTRUMENT = 427;\nexport const SET_SHOW_MODULATORS = 428;\n\nexport const SET_CABLE_SEGMENTATION = 429;\nexport const SET_CABLE_SEGMENTATIONS = 430;\n\nexport const SET_UX_LOCK_OBJECT = 431;\nexport const SET_UX_LOCK_OBJECTS = 432;\nexport const SET_UX_HIDE_OBJECT = 433;\nexport const SET_UX_HIDE_OBJECTS = 434;\nexport const SET_ZORA_DIALOG = 445;\nexport const SET_ZOBJECT_INPUT_TEXT = 446;\nexport const SET_VIEWABLE_ZOBJECTS = 447;\nexport const SET_SHOW_EDITOR_BOTTOM = 448;\n\nexport const SET_MINTING_PROGRESS = 449;\nexport const SET_NEW_ZORA_TOKEN_ID = 450;\nexport const SET_TRANSACTION_UPON_LOGIN = 451;\n\nexport const SET_KEYBOARD_CONTEXT = 452;\nexport const SET_PAD_FX_MODE = 453;\nexport const SET_JAKI_GRID_MODE = 454;\nexport const SET_OBJECT_STYLING = 455;\n\n// planar items\n\nexport const SET_SELECTED_PLANAR_PARAMETERS = 456;\nexport const SET_FILTERED_PLANAR_PARAMETERS = 457;\nexport const SET_PLANAR_MACRO_TO_SHOW = 458;\nexport const SET_PLANAR_REGION_MODE = 459;\nexport const SET_GROUP_PRESETS_BY_PACKS = 460;\nexport const SET_PIANO_ROLL_LEFT_SPACE = 461;\nexport const SET_ZOBJECT_SIZE = 462;\nexport const SET_SECONDARY_ZOBJECT = 463;\n\nexport const CLEAR_DRAG_DROP = 464;\n\nexport const SET_SAMPLES_TO_SAVE = 465;\nexport const SET_EDITOR_PADDING = 466;\nexport const SET_EDGES_PADDING = 467;\nexport const SET_EDGES_SIZE = 468;\n\nexport const SET_LEFT_SIDEBAR_WIDTH = 469;\nexport const SET_MOVING_PAD_EDGE = 470;\nexport const SET_DOCUMENTATION_SUB_SECTION = 471;\nexport const SET_RIGHT_SIDEBAR_OPTION = 472;\n\nexport const SET_SELECTED_FM_ENVELOPE_TYPE = 473;\nexport const SET_SELECTED_FM_OPERATOR_DETAILS = 474;\nexport const SET_SELECTED_FM_FORMANT = 475;\nexport const SET_SHOW_SAVE_MODAL = 476;\nexport const SET_ZOBJECT_FLASHING = 477;\nexport const SET_SAMPLE_DOWNLOAD_PROGRESS = 478;\n\nexport const SET_PRESET_SAVED = 479;\n\nexport const SET_COMPLETELY_DONE_LOADING = 480;\nexport const SET_PLUGIN_TO_SAVE = 481;\nexport const SET_SHOW_PLUGINS = 482;\nexport const SET_PLUGINS_LOADED = 483;\nexport const SET_SHOW_PLUGINS_PANE= 484;\nexport const SET_PLUGINS_PANE_HEIGHT = 485;\nexport const SET_DROPPED_SAMPLES = 486;\nexport const SET_SHOW_FORMANT_PRESETS = 487;\nexport const SET_ZOBJECT_BACKGROUND= 488;\nexport const SET_PRESENTATION_MODE = 489;\n\n\nexport const SET_PRESENTATION_WINDOW_POSITION = 490;\nexport const SET_BULK_PRESENTATION_WINDOW_POSITIONS = 491;\n\nexport const SET_SHOW_FREEZE_MODAL = 492;\nexport const SET_THEME = 493;\nexport const SET_SHOW_THEME_GRID = 494;\n\nexport const SET_RECENTLY_ADDED_SOUNDS = 495;\n\nexport const SET_ZOBJECT_TOOLTIP = 496;\n\nexport const SET_ZOBJECTS_STACK= 497;\nexport const SET_ZOBJECT_CONTEXT_MENU = 498;\n\nexport const SET_OBJECT_DRAGGING = 499;\n\nexport const SET_ENABLE_ROLL_VIEWER = 500;\n\nexport const SET_ZOBJECT_MODAL = 501;\nexport const SET_ZOBJECT_PROGRESSBAR = 502;\n\nexport const SET_SHOW_PLAYLIST_MENU= 503;\nexport const SET_CURRENT_PLAYLIST_SONG = 504;\n\nexport const SET_SPORE_TOKEN_ID = 505;\nexport const SET_SOLD_PLAYERS = 506;\nexport const SET_JACKER_SHARE_LINK = 507;\nexport const SET_PENDING_SPORES = 508;\nexport const SET_USED_CHEAT_CODE = 509;\nexport const SET_SECONDS_REMAINING = 510;\n\nexport const SET_PLAYLIST_LOADED = 511;\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {isMobile} from 'react-device-detect';\nimport {setSoldPlayers} from 'actions/index.js';\nimport BuyPlayerFlow from 'components/buy/BuyPlayerFlow.js';\nimport {connect} from 'react-redux';\nimport {useTokensOnSale} from '../hooks/useTokensOnSale.js';\nimport './buy-unsold.scss';\n\nconst BuyUnsold = ({upperGradInverted, soldPlayers=[], tokenId, text, showRemaining, onCompleteSale}) => { \n    let {setTokensOnSale, tokensOnSale} = useTokensOnSale();\n    let [buying, setBuying] = useState(false);\n\n    if (!tokensOnSale || tokensOnSale.length === 0) {\n        return '';\n    }\n\n    let unsold = tokensOnSale.filter(x => x.askPrice);\n    if (unsold.length === 0) {\n        return '';\n    }\n    if (soldPlayers.includes(tokenId)) {\n        return (\n            <div className=\"buy-unsold\">\n              Owned By You\n            </div>);\n    }\n    let style = {};\n    if (upperGradInverted && text) {\n        style.color = upperGradInverted;\n        style.borderBottomColor = upperGradInverted;\n    }\n    return (\n        <div className={text ? \"buy-unsold has-text\" : \"buy-unsold\"}>\n          {buying && <BuyPlayerFlow setCompletedBuy={() => {\n              setSoldPlayers([... soldPlayers, tokenId]);\n              if (onCompleteSale) {\n                  onCompleteSale(); // call optional callback\n              }\n          }} setBuying={setBuying} tokenId={tokenId}/>}\n          <div\n            style={style}\n            onClick={() => setBuying(true)}\n            className=\"buy-unsold-btn pushable\">\n            {text ? text : <span>\n                             Buy SP-{tokenId}\n                           </span>}\n          </div>\n          {((!isMobile && !text) || showRemaining) &&\n           <a\n             href={\"/sp/\" + tokenId}\n             className=\"unsold-remaining\">{unsold.length} remaining</a>}\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n      soldPlayers: state.spore.soldPlayers\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setSoldPlayers: x => dispatch(setSoldPlayers(x))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BuyUnsold);\n","import {ethers} from 'ethers';\n\nexport const signMessage = async (signer, msg) => {\n    let flatSig = await signer.signMessage(msg);\n\n    return {\n        flatSignature: flatSig,\n        splitSignature: ethers.utils.splitSignature(flatSig),\n    };\n};\n   \n","import {signMessage} from './sign.js';\nimport {ipfsHashToBytes32} from 'utils/ipfs.js';\n\nconst sporeMessage = (x) => `A new spore awakens at ipfs://${x}`;\n\nexport const newSpore = (signer, spTokenId, collectionAddress, tokenId, recordingHash, dataHash) => {\n    return new Promise(async (resolve) => {\n        console.log('new spore w data hash=', dataHash);\n        let message = sporeMessage(recordingHash);\n        let {account, flatSignature, splitSignature} = await signMessage(signer, message);\n\n        // now store this signed message on the ropsten contract\n        let {r,s,v} = splitSignature;\n        \n        let body = {\n            r,\n            s,\n            v,\n            message,\n            recordingHash: ipfsHashToBytes32(recordingHash),\n            dataHash: ipfsHashToBytes32(dataHash),\n            tokenId,\n            spTokenId,\n            collectionAddress,\n        };\n        \n        let baseURL = \"https://zequencer.io\";\n        if (window.location.hostname.includes(\"localhost\")) {\n            baseURL = \"\";\n        }\n\n        fetch(baseURL + '/newUnofficialSpore/' , {\n            method: 'POST',\n            body: JSON.stringify(body),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }\n        })\n            .then(resp => resp.json())\n            .then(resp => {\n                resolve(resp.transactionHash);\n            });\n    });\n};\n\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {isMobile} from 'react-device-detect';\nimport {useAudioPlayer} from 'components/hooks/useAudioPlayer.js';\nimport {connect} from 'react-redux';\nimport JollyRancherPlayer from '../spore/JollyRancherPlayer.js';\nimport './heatmap-player.scss';\n\nconst HeatmapPlayer = ({recordingHash, spore, disabled}) => { \n    let {audioPlayer, dispose} = useAudioPlayer(recordingHash);\n    let className = \"heatmap-player \";\n    if (disabled) {\n        className += \" disabled\";\n    }\n    return (\n        <div className={className}>\n          <JollyRancherPlayer width={isMobile ? 250 : 450} height={80} spore={spore}/>\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeatmapPlayer);\n","const CHAOS_COLLECTION = \"0x8427e46826a520b1264b55f31fcb5ddfdc31e349\";\nconst CHAOS_METADATA  = \"https://opensea.mypinata.cloud/ipfs/bafybeic3pw5dd6tsu67mpgcm3mj5x335nfmq7xpesomv3uyuqluv2srsg4/\";\nconst OPEN_SEA_PINATA = \"https://opensea.mypinata.cloud/ipfs/\";\n\nexport const getMetadata = (url) => {\n    return new Promise(resolve => {\n        if (url.startsWith(\"ipfs://\")) {\n            url = \"https://zora-prod.mypinata.cloud/ipfs/\" + url.slice(7);\n        }\n        if (url.includes(\"ipfs.io\")) {\n            url = url.replace(\"ipfs.io\", \"zora-prod.mypinata.cloud\");\n        }\n        console.log(\"URL TO GET IS NOW=\", url);\n        fetch(url).then(\n            r => r.json())\n            .then(\n                r => {\n                    let {animation_url, audio_url} = r;\n                    console.log(\"ANIMATION_URL=%s audio_url=%s\", animation_url, audio_url);\n                    let json = {\n                        ... r\n                    };\n                    if (animation_url) {\n                        if (animation_url.includes(\"ipfs\")) {\n                            json.ipfs = animation_url.slice(7);\n                            json.url =OPEN_SEA_PINATA + animation_url.slice(7);\n                        } else {\n                            json.url = animation_url;\n                        }\n                    };\n                    if (audio_url) {\n                        if (audio_url.includes(\"/ipfs/\")) {\n                            let indexOf = audio_url.indexOf(\"/ipfs\");\n                            json.ipfs = audio_url.slice(indexOf+6);\n                        }\n                    }\n                    resolve(json);\n                });\n    });\n};\n\nexport const jack = async (url, getTokenMetadata) => {\n    console.log(\"chaos called\", url);\n    /*\n    if (url.includes(\"0x8427e46826a520b1264b55f31fcb5ddfdc31e349\")) {\n        // we are in a chaos drop\n        let parts = parse_url(url);\n        let path = parts.path;\n        let splitted = path.split(\"/\").filter(x => x !== \"\");\n        let tokenId = splitted[3];\n        let _url = CHAOS_METADATA + tokenId + \".json\";\n        return await getMetadata(_url);\n    }\n    */\n    if (url.toLowerCase().includes(\"chaos\") || url.includes(\"opensea\") || url.includes(\"zora\") || url.includes(\"sound.xyz\") || url.includes(\"catalog.works\") || url.includes(\"mintsongs.com\")) {\n        console.log('was chaos');\n        // then we need to figure out the \n        let {contract, tokenId, release} = await getParts(url);\n        console.log(\"parts=\", contract, tokenId);\n        let ret = await getZoraAPI(url, release);\n        console.log('zora api=', ret);\n        if (!ret) {\n            let meta = await getTokenMetadata(contract, tokenId);\n            console.log('token metadata we got for tokenId=%s', tokenId, meta);\n            if (!meta) {\n                return undefined;\n            }\n            let x = await getMetadata(meta);\n            if (!x.collectionAddress) {\n                x.collectionAddress  = contract;\n            }\n            if (!x.tokenId ) {\n                x.tokenId = tokenId;\n            }\n            return x;\n        } else {\n            let audio_url = ret.url;\n            let indexOf = audio_url.indexOf(\"/ipfs\");\n            let json = {\n                ... ret.metadata,\n                url: audio_url,\n            };\n            if (!json.collectionAddress) {\n                json.collectionAddress = contract;\n            }\n            if (!json.tokenId ) {\n                json.tokenId = tokenId;\n            }\n            return json;\n        }\n    }\n};\n\nconst getParts = async (url) => {\n\n    let part = \"/ethereum/\";\n    if (url.toLowerCase().includes(\"chaos\")) {\n       var re = /#[1-9]\\d*\\b/g;\n        var matches = url.match(re); \n        console.log(\"matches =\", matches);\n        if (matches[0]) {\n            return {\n                contract: CHAOS_COLLECTION,\n                tokenId: parseInt(matches[0].slice(1))\n            };\n        } else {\n            return {\n                contract: CHAOS_COLLECTION,\n                tokenId: 1\n            };\n        }\n    } else if (url.includes(\"sound.xyz\")) {\n        console.log(\"SOUND XYZ TYPE\");\n        let baseURL = window.location.hostname === \"localhost\" ? \"http://localhost:9090/soundxyz/\" : \"https://zequencer.io/soundxyz/\";\n        if (!window.LOCAL_BACKEND_FLAG) {\n            baseURL = \"https://zequencer.io/soundxyz/\";\n        }\n        let indexOf = url.indexOf(\"sound.xyz\");\n        let soundxyzPath = url.slice(indexOf + 10);\n        let ret = await fetch(baseURL + soundxyzPath);\n        console.log(\"SOUND XYZ returned=\", ret);\n        let json = await ret.json();\n        url = json.contractAddress + \"/\" + 1;\n        let release = soundxyzPath.split(\"/\")[1];\n        return {contract: json.contractAddress, tokenId: \"1\", release};\n    } else if (url.includes(\"catalog.works\")) {\n        console.log(\"CATALOG TYPE\");\n        console.log(\"url container catalog=\", url);\n        let baseURL = window.location.hostname === \"localhost\" ? \"http://localhost:9090/catalog/\" : \"https://zequencer.io/catalog/\";\n        if (!window.LOCAL_BACKEND_FLAG) {\n            baseURL = \"https://zequencer.io/catalog/\";\n        }\n        let str = \"catalog.works/\";\n        let indexOf = url.indexOf(str);\n        let soundxyzPath = url.slice(indexOf + str.length);\n        console.log('sound xyz path =', baseURL + soundxyzPath);\n        let ret = await fetch(baseURL + soundxyzPath);\n        let json = await ret.json();\n        return {contract: json.contractAddress}; //, tokenId: json.tokenId};\n    } else if (url.includes(\"zora.co\")) {\n        part = \"/collections/\";\n    } else if (url.includes(\"mintsongs.com\")) {\n        part = \"/tokens/\";\n    }\n    let indexOf = url.indexOf(part);\n        url = url.slice(indexOf + part.length);\n        let p = url.split(\"/\");\n    if (p[0] === \"zora\") {\n        p[0] = \"0xabEFBc9fD2F806065b4f3C237d4b59D9A97Bcac7\";\n    }\n    return {\n        contract: p[0],\n        tokenId: p[1],\n    };\n};\n\nconst getZoraAPI = async (url, release=\"\") => {\n    if (url.includes(\"zora\")) {\n        let part = \"/collections/\";\n        let indexOf = url.indexOf(part);\n        url = url.slice(indexOf + part.length);\n        let parts = url.split(\"/\")\n        if (parts[0] === \"zora\") {\n            parts[0] = \"0xabEFBc9fD2F806065b4f3C237d4b59D9A97Bcac7\";\n        }\n        url = parts.join(\"/\");\n    } else if (url.includes(\"sound.xyz\")) {\n        //let baseURL = window.location.hostname === \"localhost\" ? \"http://localhost:9090/soundxyz/\" : \"https://zequencer.io/soundxyz/\";\n        let baseURL = \"https://zequencer.io/soundxyz/\";\n        let indexOf = url.indexOf(\"sound.xyz\");\n        let soundxyz = url.slice(indexOf + 10);\n        let ret = await fetch(baseURL + soundxyz);\n        let json = await ret.json();\n        url = json.contractAddress + \"/\" + release;\n    } else {\n        let part = \"/ethereum/\";\n        let indexOf = url.indexOf(part);\n        url = url.slice(indexOf + part.length);\n    }\n    \n    //let baseURL = window.location.hostname === \"localhost\" ? \"http://localhost:9090/jacker/\" : \"https://zequencer.io/jacker/\";\n    let baseURL = \"https://zequencer.io/jacker/\";\n\n//    if (window.location.hostname === \"localhost\" && window.HAS_LOCAL_BACKEND) {\n     //   baseURL =  \"/jacker/\"; \n //   } \n    try {\n        let ret = await fetch(baseURL + url);\n        return await ret.json();\n    } catch(e) {\n        return undefined;\n    }\n};\n \nfunction parse_url(url) {\n    var pattern = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\n    var matches =  url.match(pattern);\n    return {\n        scheme: matches[2],\n        authority: matches[4],\n        path: matches[5],\n        query: matches[7],\n        fragment: matches[9]\n    };\n}\n\nconst isChaos = (url) => {\n    return url.includes(CHAOS_COLLECTION);\n};\n","import React, {useRef, useCallback} from 'react';\nimport {ethers} from 'ethers';\nimport {infuraProvider} from 'wagmi/providers/infura';\nimport { IERC721Metadata__factory} from \"@zoralabs/v3/dist/typechain/factories/IERC721Metadata__factory\";\nimport { useSigner } from 'wagmi';\nconst infuraId = \"2f3dce2af1044e88b4851c3d73c3d00c\";\n\nexport const useTokenMetadata = () => {\n    return getTokenMetadata;\n};\n\nexport const getTokenMetadata = async (contract, tokenId) => {\n    let provider = new ethers.providers.InfuraProvider(\"mainnet\", infuraId);\n    const tokens  = IERC721Metadata__factory.connect(contract, provider);\n    try {\n        tokenId = ethers.BigNumber.from(tokenId);\n        let meta = await tokens.tokenURI(tokenId);\n        return meta;\n    } catch (e) {\n        return undefined;\n    }\n};\n\n","import {jack} from 'jacker/jack.js';\nimport {getTokenMetadata} from 'components/hooks/useTokenMetadata.js';\n\n// JACK is essentially token metadata but standardized in a way that\n// we can use in the platform\nexport const getJackFromToken = async (collectionAddress, tokenId) => {\n    let link = \"https://zora.co/collections/\" + collectionAddress + \"/\" + tokenId;\n    let jacked = await jack(link, getTokenMetadata);\n    return jacked;\n};\n","import { useAccount } from 'wagmi';\nimport {isMobile} from 'react-device-detect';\nimport {CHAOS_COLLECTION} from 'constants/collections.js';\nimport BuyUnsold from 'components/nft-jacker/BuyUnsold.js';\nimport {setPendingSpores} from 'actions/index.js';\nimport {newSpore} from 'spores/newSpore.js';\nimport ipfs from 'decentralized/Ipfs.js';\nimport { useSigner } from 'wagmi';\nimport HeatmapPlayer from 'components/heatmap-player/HeatmapPlayer.js';\nimport {setCurrentPlaylistSong} from 'actions/index.js';\nimport { ConnectButton, lightTheme} from '@rainbow-me/rainbowkit';\nimport React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {useOwnsAnySpore} from 'components/hooks/useOwnsAnySpore.js';\nimport {getJackFromToken} from 'utils/getJackFromToken.js';\n\nconst FinishedUploading = ({\n    recordedRemix,\n    spTokenId,\n    tokenId,\n    collectionAddress,\n    setPendingSpores,\n    complete,\n    usedCheatCode,\n    playlistLoaded,\n    loadJack,\n    currentSong,\n    setCurrentSong\n}) => { \n    const {data: account, isError, isLoading} = useAccount();\n    const {data: signer} = useSigner();\n    let [waitingOnSign, setWaitingOnSign] = useState(false);\n    let [showConnectWallet, setShowConnectWallet] = useState(false);\n    let [completedSale, setCompletedSale] = useState(false);\n    let {recording, sliderData, modeData} = recordedRemix;\n    let [transactionHash, setTransactionHash] = useState(undefined);\n    let isSporeOwner = true; //useOwnsAnySpore() || usedCheatCode || completedSale || collectionAddress === CHAOS_COLLECTION;\n\n    const save = useCallback(async () => {\n        let {dataHash, recordingHash} = recordedRemix;\n        setWaitingOnSign(true);\n        let transactionHash = await newSpore(signer, spTokenId, collectionAddress, tokenId, recordingHash, dataHash);\n        window.localStorage.removeItem(\"recordedRemix\");\n        \n        setTransactionHash(transactionHash);\n        \n        let p = {\n            spTokenId,\n            collectionAddress,\n            tokenId,\n            recordingHash,\n            dataHash,\n        };\n        setPendingSpores([p]);\n\n        let pending = window.localStorage.getItem(\"pending-spores\");;\n        if (pending === null) {\n            pending = [];\n        } else {\n            pending = JSON.parse(pending);\n        }\n        pending = [... pending, p];\n        window.localStorage.setItem(\"pending-spores\", JSON.stringify(pending));\n    }, [signer, spTokenId, recordedRemix, tokenId, collectionAddress, setWaitingOnSign, account]);\n\n    let nextSong = undefined;\n    if (playlistLoaded) {\n        playlistLoaded = playlistLoaded.metadata.playlist;\n        for (let i=0; i < playlistLoaded.length; i++) {\n            let item = playlistLoaded[i];\n            if (item.collectionAddress === currentSong.collectionAddress &&\n                item.tokenId === currentSong.tokenId) {\n                // then we load the next\n                nextSong = playlistLoaded[i+1];\n                break;\n            }\n        }\n    }\n\n\n    const loadNext = useCallback(() => {\n        getJackFromToken(nextSong.collectionAddress, nextSong.tokenId).then(\n            jack => {\n                complete();\n                setCurrentSong(nextSong);\n                loadJack(jack, undefined, !isMobile);\n            });\n    }, [nextSong]);\n\n    let inner = '';\n    if (!account)  {\n        // we need them to connect wallet\n        inner = (\n            <div className=\"inner-spore-recorded\">\n              <div className=\"connect-button-wrapper\">\n                <ConnectButton\n                  accountStatus=\"address\" \n                  showBalance={{ smallScreen: false, largeScreen: false }}\n                  label=\"Connect Wallet\"\n                />\n              </div>\n              <div className=\"sign-helper\">\n                By connecting your wallet, you can etch your identity onto this Remix, where it will live on-chain.\n              </div>\n            </div>\n        );\n    } else if (isSporeOwner) {\n        // they are connected any own a spore\n        if (transactionHash) {\n            // we've done it\n            inner = (\n                <div className=\"sign-recording-container\">\n                  <p>\n                    Your spore is being transmitted on-chain. This will take a few seconds.\n                  </p>\n                  <p>\n                    <a href={\"https://ropsten.etherscan.io/tx/\" + transactionHash}>Etherscan ↗</a>\n                  </p>\n                  {playlistLoaded ?\n                   <div onClick={loadNext}\n                        className=\"continue-remixing-btn pushable\">\n                     Play Next\n                   </div> :\n                   <div onClick={complete} className=\"continue-remixing-btn pushable\">\n                     Continue Mixing\n                   </div>}\n                </div>\n            );\n        } else {\n            // need to sign\n            inner = (\n                <div className=\"sign-recording-container\">\n                  <div\n                    onClick={save}\n                    className=\"pushable sign-btn\">\n                    Sign & Upload\n                  </div>\n                  <div className=\"sign-helper\">\n                    {waitingOnSign ? `\nPlease now go to your wallet to sign the message. This costs no-gas, so no-stress.\n` : \n                    `In order to transmit this remix on-chain, you'll need to sign a message\n                    with your wallet. This costs no-gas, so no-stress.`}\n                  </div>\n                </div>\n            );\n        }\n    } else {\n        // connected but dont own so they must buy\n        inner = (\n            <div className=\"spores-buy-helper\">\n              Buy a <i>Genesis Spore</i> to etch your wallet address onto this Remix where it will live on-chain.\n              <BuyUnsold\n                onCompleteSale={() => setCompletedSale(true)}\n                showRemaining={true}\n                text={\"Buy SP-\" + spTokenId}\n                tokenId={spTokenId}/>\n \n            </div>\n        );\n    }\n\n    // should show a greyed out heatmap containing the song if not connected\n\n    return (\n        <div className=\"spore-recorded-dialog\">\n          <div className=\"spore-header\">\n            Spores recorded your remix.\n          </div>\n          <HeatmapPlayer disabled={!isSporeOwner} spore={recordedRemix}/>\n          {inner}\n        </div>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n      usedCheatCode: state.spore.usedCheatCode,\n      playlistLoaded: state.playlist.playlistLoaded,\n      currentSong: state.playlist.currentSong,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setPendingSpores: x => dispatch(setPendingSpores(x)),\n\n      setCurrentSong: x => dispatch(setCurrentPlaylistSong(x))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FinishedUploading);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './modal.scss';\n\nconst Modal = ({children, hide}) => { \n    return (\n        <div\n          onClick={hide}\n          className=\"spore-modal-backdrop\">\n          {/*<iframe className=\"modal-iframe\" src=\"https://zequencer.mypinata.cloud/ipfs/QmdgpJjL3v3wc9B7cvS66Av4yrXrnGDEpMi3rUAq9t3gHU/\"/>*/}\n         <div\n            onClick={e => e.stopPropagation()}\n            className=\"spore-modal-dialog\">\n           <div className=\"logo-container\">\n             <img\n               onClick={() => hide()}\n               className=\"pushable spores-logo\" src=\"/spores-logo-black.svg\"/>\n           </div>\n            {children}\n          </div>\n        </div>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport FinishedUploading  from './FinishedUploading.js';\nimport ipfs from 'decentralized/Ipfs.js';\nimport Modal from 'components/modal/Modal.js';\nimport UnknownProgressBar from 'components/progressbar/UnknownProgressBar.js';\nimport {connect} from 'react-redux';\nimport {getSporeRemixes} from 'spores/getSporeRemixes.js';\nimport './recording.scss';\n\nconst SporeRecorded = ({\n    recordedRemix,\n    uploadingRemix,\n    spTokenId,\n    tokenId,\n    collectionAddress,\n    onRemixSigningCompleted,\n    loadJack\n}) => { \n    let [savedToLocal, setSavedToLocal] = useState(true);\n    useEffect(() => {\n        window.localStorage.setItem(\"recordedRemix\", {\n            recordedRemix,\n            tokenId,\n            spTokenId,\n            collectionAddress,\n        });\n        setSavedToLocal(true);\n    }, [recordedRemix, setSavedToLocal, tokenId, collectionAddress, spTokenId]);\n\n    if (!recordedRemix && !uploadingRemix) {\n        return '';\n    }\n    return (\n        <Modal hide={e => []}>\n          {!recordedRemix || !savedToLocal ?\n           <div className=\"spore-recorded-dialog\">\n             <div className=\"spore-header\">\n               Spores recorded your remix.\n             </div>\n             <div className=\"uploading-text\">\n               Processing your new sound.\n             </div>\n             <div className=\"progress-container\">\n               <UnknownProgressBar width={180}/>\n             </div>\n           </div> : \n           <FinishedUploading\n             spTokenId={spTokenId}\n             tokenId={tokenId}\n             complete={onRemixSigningCompleted}\n             collectionAddress={collectionAddress}\n             recordedRemix={recordedRemix}\n             loadJack={loadJack}\n           />\n}\n        </Modal>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SporeRecorded);\n","\nimport {isMobile} from 'react-device-detect';\nimport PlayButton from '../buttons/PlayButton.js';\nimport React, { useRef, useEffect, useCallback, useState} from 'react';\nimport SongWaveform from 'components/waveform/SongWaveform.js';\nimport {connect} from 'react-redux';\nimport './shuffle.scss';\n\nconst WIDTH = 330;\n\nconst ShuffleButton = ({hideWaveform, isWaveformRainbow, buttonTextColor, playerRef, innerControls}) => { \n    let width = innerControls ? window.innerWidth :  WIDTH;\n    let ref = useRef();\n    let scrubRef = useRef();\n    let [waveform, setWaveform] = useState();\n    let [progress, setProgress] = useState(0);\n    let [playing, setPlaying] = useState(0);\n    let [started, setStarted] = useState(false);\n    let [scrubbing, setScrubbing] = useState(false);\n    let off = useRef(0);\n    let [scrub, setScrub] = useState(undefined);\n    \n\n    useEffect(() => {\n        window.addEventListener(\"mouseup\", finishScrub);\n        window.addEventListener(\"mousemove\", onMouseMove);\n        window.addEventListener(\"touchmove\", onMouseMove);\n        return () => {\n            window.removeEventListener(\"mouseup\", finishScrub);\n            window.removeEventListener(\"mousemove\", onMouseMove);\n            window.removeEventListener(\"touchmove\", onMouseMove);\n        }\n    }, [scrubbing, setScrub, setScrubbing]);\n\n    const finishScrub = useCallback(() => {\n        setScrubbing(false);\n    }, [setScrubbing]);\n\n    useEffect(() => {\n        window.addEventListener(\"message\", onMessage, false);\n        return x => window.removeEventListener(\"message\", onMessage, false);\n    }, [setProgress, setPlaying, setStarted, setWaveform]);\n\n    const onMessage = useCallback(e => {\n        if (e.data.type === \"waveform-data\") {\n            setWaveform(e.data.body);\n        }\n        if (e.data.type === \"song-player-progress\") {\n            let progress = parseInt(e.data.body);\n            setProgress(progress);\n        }\n        if (e.data.type === \"jacker-playback-status\") {\n            let playing = parseInt(e.data.body);\n            setPlaying(playing);\n            if (playing) {\n                setStarted(true);\n            }\n        }\n    }, [started, setProgress, setPlaying, setStarted, setWaveform]);\n\n    const onPlayClicked = useCallback(() => {\n        playerRef.current.contentWindow.postMessage({\n            type: \"jacker-pause-toggle\",\n            body: true,\n        }, \"*\");\n    }, []);\n\n    const onMouseMove = useCallback((e) => {\n        if (!scrubbing) {\n            return;\n        }\n        if (e.touches) {\n            e = e.touches[0];\n        }\n\n        let rect = ref.current.getBoundingClientRect();\n        let x = e.clientX - rect.left;\n        let percent = (x / width) * 100;\n        percent = Math.max(0, Math.min(100, percent));\n        setScrub(percent);\n        playerRef.current.contentWindow.postMessage({\n            type: \"jacker-seek\",\n            body: percent\n        }, \"*\");\n    }, [scrubbing, setScrub]);\n\n    let className = \"shuffle-buttons\";\n\n    if (!started) {\n        return '';\n    }\n\n    let style = {\n        borderColor: buttonTextColor\n    };\n\n    progress = scrubbing && scrub ? scrub : progress;\n    return (\n        <div\n          onMouseDown={(e) => {\n              setScrubbing(true);\n              onMouseMove(e);\n          }}\n          onTouchStart={(e) => {\n              setScrubbing(true);\n              onMouseMove(e);\n          }}\n          className={className}>\n          {!hideWaveform && <SongWaveform progress={progress} waveform={waveform} isWaveformRainbow={isWaveformRainbow}/>}\n          <div className=\"play-and-slider\">\n          <PlayButton color={buttonTextColor} style={style} isPlaying={playing} play={onPlayClicked}/>\n          <div\n            ref={ref}\n            style={style} className=\"slider-container\">\n            <div\n              style={{\n                  backgroundColor: buttonTextColor,\n                  width: width*(100-progress)/100,\n                  left: width*progress/100}} className=\"slider-inner\"/>\n            <div\n              ref={scrubRef}\n              onMouseDown={(e) => {\n                  e.stopPropagation();\n                  setScrubbing(true);\n              }}\n              onTouchStart={(e) => {\n                  e.stopPropagation();\n                  setScrubbing(true);\n              }}\n              style={{\n                  backgroundColor: buttonTextColor,\n                  left: width*progress/100}} className=\"slider-scrubber\"/>\n          </div>\n          </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShuffleButton);\n","import React, {useState, useEffect, useCallback} from 'react';\nimport {getRemixByNumber} from 'spores/getSporeRemixes.js';\nimport ipfs from 'decentralized/Ipfs.js';\n\nexport const useRemixListener = (clear, playerRef, remixId) => {\n    let [recordedRemix, setRecordedRemix] = useState();\n    let [uploadingRemix, setUploadingRemix] = useState(window.TEST_REMIX_UPLOAD_FLAG);\n    let [remixToPlay, setRemixToPlay] = useState();\n\n    useEffect(() => {\n        if (remixId) {\n            getRemixByNumber(remixId).then(\n                x => {\n                    setRemixToPlay(x);\n                });\n        }\n    }, [remixId]);\n\n    useEffect(() => {\n        if (window.TEST_REMIX_UPLOAD_FLAG) {\n            setTimeout(() => {\n                setRecordedRemix(\"@mmmmm\");\n            }, 5000);\n        }\n    }, []);\n    \n    const onRemixSigningCompleted = useCallback(() => {\n        clear();\n        setRecordedRemix(undefined);\n        setUploadingRemix(undefined);\n        if (playerRef.current) {\n            /*\n            playerRef.current.contentWindow.postMessage({\n                \"type\": \"jacker-stop\",\n                \"body\": \"jacker-stop\",\n            }, \"*\");\n            */\n        }\n    }, [setRecordedRemix, setUploadingRemix, clear]);\n\n    useEffect(() => {\n        window.addEventListener(\"message\", onMessage, false);\n        return () => window.removeEventListener(\"message\", onMessage);\n    }, [setRecordedRemix, setUploadingRemix]);\n\n    const onMessage = useCallback(e => {\n        let data = e.data;\n        if (data.type === \"uploadingRecording\") {\n            if (playerRef.current) {\n                playerRef.current.contentWindow.postMessage({\n                    type: \"jacker-stop\",\n                    body: \"please\"\n                }, \"*\");\n            }\n            setUploadingRemix(true);\n        } else if (data.type == \"sporeRecorded\") {\n            let json = {\n                sliderChanges: data.body.sliderData,\n                modeChanges: data.body.modeData\n            };\n            ipfs.addJson(json).then(\n                hash => {\n                    setRecordedRemix({\n                        recordingHash: data.body.recording,\n                        dataHash: hash\n                    });\n                });\n        }\n    }, [setRecordedRemix, setUploadingRemix]);\n\n    return {recordedRemix, uploadingRemix, onRemixSigningCompleted, remixToPlay, setRemixToPlay};\n};\n","import React, { useRef, useState, useEffect } from 'react';\nimport SimpleControls from './SimpleControls.js';\nimport {isMobile} from 'react-device-detect';\nimport SampleInfo from 'components/samples/SampleInfo.js';\nimport {useAccount} from 'wagmi';\nimport VideoShader from 'components/video/VideoShader.js';\nimport SporeRecorded from 'components/recording/SporeRecorded.js';\nimport { useSporeEmbed } from 'components/hooks/useSporeEmbed.js';\nimport { useSporeListener } from 'components/hooks/useSporeListener.js';\nimport SporeControls from 'components/nft-jacker/ShuffleButton.js';\nimport {useRemixListener} from 'components/hooks/useRemixListener';\nimport './spore-embed.scss';\n\nconst CID = 'QmWV7gqvBeXT9VVYEEL5J9oGEvQFDjYZZ4rgGYz9JDk3h7';\nconst DEFAULT_SPORE_URL = `https://zequencer.mypinata.cloud/ipfs/${CID}/?tokenId=40&gallery=true`;\n\nexport default ({\n    simpleControls,\n    zorbId,\n    isFullScreen,\n    songTitle=\"Yo\",\n    collectionAddress,\n    tokenId,\n    artist,\n    hideWaveform,\n    thumbnail,\n    setStems,\n    stems,\n    isWaveformRainbow,\n    url= 'https://zequencer.mypinata.cloud/ipfs/QmNejpqTsVw3W3872o85XhWiKVG6gUchVJTvS4uUj2fUrC',\n    innerControls,\n    hideControls,\n    children,\n    playerRef,\n    isSimple,\n    color=\"white\",\n}) => {\n    console.log(\"HIDE WAVEFORM=\", hideWaveform);\n\n    const {data: account, isError, isLoading} = useAccount();\n    const ref = playerRef || useRef();\n\n    let {totalRemixes, recordedRemix, uploadingRemix, onRemixSigningCompleted, remixToPlay, setRemixToPlay} = useRemixListener(\n        () => [],\n        ref\n    );\n\n    const {loaded} = useSporeListener(ref);\n\n    useEffect(() => {\n        console.log('zorb id=', zorbId);\n        if (loaded && zorbId) {\n            ref.current.contentWindow.postMessage({\n                body: zorbId,\n                type: \"zorb-id\"\n            }, \"*\");\n        }\n    }, [zorbId, loaded]);\n    useEffect(() => {\n        if (!loaded) {\n            return;\n        }\n        return;\n        console.log('sending unlocked loops=', stems);\n        setTimeout(() => {\n            ref.current.contentWindow.postMessage({\n                type: \"unlocked-loops\",\n                body: stems\n            }, \"*\");\n        }, 1000);\n    }, [stems, loaded]);\n\n    return (\n        <div className=\"spore-embed-container\">\n          {children}\n          <SporeRecorded\n            uploadingRemix={uploadingRemix}\n            recordedRemix={recordedRemix}\n            collectionAddress={collectionAddress}\n            spTokenId={1}\n            onRemixSigningCompleted={onRemixSigningCompleted}\n            tokenId={tokenId}\n            playerRef={ref}/>\n          {thumbnail && <img src={thumbnail} className={\"cover-image\"}/>}\n          <div className={\"spore-embed-helper\"}>\n            {!hideControls && innerControls &&\n             <SporeControls\n               hideWaveform={hideWaveform}\n               innerControls={innerControls}\n               isWaveformRainbow={isWaveformRainbow}\n               buttonTextColor={color} playerRef={ref} />}\n            <div className=\"song-title\">\n              {songTitle}\n            </div>\n            <div className=\"song-artist\">\n              {artist}\n            </div>\n            {!isSimple && <div className=\"stems-unlocked\">\n              {Math.min(11, stems)} / 11 STEMS UNLOCKED\n              </div>}\n          </div>\n          <div className={\"flex w-full\"}>\n            <iframe\n              className={\"spore-embed z-20 mx-auto\"}\n              width={isFullScreen ? window.innerWidth : 340}\n              height={isFullScreen ? window.innerHeight : 400}\n              ref={ref}\n              src={url}\n            />\n            {simpleControls && <SimpleControls playerRef={ref}/>}\n        {!hideControls && !innerControls && <SporeControls\n              isWaveformRainbow={isWaveformRainbow}\n                                              hideWaveform={hideWaveform}\n                                              buttonTextColor={color} playerRef={ref} />}\n            {!isMobile && !hideWaveform && <SampleInfo playerRef={ref}/>}\n          </div>\n        </div>\n  )\n}\n","import React, { useEffect, useCallback, useState} from 'react';\n\nexport const useSporeListener = (ref) => {\n    const [loaded, setLoaded] = useState(false);\n    useEffect(() => {\n        window.addEventListener(\"message\", onReceive, false);\n        return () => window.removeEventListener(\"message\", onReceive);\n    }, [setLoaded]);\n\n    const onReceive = useCallback((e) => {\n        if (e.origin !== \"https://zequencer.mypinata.cloud\") {\n            return;\n        }\n        if (e.data === \"Finished Loading Project\") {\n            // we are ready to send in the song via an iframe message\n            setLoaded(true);\n        }\n  \n    }, [setLoaded]);\n\n    return {loaded};\n};\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {getSporeRemixes} from 'spores/getSporeRemixes.js';\nimport RemixPlayer from 'components/remix/RemixPlayer.js';\nimport RemixList from '../remix/RemixList.js';\nimport { ConnectButton, lightTheme} from '@rainbow-me/rainbowkit';\nimport BuyPlayerFlow from 'components/buy/BuyPlayerFlow.js';\nimport Glossary from './Glossary.js';\nimport {connect} from 'react-redux';\nimport SporeEmbed from 'components/player/SporeEmbed.js';\nimport '../nft-jacker/nft-jacker.scss';\nimport './drop.scss';\n\nconst CREATORS_TO_IGNORE = [\"0xdc94060e37dcb8816188508536595019c8f0c98a\", \"0x0fb5e3b3f254cbdccd69d31bcb0e92b83d381a0a\"];\nconst Drop = ({simpleControls, zorbId, url, className, color, hideWaveform, collectionAddress, isSimple, thumbnail, tokenId, askPrice=\"2\", songTitle, artist, isFullScreen, children}) => { \n    const [buying, setBuying] = useState(false);\n    const [stems, setStems] = useState(3);\n    const [remixToPlay, setRemixToPlay] = useState();\n\n    useEffect(() => {\n        getSporeRemixes(collectionAddress, tokenId).then(\n            s => {\n                s = s.filter(x => !CREATORS_TO_IGNORE.includes(x.creator))\n                let remixes = Math.max(0, s.length-1);\n                setStems(3 + remixes);\n            });\n    }, []);\n\n    return (\n        <div className={className ? \"drop nft-jacker jacked \" + className : \"drop nft-jacker jacked\"}>\n          {remixToPlay && <div className=\"remix-backdrop\"><RemixPlayer artist={artist} songName={songTitle} setRemix={setRemixToPlay} remix={remixToPlay}/></div>}\n          {buying && <BuyPlayerFlow\n                       name=\"SPX-1\"\n                       askPrice={askPrice} tokenId={1} thumbnail=\"/inmysoul-cover.jpeg\" setBuying={setBuying}/>}\n          <div className=\"connect-button-wrapper drop-top\">\n            <ConnectButton\n              accountStatus=\"address\" \n              showBalance={{ smallScreen: false, largeScreen: false }}\n              label=\"Connect Wallet\"\n            />\n          </div>\n          <SporeEmbed\n            zorbId={zorbId}\n            simpleControls={simpleControls}\n            collectionAddress={collectionAddress}\n            color={color}\n            isFullScreen={isFullScreen}\n            isSimple={isSimple}\n            tokenId={tokenId}\n            stems={stems}\n            isWaveformRainbow={false}\n            songTitle={songTitle}\n            hideWaveform={hideWaveform}\n            thumbnail={thumbnail} \n            artist={artist}\n            url={url}\n          />\n          <div className=\"drop-description\">\n            {children}\n            {/* <div className=\"buy-button\">\n              <div className=\"action\">\n                <a target=\"_blank\" href={`https://zora.co/collections/${collectionAddress}/${tokenId}`}>BID ON ZORA ↗</a>\n              </div>\n              <div className=\"asking-price\">\n                <div className=\"price-label\">RESERVE</div>\n                <div className=\"price\">{askPrice} ETH</div>\n              </div>\n            </div> */}\n            {<RemixList\n              spTokenId=\"SP - IN MY SOUL\"\n              remixToPlay={remixToPlay}\n              setRemixToPlay={setRemixToPlay}\n              creatorsToIgnore={CREATORS_TO_IGNORE}\n              collectionAddress={collectionAddress}\n              tokenId={tokenId}\n                            clear={() => []}/>}\n            {!isSimple && <div className=\"drop-features\">\n              LISTEN. PLAY. JUICE. PITCH UP. GATE. WOBBLE. STUTTER. LOOP. SPACE. PITCH DOWN. REMIX.\n                          </div>}\n        {!isSimple && <div className=\"spore-overview\">\n              <div className=\"overview-header\">\n                SPORE OVERVIEW\n              </div>\n              <img src=\"/spore.svg\" className=\"spore-overview-image\"/>\n                      </div>}\n            {!isSimple && <Glossary/>}\n         </div>\n       </div>);\n};\n\nexport default Drop;\n","import ZorbAnimation from './ZorbAnimation.js';\nimport {useZporeHide} from './useZporeHideUI.js';\nimport ZorbSelector from './ZorbSelector.js';\nimport { useAccount } from 'wagmi';\nimport React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './zpore.scss';\nimport Drop from './Drop.js';\nimport './thugger.scss';\nimport './nextgen.scss';\n\n//const CID = \"QmWEEvyNZmr3kngUjE8TNRRC5FmnXZLC1TdQk87UYe1cQL\";\nconst CID = \"QmRYAX9fftcF7im23VAESYoa75FRK19rrHKBghUzUWuJUG\";\n\nconst Zpore = (props) => { \n    let [entered, setEntered] = useState(false);\n    let [remove, setRemove] = useState(false);\n    let [zorbId, setZorbId] = useState(undefined);\n    let [insertedZorb, setInsertedZorb] = useState();\n    let [zorbStartPosition, setZorbStartPosition] = useState(undefined);\n    const {hideUI} = useZporeHide();\n    const {data: account, isError, isLoading} = useAccount();\n\n    useEffect(() => {\n        if (zorbId !== undefined) {\n            setTimeout(() => {\n                setInsertedZorb(zorbId);\n            }, 1000);\n        }\n    }, [zorbId, setInsertedZorb]);\n\n    useEffect(() => {\n        if (entered) {\n            setTimeout(() => {\n                setRemove(true);\n            }, 1000);\n        }\n    }, [entered, setRemove]);\n\n    let className = \"next-gen zpore\";\n    if (account) {\n        className += \" connected\";\n    }\n    if (hideUI) {\n        className += \" hide-ui\";\n    }\n    return (\n        <div className={className}>\n           <ZorbSelector\n            account={account}\n            setZorbId={setZorbId}\n            zorbId={zorbId}\n                        setZorbStartPosition={setZorbStartPosition}/>\n          {entered && zorbStartPosition && <ZorbAnimation setZorbStartPosition={setZorbStartPosition} zorbStartPosition={zorbStartPosition}/>}\n          {!remove && <div className={!entered ? \"enter-overlay\" : \"enter-overlay hide\"}>\n                        <div\n                          onClick={() => setEntered(true)}\n                          className=\"inner-overlay\">\n                          <img\n                            className=\"\"\n                            src=\"/spore-logo-future3.png\"/>\n                          <div className=\"click-text\">\n                            Click to Enter\n                          </div>\n                        </div>\n                      </div>}\n        <Drop\n          zorbId={insertedZorb}\n          hideWaveform={true}\n          color=\"black\"\n          url={`https://zequencer.mypinata.cloud/ipfs/${CID}/?tokenId=32&gallery=true`}\n          collectionAddress=\"0x0000000000000000000000000000000000000001\"\n          isFullScreen={true}\n          simpleControls={true}\n          tokenId={1}\n          className=\"thugger\"\n          artist=\"Keyon Christ\"\n          isSimple={true}\n          songTitle=\"Psilocybin\">\n        {entered && <div className=\"slides\">\n            <img className=\"slide\" src=\"/spores-17.jpg\"/>\n                    </div>}\n        </Drop>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Zpore);\n","import {useState, useEffect, useCallback} from 'react';\nimport React from 'react';\n\nexport const useZporeHide = () => {\n    const [hideUI, setHideUI] = useState(false);\n\n    useEffect(() => {\n        window.addEventListener(\"message\", onMessage);\n    }, [setHideUI]);\n\n    const onMessage = useCallback((e) => {\n        if (e.data.type === \"multi-zorb-enabled\") {\n            setHideUI(e.data.body);\n        }\n    }, [setHideUI]);\n\n    return {hideUI};\n};\n","\nimport React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './timer.scss';\n\nconst TimeRemaining = ({secondsRemaining, color}) => { \n    secondsRemaining = Math.floor(secondsRemaining);\n    if (secondsRemaining > 20 || isNaN(secondsRemaining)) {\n        return '';\n    }\n    if (secondsRemaining < 10) {\n        secondsRemaining = '0'+secondsRemaining;\n    }\n    let className = secondsRemaining%2 === 1 ? \"time-remaining fade\" : \"time-remaining\";\n    return (\n        <div className={className} style={{color}}>\n          0:{secondsRemaining}\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n      secondsRemaining: state.spore.secondsRemaining\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TimeRemaining);\n","import {CHILL_RX_COLLECTION} from 'constants/collections.js';\n\n// as songs come in edit this list w/ their name directly\nconst SONG_NAMES = [\n    \"Chill Song 1\",\n    \"Chill Song 2\",\n    \"Chill Song 3\",\n    \"Chill Song 4\",\n    \"Chill Song 5\",\n    \"Chill Song 6\",\n    \"Chill Song 7\",\n    \"Chill Song 8\",\n    \"Chill Song 9\",\n    \"Chill Song 10\",\n];\n\nconst SONG_TO_TOKENS = {\n    1: [1,2,3],\n    2: [4,5,6],\n    3: [7,8,9],\n    4: [10,11,12],\n    5: [13,14,15],\n    6: [16,17,18],\n    7: [19,20,21],\n    8: [22,23,24],\n    9: [25,26,27],\n    10: [28,29,30],\n};\n\nexport const getChillRXSongs = () => {\n    let songs = [];\n    for (let i=1; i <= SONG_NAMES.length; i++) {\n        songs.push({\n            songName: SONG_NAMES[i-1],\n            name: SONG_NAMES[i-1],\n            collectionAddress: CHILL_RX_COLLECTION,\n            coverArt: \"/crx-\" + i + \".png\",\n            tokenId: 1000, // todo: this will be randomly chosen of the actual tokenIds for htis song\n            songId: i,\n            tokenIds: SONG_TO_TOKENS[i]\n        });\n    }\n    return songs;\n};\n\nexport const getChillTokenId = (tokenId) => {\n    console.log(getChillRXSongs);\n    let song = getChillRXSongs().find(x => x.tokenIds.includes(parseInt(tokenId)));\n    console.log('song we found');\n    song = {\n        ... song,\n        tokenId\n    };\n    return song;\n}\n","const PINATAS = {\n    \"mintsongs\": \"mintsongs\",\n    \"zora\": \"zora-prod\",\n    \"sound.xyz\": \"soundxyz\",\n    \"zequencer\": \"zequencer\",\n    \"catalog\": \"catalog\",\n};\n\nexport const extractIPFS = (link) => {\n    if (link.startsWith(\"ipfs://\")) {\n        return link.slice(\"ipfs://\".length);\n    }\n    let part = \"/ipfs/\";\n    let index = link.indexOf(part);\n    let sliced = link.slice(part.length + index);\n    return sliced;\n};\n\nexport const getGatewayLink = (externalLink, ipfs) => {\n    if (!externalLink) {\n        console.log(\"NO EXTERNAL LINK FOUND FOR THIS LINK!\");\n        return \"https://zora-prod.mypinata.cloud/ipfs/\" + ipfs;\n    }\n    for (let type in PINATAS) {\n        if (externalLink.includes(type)) {\n            return \"https://\" + PINATAS[type] + '.mypinata.cloud/ipfs/' + ipfs;\n        }\n    }\n    return \"https://zora-prod.mypinata.cloud/ipfs/\" + ipfs;\n};\n","\nimport ipfs from 'decentralized/Ipfs.js';\nexport const save = async (json) => {\n    console.log(\"saving json=\", json);\n    let hash = await ipfs.addJson(json);\n    // save the hash and name\n\n    let baseURL = window.location.hostname === \"localhost\" ? \"http://localhost:9090/saveJack/\" : \"https://zequencer.io/saveJack/\";\n    if (!window.LOCAL_BACKEND_FLAG) {\n        baseURL = \"https://zequencer.io/saveJack/\";\n    }\n    fetch(baseURL, {\n        method: \"POST\",\n         headers: {\n             'Accept': 'application/json',\n             'Content-Type': 'application/json'\n         },\n        body: JSON.stringify({\n            data: hash,\n            title: json.name,\n            jack: json\n        })\n    });\n};\n\nexport const saveWaitlist = async (address, message) => {\n    let baseURL = window.location.hostname === \"localhost\" ? \"http://localhost:9090/sporeWaitlist/\" : \"https://zequencer.io/sporeWaitlist/\";\n    if (!window.LOCAL_BACKEND_FLAG) {\n        baseURL = \"https://zequencer.io/sporeWaitlist/\";\n    }\n    fetch(baseURL, {\n        method: \"POST\",\n         headers: {\n             'Accept': 'application/json',\n             'Content-Type': 'application/json'\n         },\n        body: JSON.stringify({\n            address,\n            message\n        })\n    });\n};\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport ipfs from 'decentralized/Ipfs.js';\n\nlet cache = {};\nconst HistoryItemSource = ({item}) => { \n    let [data, setData] = useState();\n    useEffect(() => {\n        if (cache[item.data]) {\n            setData(cache[item.data]);\n        }\n        ipfs.getJson(item.data).then((data) => {\n            cache[item.data] = data;\n            setData(data);\n        });\n    }, [item]);\n\n    if (!data) {\n        return '';\n    }\n\n    return (<div className=\"history-item-source\">\n              {!item.title.includes(data.artist) && data.artist}\n              {data.link && <Source link={data.link}/>}\n            </div>);\n};\n\n\nexport const Source = ({link, textColor}) => {\n    let source = '';\n    if (link.includes('zora')) {\n        source = 'zora';\n    } else if (link.includes(\"catalog.works\")) {\n        source = 'catalog.works';\n    } else if (link.includes(\"mintsongs\")) {\n        source = 'mintsongs';\n    } else if (link.includes(\"sound.xyz\")) {\n        source = 'sound.xyz';\n    } else if (link.includes(\"opensea\")) {\n        source = 'OpenSea';\n    }\n\n    return (<div style={{color: textColor}} className=\"source\">{source}</div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HistoryItemSource);\n","export function shuffle(array) {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n","import HistoryItemSource from './HistoryItemSource.js';\nimport {shuffle} from 'utils/shuffle.js';\nimport {getTokensOnSale} from 'components/hooks/useTokensOnSale.js';\nimport {isMobile} from 'react-device-detect';\nimport React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './history.scss';\nimport ipfs from 'decentralized/Ipfs.js';\n\nlet cachedTokens = undefined;\nexport const KEYON_SONGS = async () => {\n    let tokensOnSale = cachedTokens || await getTokensOnSale();\n    cachedTokens = tokensOnSale;\n\n    let unsold = tokensOnSale.filter(x => x.askPrice);\n    shuffle(unsold);\n    let [a,b,c] = unsold;\n    a = a ? a.tokenId : 12;\n    b = b ? b.tokenId : 14;\n    c = c ? c.tokenId : 18;\n    return [\n        {\n            bpm: 90,\n            title: \"Keyon Christ - Psilocybin\",\n            isSporeTrack: true,\n            metadata: {\n                tokenId: a,\n                artist: \"Keyon Christ\",\n                name: \"Psilocybin\",\n                url: \"https://zequencer.mypinata.cloud/ipfs/QmeuwQQnjdqd51Uo1xkXLawYwYfXSq7T8h2mEWuJx7wHdx\",\n                link: \"/sp/\" + a,\n                image: \"/sp-thumbnail-\" + a + \".png\"\n            }\n        },\n        {\n            bpm: 106,\n            title: \"Keyon Christ - Twisting Faith\",\n            isSporeTrack: true,\n            metadata: {\n                tokenId: b,\n                link: \"/sp/\" + b,\n                artist: \"Keyon Christ\",\n                name: \"Twisting Faith\",\n                url: \"https://zequencer.mypinata.cloud/ipfs/QmU6rmmjWWXCZd3NHjeu6pUVjBDZiMXuRx6EVtEocqz9dJ\",\n                image: \"/sp-thumbnail-\" + b + \".png\"\n            }\n        },\n        {\n            bpm: 85,\n            title: \"Keyon Christ - Ying Yang Twins\",\n            isSporeTrack: true,\n            metadata: {\n                tokenId: c,\n                link: \"/sp/\" + c,\n                image: \"/sp-thumbnail-\" + c + \".png\",\n                artist: \"Keyon Christ\",\n                name: \"Ying Yang Twins\",\n                url: \"https://zequencer.mypinata.cloud/ipfs/QmcD2Ece62eiv5FWegEyNquWN8WZzC3ZT81Wxhw6GRk4YY\",\n            }\n        }\n    ];\n}\n\nconst History = ({\n    currentSong,\n    setCurrentSong,\n    latestJacks,\n    loadHistory,\n    link\n}) => { \n    let [keyonSongs, setKeyonSongs] = useState(undefined);\n\n    useEffect(() => {\n        KEYON_SONGS().then(x => setKeyonSongs(x));\n    }, []);\n\n    const load = useCallback((x) => {\n        setCurrentSong(x);\n        if (x.metadata) {\n            loadHistory(x.metadata);\n        } else {\n            ipfs.getJson(x.data).then(\n                y => loadHistory(y));\n        }\n    }, [loadHistory, setCurrentSong]);\n\n    if (!keyonSongs) {\n        return '';\n    }\n    let history = [... keyonSongs, ... latestJacks];\n\n    if (link !== \"\") {\n        history = history.filter(x => x.title && x.title.toLowerCase().includes(link.toLowerCase()));\n    }\n\n    return (<div className=\"jack-history\">\n              <img className=\"globe\" src=\"/globe.svg\"/>\n              <div className=\"items\">\n                {history\n                 .filter(x => x.title && x.title.trim() !== \"\") \n                 .map(\n                  x => <div\n                         onClick={() => load(x)}\n                         className={(x.isSporeTrack ? \"history-item spore-track\" : \"history-item\") + (currentSong === x ? \" current\" : \"\")}>\n                         {x.isSporeTrack ? x.title : trim(x.title)}\n                         {x.isSporeTrack && <div className=\"source\">{isMobile ? \"by Spores\" : \"Released by Spores\"}</div>}\n                         {x.isSporeTrack ? (!isMobile ? <img src=\"/spores-icon-glow2.svg\"/> : '') :\n                          <HistoryItemSource item={x}/>}\n\n\n                       </div>)}\n\n              </div>\n            </div>);\n};\n\nconst trim = (x) => {\n    let len = isMobile ? 24 : 35;\n    if (x.length < len) {\n        return x;\n    }\n    return x.slice(0, len) + '...';\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(History);\n","import React, {useState, useEffect, useCallback} from 'react';\nimport {CHILL_RX_COLLECTION} from 'constants/collections.js';\nimport {getChillTokenId} from 'spores/chillRX.js';\nimport {getGatewayLink, extractIPFS} from 'utils/getGateway.js';\nimport {save} from 'jacker/save.js';\nimport {jack} from 'jacker/jack.js';\nimport {getArtistFromMetadata} from 'jacker/artist.js';\nimport {useTokenMetadata} from 'components/hooks/useTokenMetadata.js';\nimport {KEYON_SONGS} from 'components/nft-jacker/History.js';\n\nexport const useJacker = ({\n    playlistLoaded,\n    remixToPlay,\n    setLatestJacks,\n    setShowHistory,\n    setLink,\n    setShowLinkInput,\n    link,\n    latestJacks,\n    chillTokenId,\n    defaultSearch,\n    directCollectionAddress,\n    directTokenId,\n    updateURL=true\n}) => {\n    const [currentLink, setCurrentLink] = useState();\n    let [songId, setSongId] = useState();\n    let [showDesc, setShowDesc] = useState(true);\n    let [collectionAddress, setCollectionAddress] = useState();\n    let [jackedAudio, setJackedAudio] = useState();\n    let [buyThisSkin, setBuyThisSkin] = useState();\n    let [tokenId, setTokenId] = useState();\n    let [coverArt, setCoverArt] = useState();\n    let [songName, setSongName] = useState();\n    let [description, setDescription] = useState();\n    let getTokenMetadata = useTokenMetadata();\n    let [showPlayer, setShowPlayer] = useState();\n    let [artist, setArtist] = useState();\n    let [error, setError] = useState();\n    let [currentSong, setCurrentSong] = useState();\n    let [searchTerm, setSearchTerm] = useState(defaultSearch);\n\n    useEffect(() => {\n        if (!updateURL) {\n            return;\n        }\n        if (remixToPlay) {\n            window.history.pushState('page2', 'Title', '/play/' + collectionAddress + '/' + tokenId + '/' + remixToPlay.sporeId);\n        } else if (collectionAddress) {\n            window.history.pushState('page2', 'Title', '/play/' + collectionAddress + '/' + tokenId);\n        } else {\n            window.history.pushState('page2', 'Title', '/');\n        }\n    }, [remixToPlay, collectionAddress, tokenId, updateURL]);\n\n    useEffect(() => {\n        if (directCollectionAddress) {\n            let link = \"https://zora.co/collections/\" + directCollectionAddress + \"/\" + directTokenId;\n            jack(link, getTokenMetadata).then(\n                jacked => {\n                    loadJack(jacked);\n                });\n        }\n    }, []);\n\n    useEffect(() => {\n        if (chillTokenId !== undefined) {\n            let ret = getChillTokenId(chillTokenId);\n            loadJack(ret);\n        }\n    }, [\n      ]);\n\n    useEffect(() => {\n        KEYON_SONGS();\n    }, []);\n\n    const clear = useCallback(() => {\n        setLink(\"\");\n        setCollectionAddress(undefined);\n        setShowPlayer(false);\n        setCoverArt(undefined);\n        setArtist(undefined);\n        setTokenId(undefined);\n        setSongName(undefined);\n        setDescription(undefined);\n        setJackedAudio(undefined);\n        setShowLinkInput(true);\n        setSongId(undefined);\n    }, [\n        setSongId,\n        setShowLinkInput,\n        setShowPlayer,\n        coverArt,\n        setLink,\n        setTokenId,\n        setArtist,\n        setSongName,\n        setCollectionAddress,\n        setDescription,\n        setJackedAudio\n    ]);\n\n    const onJack = useCallback(async (isPlaylist) => {\n        if (link === \"\") {\n            return;\n        }\n        if (!link.startsWith(\"http\")) {\n            setSearchTerm(link);\n            return;\n        }\n        setShowPlayer(true);\n        if (isPlaylist) {\n            setShowLinkInput(false);\n        }\n        setShowDesc(false);\n        let ret = await jack(link, getTokenMetadata);\n        if (!ret) {\n            clear();\n            setError(\"The token you\\'ve linked has a strange format. Echo rejects it, respectfully...\");\n            return;\n        }\n        ret.link = link;\n        loadJack(ret, true);\n    }, [\n        link,\n        setSearchTerm,\n        latestJacks,\n        setSongName,\n        setShowHistory,\n        setCollectionAddress,\n        playlistLoaded,\n        setJackedAudio,\n        setArtist,\n        setTokenId,\n        setShowPlayer,\n        setError,\n        setShowLinkInput,\n        setSongId,\n        setCurrentLink\n    ]);\n\n    const loadChillRX = useCallback((ret) => {\n    \n        setArtist(\"Chill RX\");\n        setTokenId(ret.tokenId);\n        setSongId(ret.songId);\n        setCollectionAddress(ret.collectionAddress);\n        setSongName(ret.name);\n        setCoverArt(ret.coverArt);\n        setDescription(ret.description);\n        setJackedAudio(\"BLANK\");\n\n    }, [setSongId, setCoverArt, setArtist, setArtist, setCoverArt, setCollectionAddress]);\n\n    const loadJack = useCallback((ret, shouldSave=true, isPlaylist) => {\n        setShowHistory(false);\n        setShowPlayer(true);\n        if (!isPlaylist) {\n            setShowLinkInput(false);\n        }\n        setShowDesc(false);\n\n        if (ret.collectionAddress === CHILL_RX_COLLECTION) {\n            loadChillRX(ret);\n            return;\n        }\n        \n        let {url, ipfs} = ret;\n       \n        console.log(\"LOAD JACK CALLED ret=\", ret);\n\n        if (!ret.external_url) {\n            ret.external_url = ret.link;\n        }\n        if (!ret.link && ret.external_url) {\n            ret.link = ret.external_url;\n        }\n        if (!url) {\n            clear();\n            setError(\"The token you\\'ve linked might not contain a music NFT.\");\n            return;\n        }\n\n        setError(undefined);\n\n        let toSave = {};\n        if (url.startsWith(\"ipfs://\")) {\n            ipfs = url.slice(7);\n        }\n        if (ipfs && !url) {\n            let url = getGatewayLink(ret.external_url, ipfs);\n            //submitSplitJob(url);\n            setJackedAudio(ipfs);\n            toSave.ipfs = ipfs;\n            toSave.url = url;\n            console.log(\"URL we extracted=\", url);\n        } else {\n            let ipfsHash = extractIPFS(url);\n            console.log(\"EXTRACTED IPFS=\", ipfsHash);\n            url = getGatewayLink(ret.external_url, ipfsHash);\n            console.log('setting jacked audio=', url);\n            setJackedAudio(url);\n            toSave.url = url;\n        }\n        console.log(\"URL WE EXTRACTED = \", url);\n        if (ret.body) {\n            ret = {\n                ... ret,\n                ...ret.body,\n                name: ret.body.title\n            };\n            if (ret.body.artwork && ret.body.artwork.info) {\n                ret = {\n                    ... ret,\n                    image: ret.body.artwork.info.uri\n                };\n            }\n        }\n        let artist = getArtistFromMetadata(ret);\n        toSave.artist = artist;\n        setArtist(artist);\n\n        console.log(\"TOKEN ID =\", ret.tokenId);\n        setTokenId(ret.tokenId);\n        setSongId(ret.songId);\n        setCollectionAddress(ret.collectionAddress);\n\n        /*\n        setSongId(2);\n        setTokenId(2000);\n        setCollectionAddress(CHILL_RX_COLLECTION);\n        */\n\n        setSongName(ret.name);\n        toSave.song = ret.name;\n        setDescription(ret.description);\n\n        let image = ret.image;\n        if (ret.image) {\n            let image = getGatewayLink(ret.link, extractIPFS(ret.image));\n            setCoverArt(image);\n        } else {\n            setCoverArt(\"/zora-placeholder.png\");\n        }\n\n        toSave = {\n            ... ret,\n            ... toSave\n        };\n\n        if (ret.link) {\n            setCurrentLink(ret.link);\n        } else {\n            setCurrentLink(undefined);\n        }\n\n        if (shouldSave && artist !== \"Keyon Christ\") {\n            save(toSave);\n            /*\n            setLatestJacks([\n                toSave,\n                ... latestJacks,\n            ]);\n            */\n        }\n    }, [\n        setCurrentLink,\n        link,\n        setLatestJacks,\n        setTokenId,\n        latestJacks,\n        setSongName,\n        setJackedAudio,\n        setArtist,\n        setShowPlayer,\n        setError,\n        setShowLinkInput,\n        setShowHistory,\n        setSongId,\n    ]);\n\n    return {\n        clear,\n        onJack,\n        loadJack,\n        artist,\n        description,\n        showPlayer,\n        setShowPlayer,\n        tokenId,\n        buyThisSkin,\n        coverArt,\n        songName,\n        error,\n        currentSong,\n        jackedAudio,\n        setBuyThisSkin,\n        currentLink,\n        setCurrentSong,\n        collectionAddress,\n        songId,\n        searchTerm,\n        setSearchTerm,\n        setArtist\n    };\n};\n\n","export const getArtistFromMetadata = (metadata) => {\n    return metadata[\"artist_name\"] || metadata[\"artist\"] || (metadata.attributes && metadata.attributes[\"artist\"]) ||\n        (metadata[\"created_by\"]) || undefined;\n};\n","import React, {useEffect, useState} from 'react';\n\nexport const useLatestJacks = () => {\n    const [latestJacks, setLatestJacks] = useState();\n\n    useEffect(() => {\n        let baseURL = window.location.hostname === \"localhost\" ?\n            \"http://localhost:9090/latestJacks/\" : \"https://zequencer.io/latestJacks/\";\n        if (!window.LOCAL_BACKEND_FLAG) {\n            baseURL = \"https://zequencer.io/latestJacks/\";\n        }\n        fetch(baseURL).then(\n            async ret => {\n                let json = await ret.json();\n                setLatestJacks(json.filter(x => x.title && !x.title.includes(\"Spore Players\")));\n            });\n    }, []);\n\n    return {latestJacks, setLatestJacks};\n};\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {isMobile} from 'react-device-detect';\nimport History from './History.js';\nimport {connect} from 'react-redux';\nimport './search-box.scss';\n\nconst EchoSearchBox = ({\n    showLinkInput,\n    setSearchTerm,\n    setShowHistory,\n    onJack,\n    loadJack,\n    link,\n    setShowInfo,\n    setLink,\n    showHistory,\n    currentSong,\n    setCurrentSong,\n    loadHistory,\n    latestJacks,\n    cheatCodeActivating\n}) => { \n    let className =!showLinkInput ? \"nft-link hide\" : \"nft-link\";\n    if (cheatCodeActivating) {\n        className += \"  activating\";\n    }\n  return (\n      <div className={className}>\n        <input\n          onKeyDown={e => e.key === \"Enter\" ? onJack() : []}\n          onClick={e => e.stopPropagation()}\n          onFocus={() => {\n              setShowHistory(true);\n              setShowInfo(false);\n          }}\n          placeholder={isMobile ? \"Search or drop a music NFT Link\" : \"Search an artist or drop a music NFT link\"} value={link} onChange={e => {\n              setShowHistory(false);\n              setShowInfo(false);\n              setLink(e.target.value);\n          }}/>\n        <div onClick={() => {\n            setLink('');\n            setSearchTerm('');\n        }} className=\"clear-btn\">x</div>\n        <div onClick={(e) => {\n            e.stopPropagation();\n            onJack();\n        }} className=\"pushable jack-btn\">\n          Remix\n        </div>\n        {cheatCodeActivating &&\n         <div className=\"activation-text\">\n           Code activated. You may freely create bangers, for the culture.\n         </div>}\n      </div>);\n};\n\nexport default EchoSearchBox;\n/**\n        {(showHistory || ((showHistory ) && !link.includes(\"http\"))) &&\n         <History\n           currentSong={currentSong}\n           link={\"\"}\n           setCurrentSong={setCurrentSong}\n           loadHistory={loadJack} latestJacks={latestJacks}/>}\n*/\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport BuyUnsold from './BuyUnsold.js';\nimport {isMobile} from 'react-device-detect';\n\nconst BuyThisSkin = ({buyThisSkin, upperGradInverted, lowerGradInverted}) => { \n    if (buyThisSkin > 20) {\n        return '';\n    }\n    return (\n        <BuyUnsold\n          upperGradInverted={isMobile ? lowerGradInverted : upperGradInverted}\n          text={isMobile ? \"Buy\" : \"Buy this spore\"}\n          tokenId={buyThisSkin}/>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BuyThisSkin);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {Source} from 'components/nft-jacker/HistoryItemSource.js';\nimport BuyUnsold from 'components/nft-jacker/BuyUnsold.js';\nimport BuyThisSkin from 'components/nft-jacker/BuyThisSkin.js';\n\nimport {connect} from 'react-redux';\n\nconst TokenMetadata = ({\n    showBuyThisSkin,\n    buyThisSkin,\n    artist,\n    upperGradInverted,\n    lowerGradInverted,\n    coverArt,\n    songName,\n    tokenId,\n    currentLink,\n    children\n}) => { \n  return (\n      <div className=\"artist-name\" style={{color: upperGradInverted}}>\n        {children}\n        {artist}\n        <div className=\"song-name\" style={{color: upperGradInverted}}>\n          {songName}\n        </div>\n        {coverArt && <img className={artist === \"Keyon Christ\" ? \"cover-art smaller\" : \"cover-art\"} src={coverArt}/>}\n        <div />\n        <div className={artist === \"Keyon Christ\" ? \"link-and-buy keyon\" : \"link-and-buy\"}>\n          {artist === \"Keyon Christ\" && <BuyUnsold tokenId={tokenId}/>}\n          {currentLink && <a className={artist !== \"Keyon Christ\" ? \"current-link align-right\" : \"current-link\"} style={{color: upperGradInverted}} href={currentLink} target=\"_blank\" rel=\"noreferrer\">{artist !== \"Keyon Christ\" && <Source link={currentLink} textColor={upperGradInverted} />}↗</a>}\n        </div>\n        {showBuyThisSkin && artist !== \"Keyon Christ\" && <BuyThisSkin upperGradInverted={upperGradInverted} lowerGradInverted={lowerGradInverted} buyThisSkin={buyThisSkin}/>}\n      </div>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TokenMetadata);\n","export const CHEAT_CODES = [\n    \"spores dao summer\",\n    \"the spore button\",\n];\n","import {CHILL_RX_COLLECTION} from 'constants/collections.js';\nimport {useInterval} from './useInterval.js';\nimport {useTokensOnSale} from './useTokensOnSale.js';\nimport { useAccount } from 'wagmi';\nimport React, {useRef, useEffect, useCallback, useState} from 'react';\nimport {CHEAT_CODES} from 'constants/cheat-codes.js'\n\nconst TICK_TIME = 1000;\nconst LOCK_TIME = 5 * 60 * 1000;\n\nconst isValidCheatCode = (code) => {\n    return CHEAT_CODES.some(x => code.toLowerCase().trim() === x);\n};\n\nexport const useTokenLock = (\n    cheatcode,\n    setLink,\n    setUsedCheatCode,\n    setSecondsRemaining\n) => {\n    const {data: account, isError, isLoading} = useAccount();\n    const {tokensOnSale} = useTokensOnSale();\n    let [cheatCodeActivating, setCheatCodeActivating] = useState();\n    let [locked, setLocked] = useState(false);\n    let [isSporeOwner, setIsSporeOwner] = useState();\n    let timeElapsed = useRef(0);\n    let isPlaying = useRef(false);\n    let [cheatOverriden, setCheatOverriden] = useState(false);\n\n    useEffect(() => {\n        if (isValidCheatCode(cheatcode)) {\n            setCheatOverriden(true);\n            setLocked(false);\n            window.localStorage.setItem(\"cheatcode\", cheatcode);\n            setUsedCheatCode(true);\n            setCheatCodeActivating(true);\n            setTimeout(() => {\n                setLink('');\n            }, 1000);\n            setTimeout(() => {\n                setCheatCodeActivating(false);\n            }, 10000);\n        }\n    }, [cheatcode, setCheatOverriden, setLocked, setCheatCodeActivating]);\n\n    useEffect(() => {\n        let code = window.localStorage.getItem(\"cheatcode\");\n        if (code && isValidCheatCode(code)) {\n            setCheatOverriden(true);\n            setUsedCheatCode(true);\n            setLocked(false);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (window.OWN_FAKE_SPORE_FLAG) {\n            setIsSporeOwner(true);\n            setLocked(false);\n            return;\n        }\n        if (tokensOnSale && account && account.address) {\n            let _tokensOnSale = window.OWN_FAKE_SPORE_FLAG ? tokensOnSale.map(x =>\n                ({\n                    ... x,\n                    owner: account.address})) : tokensOnSale;\n            let address = account.address.toLowerCase();\n            if (_tokensOnSale.some(x =>\n                x &&\n                    x.owner &&\n                    x.owner.toLowerCase() === address)) {\n                setIsSporeOwner(true);\n                setLocked(false);\n            }\n        } else {\n        }\n    }, [tokensOnSale, account, setIsSporeOwner, setLocked]);\n\n    useEffect(() => {\n        window.addEventListener(\"message\", onMessage, false);\n        let _timeElapsed = window.localStorage.getItem(\"time-elapsed\") || 0;\n        if (window.ABOUT_TO_END_FLAG) {\n            timeElapsed.current = LOCK_TIME - 20*1000; // parseInt(_timeElapsed);\n        } else {\n            timeElapsed.current = parseInt(_timeElapsed);\n        }\n    }, []);\n\n    const onMessage = useCallback((e) => {\n        if (e.data && Array.isArray(e.data.type) && e.data.type[0] === \"sequencer.start\") {\n            isPlaying.current = true;\n        } else if (e.data && Array.isArray(e.data.type) && e.data.type[0] === \"sequencer.stop\") {\n            isPlaying.current = false;\n        }\n    }, []);\n\n\n    // listen for play events\n    const tick = useCallback(() => {\n        if (!window.TOKEN_LOCK_FLAG || cheatOverriden) {\n            return;\n        }\n        if (timeElapsed.current >= LOCK_TIME && !locked) {\n            if (!isSporeOwner) {\n                setLocked(true);\n            }\n        }\n        if (isPlaying.current && !isSporeOwner) {\n            timeElapsed.current += TICK_TIME;\n            let secondsRemaining = LOCK_TIME/1000 - timeElapsed.current/1000;\n            setSecondsRemaining(secondsRemaining);\n            window.localStorage.setItem(\"time-elapsed\", timeElapsed.current);\n        }\n    }, [locked, setLocked, isSporeOwner, cheatOverriden]);\n\n    useInterval(tick, TICK_TIME);\n\n    return {locked, cheatCodeActivating};\n};\n","/**\n * contains the abi and contract address\n*/\n\nclass SporesPlaylistContract {\n    constructor() {\n        this.abi = [\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"playlistId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"burnPlaylist\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address[]\",\n\t\t\t\t\"name\": \"contractAddresses\",\n\t\t\t\t\"type\": \"address[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256[]\",\n\t\t\t\t\"name\": \"tokenIds\",\n\t\t\t\t\"type\": \"uint256[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"metadataCID\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"message\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"v\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"r\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"s\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"newSporesPlaylist\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"playlistId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"creator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"metadataCID\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"NewSporesPlaylist\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"playlistId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"PlaylistBurned\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address[]\",\n\t\t\t\t\"name\": \"contractAddresses\",\n\t\t\t\t\"type\": \"address[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256[]\",\n\t\t\t\t\"name\": \"tokenIds\",\n\t\t\t\t\"type\": \"uint256[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string[]\",\n\t\t\t\t\"name\": \"genres\",\n\t\t\t\t\"type\": \"string[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"message\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"v\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"r\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"s\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setGenres\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"collectionAddress\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"genre\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"user\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"metadataCID\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"SongGenre\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"playlistId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"collectionAddress\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"SporesPlaylistSong\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"a\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"b\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"compareStrings\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"pure\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"message\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"v\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"r\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"s\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"verifyString\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"signer\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"pure\",\n\t\t\"type\": \"function\"\n\t}\n        ];\n\n        this.contractAddress = '0xe2031bF65D3f8a96dE0a7eD1211810F49627c261';\n    }\n\n    getContract(web3) {\n        return new web3.eth.Contract(this.abi, this.contractAddress);\n    }\n}\n\nexport default SporesPlaylistContract;\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport { useAccount } from 'wagmi';\nimport { ConnectButton, lightTheme} from '@rainbow-me/rainbowkit';\nimport {connect} from 'react-redux';\nimport {useShader} from 'components/spore/sketch.js';\nimport './locked.scss';\n\nconst LockedNotification = ({clearPlayer}) => { \n    const {data: account, isError, isLoading} = useAccount();\n    let [showConnectWallet, setShowConnectWallet] = useState(false);\n    let ref = useRef();\n    let [loaded, setLoaded] = useState();\n    useEffect(() => {\n        window.addEventListener(\"message\", onMessage);\n    }, [setLoaded]);\n\n    const onMessage = useCallback((e) => {\n        if (e.data === \"loaded-lock-shader\") {\n            setLoaded(true);\n        }\n    }, [setLoaded]);\n    \n    return (\n        <div\n          ref={ref} className=\"locked-notification-background\">\n         <iframe className={loaded ? \"loaded-shader\" : \"\"} src=\"https://zequencer.mypinata.cloud/ipfs/QmUZqg4Ee2sDWqNxhAT5xrUUDY53as3VWrdWYWK5HomBgf/\"/>\n        {showConnectWallet && !account ?\n         <div\n           onClick={e => e.stopPropagation()}\n           className=\"locked-notification\">\n          <div className=\"connect-button-wrapper\">\n            <ConnectButton\n              accountStatus=\"address\" \n              showBalance={{ smallScreen: false, largeScreen: false }}\n              label=\"Connect Wallet\"\n            />\n          </div>\n         </div> : \n          <div\n            onClick={e => e.stopPropagation()}\n            className=\"locked-notification\">\n          <div className=\"logo-container\">\n            <img\n              onClick={() => clearPlayer()}\n              className=\"pushable spores-logo\" src=\"/spores-logo-black.svg\"/>\n          </div>\n            {showConnectWallet && account ? `It seems you dont't own a Spore yet. Get the full dose by purchasing a Genesis Spore.` : \n            `Enjoying this microdose of Spores? Get the full dose by purchasing a Genesis Spore.`}\n            <div\n              onClick={() => window.location.href=\"/buy?sold=false\"}\n              className=\"go-to-buy pushable\">\n                Buy Now\n            </div>\n            {!account && <div className=\"pushable already-own-one\" onClick={() => setShowConnectWallet(true)}>\n              Already own one?\n                         </div>}\n          </div>}\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LockedNotification);\n","import ipfs from 'decentralized/Ipfs.js';\nimport {signMessage} from './sign.js';\n\nimport BackendQuery from 'decentralized/BackendQuery.js';\nimport {NewSporesPlaylist, SporesPlaylistSong } from 'decentralized/EthereumEvents.js';\nimport SporesPlaylistContract from 'decentralized/contracts/SporesPlaylistContract.js';\n\nconst playlistMessage = (cid) => \"A new playlist awakens at \" + cid;\n\nexport const newPlaylist = async (signer, collectionAddresses, tokenIds, name, description, thumbnail, songs) => {\n    let metadata = {\n        name,\n        description,\n        thumbnail,\n        tokenIds,\n        collectionAddresses,\n        playlist: songs\n    };\n   \n    let metadataCID = await ipfs.addJson(metadata);\n\n    // genereate message based on the\n    let message = playlistMessage(metadataCID);\n    let {account, flatSignature, splitSignature} = await signMessage(signer, message);\n    \n    // now store this signed message on the ropsten contract\n    let {r,s,v} = splitSignature;\n\n    let body = {\n        r,\n        s,\n        v,\n        message,\n        metadataCID,\n        tokenIds,\n        collectionAddresses,\n    };\n    console.log(body);\n        \n    let baseURL = \"https://zequencer.io\";\n    /*\n    if (window.location.hostname.includes(\"localhost\")) {\n        baseURL = \"\";\n    }\n    */\n\n    let resp = await fetch(baseURL + '/newSporesPlaylist/' , {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }\n    });\n    let respJson = await resp.json();\n    \n    return respJson.transactionHash;\n};\n\nconst ADDRESS = new SporesPlaylistContract().contractAddress;\nexport const getJuicePlaylists = async () => {\n    let query = new BackendQuery(ADDRESS)\n        .from(NewSporesPlaylist);\n\n    let results = await query.executeQuery();\n\n    for (let result of results) {\n        let {metadataCID} = result;\n        result.metadata = await ipfs.getJson(metadataCID);\n    }\n    return results.slice(0, results.length - 3);\n};\n","import Collapsible from 'react-collapsible';\nimport {isMobile} from 'react-device-detect';\nimport {\n    setPlaylistLoaded,\n    setCurrentPlaylistSong \n} from 'actions/index.js';\nimport {jack} from 'jacker/jack.js';\nimport {getJackFromToken} from 'utils/getJackFromToken.js';\nimport {useTokenMetadata} from 'components/hooks/useTokenMetadata.js';\nimport React, {useCallback} from 'react';\nimport './playlist.scss';\nimport {connect} from 'react-redux';\n\nconst PlaylistInfo = ({setCurrentPlaylistSong, setPlaylistLoaded, playlist, loadJack, currentSong, isLoaded}) => {\n    let thumbnail = \"https://zequencer.io/ipfs/\" + playlist.metadata.thumbnail;\n    let getTokenMetadata = useTokenMetadata();\n\n    const onClick = useCallback((song) => {\n        setCurrentPlaylistSong(song);\n        setPlaylistLoaded(playlist);\n        getJackFromToken(song.collectionAddress, song.tokenId).then(\n            jacked => loadJack(jacked, undefined, !isMobile));\n    }, [playlist]);\n\n    return (<>\n        <Collapsible\n          transitionTime={200}\n          easing=\"ease-in-out\"\n          open={isLoaded}\n          trigger={\n              <div className='playlist-trigger'>\n                <img src={thumbnail} className=\"playlist-trigger-img\"></img>\n                <div className=\"playlist-name\">{playlist.metadata.name}</div>\n              </div>\n          }>\n          <p className='playlist-description'>{playlist.metadata.description}</p>\n          <div className='playlist-list-container'>\n            {playlist.metadata.playlist.map(\n                (item, i) =>\n                <div\n                  onClick={() => onClick(item)}\n                  className={\n                      currentSong &&\n                          currentSong.collectionAddress === item.collectionAddress &&\n                          currentSong.tokenId === item.tokenId ?\n                          \"playlist-item current\" : \"playlist-item\"}>\n                  <div className=\"song-number\">{i+1}</div>\n                  <img src={item.coverArt} className=\"playlist-item-img\"></img>\n                  <p>{item.songName}</p>\n                  <p>{item.artist}</p>\n                </div>)}\n          </div>\n        </Collapsible>\n    </>);\n}\n\n\nconst mapStateToProps = (state, props) => {\n  return {\n      isLoaded: state.playlist.playlistLoaded && state.playlist.playlistLoaded.playlistId ===\n          props.playlist.playlistId,\n      currentSong: state.playlist.currentSong\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setPlaylistLoaded: x => dispatch(setPlaylistLoaded(x)),\n      setCurrentPlaylistSong: x => dispatch(setCurrentPlaylistSong(x)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistInfo);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {usePlaylists} from 'components/hooks/usePlaylists.js';\nimport PlaylistInfo from './PlaylistInfo.js';\nimport {connect} from 'react-redux';\n\nconst JuicePlaylists = ({loadJack}) => { \n    let playlists = usePlaylists();\n    return (\n        <div\n          onClick={e => e.stopPropagation()}\n          className=\"playlist-container\">\n          <div\n            className=\"playlist-item\">\n            {playlists.map(\n                playlist =>\n                <PlaylistInfo\n                  loadJack={loadJack}\n                  playlist={playlist}/>)}\n          </div>\n        </div>);\n}\n\nexport default JuicePlaylists;\n","import React, {useEffect, useState, useCallback} from 'react';\nimport {getJuicePlaylists} from 'spores/playlist.js';\n\nexport const usePlaylists = () => {\n    let [playlists, setPlaylists] = useState([]);\n\n    useEffect(() => {\n        getJuicePlaylists().then(setPlaylists);\n    }, []);\n\n    return playlists;\n};\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport JuicePlaylists from './JuicePlaylists.js';\nimport UnknownProgressBar from 'components/progressbar/UnknownProgressBar.js';\n\nimport {ethers} from 'ethers';\nimport {web3} from 'decentralized/web3.js';\nimport {getRemixesMap} from \"spores/getSporeRemixes.js\";\nimport {getChillRXSongs} from \"spores/chillRX.js\";\nimport {connect} from 'react-redux';\nimport {useScroll} from 'components/hooks/useScroll.js';\nimport {useTokensOnSale} from '../hooks/useTokensOnSale.js';\nimport './chart.scss';\nimport Collapsible from 'react-collapsible';\nimport PlaylistInfo from './PlaylistInfo.js';\n\nconst PINATAS = {\n    \"mintsongs\": \"mintsongs\",\n    \"zora\": \"zora-prod\",\n    \"soundxyz\": \"soundxyz\",\n    \"zequencer\": \"zequencer\",\n    \"catalog\": \"catalog\",\n};\n\n// switch to true/false to enable charts as a feature\nwindow.CHARTS_FLAG = true;\n\nconst SEARCH_TIME_OUT = 1000;\n\nconst Chart = ({searchTerm, jacked, loadJack, history=[], showChart, playlistLoaded}) => { \n    let [loading, setLoading] = useState(false);\n    let [chartData, setChartData] = useState([]);\n    let [remixes, setRemixes] = useState({});\n    let [chillRXData, setChillRXData] = useState({});\n    let searchCounter = useRef(0);\n    let searchTermRef = useRef(\"\");\n    let cursor = useRef();\n    let lastCursorUsed = useRef();\n    let [keyonSongs, setKeyonSongs] = useState([]);\n    let [selectedTab, setSelectedTab] = useState(playlistLoaded ? \"playlists\" : \"new\");\n    let ref = useRef();\n    let {setTokensOnSale, tokensOnSale} = useTokensOnSale();\n    let searchId = useRef(0);\n\n    console.log(\"SEARCH TERm=\", searchTerm);\n    useEffect(() => {\n        getRemixesMap().then(setRemixes);\n        setChillRXData(getChillRXSongs());\n    }, []);\n\n    useEffect(() => {\n        searchTermRef.current = searchTerm;\n    }, [searchTerm]);\n\n    // size is a variable telling us how many items to show in the list\n    // it updates as we scroll\n    let {size} = useScroll(\n        ref,\n        Math.ceil((window.innerWidth / 200) * (window.innerHeight / 200)), // intial # to load\n        searchTerm);\n\n    useEffect(() => {\n        lastCursorUsed.current = undefined;\n        cursor.current = undefined;\n    }, [showChart]);\n\n    useEffect(() => {\n        if (selectedTab !== \"new\") {\n            return;\n        }\n        if (size >= chartData.length) {\n            if (lastCursorUsed.current === cursor.current) {\n                return;\n            }\n            // then we call search again\n            let baseURL = window.location.hostname === \"localhost\" ?\n                \"http://localhost:9090/charts\" :  \"https://zequencer.io/charts\";\n            if (!window.LOCAL_BACKEND_FLAG) {\n                baseURL = \"https://zequencer.io/charts\";\n            }\n            let url = baseURL;\n            if (cursor.current && cursor.current !== \"\") {\n                url += \"?cursor=\" + cursor.current;\n            }\n            lastCursorUsed.current = cursor.current;\n\n            let id = ++searchId.current;\n            fetch(url).then(async x => {\n                let json = await x.json();\n                if (/*searchId.current !== id ||*/ searchTermRef.current && searchTermRef.current !== \"\") {\n                    return;\n                }\n                if (json) {\n                    setLoading(false);\n                    setChartData([... chartData, ...json.results]);\n                    cursor.current = json.cursor;\n                }\n            });\n        }\n    }, [setChartData, selectedTab, chartData, size]);\n\n    useEffect(() => {\n        if (searchTerm !== \"\") {\n            setSelectedTab(\"new\");\n        }\n    }, [searchTerm, setSelectedTab]);\n\n    useEffect(() => {\n        if (playlistLoaded) {\n            setSelectedTab(\"playlists\");\n        }\n    }, [playlistLoaded]);\n\n    useEffect(() => {\n        console.log(\"SEARCH TERM CHANGED\");\n        if (!window.CHARTS_FLAG) {\n            return;\n        }\n\n        if (selectedTab == \"history\") {\n            // set to history data\n            setChartData(history);\n        } else if (selectedTab == \"new\") {\n            // set to chart/new data\n            let baseURL = window.location.hostname === \"localhost\" ? \"http://localhost:9090/charts\" :  \"https://zequencer.io/charts\";\n            if (!window.LOCAL_BACKEND_FLAG) {\n                baseURL = \"https://zequencer.io/charts\";\n            }\n            if (searchTerm && searchTerm !== \"\") {\n                let id = ++searchId.current;\n                setTimeout(() => {\n                    if (id !== searchId.current) {\n                        return;\n                    }\n                    setLoading(true);\n                    let _searchTerm = searchTerm;\n                    if (_searchTerm.toLowerCase().includes(\"chaos\")) {\n                        _searchTerm = _searchTerm.replace(\"#\", \"\");\n                    }\n                    let url = baseURL + \"/\" + _searchTerm;\n                    cursor.current = undefined;\n                    fetch(url).then(async x => {\n                        if (id !== searchId.current) {\n                            return;\n                        }\n                        let json = await x.json();\n                        setLoading(false);\n                        if (json) {\n                            setChartData(json.results);\n                            cursor.current = undefined; //json.cursor;\n                        } \n                    });\n                }, SEARCH_TIME_OUT);\n            } else {\n                setLoading(true);\n                let url = baseURL;\n                console.log(\"BASE URL SEARCh=\", url);\n                fetch(url).then(async x => {\n                    let json = await x.json();\n                    if (json) {\n                        setLoading(false);\n                        setChartData(json.results);\n                        cursor.current = json.cursor;\n                    }\n                });\n            }\n        }\n    }, [history, setChartData, searchTerm, jacked, selectedTab, cursor]);\n\n    return (<>\n              <div\n                onClick={e => e.stopPropagation()}\n                className='tab-container' style={{display: showChart ? \"flex\" : \"none\"}}>\n            {window.PLAYLIST_FLAG && <div\n            className={selectedTab == \"playlists\" ? \"tab pushable selected\" : \"tab pushable not-selected\"}\n            onClick={() => setSelectedTab(\"playlists\")}><p>Playlists</p></div>}\n            \n            <div className={selectedTab == \"history\" ? \"tab pushable selected\" : \"tab pushable not-selected\"}\n            onClick={() => setSelectedTab(\"history\")}><p>Recently Played</p></div>\n            <div className={selectedTab == \"new\" ? \"tab pushable selected\" : \"tab pushable not-selected\"}\n            onClick={() => setSelectedTab(\"new\")}><p>New Songs</p></div>\n        </div>\n\n        {/* PLAYLIST */}\n        { selectedTab == \"playlists\" &&\n          <JuicePlaylists loadJack={loadJack} playlistLoaded={playlistLoaded}/>}\n\n        {/* CHART */}\n        {selectedTab != \"playlists\" &&\n        <div\n          ref={ref}\n          onClick={e => e.stopPropagation()}\n          className=\"music-chart\" style={{display: showChart ? \"flex\" : \"none\"}}>\n            {loading ? <UnknownProgressBar width={140} text=\"Searching the metaverse\"/> : chartData.slice(0, size).map(x =>\n                <div\n                  className=\"chart-item\">\n                  <SongInfo\n                    remixes={remixes}\n                    selectedTab={selectedTab} loadJack={loadJack} data={x.jack ? {... x, token: {\n                    ... x,\n                    metadata: x.jack\n                }} :  x}/>\n              </div>)\n            }\n        </div>}\n    </>);\n};\n\nexport const SongInfo = ({data, loadJack, tokenId, thumbnail, selectedTab, askPrice, remixes, section}) => {\n    let [thumb, setThumb] = useState();\n    let artist = '';\n    let song = '';\n    let coverArt = '';\n    let externalLink = '';\n    let collectionName = '';\n    let possibleThumbnail = undefined;\n\n    if (selectedTab == \"playlists\") {\n        // SPORE TAB\n        if (section == \"chill-rx-2022\") {\n            artist = \"ChillRX\";\n            song =  data.songName;\n            coverArt = data.coverArt;\n            externalLink = \"/\";\n            collectionName = \"ChillRX Remix Contest\";\n        } else {\n            artist = \"Psilocybin EP\";\n            song =  \"SP-\" + tokenId;\n            coverArt = thumbnail;\n            externalLink = \"/buy\";\n            collectionName = \"Spore Season 1: Genesis\";\n        }\n    } else if (selectedTab == \"new\") {\n        // NEWLY MINTED TAB\n        // mintsongs & catalog & chaos\n        if (data.token.collectionName != \"Zora\") {\n            artist = data.token.metadata.artist;\n            song = data.token.metadata.title || data.token.metadata.name;\n            coverArt = \"\" + data.token.metadata.image;\n\n            // chaos external url\n            if (data.token.collectionName == \"Chaos\") {\n                externalLink = \"https://opensea.io/assets/ethereum/\" + data.token.collectionAddress + \"\\/\" + data.token.tokenId;\n            } else {\n                externalLink = data.token.metadata.external_url;\n            }\n            \n        } else {\n        // zora\n            song = data.token.name;\n            externalLink = \"https://zora.co/collections/zora/\" + data.token.tokenId;\n            \n            if (data.token.metadata.body) {\n                let body = data.token.metadata.body;\n                if (body.artwork && body.artwork.info && body.artwork.info.uri) {\n                    coverArt = body.artwork.info.uri;\n                    if (coverArt.includes(\"ipfs.io\")) {\n                        let part = \"ipfs.io/\";\n                        let index = coverArt.indexOf(part);\n                        coverArt = \"https://zora-prod.mypinata.cloud/\" + coverArt.slice(index+part.length);\n                        possibleThumbnail = `https://d2iccaf7eutw5f.cloudfront.net/0xabEFBc9fD2F806065b4f3C237d4b59D9A97Bcac7/${data.token.tokenId}/thumbnail`;\n                    }\n                }\n            } else {\n                coverArt = data.token.metadata.image || \"/zora-placeholder.png\";\n            }\n        }\n\n        collectionName = data.token.collectionName;\n        \n    } else {\n        // HISTORY TAB\n        artist = data.token.metadata.artist;\n        song = data.token.metadata.title || data.token.metadata.name;\n        coverArt = \"\" + data.token.metadata.image;\n        externalLink = data.token.metadata.external_url || data.token.metadata.link;\n        collectionName = \"View source\"\n\n        if (data.token.metadata.image == undefined) {\n            coverArt = \"/zora-placeholder.png\";\n        }\n\n        // Chaos external link\n        if (data.token.metadata.artist == \"Chaos\") {\n            externalLink = \"https://opensea.io/collection/chaos-songs\";\n        }\n    }\n\n    // load cover image if not from zora for NEWLY MINTED TAB\n    if (!coverArt.includes(\"zora\")) {\n        if (coverArt.includes(\"ipfs.io\")) {\n        } else if (coverArt.startsWith(\"ipfs://\")) {\n            let _coverArt;\n            for (let type in PINATAS) {\n                if (externalLink && externalLink.includes(type)) {\n                    _coverArt = `https://${PINATAS[type]}.mypinata.cloud/ipfs/${coverArt.slice(7)}`;\n                }\n            }\n            coverArt = _coverArt || \"https://zora-prod.mypinata.cloud/ipfs/\" + coverArt.slice(7);\n        }\n    }\n\n    const onClick = useCallback(() => {\n        let ret = {};\n        if (selectedTab == \"playlists\") {\n\n        } else {\n            if  (data.jack) {\n                loadJack(data.jack);\n                return;\n            } else {\n                ret = {... data.token.metadata };\n                ret.url = data.token.content.url;\n                ret.link = externalLink;\n                ret.tokenId = data.token.tokenId;\n                ret.collectionAddress = data.token.collectionAddress;\n                loadJack(ret);\n            }\n        }\n        \n    }, [data, loadJack, externalLink, tokenId]);\n\n    let numRemixes = 0;\n    if (selectedTab == \"new\" && data && data.token && data.token.collectionAddress) {\n        let collectionAddress;\n        let {tokenId} = data.token;\n        if (externalLink && externalLink.includes(\"catalog\")) {\n            collectionAddress = \"0x0bC2A24ce568DAd89691116d5B34DEB6C203F342\";\n        } else if (externalLink && externalLink.includes(\"mintsongs\")) {\n            collectionAddress = \"0x2B5426A5B98a3E366230ebA9f95a24f09Ae4a584\";\n        }\n        if (collectionAddress) {\n            coverArt = `https://d2iccaf7eutw5f.cloudfront.net/${collectionAddress}/${tokenId}/thumbnail`;\n        }\n        collectionAddress = data.token.collectionAddress.toLowerCase();\n        let _token = tokenId;\n        if (tokenId.length > 10) {\n            let big = ethers.BigNumber.from(tokenId);\n            big = web3.utils.padLeft(big.toHexString(), 64).toLowerCase();\n            _token = big;\n        }\n        if (remixes[collectionAddress] && remixes[collectionAddress][_token]) {\n            numRemixes = remixes[collectionAddress][_token].length;\n        }\n    } else if (selectedTab == \"history\" && data && data.jack && data.jack.collectionAddress) {\n        let collectionAddress;\n        let {tokenId} = data.jack;\n        if (externalLink && externalLink.includes(\"catalog\")) {\n            collectionAddress = \"0x0bC2A24ce568DAd89691116d5B34DEB6C203F342\";\n        } else if (externalLink && externalLink.includes(\"mintsongs\")) {\n            collectionAddress = \"0x2B5426A5B98a3E366230ebA9f95a24f09Ae4a584\";\n        }\n        collectionAddress = data.jack.collectionAddress.toLowerCase();\n        let _token = tokenId;\n        if (tokenId.length > 10) {\n            let big = ethers.BigNumber.from(tokenId);\n            big = web3.utils.padLeft(big.toHexString(), 64).toLowerCase();\n            _token = big;\n        }\n        if (remixes[collectionAddress] && remixes[collectionAddress][_token]) {\n            numRemixes = remixes[collectionAddress][_token].length;\n        }\n    }\n\n           \n    return (<>\n              <div\n                className=\"song-info-container\">\n                <img\n                  onError={() => setThumb(coverArt)}\n                  className=\"cover-image pushable\" loading=\"lazy\" src={thumb || possibleThumbnail || coverArt} onClick={onClick}></img>\n                <div className=\"song-info\">\n                  <div className=\"song-col\">\n                    <div className=\"song\">{song}</div>\n                    <div className=\"artist\">{artist}</div>\n                    <div className=\"from-text\">\n                      <a href={externalLink}>{collectionName}↗</a>\n                    </div>\n                  </div>\n                  {(numRemixes > 0) && <div className=\"num-remixes\">\n                                         <div className=\"remixes-orb\"/>{numRemixes}</div>}\n                </div>\n              </div>\n        \n    </>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n      playlistLoaded: state.playlist.playlistLoaded\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chart);\n","import {useRef, useState, useEffect, useCallback} from 'react';\n\nexport const useScroll = (ref, initialSize=10, searchTerm, padding=150) => {\n    let [size, setSize] = useState(initialSize);\n    let scrollPosition = useRef(0);\n    \n    useEffect(() => {\n        if (ref.current) {\n            ref.current.scrollTo(0, 0);\n        }\n        setSize(initialSize);\n    }, [searchTerm, setSize, initialSize]);\n\n    useEffect(() => {\n        if (!ref.current ) {\n            return;\n        } \n        ref.current.addEventListener(\"scroll\", onScroll);\n        return () => ref.current && ref.current.removeEventListener(\"scroll\", onScroll);\n    }, [setSize, size, ref.current, ref. initialSize]);\n\n    const onScroll = useCallback((e) => {\n        let el = ref.current;\n        if (!el) {\n            return;\n        }\n        scrollPosition.current = el.scrollTop;\n        let bottom = el.scrollTop + el.offsetHeight;\n        let height = el.scrollHeight;\n\n        if (bottom+padding >= height) { \n            setSize(size + initialSize);\n        }\n    }, [setSize, size, ref, initialSize]);\n\n    return {size, scrollPosition};\n};\n \n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {isMobile} from 'react-device-detect';\n\nconst VisualLinks = ({helperBox, helperRefs, selected}) => { \n    const [locations, setLocations] = useState();\n    useEffect(() => {\n        if (!helperRefs) {\n            return;\n        }\n        let playerEl = helperRefs[selected].current;\n        let helperEl = helperBox.current;\n\n        let playerLocation = getLocation(playerEl);\n        let helperLocation  = getLocation(helperEl);\n\n        setLocations([helperLocation, playerLocation]);\n    }, [selected, setLocations, helperRefs]);\n    if (!locations) {\n        return '';\n    }\n\n    let points = [\n        isMobile ? locations[0].x : locations[0].x + locations[0].width,\n        isMobile ? locations[0].y + locations[0].height : locations[0].y,\n        isMobile ? locations[1].x + locations[1].width / 2 : locations[1].x,\n        locations[1].y + locations[1].height/2-1,\n        isMobile ? locations[1].x + locations[1].width / 2 : locations[1].x,\n        locations[1].y + locations[1].height/2+1,\n        locations[0].x + locations[0].width,\n        locations[0].y+locations[0].height\n    ];\n    return (\n        <svg className=\"visual-links-spore\">\n          <linearGradient id=\"AnnotationGradient\">\n            <stop offset=\"5%\" stopColor=\"#a4c3e55c\" />\n            <stop offset=\"95%\" stopColor=\"#80aaff36\" />\n          </linearGradient>\n          <polygon className=\"visual-link\" points={points}/>\n        </svg>);\n}\n\nconst getLocation = (element, bounding) => {\n    var rect = element.getBoundingClientRect();\n    let bound = {top: 0, left: 0} //bounding.getBoundingClientRect();\n    let y = rect.top - bound.top;\n    let x = rect.left - bound.left;\n    let height = element.offsetHeight;\n    let width = element.offsetWidth;\n    let pos = {x, y, width, height};\n    return pos;\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VisualLinks);\n","export const docs = {\n    centerButton: [\n        \"Pressing the center button changes the current juice sample (controlled by top left slider). \",\n        \"Click on any empty space goes back to previous sample.\"\n    ],\n    ledButton: [\n        \"Press to enter \\\"Loop Mode\\\". When in this mode, the sliders control different looping parameters.\",\n        \"Slider 1: Loop Length\",\n        \"Slider 2: Chop n Screw\",\n        \"Slider 3: Space Reverb/Delay)\",\n        \"Slider 4: Gate Effect\",\n    ],\n    spButton1: [\n        \"Press to enter \\\"Space Mode\\\". When in this mode, the sliders control different space parameters. \",\n        \"Slider 1: Vocal Reverb\",\n        \"Slider 2: Crystalized Ambience\",\n        \"Slider 3: Bass Reverb\",\n        \"Slider 4: Drum Reverb\",\n    ],\n    spButton2: [\n        \"Press to enter \\\"Timing Mode\\\". When in this mode, the sliders control different timing parameters. \",\n        \"Slider 1: Gate Rate\",\n        \"Slider 2: 8th note Delay\",\n        \"Slider 3: Gate Depth\",\n        \"Slider 4: 16th note Delay\",\n    ],\n    slider2: [\n        \"Wobble\",\n        \"This slider controls the rate of the wobble filter.\",\n    ],\n    slider4: [\n        \"Chipmunk\",\n        \"This slider speeds up the track, raising the pitch as well.\"\n    ],\n    slider3: [\n        \"Stutter\",\n        \"This slider controls stuttering, which repeats the beat at a slider-controlled rate.\",\n        \"You must hold slider down to hear this effect.\"\n    ],\n    slider1: [\n        \"Mutated Stem\",\n        \"Each Spore Player contains a rare, mutated stem.\",\n        \"This slider reveals this mutation.\"\n        ]\n};\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport VisualLinks from './VisualLinks.js';\nimport {docs} from './docs.js';\n\n\nconst HelperLines = ({helperRefs, selected, sliderHovered}) => { \n    let ref= useRef();\n    let doc = docs[selected];\n    return [\n        <div ref={ref} key={1} className=\"helper-box\">\n          {Array.isArray(doc) ? doc.map((x, i) => <p className={(selected.includes(\"spButton\") || selected === \"ledButton\") && i===sliderHovered ? \"selected\" : \"\"}>{x}</p>) : doc}\n        </div>,\n        <VisualLinks helperBox={ref} helperRefs={helperRefs} selected={selected}/>\n    ];\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HelperLines);\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {isMobile} from 'react-device-detect';\nimport HelperLines from './HelperLines.js';\nimport {connect} from 'react-redux';\nimport './helper.scss';\n\nconst PlayerHelper = ({clear}) => { \n    let [sliderHovered, setSliderHovered]  = useState(undefined);\n    let [selected, setSelected] = useState(\"centerButton\");\n    let centerButton = useRef();\n    //let spButton1 = useRef();\n    //let spButton2 = useRef();\n    let ledButton = useRef();\n    let slider1 = useRef();\n    let slider2 = useRef();\n    let slider3 = useRef();\n    let slider4 = useRef();\n    return (\n        <div\n          onTouchStart={(e) => {\n              e.stopPropagation();\n          }}\n          onClick={(e) => {\n              e.stopPropagation();\n              clear();\n          }}\n          className=\"player-helper\">\n          <HelperLines\n            sliderHovered={sliderHovered}\n            selected={selected}\n            helperRefs={{\n              slider1,\n              slider2,\n              slider3,\n              slider4,\n              ledButton,\n              //spButton1,\n              //spButton2,\n              centerButton\n          }}/>\n          <div onClick={clear} className=\"pushable x-button\">\n            {isMobile ? \"Ready?\" : \"x\"}\n          </div>\n          <div\n            onTouchEnd={e => {\n                console.log('stopping touch end');\n                e.stopPropagation();\n            }}\n            onTouchStart={e => {\n                console.log('stopping on touch start');\n              e.stopPropagation();\n              }}\n            onMouseDown={e => {\n                e.stopPropagation();\n                console.log('stopping mouse down');\n            }}\n            onClick={e => {\n                e.stopPropagation();\n                console.log('stopping click');\n            }}\n            className=\"mock-player\">\n            <div ref={centerButton} className={selected === \"centerButton\" ? \"center-button selected\" : \"center-button\"}\n                 onClick={(e) => {\n                     e.stopPropagation();\n                     setSelected(\"centerButton\");\n                 }}\n                 onTouchStart={() => setSelected(\"centerButton\")}\n            />\n            <div ref={ledButton} className={selected === \"ledButton\" ? \"sp-button button1 led-button selected\" : \"sp-button button1 led-button\"}\n                 onTouchStart={() => setSelected(\"ledButton\")}\n                 onClick={(e) => {\n                     e.stopPropagation();\n                     setSelected(\"ledButton\");\n                 }}\n            />\n            <div\n              onMouseLeave={() => setSliderHovered(undefined)}\n              onMouseOver={() => setSliderHovered(1)}\n              ref={slider1} className={selected === \"slider1\" ? \"sp-slider slider1 selected\" : \"sp-slider slider1\"}\n              onClick={(e) => {\n                  e.stopPropagation();\n                  setSelected(\"slider1\");\n              }}\n              onTouchStart={() => setSelected(\"slider1\")}\n            >\n              <span>1</span>\n            </div>\n            <div\n              onMouseLeave={() => setSliderHovered(undefined)}\n              onMouseOver={() => setSliderHovered(4)}\n              ref={slider2} className={selected === \"slider2\" ? \"sp-slider slider2 selected\" : \"sp-slider slider2\"}\n              onClick={(e) => {\n                  e.stopPropagation();\n                  setSelected(\"slider2\");\n              }}\n              onTouchStart={() => setSelected(\"slider2\")}\n            >\n              <span>4</span>\n            </div>\n            <div\n              onMouseLeave={() => setSliderHovered(undefined)}\n              onMouseOver={() => setSliderHovered(3)}\n              ref={slider3} className={selected === \"slider3\" ? \"sp-slider slider3 selected\" : \"sp-slider slider3\"}\n              onClick={(e) => {\n                  e.stopPropagation();\n                  setSelected(\"slider3\");\n              }}\n              onTouchStart={() => setSelected(\"slider3\")}\n            >\n              <span>3</span>\n            </div>\n            <div\n              onMouseLeave={() => setSliderHovered(undefined)}\n              onMouseOver={() => setSliderHovered(2)}\n              ref={slider4} className={selected === \"slider4\" ? \"sp-slider slider4 selected\" : \"sp-slider slider4\"}\n              onClick={(e) => {\n                  e.stopPropagation();\n                  setSelected(\"slider4\");\n              }}\n              onTouchStart={() => setSelected(\"slider4\")}\n            >\n              <span>2</span>\n            </div>\n          </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerHelper);\n","\nimport { ConnectButton, darkTheme } from '@rainbow-me/rainbowkit';\nimport React, { useEffect, useState} from 'react';\nimport \"./info.scss\"\nimport {connect} from 'react-redux';\n\nconst Info = ({clear}) => { \n\n\n  // countdown timer\n  const calculateTimeLeft = () => {\n    let year = new Date().getFullYear();\n    const difference = +new Date(`${year}-06-20`) - +new Date();\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        D: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        H: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        M: Math.floor((difference / 1000 / 60) % 60),\n        S: Math.floor((difference / 1000) % 60),\n      };\n    }\n\n    return timeLeft;\n  };\n\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n  const [year] = useState(new Date().getFullYear());\n\n  useEffect(() => {\n    setTimeout(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n  });\n\n  const timerComponents = [];\n\n  Object.keys(timeLeft).forEach((interval) => {\n    if (!timeLeft[interval]) {\n      return;\n    }\n\n    timerComponents.push(\n      <div className=\"interval\">\n        {timeLeft[interval]}{interval}\n      </div>\n    );\n  });\n\n    console.log(\"FUCKKKK\");\n    return (\n        <div className=\"infoContainer\" onClick={() => { clear(); }}>\n          <div\n            onClick={e => e.stopPropagation()}\n            className=\"infoBox\">\n              <a className=\"go-to-landing\" href=\"/\">\n                <img\n                  className=\"spores-logo-black\" src=\"/spores-logo-black.svg\"/></a>\n              <p><i>Spores</i> is a new way to remix music NFTs.</p>\n              <p><a href='/learn' className='learnLink'>Learn more</a></p>\n              <br/><p>Own a <i>Spore</i>. Unlock any music NFT. Grow remixes.</p>\n              <br/><p>Buy a <a href='/buy' className='buyLink'>Genesis <i>Spore</i></a> and get unlimited access to any music NFT.</p>\n              <br/><p><i>Spores</i> Season One mint is coming soon, 1000 <i>Spores</i> will be available. Change music forever.</p>\n              {/* <br/><div className=\"timer\">\n                {timerComponents.length ? timerComponents : <span>Time's up!</span>}\n              </div> */}\n              <div\n                  onClick={() => window.location.href = \"/buy\"}\n                  className={\"pushable \" + \"mintButton\"}>\n                  <span>Buy Now</span>\n              </div>\n            </div>\n       </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Info);\n","\n\nimport {CHILL_RX_COLLECTION} from 'constants/collections.js';\nimport {useTokensOnSale} from 'components/hooks/useTokensOnSale.js';\nimport React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {KEYON_SONGS} from './History.js';\nimport {getRandomRiddim} from 'spores/riddim.js';\n\n\nconst getKeyonBPM = async (url) => {\n    let song = (await KEYON_SONGS()).find(x => x.metadata.url === url);\n    if (!song) {\n        return 0;\n    }\n    return song.bpm;\n};\n\n//const CID = 'QmcWPrnyNh4uvvMdD8q5AZCrzUBDo81Fm7ZQxm9dEwzSBH';\n// good: const CID = 'Qmbv4Rne3uG4F7fU8crQKuMyPBcqJkeU2JnJCeHjbhfuVS';\n\n// testing ying yang\nconst CID = 'QmUgvUx2oF2ntnEgRiRG8CqxmcyDHd8JhxLgopAqmcj5ao';\n// last jacker good\n//const DEFAULT_JACKER_URL = \"https://zequencer.mypinata.cloud/ipfs/QmUeUEgmw51MPaRq16DQdrbWKMT2we8uwBpG8mD836tuJz/?tokenId=40&gallery=true\";\nconst DEFAULT_JACKER_URL = `https://zequencer.mypinata.cloud/ipfs/${CID}/?tokenId=40&gallery=true`;\n//const CHILL_RX_URL = \"https://zequencer.mypinata.cloud/ipfs/QmRfyks6iDDG5jBtRPuoW3wiVCcfYpcrAvuSMcUBXuVWJK/?gallery=true\";\nconst CHILL_RX_URL = \"https://zequencer.mypinata.cloud/ipfs/QmcoMqE6ywYUidMryy2BqJF8TrbH1vkXoV9S8WxKGHRZ5s/?gallery=true\";\n\nconst JackerPlayer = ({\n    playerRef,\n    songId,\n    locked,\n    jackedAudio,\n    tokenId,\n    setBuyThisSkin,\n    remixToPlay,\n    collectionAddress,\n    showLoops\n}) => { \n\n    let loadedURL = useRef();\n    let ref = playerRef; //useRef();\n    let {tokensOnSale} = useTokensOnSale();\n    let [loaded, setLoaded] = useState();\n    let [preloaded, setPreloaded] = useState();\n    let counter = useRef(0);\n    let lastLoaded = useRef(0);\n\n    // default NFT JACKER URL \n    let [url, setURL] = useState(\n        DEFAULT_JACKER_URL\n    );\n\n    useEffect(() => {\n        if (collectionAddress === CHILL_RX_COLLECTION) {\n            console.log(\"changing url =\", CHILL_RX_URL);\n            setLoaded(false);\n            setPreloaded(false);\n            setURL(CHILL_RX_URL);\n            // we are reloading\n        } else {\n            setURL(DEFAULT_JACKER_URL);\n        }\n    }, [collectionAddress, setURL, setLoaded]);\n\n    useEffect(() => {\n        if (tokenId && loaded && ref.current) {\n            let c = ++counter.current;\n            if (new Date().getTime() - lastLoaded.current > 500) {\n                console.log(\"2. SENDING TOKENID via msg=\", tokenId);\n                ref.current.contentWindow.postMessage({\n                    type: \"tokenId\",\n                    body: songId || parseInt(tokenId)\n                }, \"*\");\n            }\n        }\n\n        if (!tokenId && tokensOnSale) {\n            let _tokens = tokensOnSale.filter(x => x.askPrice);\n            let randomlyChosenTokenId = _tokens[Math.floor(Math.random()*_tokens.length)];\n            if (randomlyChosenTokenId) {\n                let tokensToChoose = [12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,30];\n                let tokenId = tokensToChoose[Math.floor(Math.random()*tokensToChoose.length)]; //randomlyChosenTokenId.tokenId;\n                if (!ref.current) {\n                    return;\n                }\n                ref.current.contentWindow.postMessage({\n                    type: \"tokenId\",\n                    body: parseInt(tokenId)\n                }, \"*\");\n\n                if (showLoops) {\n                    console.log('sending loop unlocked');\n                    ref.current.contentWindow.postMessage({\n                        type: \"loop-unlocked\",\n                        body: 2\n                    }, \"*\");\n                }\n                setBuyThisSkin(tokenId);\n                return;\n            } else {\n            }\n            setBuyThisSkin(undefined);\n        }\n    }, [tokenId, loaded, jackedAudio, tokensOnSale, setBuyThisSkin, songId]);\n\n    useEffect(() => {\n        window.addEventListener(\"message\", onReceive, false);\n        return () => window.removeEventListener(\"message\", onReceive);\n    }, [setLoaded, tokenId, setPreloaded, songId]);\n\n    useEffect(() => {\n        if (remixToPlay) {\n            setLoaded(false);\n            setPreloaded(false);\n        }\n    }, [remixToPlay, setLoaded, setPreloaded]);\n\n    const onReceive = useCallback((e) => {\n        if (e.origin !== \"https://zequencer.mypinata.cloud\") {\n            return;\n        }\n        if (e.data === \"ready for stems\") {\n            setPreloaded(true);\n        }\n        if (e.data === \"Finished Loading Project\") {\n            console.log(\"Finished Loading Project\");\n            setLoaded(true);\n            if (tokenId) {\n                let c = ++counter.current;\n                lastLoaded.current = new Date().getTime();\n                console.log(\"SENDING TOKEN _ =%s to proj\", songId || tokenId);\n                console.log(\"SONG ID=\", songId, typeof songId);\n                ref.current.contentWindow.postMessage({\n                    type: \"tokenId\",\n                    body: songId || parseInt(tokenId)\n                }, \"*\");\n            }\n        }\n    }, [setLoaded, tokenId, songId, setPreloaded]);\n\n    useEffect(() => {\n        if (collectionAddress === CHILL_RX_COLLECTION) {\n            return;\n        }\n        if (!jackedAudio || !loaded) {\n            return;\n        }\n        getKeyonBPM(jackedAudio).then(\n            async bpm => {\n                if (!ref.current) {\n                    return;\n                }\n                if (loadedURL.current === jackedAudio) {\n                    return;\n                }\n                loadedURL.current = jackedAudio;\n\n                ref.current.contentWindow.postMessage({\n                    type: \"clear-recording\",\n                    body: \"clear-recording\"\n                }, \"*\");\n\n                /*\n                playerRef.current.contentWindow.postMessage({\n                    type: \"jacker-pause-toggle\",\n                    body: true \n                }, \"*\");\n                */\n                \n                ref.current.contentWindow.postMessage({\n                    type: \"nft-jacker\",\n                    body: {\n                        bpm,\n                        samples: {\n                            drums: jackedAudio,\n                            vocals: jackedAudio,\n                            bass: jackedAudio, //randomSample,\n                            other: jackedAudio,\n                        }\n                    }\n                }, \"*\");\n            }\n        );\n    }, [jackedAudio, loaded, remixToPlay, collectionAddress]);\n\n    let className = (jackedAudio && preloaded) ? \"loaded player\" : \"player\";\n    if (tokenId !== 40) {\n        className += \" keyon-player\";\n    }\n    if (locked || remixToPlay || !url) {\n        return '';\n    }\n    return (\n        <div\n        >\n        <iframe\n          className={className}\n          width={340}\n          height={400}\n          ref={ref}\n          src={url}\n          \n            />\n\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JackerPlayer);\n","const API_ENDPOINT = \"https://groovy.audioshake.ai\";\nconst UPLOAD = \"/upload/audio-link\";\nconst key = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRJZCI6ImNsNDI0bnFndjY5NjA4Z3BvNnN2bjZvdzlrIiwibGljZW5zZUlkIjoiY2w0MjRwbmw2MDBmamZnbzZmYWViNXI5NCIsImlhdCI6MTY1NDQ4MzQyMywiZXhwIjoxODEyMTYzNDIzfQ.IS3YmWHlMNzN3LNCz46tllnewBnASszM5IE55ISJ0u0\";\n\nexport const submitSplitJob = async (link) => {\n    return;\n    let body = JSON.stringify({\n        link: link,\n        name: \"test-split\"\n    });\n    let ret = await fetch(API_ENDPOINT + UPLOAD, {\n        method: \"POST\",\n        headers: {\n            Authorization: key\n        },\n        body\n    });\n\n    console.log(ret);\n};\n","import React, {useEffect, useCallback, useState} from 'react';\nimport { ConnectButton, lightTheme} from '@rainbow-me/rainbowkit';\nimport {connect} from 'react-redux';\nimport { IoLogoTwitter } from 'react-icons/io';\nimport { BiInfoCircle } from 'react-icons/bi';\nimport \"./navigation.scss\";\n\nconst Navigation = ({clear, jacked, setShowInfo}) => {\n    const [visible, setVisibility] = useState(false);\n    const clicked = () => {\n        setVisibility(visible ? false : true);\n    };\n\n    const hide = () => {\n        setVisibility(false);\n    };\n\n    return (\n        <>\n            <div className=\"menuAction pushable\" onClick={clicked}>\n                <img src={jacked != undefined ? \"/spores-logo-black.svg\" : \"/spores-logo-white.svg\"}></img>\n            </div>\n            <div className=\"navFullContainer\" style={{display: visible ? \"inherit\" : \"none\"}} onClick={hide}>\n            <div className=\"dropMenu\" style={{display: visible ? \"inherit\" : \"none\"}}>\n              <div className=\"connect-button-wrapper\">\n                <ConnectButton\n                  accountStatus=\"address\" \n                  showBalance={{ smallScreen: false, largeScreen: false }}\n                  label=\"Connect Wallet\"\n                />\n              </div>\n                <a href=\"/\" className=\"navDropItem largeItem play\">Play</a>\n                <a href=\"/buy\" className=\"navDropItem largeItem buy\">Buy</a>\n                <a href=\"/learn\" className=\"navDropItem largeItem learn\">Learn</a>\n                <div className='iconContainer'>\n                    {jacked != undefined && <div className=\"navItem smallItem pushable\" style={{marginTop: \"-2px\", color: \"black\"}} onClick={() => setShowInfo(true)}><BiInfoCircle/></div>}\n                    <div className=\"navItem smallItem pushable\" style={{marginTop: \"-2px\"}}><a href=\"https://twitter.com/SporesDAO\"><IoLogoTwitter/></a></div>\n                    <div className=\"navItem smallItem pushable\" style={{marginTop: \"-2px\"}}><a href=\"/lore\"><img style={{height: \"20px\"}} src='./mushroom-icon.svg'></img></a></div>\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n    };\n  };\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n    };\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(Navigation);\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport SampleInfo from 'components/samples/SampleInfo.js';\nimport {isUnlockedCollection} from 'locks/isUnlocked.js';\nimport {CHAOS_COLLECTION, CHILL_RX_COLLECTION} from 'constants/collections.js';\nimport RemixPlayer from 'components/remix/RemixPlayer.js';\nimport ShuffleButton from './ShuffleButton.js';\nimport TimeRemaining from '../lock/TimeRemaining.js';\nimport {useRemixListener} from 'components/hooks/useRemixListener.js';\nimport SporeRecorded from \"components/recording/SporeRecorded.js\";\nimport {useCoverArtColors} from 'components/hooks/useCoverArtColors.js';\nimport {useJacker} from 'components/hooks/useJacker.js';\nimport {\n    setSecondsRemaining,\n    setUsedCheatCode} from 'actions/index.js';\nimport {isMobile} from 'react-device-detect';\nimport {useLatestJacks} from 'components/hooks/useLatestJacks.js';\nimport {useFlags} from 'flags/flags.js';\nimport EchoSearchBox from './EchoSearchBox.js';\nimport TokenMetadata from 'components/metadata/TokenMetadata.js';\nimport {useTokenLock} from 'components/hooks/useTokenLock.js';\nimport LockedNotification from 'components/lock/LockedNotification.js';\nimport Chart from '../chart/Chart.js';\nimport PlayerHelper from 'components/spore/PlayerHelper.js';\nimport {KEYON_SONGS} from './History.js';\nimport Info from './Info.js'\nimport { ConnectButton, lightTheme} from '@rainbow-me/rainbowkit';\nimport JackerPlayer from './JackerPlayer.js';\nimport {jack} from 'jacker/jack.js';\nimport {save} from 'jacker/save.js';\nimport {getArtistFromMetadata} from 'jacker/artist.js';\nimport {connect} from 'react-redux';\nimport './nft-jacker.scss';\nimport './mobile-nft-jacker.scss';\nimport {submitSplitJob} from 'jacker/stem-splitter.js';\nimport { prominent } from 'color.js';\nimport Navigation from './Navigation.js'\nimport invert, { RGB, RgbArray, HexColor, BlackWhite } from 'invert-color';\nimport './connect-buttons.scss';\nimport RemixList from '../remix/RemixList.js';\nimport { HiOutlineChevronDoubleDown } from 'react-icons/hi'\nimport ShareButton from './ShareButton.js';\nimport SwipeableViews from 'react-swipeable-views';\nimport { IoMdArrowBack } from 'react-icons/io';\n\nconst NFTJacker = (props) => { \n\n    useFlags();\n    let ref = useRef();\n    let playerRef = useRef();\n\n    const [link, setLink] = useState(props.defaultSearch || '');\n    const [showHelp, setShowHelp] = useState(false);\n    const [showHistory, setShowHistory] = useState(false);\n    const {latestJacks, setLatestJacks} = useLatestJacks();\n    const [showInfo, setShowInfo] = useState(false);\n    const [showLinkInput, setShowLinkInput] = useState(true);\n    const [showRemixes, setShowRemixes] = useState(!isMobile);\n\n    const [passed, setPassed] = useState(false);\n    const [failed, setFailed] = useState(false);\n    const [password, setPassword] = useState(\"\");\n\n    useEffect(() => {\n        window.addEventListener(\"click\", clearChart);\n        return () => window.removeEventListener(\"click\", clearChart);\n    }, [setShowLinkInput, showPlayer]);\n\n    const clearChart = useCallback(() => {\n        if (showPlayer) {\n            setShowLinkInput(false);\n        }\n    }, [showPlayer, setShowLinkInput]);\n\n    const {locked, cheatCodeActivating} = useTokenLock(\n        link,\n        setLink,\n        props.setUsedCheatCode,\n        props.setSecondsRemaining\n    );\n\n   const {\n        clear,\n        onJack,\n        loadJack,\n        collectionAddress,\n        artist,\n        description,\n        showPlayer,\n        setShowPlayer,\n        tokenId,\n        searchTerm,\n        songId,\n        buyThisSkin,\n        coverArt,\n        songName,\n        error,\n        currentSong,\n        setBuyThisSkin,\n        jackedAudio,\n        setCurrentSong,\n        currentLink,\n        metadata,\n        setSearchTerm\n    } = useJacker({\n        remixToPlay,\n        setLatestJacks,\n        setShowHistory,\n        setLink,\n        setShowLinkInput,\n        link,\n        latestJacks,\n        chillTokenId: props.isChillRX && props.match.params.tokenId,\n        defaultSearch: props.defaultSearch,\n        directTokenId: props.match.params.tokenId,\n        directCollectionAddress: props.match.params.collectionAddress,\n        playlistLoaded: props.playlistLoaded,\n\n    });\n\n    const {\n        remixToPlay,\n        setRemixToPlay,\n        recordedRemix,\n        uploadingRemix,\n        onRemixSigningCompleted\n    } =\n          useRemixListener(clear, playerRef, props.match.params.remixId, playerRef);\n \n\n    useEffect(() => {\n        if (remixToPlay) {\n            window.scrollTo(0,0);\n        }\n    }, [remixToPlay, setShowPlayer, setShowRemixes]);\n\n    const {\n        clearColors,\n        coverGrad,\n        buttonTextColor,\n        buttonBgColor,\n        upperGradInverted,\n        lowerGradInverted\n    } = useCoverArtColors({coverArt});\n\n    let className = showPlayer ? \"nft-jacker jacked\" : \"nft-jacker\";\n    if (showLinkInput) {\n        className += \" showing-link-input\";\n    }\n\n    const onClickPassword = useCallback((e) => {\n        if (password === \"spores-next-gen\") {\n            setPassed(true);\n        } else {\n            setFailed(true);\n        }\n    }, [password, setFailed, setPassed]);\n\n\n    if (!passed) {\n        return (\n            <div className=\"password-protected\">\n              <div className=\"spore-future\">\n              <img className=\"spore-future-logo\" src=\"/spore-logo-future2.jpeg\"/>\n              <div className=\"password-box\">\n                <div className=\"password-label\">\n                  Password\n                </div>\n                <input type=\"password\"\n                  placeholder=\"Enter password here\" text={password} onChange={(e) => setPassword(e.target.value)}/>\n                {failed && <div className=\"password-failed\">The password you entered is incorrect.</div>}\n                <div onClick={onClickPassword} className=\"password-enter\">\n                  Enter\n                </div>\n              </div>\n              </div>\n            </div>\n        );\n    }\n    return (\n      <>\n      {/* <SwipeableViews\n        enableMouseEvents\n        style={{overflow: isMobile ? \"unset\" : \"hidden auto\", backgroundColor: \"black\"}}\n        slideStyle={{overflow: \"hidden\"}}\n        index={swipeIndex}> */}\n\n        <div\n          ref={ref}\n          onClick={() => setShowHistory(false)}\n          className={className}\n          style={{background: coverGrad}}>\n          {!isUnlockedCollection(collectionAddress) && showPlayer && artist !== \"Keyon Christ\" && !recordedRemix && !uploadingRemix &&\n           <TimeRemaining color={buttonBgColor}/>}\n          {showPlayer && locked && artist !== \"Keyon Christ\" && !recordedRemix && !uploadingRemix &&\n           !isUnlockedCollection(collectionAddress) &&\n           <LockedNotification clearPlayer={() => {\n              clear();\n              clearColors();\n         }}/>}\n          {jackedAudio &&\n           <SporeRecorded\n             recordedRemix={recordedRemix}\n             uploadingRemix={uploadingRemix}\n             collectionAddress={collectionAddress}\n             onRemixSigningCompleted={onRemixSigningCompleted}\n             tokenId={tokenId}\n             spTokenId={buyThisSkin}\n             loadJack={loadJack}\n           />}\n          {showPlayer && !isMobile && <div\n                                        onClick={() => {\n                                            if (playerRef.current) {\n                                                playerRef.current.contentWindow.postMessage({\n                                                    type: \"jacker-stop\",\n                                                    body: \"jacker-stop\"\n                                                }, \"*\");\n                                                playerRef.current.contentWindow.postMessage({\n                                                    type: \"clear-recording\",\n                                                    body: \"clear-recording\"\n                                                }, \"*\");\n                                            }\n                                            onRemixSigningCompleted();\n                                            setRemixToPlay(undefined);\n                                            setShowPlayer(false);\n                                            clear();\n                                            clearColors();\n                                        }}\n                                        className=\"back-to-charts-btn\">\n                                        <IoMdArrowBack style={{fill: buttonBgColor}}/>\n                                      </div>}\n          {showHelp &&\n           <PlayerHelper clear={() => setShowHelp(false)}/>\n          }\n          {showPlayer &&\n           <div\n             onClick={() => setShowHelp(true)} style={{color: lowerGradInverted}}\n             className=\"helper-icon\">\n             ?\n           </div>}\n        <Navigation\n          jacked={jackedAudio}\n          setShowInfo={setShowInfo}/>\n          {showPlayer && <div onClick={() => setShowHelp(true)} style={{color: lowerGradInverted}} className=\"helper-icon\">?</div>}\n          {artist === \"Keyon Christ\" &&\n           <video\n             playsInline\n             className=\"rain-video\"\n             autoPlay\n             loop\n             muted\n             src={\"/mushrooms-medium.mp4\"}/>}\n          {error && <div className=\"error-message\">{error}</div>}\n          {showLinkInput && <Chart\n            loadJack={loadJack} \n            searchTerm={searchTerm}\n            jacked={jackedAudio}\n            history={latestJacks}\n            showChart={showLinkInput}/>}\n          <div className={jackedAudio ? \"player-container show\" : \"player-container hide\"} onClick={() => setShowLinkInput(false)}>\n            {remixToPlay && <RemixPlayer externalURL={currentLink} artist={artist} songName={songName} setRemix={setRemixToPlay} remix={remixToPlay}/>}\n            <JackerPlayer\n              showLoops={props.showLoops}\n              playerRef={playerRef}\n              collectionAddress={collectionAddress}\n              songId={songId}\n              remixToPlay={remixToPlay}\n              locked={locked && !isUnlockedCollection(collectionAddress) && artist !== \"Keyon Christ\"}\n              setBuyThisSkin={setBuyThisSkin}\n              tokenId={artist === \"Keyon Christ\" || collectionAddress === CHILL_RX_COLLECTION ? tokenId : undefined}\n              jackedAudio={jackedAudio}/>\n          </div>\n          {!remixToPlay && <ShuffleButton\n                             buttonTextColor={buttonBgColor}\n                             playerRef={playerRef}/>}\n        \n          {!isMobile && !remixToPlay && jackedAudio &&\n           <SampleInfo\n             playerRef={playerRef}\n           />}\n          <EchoSearchBox\n            cheatCodeActivating={cheatCodeActivating}\n            showLinkInput={showLinkInput}\n            setShowHistory={setShowHistory}\n            setShowInfo={setShowInfo}\n            setLink={setLink}\n            setSearchTerm={setSearchTerm}\n            showHistory={showHistory}\n            currentSong={currentSong}\n            setCurrentSong={setCurrentSong}\n            loadHistory={loadJack}\n            latestJacks={latestJacks}\n            onJack={onJack}\n            loadJack={loadJack}\n            link={link}\n          />\n         {songName &&\n           <TokenMetadata\n             buyThisSkin={buyThisSkin}\n             showBuyThisSkin={collectionAddress !== CHILL_RX_COLLECTION}\n             artist={artist}\n             upperGradInverted={upperGradInverted}\n             lowerGradInverted={lowerGradInverted}\n             coverArt={coverArt}\n             songName={songName}\n             tokenId={tokenId}\n             currentLink={currentLink}\n           />}\n          {showInfo && <Info clear={() => setShowInfo(false)}/>}\n          {showPlayer && <div onClick={() => setShowLinkInput(!showLinkInput)}\n          className=\"back-btn\"\n          style={\n            isMobile ? \n            {backgroundImage: upperGradInverted == \"#ffffff\" ? \"url('/search-icon.svg')\" : \"url('/search-icon-black.svg')\"} : \n            {backgroundImage: buttonBgColor == \"#ffffff\" ? \"url('/search-icon.svg')\" : \"url('/search-icon-black.svg')\"}}/>}\n        { showPlayer && <div\n            className={\"stockLeft\"}\n            onClick={() => isMobile && setShowRemixes(true)}\n            style={{color: isMobile && showPlayer ? buttonTextColor : buttonBgColor, backgroundColor: isMobile ? buttonBgColor : \"transparent\"}}>\n            <i>Remixes </i> {!isMobile && <HiOutlineChevronDoubleDown/>}\n       </div>}\n       { showPlayer && <ShareButton\n                        url={\"spores.vision/play/\" + collectionAddress + \"/\" + tokenId}\n                        type={\"song\"}\n                        lowerGradInverted={lowerGradInverted}\n                        buttonBgColor={buttonBgColor}/>}\n      { showPlayer && showRemixes &&\n      <RemixList\n        remixToPlay={remixToPlay}\n          setRemixToPlay={setRemixToPlay}\n          collectionAddress={collectionAddress}\n          tokenId={tokenId}\n          clear={() => setShowRemixes(false)}/>}\n\n        </div>\n\n      {/* <div className='playlist-view' onClick={() => setSwipeIndex(0)}></div> */}\n      {/* </SwipeableViews> */}\n    </>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n      playlistLoaded: state.playlist.playlistLoaded\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setUsedCheatCode: x => dispatch(setUsedCheatCode(x)),\n      setSecondsRemaining: x => dispatch(setSecondsRemaining(x)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NFTJacker);\n","\nexport const useFlags = () => {\n    window.PLAYLIST_FLAG = true;\n    window.CHARTS_FLAG = true;\n    window.TOKEN_LOCK_FLAG = true;\n    window.LOCAL_BACKEND_FLAG = false;\n    window.CHILLRX_FLAG = false;\n    window.ABOUT_TO_END_FLAG = false;\n    window.TEST_REMIX_UPLOAD_FLAG = false;\n    window.OWN_FAKE_SPORE_FLAG = window.location.hostname === \"localhost\";\n};\n","import React, {useCallback, useEffect, useState} from 'react';\nimport { prominent } from 'color.js';\nimport invert, { RGB, RgbArray, HexColor, BlackWhite } from 'invert-color';\n\nexport const useCoverArtColors = ({coverArt}) => {\n    let [coverGrad, setCoverGrad] = useState();\n    let [buttonTextColor, setButtonTextColor] = useState();\n    let [buttonBgColor, setButtonBgColor] = useState();\n    let [upperGradInverted, setUpperGradInverted] = useState();\n    let [lowerGradInverted, setLowerGradInverted] = useState();\n    let [mainColor, setMainColor] = useState();\n\n\n        // cover art background\n    useEffect(() => {\n      if (coverArt != null) {\n        prominent(coverArt, { amount: 3, group: 50, format: \"hex\"}).then(color => {\n          setCoverGrad(\"linear-gradient(45deg, \" + color[0] + \" 0%, \" + color[1] + \" 50%, \" + color[2] + \" 100%)\");\n          let invertedLowerColor = invert(color[0], true)\n          let invertedMidColor = invert(color[1], true);\n          let invertedUpperColor = invert(color[2], true);\n            setMainColor(color[0] === \"#000000\" ? color[1] : color[0]);\n          setButtonTextColor(invert(invertedMidColor, true));\n          setButtonBgColor(invertedMidColor);\n          setUpperGradInverted(invertedUpperColor);\n          setLowerGradInverted(invertedLowerColor)\n        })\n      }\n    }, [coverArt, setMainColor, setButtonTextColor, setButtonBgColor, setCoverGrad, setUpperGradInverted, setLowerGradInverted]);\n\n    const clearColors = useCallback(() => {\n        setLowerGradInverted();\n        setUpperGradInverted();\n        setCoverGrad();\n        setButtonBgColor();\n        setButtonTextColor();\n    }, [setLowerGradInverted, setUpperGradInverted, setCoverGrad, setButtonBgColor, setButtonTextColor]);\n \n    return {\n        mainColor,\n        clearColors,\n        coverGrad,\n        buttonTextColor,\n        buttonBgColor,\n        upperGradInverted,\n        lowerGradInverted\n    };\n};\n","\n\nimport React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport Drop from './Drop.js';\nimport './thugger.scss';\n\n//const CID = \"QmWEEvyNZmr3kngUjE8TNRRC5FmnXZLC1TdQk87UYe1cQL\";\nconst CID = \"QmXqQ4sKuScMs9K6wuZvGUpxcEWuNuWuRqj2GcKGxnCGdn\";\n\nconst Thugger = (props) => { \n    return (\n        <Drop\n          isFullScreen={false}\n          url={`https://zequencer.mypinata.cloud/ipfs/${CID}/?tokenId=32&gallery=true`}\n          collectionAddress=\"0x0000000000000000000000000000000000000001\"\n          tokenId={1}\n          className=\"thugger\"\n          artist=\"Young Thug\"\n          isSimple={true}\n          songTitle=\"Hop Out Ft. Wiz Kalifa\">\n         <p className=\"tagline-p\">\n           Spores grows strains of songs and media.\n         </p>\n         <p className=\"tagline-p\">\n           Season 1\n         </p>\n       </Drop>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Thugger);\n","\n\nimport React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport Drop from './Drop.js';\n\n//const CID = \"QmWEEvyNZmr3kngUjE8TNRRC5FmnXZLC1TdQk87UYe1cQL\";\nconst CID = \"QmVDXbQWjea3C5ARkJkFnGdBJAajbF3c4GHJKCkzQDpRHP\";\n\nconst InMySoul = (props) => { \n    return (\n        <Drop\n          url={`https://zequencer.mypinata.cloud/ipfs/${CID}/?tokenId=22&gallery=true`}\n          collectionAddress=\"0x935637ef6915b8344a943290e1d9a9caf3d6b3c3\"\n          thumbnail={\"/inmysoul-cover.jpeg\"}\n          tokenId={1}\n          askPrice=\"2\"\n          artist=\"Keyon Christ\"\n          songTitle=\"IN MY SOUL\">\n          <div className=\"buy-button\">\n            <div className=\"action\">\n              <a target=\"_blank\" href={`https://zora.co/collections/0x935637ef6915b8344a943290e1d9a9caf3d6b3c3/1`}>BID ON ZORA ↗</a>\n            </div>\n            <div className=\"asking-price\">\n              <div className=\"price-label\">RESERVE</div>\n              <div className=\"price\">2 ETH</div>\n            </div>\n          </div>\n          {/* <p className=\"title-p\">\n            <span className=\"purple-gradient\">IN MY SOUL</span>\n          </p>\n          <p className=\"artist-p\">\n            BY <span className=\"purple-gradient\">KEYON CHRIST</span> FEAT. <span className=\"purple-gradient\">CLLLAPS</span>\n          </p> */}\n          <p className=\"tagline-p\">\n            SPORES <span className='orange-gradient'>GENERATES VARIATIONS</span> OF SONGS FOR YOU WHILE YOU STREAM.{' '}\n            <br/><br/><br/>\n            THIS NFT IS THE FIRST 1/1 SONG RELEASE FROM SPORES. IT'S A 1/1 SPORE CONTAINING <span className=\"purple-gradient\">“IN MY SOUL”</span> BY <a href='https://www.dazeddigital.com/music/article/55043/1/lost-track-kanye-west-the-life-of-pablo-reemerges-can-u-be-forever-mitus-nft' className='isUnderlined'>KEYON CHRIST</a> - OUR LAST DROP WAS <a href='https://www.yingyangtwins.xyz' className='isUnderlined'>YINGYANGTWINS.XYZ</a> BY VIC MENSA.{' '}\n            <br/><br/>\n            <span className='new'>NEW</span>\n            <br/>\n            <span className='green-gradient'>ACOUSTIFY</span>\n            <br/>\n            SWITCH BETWEEN THE OG AND ACOUSTIC VERSIONS OF THIS SONG WITHOUT INTERUPTING PLAYBACK.{' '}\n            <br/><br/>\n            <img src='/acoustify-small.gif' className='mx-auto isRounded'/>\n            <br/><br/>\n            PRESS THE CENTER SPORE BUTTON. UNLOCK A NEW ERA FOR STREAMING.{' '}\n            <br/><br/>\n            <span className=\"green-gradient\">10%</span> OF THE SALE WILL BE AWARDED TO THE <span className=\"orange-gradient\">BEST REMIX</span>\n            <br/><br/>\n            SPEARHEAD THE NEXT GENERATION OF THE MUSIC INDUSTRY.\n            {/* THE <span className='green-gradient'>ACOUSTIC</span> SLIDER SWITCHES FROM THE ORIGINAL VERSION OF \"IN MY SOUL\" TO THE ACOUSTIC VERSION INSTANTLY. ACOUSTIC VERSION PLAYED BY ZAMORRAH */}\n          </p>\n          {/* <p className=\"bullet-p\">\n            ➤ COMES FULLY LOADED WITH <span className=\"purple-gradient\">KEYON CHRIST’S</span> NEW SINGLE \"IN MY SOUL\"\n          </p>\n          <p className=\"bullet-p\">\n            ➤ ANYONE CAN <span className=\"orange-gradient\">REMIX</span> THIS SONG FOR FREE\n          </p>\n          <p className=\"bullet-p\">\n            ➤ EACH NEW REMIX UNLOCKS ONE <span className=\"orange-gradient\">MAGICAL STEM</span> FOR THE WORLD TO HEAR\n          </p>\n          <p className=\"bullet-p\">\n            ➤ <span className=\"green-gradient\">10%</span> OF THE SALE WILL BE AWARDED TO THE <span className=\"orange-gradient\">BEST REMIX</span>, ONE WEEK FROM THE SALE \n          </p>\n          <p className=\"bullet-p\">\n            ➤ BUY THIS <span className=\"yellow-gradient\">HISTORIC 1/1</span> SO IT CAN GROW INTO THOUSANDS OF DERIVATIVES \n          </p>\n          <p className=\"arrow-p\">\n            ↓\n          </p> */}\n        </Drop>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InMySoul);\n","/*\nimport Jeremih from 'components/drops/Jerimiah.js';\nimport NextGen from 'components/drops/NextGen.js';\nimport Build from 'components/build-a-spore/Build.js';\nimport VideoJacker from 'components/video/VideoJacker.js';\nimport Analytics from 'components/analytics/Analytics.js';\nimport RemixViewer from 'components/remix/RemixViewer.js';\nimport Zora from 'components/zora/Zora.js';\nimport RemixesPage from 'components/remix/RemixesPage.js';\nimport YingYangTwins from 'components/remix/YingYangTwins.js';\nimport PlaylistCreator from 'components/playlists/PlaylistCreator.js';\nimport Demo from \"components/demo/Demo.js\";\nimport SporeWrapper from \"components/spore/SporeWrapper.js\";\nimport SporeLore from 'components/spore/SporeLore.js';\n*/\n\nimport '@rainbow-me/rainbowkit/dist/index.css';\n//import SporeLanding from \"components/spore/SporeLanding.js\";\nimport { BrowserRouter, StaticRouter, withRouter, Route, Switch } from 'react-router-dom';\nimport Zpore from 'components/drops/Zpore.js';\nimport NFTJacker from 'components/nft-jacker/NFTJacker.js';\nimport Thugger from 'components/drops/Thugger.js';\nimport InMySoul from 'components/drops/InMySoul.js';\nimport React, { Suspense, Component } from 'react';\nimport './App.scss';\n\nimport {\n  getDefaultWallets,\n  RainbowKitProvider,\n    darkTheme\n} from '@rainbow-me/rainbowkit';\nimport {\n  chain,\n  configureChains,\n  createClient,\n  WagmiConfig,\n} from 'wagmi';\nimport {infuraProvider} from 'wagmi/providers/infura';\nimport { publicProvider } from 'wagmi/providers/public';\n//import Scene from './components/3D/Scene';\n\nconst infuraId = \"2f3dce2af1044e88b4851c3d73c3d00c\";\n      \nconst { chains, provider } = configureChains(\n    [chain.mainnet],\n  [\n      infuraProvider({ infuraId }),\n      publicProvider()\n  ]\n);\n\nconst { connectors } = getDefaultWallets({\n  appName: 'Spore Players',\n  chains\n});\n\nconst wagmiClient = createClient({\n  autoConnect: true,\n  connectors,\n  provider\n});\n\n\n\nconst App = (props) => {\n    window.spores = true;\n    return (\n        <Suspense fallback={() => <div>Loading...</div>}>\n          <WagmiConfig client={wagmiClient}>\n          <RainbowKitProvider chains={chains}\n                              theme={darkTheme({\n                                  accentColor: 'black',\n                                  accentColorForeground: 'white',\n                                  borderRadius: 'small',\n                              })}\n          >\n          <BrowserRouter>\n            <Switch>\n              <Route  path=\"/inmysoul/\" \n                      render={(props) => <InMySoul {...props} store={props.store}/>}/>\n              <Route  path=\"/thugger/\" \n                      render={(props) => <Thugger {...props} store={props.store}/>}/>\n              <Route  path=\"/zpore/\" \n                      render={(props) => <Zpore {...props} store={props.store}/>}/>\n              {/*\n             <Route  path=\"/loops/\"\n                      render={(props) => <NFTJacker {...props} showLoops={true} store={props.store}/>}/>\n              <Route  path=\"/play/:collectionAddress/:tokenId/:remixId\" \n                      render={(props) => <NFTJacker {...props} isDirectLink={true}  store={props.store}/>}/>\n              <Route  path=\"/play/:collectionAddress/:tokenId\" \n                      render={(props) => <NFTJacker {...props} isDirectLink={true}  store={props.store}/>}/>\n              <Route  path=\"/chaos\" \n                      render={(props) => <NFTJacker {...props} defaultSearch={\"chaos\"} store={props.store}/>}/>\n              <Route  path=\"/nftjacker/\" \n                      render={(props) => <NFTJacker {...props} store={props.store}/>}/>\n               */}\n              {/*\n              <Route  path=\"/remix/:recordingHash/:dataHash\"\n                      render={(props) => <RemixViewer {...props} store={props.store}/>}/>\n              <Route  path=\"/build/\"\n                      render={(props) => <Build {...props} store={props.store}/>}/>\n              <Route  path=\"/stats\" \n                      render={(props) => <Analytics {...props} store={props.store}/>}/>\n              <Route  path=\"/remixes/\" \n                      render={(props) => <RemixesPage {...props} store={props.store}/>}/>\n              <Route  path=\"/playlist/\" \n                      render={(props) => <PlaylistCreator {...props} store={props.store}/>}/>\n              <Route  path=\"/next-gen/\" \n                      render={(props) => <NextGen {...props} store={props.store}/>}/>\n              <Route  path=\"/jeremih/\" \n                      render={(props) => <Jeremih {...props} store={props.store}/>}/>\n              <Route  path=\"/twins/\"\n                      render={(props) => <YingYangTwins {...props} store={props.store}/>}/>\n              <Route  path=\"/zora/\" \n                      render={(props) => <Zora {...props} store={props.store}/>}/>\n              <Route  path=\"/learn/\" \n                      render={(props) => <SporeLanding learning={true} {...props} store={props.store}/>}/>\n              <Route  path=\"/buy/\" \n                      render={(props) => <SporeLanding buying={true} {...props} store={props.store}/>}/>\n              <Route  path=\"/jeremih/\" \n                      render={(props) => <Demo name=\"jeremih\" {...props} store={props.store}/>}/>\n              <Route  path=\"/lightweight/\" \n                      render={(props) => <VideoJacker lightweight={true}/>}/>\n              <Route  path=\"/video/\" \n                      render={(props) => <VideoJacker/>}/>\n              <Route  path=\"/future/\" \n                      render={(props) => <Scene/>}/>\n              <Route  path=\"/doodles1/\" \n                      render={(props) => <Demo name=\"doodles1\" {...props} store={props.store}/>}/>\n              <Route  path=\"/doodles2/\" \n                      render={(props) => <Demo name=\"doodles2\" {...props} store={props.store}/>}/>\n              <Route  path=\"/ragnarok/\" \n                      render={(props) => <Demo name=\"ragnarok\" {...props} store={props.store}/>}/>\n              <Route  path=\"/lore\" \n                      render={(props) => <SporeLore {...props} store={props.store}/>}/>\n              <Route  path=\"/sp/:tokenId\" \n                      render={(props) => <SporeLanding {...props} store={props.store}/>}/>\n\n                  */}\n              <Route  path=\"/\" \n                      render={(props) => <NFTJacker {...props} store={props.store}/>}/>\n        {/*<Route  path=\"/\" \n           render={(props) => <SporeLanding {...props} store={props.store}/>}/>*/}\n            </Switch>\n          </BrowserRouter>\n        </RainbowKitProvider>\n        </WagmiConfig>\n        </Suspense>\n    );\n};\n\nexport default App;\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n      console.log(\"UNREGISTERING\");\n    navigator.serviceWorker.ready.then(registration => {\n        console.log(\"regstieration UNREGISTERING\", registration);\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\nimport {playlistReducer} from './playlist.js';\nimport {sporeReducer} from './spore.js';\n\nconst rootReducer = combineReducers(\n    {\n        playlist: playlistReducer,\n        spore: sporeReducer,\n    });\n\nexport default rootReducer;\n","import {SET_SHOW_PLAYLIST_MENU} from 'constants/action-types.js';\nimport {SET_CURRENT_PLAYLIST_SONG} from 'constants/action-types.js';\nimport {SET_PLAYLIST_LOADED} from 'constants/action-types.js';\n\nexport const playlistReducer = (state = {currentSong: \"Twisting Faith\"}, action) => {\n    let newState;\n    switch (action.type) {\n    case SET_SHOW_PLAYLIST_MENU:\n        return {\n            ... state,\n            showPlaylistMenu: action.payload\n        };\n    case SET_CURRENT_PLAYLIST_SONG:\n        console.log(\"SETTING CURRENT PLAYLIST SONG=\", action.payload);\n        return {\n            ... state,\n            currentSong: action.payload\n        };\n    case SET_PLAYLIST_LOADED:\n        console.log(\"SETTING PLAYLIST LOADED=\", action.payload);\n        return {\n            ... state,\n            playlistLoaded: action.payload\n        };\n    default:\n        return state;\n    }\n}\n \n","import {SET_SPORE_TOKEN_ID} from 'constants/action-types.js';\nimport {SET_SECONDS_REMAINING} from 'constants/action-types.js';\nimport {SET_SOLD_PLAYERS} from 'constants/action-types.js';\nimport {SET_PENDING_SPORES} from 'constants/action-types.js';\nimport {SET_USED_CHEAT_CODE} from 'constants/action-types.js';\n\nexport const sporeReducer = (state = {}, action) => {\n    let newState;\n    switch (action.type) {\n    case SET_SECONDS_REMAINING:\n        return {\n            ... state,\n            secondsRemaining: action.payload\n        };\n    case SET_USED_CHEAT_CODE:\n        return {\n            ... state,\n            usedCheatCode: action.payload\n        };\n    case SET_SPORE_TOKEN_ID:\n        return {\n            ... state,\n            tokenId: action.payload\n        };\n    case SET_PENDING_SPORES:\n        return {\n            ... state,\n            pendingSpores: action.payload\n        };\n    case SET_SOLD_PLAYERS:\n        return {\n            ... state,\n            soldPlayers: action.payload\n        };\n    default:\n        return state;\n    }\n}\n \n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {unregister} from './registerServiceWorker';\nimport store from \"./store/index\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n      <App store={store}/>\n    </Provider> \n    , document.getElementById('root'));\n\nunregister();\n","import Web3 from 'web3';\nimport {web3} from '../web3.js';\n\nexport const noteToAscii= {\n    'A': 'a',\n    'A#': 'A',\n    'B': 'b',\n    'C': 'c',\n    'C#': 'C',\n    'D': 'd',\n    'D#': 'D',\n    'E': 'e',\n    'F': 'f',\n    'F#': 'F',\n    'G': 'g',\n    'G#': 'G'\n};\n\nexport const noteToBytes32 = {\n    'A': web3.utils.asciiToHex('a'),\n    'A#': web3.utils.asciiToHex('A'),\n    'B': web3.utils.asciiToHex('b'),\n    'C': web3.utils.asciiToHex('c'),\n    'C#': web3.utils.asciiToHex('C'),\n    'D': web3.utils.asciiToHex('d'),\n    'D#': web3.utils.asciiToHex('D'),\n    'E': web3.utils.asciiToHex('e'),\n    'F': web3.utils.asciiToHex('f'),\n    'F#': web3.utils.asciiToHex('F'),\n    'G': web3.utils.asciiToHex('g'),\n    'G#': web3.utils.asciiToHex('G')\n};\n\nlet tmp = {};\n\nfor (let i in noteToBytes32) {\n    tmp[noteToBytes32[i]] = i;\n}\n\nexport const bytes32ToNote = tmp;\ntmp = {};\n\nfor (let i in noteToAscii) {\n    tmp[noteToAscii[i]] = i;\n}\n\n\nexport const asciiToNote = tmp;\n","import Web3 from 'web3';\n\nconst metamaskInstalled = false; // typeof window.web3 !== 'undefined';\nexport const web3 = metamaskInstalled ?\n      new Web3(window.web3.currentProvider) :\n      new Web3(new Web3.providers.HttpProvider('https://ropsten.infura.io/v3/2f3dce2af1044e88b4851c3d73c3d00c'));\nexport const web3WSS = \n    new Web3(new Web3.providers.WebsocketProvider('wss://ropsten.infura.io/ws/v3/2f3dce2af1044e88b4851c3d73c3d00c'));\n\n/*\n\nclass Contract {\n    constructor() {\n        this.methods = {};\n        this.options = {\n            address: ''\n        };\n    }\n}\n\nexport const web3 = {\n    eth: {\n        Contract: Contract,\n        net: {\n            isListening: () => true\n        }\n    },\n    utils: {\n        asciiToHex: () => 'aa',\n        padLeft: () => '',\n        padRight: () => '',\n    }\n};\n\nexport const web3WSS = web3;\n*/\n","import {web3} from 'decentralized/web3.js';\n\nconst metamaskInstalled = false;\n\nconst bs58 = require('bs58');\n\nexport function ipfsHashToBytes32(ipfs_hash) {\n    var h = bs58.decode(ipfs_hash).toString('hex').replace(/^1220/, '');\n    if (h.length != 64) {\n        return null;\n    }\n    return '0x' + h;\n}\n\nexport function bytes32ToIPFSHash(hash_hex) {\n    var buf = new Buffer(hash_hex.replace(/^0x/, '1220'), 'hex')\n    return bs58.encode(buf)\n}\n\nexport function convertAsciiToContractHex(ascii) {\n    let hex = web3.utils.fromAscii(ascii);\n    for (let i=hex.length; i <= 65; i++) {\n        hex += '0';\n    }\n    return hex;\n}\n\n","import Web3 from 'web3';\nimport {bytes32ToNote} from './chords/NoteConstants.js';\nimport {noteToBytes32} from './chords/NoteConstants.js';\nimport {asciiToNote} from './chords/NoteConstants.js';\nimport {web3} from './web3.js';\n\nconst bs58 = require('bs58');\nconst metamaskInstalled = typeof window.web3 !== 'undefined';\nconst nullBytes32 = web3.utils.padLeft('0x0', 64);\n\nclass EthereumDataType {\n    constructor(toConversion, fromConversion) {\n        this.toConversion = toConversion;\n        this.fromConversion = fromConversion;\n    }\n\n    convertTo(jsValue) {\n        return this.toConversion(jsValue);\n    }\n\n    convertFrom(ethereumValue) {\n        if (ethereumValue === nullBytes32) {\n            return null;\n        }\n        return this.fromConversion(ethereumValue);\n    }\n}\n\nfunction ipfsHashToBytes32(ipfs_hash) {\n    var h = bs58.decode(ipfs_hash).toString('hex').replace(/^1220/, '');\n    if (h.length != 64) {\n        return null;\n    }\n    return '0x' + h;\n}\n\nfunction bytes32ToIPFSHash(hash_hex) {\n    var buf = new Buffer(hash_hex.replace(/^0x/, '1220'), 'hex')\n    return bs58.encode(buf)\n}\n\nfunction trimEmpty(str) {\n    let trimmed = \"\";\n    for (let i in str) {\n        if (str.charCodeAt(i) == 0) {\n            continue;\n        }\n        trimmed += str.charAt(i);\n    }\n    return trimmed;\n}\n\nexport const IPFS_HASH = new EthereumDataType(\n    (x) => ipfsHashToBytes32(x),\n    (x) => bytes32ToIPFSHash(x));\n\nexport const INT_8 = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.numberToHex(x), 64),\n    (x) => web3.utils.hexToNumber(x));\n\nexport const INT_16 = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.numberToHex(x), 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\nexport const INT_32 = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.numberToHex(x), 64),\n    (x) => web3.utils.hexToNumber(x));\n\nexport const UINT_256 = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.numberToHex(parseInt(x)), 64),\n    (x) => web3.utils.hexToNumber(x));\n\nexport const BYTES_32 = new EthereumDataType(\n    (x) => web3.utils.padRight(web3.utils.fromAscii(x), 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\nexport const BYTES_32_LEFT = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.fromAscii(x), 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\n\nexport const BYTES_32_ENCRYPTED = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.toHex(x), 64),\n    (x) => stripLeadingZeroes(x.slice(2)));\n\nfunction stripLeadingZeroes(str) {\n    for (let i=0; i < str.length; i++) {\n        if (str.slice(i, i+1) !== '0') {\n            return str.slice(i);\n        }\n    }\n \n    return str;\n}\n\n\n\n\nexport const RIGHT_PADDED_BYTES_32 = new EthereumDataType(\n    (x) => web3.utils.padRight(web3.utils.toHex(x), 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\nexport const NOTES_BYTES_32 = new EthereumDataType(\n    (x) => web3.utils.padRight(x, 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)).split('').map(x => asciiToNote[x]));\n\nexport const NOTE_BYTES_32 = new EthereumDataType(\n    (x) => web3.utils.padRight(x, 64),\n    (x) => asciiToNote[trimEmpty(web3.utils.toAscii(x))]);\n\nexport const ADDRESS = new EthereumDataType(\n    (x) => web3.utils.padLeft(x, 64),\n    (x) => getAddress(x));\n\nexport const STRING = new EthereumDataType(\n    (x) => web3.utils.padLeft(x[0], 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\nexport const BYTES_32_ARRAY = (len) =>\n    new EthereumDataType(\n        (x) => x, // no need to convert to\n        (data) => data.slice(2, 2 + len * 64));\n\nfunction getAddress(x) {\n    return '0x' + x.slice(x.length - 40);\n}\n\n\n","import ipfsClient from 'ipfs-http-client';\n\nvar bufferToArrayBuffer = require('buffer-to-arraybuffer');\nvar xhr = new XMLHttpRequest();\nconst IPFS_ADDRESS = '/ip4/3.17.26.249/tcp/4001/ipfs/QmeQRpfSrYcAaqkhNoArDyTUwyYiru2gJp4WY1WegQGjtR';\nconst TIMEOUT = 30000;\nconst END = [85,110,105,118,101,114,115,97,108,32,83,101,113,101,117,110,99,101,115 ]\n\nconst LOCAL = 'LOCAL';\nconst UNIVERSAL = 'UNIVERSAL';\nconst INFURA = 'INFURA';\n\nwindow.httpV = 'http://www.zequencer.io:5001';\nwindow.httpsV = 'https://www.zequencer.io:5002';\nclass IpfsClient {\n    restart() {\n        // do nothing since it doesnt even matter -_-\n    }\n\n    getIPFSPrefix() {\n        if (this.connectedLocally) {\n            return 'http://localhost:5001';\n        } else if (window.location.protocol === 'http:') {\n            return window.httpV;\n        } else if (window.location.protocol === 'https:') {\n            return window.httpsV;\n        }\n    }\n\n    getHashUrl(hash) {\n        /*\n        if (this.connectedLocally) {\n            return 'http://localhost:8080/ipfs/' + hash;\n        } else if (window.location.protocol === 'http:') {\n            return '/ipfs/' + hash;\n        } else {\n            return '/ipfs/' + hash;\n        }\n        */\n        return \"https://zequencer.io/ipfs/\" + hash;\n    }\n\n    async getPinnedHashes() {\n        let list = await this.ipfs.refs.local();\n        return list.map(x => x.ref);\n    }\n\n    constructor() {\n        this.controllers = new Set();\n        if (window.isNFT) {\n            return;\n        }\n        if (window.location.protocol === 'http:') {\n            this.backupIpfs = new ipfsClient('ipfs.infura.io', '5001', {protocol: 'https'});\n            if (window.isNFT) {\n                this.centralIpfs = this.backupIpfs;\n                this._centralIpfs = ipfsClient('www.zequencer.io', '5001', {protocol: 'http'});\n            } else {\n                this.centralIpfs = ipfsClient('www.zequencer.io', '5001', {protocol: 'http'});\n                this._centralIpfs = this.centralIpfs;\n            }\n        } else {\n            if (window.isNFT) {\n                this.centralIpfs = this.backupIpfs;\n                this._centralIpfs = ipfsClient('www.zequencer.io', '5002', {protocol: 'https'});\n            } else {\n                this.centralIpfs = ipfsClient('www.zequencer.io', '5002', {protocol: 'https'});\n                this._centralIpfs = this.centralIpfs;\n            }\n        }\n\n        this.ipfs = this.centralIpfs;\n\n        let self = this;\n        this.connectedLocally = false;\n        this.finishedTestingLocalConnection = false;\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState == 4) {\n                // Request finished; either succesful or via timeout\n                if (xhr.status == 200) {\n                    self.ipfs = ipfsClient('localhost', '5001', {protocol: 'http'})  \n                    self.connectToCentral();\n                    self.connectedLocally = true;\n                    self.finishedTestingLocalConnection = true;\n                    this.keepSwarmConnectionAlive();\n                }\n            }\n        };\n\n        if (!window.isNFT) {\n            xhr.open(\"POST\", \"http://localhost:5001/api/v0/swarm/peers\", true);\n            xhr.timeout = 4000; // Set timeout to 4 seconds (4000 milliseconds)\n            xhr.ontimeout = function () {\n                console.log('timed out connecting to local ipfs daemon');\n            };\n        }\n\n        setTimeout(() => {\n            this.finishedTestingLocalConnection = true;\n        }, 4000);\n        xhr.send(\"\");\n    }\n\n    findProvs(hash) {\n        return new Promise((resolve, reject) => {\n            this.ipfs.dht.findprovs(hash, {maxNumProviders: 1}, (err, res) => {\n                resolve(res);\n            });\n        });\n    }\n\n    connectToCentral() {\n        try {\n                this.ipfs.swarm.connect(IPFS_ADDRESS, (err, res) => {\n                })\n                    .catch(e => console.log('error'));\n            } catch (e) {\n                console.log('error connecting to ipfs');\n            }\n    }\n\n    keepSwarmConnectionAlive() {\n        try {\n            this.ipfs.swarm.connect(IPFS_ADDRESS, (err, res) => {\n            })\n                .catch(e => console.log('error'));\n        } catch (e) {\n            console.log('error connecting to ipfs');\n        }\n        setInterval(() => {\n            if (window.sequencerEngine && window.sequencerEngine.getSequenceId) {\n                let id = window.sequencerEngine.getSequenceId();\n                if (window.sequencerEngine.store.getState().sequencer.isPlaying[id]) {\n                    return;\n                }\n            }\n            try {\n                this.ipfs.swarm.connect(IPFS_ADDRESS, (err, res) => {\n                })\n                    .catch(e => console.log('error'));\n            } catch (e) {\n                console.log('error connecting to ipfs');\n            }\n        }, 60000);\n    }\n\n    isConnectedLocally() {\n        return this.connectedLocally;\n    }\n\n    addArrayBuffer(arrayBuffer, id) {\n        let self = this;\n        return this.addHelper(arrayBuffer, id);\n    }\n\n    addArrayBufferAndSaveToDB(arrayBuffer, id) {\n        return this.addBlobAndSaveToDB(new Blob([new Uint8Array(arrayBuffer)]), id);\n    }\n\n    addHelper(arrayBuffer, id=0, name) {\n        if (name === undefined) {\n            name = 'hello';\n        } \n        let self = this;\n        return new Promise((resolve, reject) => {\n            let _ipfs = this._centralIpfs || this.ipfs;\n            if (!_ipfs) {\n                if (window.location.protocol === 'http:') {\n                    _ipfs = ipfsClient('www.zequencer.io', '5001', {protocol: 'http'});\n                } else {\n                    _ipfs = ipfsClient('www.zequencer.io', '5002', {protocol: 'https'});\n                }\n            }\n            _ipfs.add({name: name, path:'hello', content: new Buffer(arrayBuffer)}, (err, ipfsHash) => {\n                console.log(\"IPFS HASH = \", ipfsHash);\n                let hash = ipfsHash[0].hash;\n                if (err) {\n                    reject(err);\n                } else {\n                    resolve(hash);\n                }\n            }); \n        });\n    }\n\n    addBuffer(buffer, location=LOCAL, noUTF) {\n        return new Promise((resolve, reject) => {\n            let ipfsObject = this.centralIpfs;\n            ipfsObject.add(\n                buffer\n                , (err, ipfsHash) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    let hash = ipfsHash[0].hash;\n                    ipfsObject.pin.add(hash);\n\n                    resolve(hash);\n                }\n            });\n        });\n    }\n\n    addJson(json, location=LOCAL, noUTF) {\n        return new Promise((resolve, reject) => {\n            console.log('adding json noUTF=', noUTF, json);\n            let _ipfs = this._centralIpfs || this.ipfs;\n            if (!_ipfs) {\n                if (window.location.protocol === 'http:') {\n                    _ipfs = ipfsClient('www.zequencer.io', '5001', {protocol: 'http'});\n                } else {\n                    _ipfs = ipfsClient('www.zequencer.io', '5002', {protocol: 'https'});\n                }\n            }\n            _ipfs.add(\n                Buffer.from(JSON.stringify(json)) \n                , (err, ipfsHash) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    let hash = ipfsHash[0].hash;\n                    _ipfs.pin.add(hash);\n                    resolve(hash);\n                }\n            });\n\n            if (location === LOCAL) {\n                // add to other IPFS nodes for redundancy\n                if (_ipfs !== this.centralIpfs) {\n                    this.addJson(json, UNIVERSAL, noUTF)\n                        .then((hash) => resolve(hash));\n                }\n                this.addJson(json, INFURA, noUTF)\n                    .then((hash) => resolve(hash));\n            }\n        });\n    }\n\n    getJson(ipfsPath, useCentral=false, timeout=10000, isBytes=false) {\n        this.restart();\n        return new Promise((resolve, reject) => {\n            if (isBytes) {\n                this.ipfs.cat(ipfsPath, function (err, file) {\n                    resolve(JSON.parse(file.toString('utf8')));\n                });\n                return;\n            }\n            let url = \"/api/v0/cat?arg=\" + ipfsPath;\n            let ipfs = useCentral ? this.centralIpfs : this.ipfs;\n            let controller = new AbortController();\n            this.controllers.add(controller);\n            let signal = controller.signal;\n            setTimeout(() => {\n                controller.abort();\n                this.controllers.delete(controller);\n                reject();\n            }, timeout);\n\n            let method = 'POST';\n            let _url = this.getIPFSPrefix() + url;\n            if (window.isNFT) {\n                method = 'GET';\n                _url = ipfsPath;\n                fetch(\n                    _url,\n                    {signal,\n                     method\n                    })\n                    .then(async (resp) => {\n                        let json = await resp.json();\n                        resolve(json);\n                    });\n                return;\n            }\n\n            if (window.isNFT) {\n                return resolve({});\n            }\n\n            let dateA = new Date().getTime();\n            fetch(_url,\n                  {\n                      signal,\n                      method\n                  })\n                .then(async (response) => {\n                    let dateB = new Date().getTime();\n                    console.log('raw request took %s ms', dateB-dateA);\n                    this.readAllChunks(response.body).then(\n                        ret => {\n                            console.log(\"read all chunks took %s ms\", new Date().getTime() - dateB);\n                            let merged = this.mergeArrays(ret, 0, false);\n                            let str = new TextDecoder().decode(merged); \n                            resolve(JSON.parse(str));\n                        });\n                });\n        });\n    }\n\n    async addBytesArray(bytesArray) {\n        let b = new Uint8Array(bytesArray.length + END.length);\n        b.set(bytesArray, 0);\n        b.set(END, bytesArray.length);\n        let hash = await this.addHelper(b.buffer);\n        this.ipfs.pin.add(hash);\n        return hash;\n    }\n\n    async pin(x) {\n        return await this.ipfs.pin.add(x);\n    }\n\n    addBlob(blob, name) {\n        this.restart();\n        return new Promise((resolve, reject) => {\n            let arrayBuffer;\n            let fileReader = new FileReader();\n            let self = this;\n            fileReader.onload = function() {\n                arrayBuffer = this.result;\n                self.addHelper(arrayBuffer, undefined, name)\n                    .then(hash => {\n                        if (this.connectedLocally) {\n                            self.ipfs.pin.add(hash);\n                        }\n                        self.centralIpfs.pin.add(hash);\n                    \n                        resolve(hash);\n                    })\n                    .catch(err => reject(err));\n            };\n            fileReader.readAsArrayBuffer(blob);\n        });\n    }\n\n    addBlobAndSaveToDB(blob, id) {\n    }\n\n    converttoarraybuffer(blob) {\n        return new Promise((resolve, reject) => {\n            let arraybuffer;\n            let filereader = new filereader();\n            let self = this;\n            filereader.onload = function() {\n                resolve(this.result);\n            };\n            filereader.readasarraybuffer(blob);\n        });\n    }\n\n    readAllChunks(readableStream) {\n        const reader = readableStream.getReader();\n        const chunks = [];\n        \n        function pump() {\n            return reader.read().then(({ value, done }) => {\n                if (done) {\n                    return chunks;\n                }\n                chunks.push(value);\n                return pump();\n            });\n        }\n        \n        return pump();\n    }\n\n    getSound(hash, timeout=TIMEOUT) {\n        return new Promise((resolve, reject) => {\n            let controller = new AbortController();\n            this.controllers.add(controller);\n            let signal = controller.signal;\n            setTimeout(() => {\n                controller.abort();\n                this.controllers.delete(controller);\n                reject();\n            }, timeout);\n\n            let method = 'GET';\n            let _url = \"https://zequencer.io/ipfs/\" + hash; //this.getIPFSPrefix() + '/api/v0/get?arg=' + hash + '&stream-channels=true';\n            if (window.spores) {\n                _url = \"https://zequencer.mypinata.cloud/ipfs/\" + hash;\n            }\n            if (window.isNFT) {\n                method = 'GET';\n                _url = hash;\n                return fetch(\n                    _url,\n                    {signal,\n                     method\n                    })\n                    .then(async (resp) => {\n                        let json = await resp.arrayBuffer();\n                        resolve(new Uint8Array(json));\n                    });\n            }\n\n            if (window.isNFT) {\n                return resolve([]);\n            }\n\n            let dateA = new Date().getTime();\n            fetch(_url,\n                  {signal,\n                   method\n                  })\n                .then(async (response) => {\n                    let dateB = new Date().getTime();\n                    console.log(\"raw response took %s ms\", dateB - dateA);\n                    let arrayBuffer = await response.arrayBuffer();\n                    let dateC = new Date().getTime();\n                    console.log(\"Array buffer tranform took %s ms\", new Date().getTime() - dateB);\n                    let processed = this.processArray(new Uint8Array(arrayBuffer));\n                    console.log(\"processing took % ms\", new Date().getTime() - dateC);\n                    resolve(processed);\n                    return;\n                    this.readAllChunks(response.body).then(\n                        ret => {\n                            let merged = this.mergeArrays(ret);\n                            resolve(merged);\n                        })\n                        .catch(err => console.log('error reading chunks'));\n                })\n                .catch(err => {\n                    console.log('aborted');\n                });\n        });\n    }\n\n    arrayToBuffer(array) {\n        var buffer = new ArrayBuffer(array.length);\n\n        array.map(function(value, i){buffer[i] = value});\n        return buffer;\n    }\n\n    cancel() {\n        console.log('cancelling = ', this.controllers);\n        Array.from(this.controllers).forEach(\n            x => x.abort());\n        // this.controllers = new Set();\n    }\n\n    processArray(array, skip=512, skipEnd=true) {\n        if (!skipEnd) {\n            return array;\n        }\n\n        let a = array; //array.slice(0, array.length - (1024));\n        let offset = this.findEnd(a, END);\n        if (offset !== -1) {\n            let x = a.slice(0, offset);\n            return x;\n        }\n        return array.slice(0, array.length - (1024));;\n    }\n\n    mergeArrays(arrays, skip=512, skipEnd=true) {\n        let size = 0;\n        for (let i in arrays) {\n            size += arrays[i].length;\n        }\n\n        let array = new Uint8Array(size - skip);\n        let count = 0;\n        for (let i in arrays) {\n            if (count === 0) {\n                array.set(arrays[i].subarray(skip), count);\n                count += arrays[i].length - skip;\n            } else {\n                array.set(arrays[i], count);\n                count += arrays[i].length;\n            }\n        }\n\n        if (!skipEnd) {\n            return array;\n        }\n\n        let a = array; //array.slice(0, array.length - (1024));\n        let offset = this.findEnd(a, END);\n        if (offset !== -1) {\n            let x = a.slice(0, offset);\n            return x;\n        }\n        return array.slice(0, array.length - (1024));;\n    }\n\n    findEnd(array, ending) {\n        let index = array.length - 1600;\n        let iter = array.slice(index).values();\n        let foundIndex = 0;\n        for (let i=index; i < array.length; i++) {\n            let value = iter.next().value;\n            if (value === ending[foundIndex]) {\n                if (foundIndex == 0) {\n                    index = i;\n                }\n                foundIndex++;\n                if (foundIndex === ending.length - 1) {\n                    return index;\n                }\n            } else {\n                foundIndex=0;\n                index=i;\n            }\n\n        }\n        return -1;\n    }\n\n    getAudioBuffer(hash, context) {\n        this.restart();\n        return new Promise((resolve, reject) => {\n            this.getSound(hash)\n                .then(blob => \n                      context.decodeAudioData(bufferToArrayBuffer(blob), function(buffer) {\n                          resolve(buffer);\n                      }, function (y, d, e) { if (e) { reject(e); }}))\n                .catch(err => {\n                    reject(err);\n                });\n        });\n    }\n}\n\nconst ipfs = new IpfsClient();\n\nexport default ipfs;\n"],"sourceRoot":""}