{"version":3,"sources":["components/spores-landing/Overlay.module.css","decentralized/Ipfs.js","components/connect-wallet/ConnectWallet.js","components/progressbar/UnknownProgressBar.js","components/zora/Zora.js","components/buy/test.js","components/hooks/useBuy.js","components/buy/FinalizePurchase.js","components/buy/Cart.js","components/spore/JollyRancherPlayer.js","components/Colors.js","components/spore/SporeHeatMap.js","components/buttons/PlayButton.js","components/spore/AudioPlayer.js","components/hooks/useInterval.js","components/ens/ENSName.js","components/buy/TokenSaleCard.js","components/hooks/useTokensOnSale.js","components/buy/BuyNow.js","components/spore/VisualLinks.js","components/spore/docs.js","components/spore/HelperLines.js","components/spore/PlayerHelper.js","components/spore/Credits.js","components/credits/Credits.js","components/spore/SongTitle.js","components/playlist/SporePlaylist.js","actions/index.js","constants/action-types.js","components/spore/Caurosel.js","decentralized/EthereumEventLog.js","decentralized/EthereumTopic.js","decentralized/EthereumEvents.js","decentralized/EthereumQuery.js","decentralized/BackendQuery.js","decentralized/BackendQueryRunner.js","decentralized/contracts/SporeContract.js","engine/audio.js","components/spore/getSpores.js","components/spore/SimplePlayer.js","utils/lstorage.js","utils/getBlockDate.js","components/spore/SporeItem.js","utils/formatDate.js","components/spore/SporesView.js","components/buttons/RecordingIndicator.js","components/SP-2D/Mushroom.js","components/SP-2D/Mushroom2.js","components/SP-2D/Mushroom3.js","components/SP-2D/Scene.js","components/spore/StemPlayer.js","components/SP-2D/App.js","components/spore/Spore.js","components/spores-landing/Scene.js","components/spores-landing/Landing.js","components/spores-landing/Overlay.js","components/spores-landing/App.js","components/spore/SporeLanding.js","components/demo/Demo.js","components/spore/SporeWrapper.js","components/spores-landing/LoreApp.js","components/spore/SporeLore.js","App.js","registerServiceWorker.js","reducers/index.js","reducers/playlist.js","store/index.js","index.js","decentralized/chords/NoteConstants.js","components/spores-landing/Landing.module.css","decentralized/web3.js","decentralized/EthereumDataTypes.js"],"names":["module","exports","scrollContainer","spButtons","spButton","logo","zeqLogo","x","smallText","sectionHero","sectionLeft","sectionFirst","sectionSecond","sectionLast","sectionRight","caroItem","playerCarousel","selected","noImgSelector","bufferToArrayBuffer","require","xhr","XMLHttpRequest","IPFS_ADDRESS","END","window","httpV","httpsV","ipfs","IpfsClient","_this","this","Object","_Users_alecresende_code_spores_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","controllers","Set","isNFT","location","protocol","backupIpfs","ipfsClient","centralIpfs","_centralIpfs","self","connectedLocally","finishedTestingLocalConnection","onreadystatechange","readyState","status","connectToCentral","keepSwarmConnectionAlive","open","timeout","ontimeout","console","log","setTimeout","send","hash","_callee","list","_Users_alecresende_code_spores_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","refs","local","sent","abrupt","map","ref","stop","_this2","Promise","resolve","reject","dht","findprovs","maxNumProviders","err","res","swarm","connect","catch","e","_this3","setInterval","sequencerEngine","getSequenceId","id","store","getState","sequencer","isPlaying","arrayBuffer","addHelper","addBlobAndSaveToDB","Blob","Uint8Array","_this4","name","arguments","length","undefined","_ipfs","add","path","content","Buffer","ipfsHash","buffer","_this5","ipfsObject","pin","json","_this6","noUTF","from","JSON","stringify","addJson","then","ipfsPath","_this7","useCentral","isBytes","restart","cat","file","parse","toString","url","controller","AbortController","signal","abort","delete","method","_url","getIPFSPrefix","fetch","_ref","_Users_alecresende_code_spores_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee2","resp","_context2","_x","apply","dateA","Date","getTime","_ref2","_callee3","response","dateB","_context3","readAllChunks","body","ret","merged","mergeArrays","str","TextDecoder","decode","_x2","_callee4","bytesArray","b","_context4","set","_callee5","_context5","blob","_this8","fileReader","FileReader","onload","_this9","result","readAsArrayBuffer","filereader","readasarraybuffer","readableStream","reader","getReader","chunks","pump","read","_ref3","value","done","push","_this11","spores","_ref4","_callee6","_context6","_x5","_ref5","_callee7","dateC","processed","_context7","processArray","_x6","array","ArrayBuffer","i","Array","forEach","offset","findEnd","slice","arrays","skip","skipEnd","size","count","subarray","ending","index","iter","values","foundIndex","context","_this12","getSound","decodeAudioData","y","d","configureChains","chain","mainnet","infuraProvider","infuraId","publicProvider","chains","provider","connectors","getDefaultWallets","appName","wagmiClient","createClient","autoConnect","state","props","dispatch","react_default","createElement","wagmi_esm","client","chunk_UIIB4ABT","theme","darkTheme","label","text","_ref$className","className","_ref$width","width","_ref$intervalTime","intervalTime","_ref$intervalPiece","intervalPiece","_useState","useState","_useState2","slicedToArray","loadingProgress","setLoadingProgress","useEffect","interval","clearInterval","style","localStorage","getItem","contractAddress","setContractAddress","_useState3","_useState4","tokenId","setTokenId","_useState5","_useState6","askPrice","setAskPrice","_useState7","_useState8","approved","setApproved","_useState9","_useState10","running","setRunning","_useState11","_useState12","onClick","useCallback","asyncToGenerator","_regeneratorRuntime","signer","ownerAddress","erc721Contract","moduleManagerContract","erc721TransferHelperAddress","askModuleContract","_askPrice","setItem","ethers","providers","Web3Provider","ethereum","getSigner","mainnetZoraAddresses","ZoraModuleManager","IERC721__factory","ZoraModuleManager__factory","ERC721TransferHelper","isApprovedForAll","setApprovalForAll","isModuleApproved","AsksV1_1","setApprovalForModule","AsksV11__factory","askForNFT","toNumber","utils","parseEther","createAsk","wait","onChange","target","progressbar_UnknownProgressBar","useBuy","contract","_useSigner","useSigner","data","isError","isLoading","useBuy_regeneratorRuntime","fillAmount","ask","tx","parseEth","fillAsk","t0","account","tokensOnSale","onCompletedBuy","onCancel","cart","onDone","useBalance","addressOrName","balance","parseFloat","formatted","finished","setFinished","error","setError","current","setCurrent","waitingForWallet","setWaitingForWallet","confirming","setConfirming","buy","thumbnail","find","number","indexOf","total","completeBuy","playsInline","muted","autoPlay","loop","src","stopPropagation","PulseLoader_default","sizeUnit","color","loading","round","Math","onClickBuy","clearCart","removeFromCart","key","goToLink","href","rel","concat","isMobile","spore","progress","preset","setPreset","useRef","addEventListener","onMessage","removeEventListener","sendHeatmapHash","dataHash","contentWindow","postMessage","type","sandbox","allowtransparency","height","aria-describedby","alt","borderWidth","brightCache","getHSLString","h","s","l","getHSLFromString","_str$split","substring","split","_str$split2","hPart","sPart","lPart","hslToHex","min","f","n","k","max","padStart","Colors","classCallCheck","opacity","c","toUpperCase","shift","_getHSLFromString","warmth","rotate","_getHSLFromString2","factor","lightFactor","startsWith","_getHSLFromString3","_RGBToHSL","r","g","cmin","cmax","delta","abs","toFixed","RGBToHSL","getRGB","hsl","brightenHSL","cacheResult","floor","parseInt","rgb","_getHSLFromString4","colors","heatRoot","bucketSize","saturation","getBuckets","heat","_step","sliderData","sliderChanges","modeData","modeChanges","regions","isNaN","buckets","_iterator","_createForOfIteratorHelper","_step2","toConsumableArray","_iterator2","q","_loop","some","_ref$height","_ref$center","center","_ref$saturation","duration","maxStep","keys","step","pow","fill","warm","PlayButton","onPlayClicked","parentNode","blur","currentTarget","play","truncate","creator","formatTime","time","minutes","seconds","audioUnit","sporeMetadata","WIDTH","playing","setPlaying","playTime","setPlayTime","startPoint","setProgress","setMouseSeeker","callback","delay","savedCallback","useInterval","diff","Tone","Master","currentTime","onClickPlay","stopSound","playSound","mouseSeek","clientX","getBoundingClientRect","left","startTime","buttons_PlayButton","spore_JollyRancherPlayer","ENSName","address","_useEnsName","useEnsName","owner","addToCart","inCart","ens_ENSName","getTokensOnSale","goBack","_useAccount","useAccount","setCart","buying","setBuying","_useTokensOnSale","setTokensOnSale","useTokensOnSale","objectSpread","includes","filter","buy_FinalizePurchase","buy_Cart","accountStatus","showBalance","smallScreen","largeScreen","buy_TokenSaleCard","getLocation","element","bounding","rect","bound","top","offsetHeight","offsetWidth","helperBox","helperRefs","locations","setLocations","playerEl","helperEl","playerLocation","helperLocation","points","stopColor","docs","centerButton","ledButton","spButton1","spButton2","slider1","slider2","slider3","slider4","sliderHovered","doc","isArray","spore_VisualLinks","clear","setSliderHovered","setSelected","spore_HelperLines","onMouseLeave","onMouseOver","setShowCredits","CreditPart","names","show","setShow","Credits_CreditPart","song","playlist","currentSong","_ref$artist","artist","_ref$song","showPlaylistMenu","setCurrentSong","payload","stems","loadSong","stemIFrame","SporeOption","showStemPlayer","setShowStemPlayer","brect","playerChosen","isOver","mouse","setOver","rarity","setPlayerChosen","_y","spore_SongTitle","playlist_SporePlaylist","credits_Credits","setMouse","over","onMouseMove","clientY","tokens","Caurosel_SporeOption","EthereumEventLog","event","topics","_len","_key","EthereumTopic","convertTo","convertFrom","NewSporeCreated","IPFS_HASH","BYTES_32","INT_32","INT_16","RIGHT_PADDED_BYTES_32","ADDRESS","STRING","UINT_256","NOTE_BYTES_32","NOTES_BYTES_32","INT_8","BYTES_32_ENCRYPTED","BYTES_32_ARRAY","BYTES_32_LEFT","metamaskInstalled","web3","EthereumQuery","distinct","selectStatements","whereClauses","groupBy","joinClauses","limitSize","fromBlockNumber","toBlockNumber","eventLog","arg","col","WhereClause","valueList","field","JoinClause","fromBlock","toHex","toBlock","limit","sha3","toAdd","j","whereClause","eth","getPastLogs","getTopics","results","parsedResults","reverse","parseResult","blockNumber","regenerator_default","getBlockNumber","web3WSS","subscribe","resultSet","select","dataIndexSoFar","fieldIndex","fieldData","query","hexToNumber","argName","argValue","runner","BackendQueryRunner","runningQueries","queryJson","sleep","headers","Accept","Content-Type","removeQuery","BackendQuery","_super","call","submit","getJson","SporeContract","abi","inputs","internalType","outputs","stateMutability","anonymous","indexed","Contract","AudioUnit","source","playbackRate","looping","bind","seek","disconnect","createBufferSource","destination","start","getAllSpores","executeQuery","getSpores_createForOfIteratorHelper","sporeId","getLatestSpore","setSporeMetadata","latest","sporeHash","audioBuffer","player","where","setBuffer","_x3","_x4","links","1","2","3","4","latestSpore","setLatestSpore","dispose","spore_AudioPlayer","lstorage","LStorage","removeItem","getBlockDate","storage","block","date","getBlock","timestamp","isSelected","setDate","setHeat","cancel","spore_SporeHeatMap","dist","hours","getMonth","getDate","formatDate","_formatDate","setSpores","spore_SporeItem","spore_SimplePlayer","Mushroom","materials","nodes","mushroomMat","position","_ref$scale","scale","rotation","geometry","hat","material","castShadow","receiveShadow","feet","Mushroom2","top1","bottom1","Mushroom3","top2","bottom2","Scene","esm_extends","_useSpline","useSpline","sceneCamera","threeTone","THREE","load","minFilter","magFilter","gradientMap","origin","message","addScalar","Fragment","assign","SP_2D_Mushroom","SP_2D_Mushroom3","SP_2D_Mushroom2","intensity","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-near","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","OrthographicCamera","makeDefault","far","near","zoom","players","setShowPlaylistMenu","react","fallback","react_three_fiber_esm","shadows","flat","linear","postprocessing_dist","kernelSize","KernelSize","LARGE","luminanceThreshold","luminanceSmoothing","OrbitControls","enableZoom","enableRotate","enablePan","jeremih","doodles1","doodles2","ragnarok","root","document","getElementsByTagName","setAttribute","buttons_RecordingIndicator","uploadFile","setter","alert","onloadend","Spore_regeneratorRuntime","raw","byteLength","addArrayBuffer","objectWithoutProperties","uploading","setUploading","match","params","showCredits","showSpores","setShowSpores","_useState13","_useState14","_useState15","_useState16","customVideo","setCustomVideo","preventDefault","passive","title","onDrop","dataTransfer","effectAllowed","dropEffect","ev","items","kind","getAsFile","spore_PlayerHelper","spore_Credits","spore_Caurosel","spore_SporesView","spore_StemPlayer","scroll","camera","lerpedScroll","curve","test","navigator","userAgent","fov","useFrame","t","getPointAt","z","attach","args","Sparkles","speed","Stars","radius","depth","fade","PerspectiveCamera","PI","cover","ground","decay","distance","filler","underground","Rock_Moss_3","Rock_Moss_1","Plant_1","Plant_4","Plant_5","PineTree_1","PineTree_2","PineTree_3","PineTree_5","WoodLog_Moss","Rock_Moss_2","Landing","setBuyingMode","goToSlide","offsetRadius","setState","slides","uuidv4","styles","slide","xDown","yDown","landingContainer","titleContainer","navBar","navItem","marginTop","index_esm","connectButtonWrapper","marginLeft","onTouchStart","evt","firstTouch","touches","originalEvent","getTouches","onTouchMove","xUp","yUp","xDiff","yDiff","bundle_default","marginBottom","display","justifyContent","flexWrap","alignContent","flexDirection","textAlign","shimmer","defPronun","defText","sectionTitle","objectFit","poweredByContainer","Overlay","scrollTo","scrollHeight","onScroll","scroll01","scrollTop","innerHeight","viewBox","xmlns","rx","stroke","stroke-opacity","stroke-width","stroke-linecap","stroke-linejoin","App","buyingMode","history","pushState","spore_Spore","buy_BuyNow","SporeLanding","spores_landing_App_App","passed","setPassed","failed","setFailed","password","setPassword","onClickPassword","placeholder","LoreApp","smaa","VERY_LARGE","Scene_Scene","SporeLore","accentColor","accentColorForeground","borderRadius","BrowserRouter","Switch","Route","render","zora_Zora","spore_SporeLanding","connect_wallet_ConnectWallet","demo_Demo","spore_SporeLore","Boolean","hostname","rootReducer","combineReducers","action","createStore","ReactDOM","es","src_App_0","getElementById","serviceWorker","ready","registration","unregister","__webpack_require__","__webpack_exports__","asciiToNote","_web3_js__WEBPACK_IMPORTED_MODULE_1__","noteToAscii","A","A#","B","C","C#","D","D#","E","F","F#","G","G#","noteToBytes32","asciiToHex","tmp","mintButton","infoImage","web3__WEBPACK_IMPORTED_MODULE_0__","web3__WEBPACK_IMPORTED_MODULE_0___default","Web3","HttpProvider","WebsocketProvider","bs58","nullBytes32","padLeft","EthereumDataType","toConversion","fromConversion","_Users_alecresende_code_spores_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","jsValue","ethereumValue","trimEmpty","trimmed","charCodeAt","charAt","ipfs_hash","replace","ipfsHashToBytes32","hash_hex","buf","encode","bytes32ToIPFSHash","numberToHex","toAscii","padRight","fromAscii","stripLeadingZeroes","getAddress","len"],"mappings":"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","file":"static/js/main.290a6cdf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollContainer\":\"Overlay_scrollContainer__1qCGl\",\"spButtons\":\"Overlay_spButtons__3Py-c\",\"spButton\":\"Overlay_spButton__3jJAG\",\"logo\":\"Overlay_logo__3zoYc\",\"zeqLogo\":\"Overlay_zeqLogo__1g8a0\",\"x\":\"Overlay_x__3K0dz\",\"smallText\":\"Overlay_smallText__NJCJw\",\"sectionHero\":\"Overlay_sectionHero__2TBrR\",\"sectionLeft\":\"Overlay_sectionLeft__31YKq\",\"sectionFirst\":\"Overlay_sectionFirst__3a0Ww\",\"sectionSecond\":\"Overlay_sectionSecond__101hd\",\"sectionLast\":\"Overlay_sectionLast__2alRK\",\"sectionRight\":\"Overlay_sectionRight__1Q46X\",\"caroItem\":\"Overlay_caroItem__3Y5Xv\",\"playerCarousel\":\"Overlay_playerCarousel__2JAHf\",\"selected\":\"Overlay_selected__3wQx1\",\"noImgSelector\":\"Overlay_noImgSelector__37whm\"};","import ipfsClient from 'ipfs-http-client';\n\nvar bufferToArrayBuffer = require('buffer-to-arraybuffer');\nvar xhr = new XMLHttpRequest();\nconst IPFS_ADDRESS = '/ip4/3.17.26.249/tcp/4001/ipfs/QmeQRpfSrYcAaqkhNoArDyTUwyYiru2gJp4WY1WegQGjtR';\nconst TIMEOUT = 30000;\nconst END = [85,110,105,118,101,114,115,97,108,32,83,101,113,101,117,110,99,101,115 ]\n\nconst LOCAL = 'LOCAL';\nconst UNIVERSAL = 'UNIVERSAL';\nconst INFURA = 'INFURA';\n\nwindow.httpV = 'http://www.zequencer.io:5001';\nwindow.httpsV = 'https://www.zequencer.io:5002';\nclass IpfsClient {\n    restart() {\n        // do nothing since it doesnt even matter -_-\n    }\n\n    getIPFSPrefix() {\n        if (this.connectedLocally) {\n            return 'http://localhost:5001';\n        } else if (window.location.protocol === 'http:') {\n            return window.httpV;\n        } else if (window.location.protocol === 'https:') {\n            return window.httpsV;\n        }\n    }\n\n    getHashUrl(hash) {\n        if (this.connectedLocally) {\n            return 'http://localhost:8080/ipfs/' + hash;\n        } else if (window.location.protocol === 'http:') {\n            return '/ipfs/' + hash;\n        } else {\n            return '/ipfs/' + hash;\n        }\n    }\n\n    async getPinnedHashes() {\n        let list = await this.ipfs.refs.local();\n        return list.map(x => x.ref);\n    }\n\n    constructor() {\n        this.controllers = new Set();\n        if (window.isNFT) {\n            return;\n        }\n        if (window.location.protocol === 'http:') {\n            this.backupIpfs = new ipfsClient('ipfs.infura.io', '5001', {protocol: 'https'});\n            if (window.isNFT) {\n                this.centralIpfs = this.backupIpfs;\n                this._centralIpfs = ipfsClient('www.zequencer.io', '5001', {protocol: 'http'});\n            } else {\n                this.centralIpfs = ipfsClient('www.zequencer.io', '5001', {protocol: 'http'});\n                this._centralIpfs = this.centralIpfs;\n            }\n        } else {\n            if (window.isNFT) {\n                this.centralIpfs = this.backupIpfs;\n                this._centralIpfs = ipfsClient('www.zequencer.io', '5002', {protocol: 'https'});\n            } else {\n                this.centralIpfs = ipfsClient('www.zequencer.io', '5002', {protocol: 'https'});\n                this._centralIpfs = this.centralIpfs;\n            }\n        }\n\n        this.ipfs = this.centralIpfs;\n\n        let self = this;\n        this.connectedLocally = false;\n        this.finishedTestingLocalConnection = false;\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState == 4) {\n                // Request finished; either succesful or via timeout\n                if (xhr.status == 200) {\n                    self.ipfs = ipfsClient('localhost', '5001', {protocol: 'http'})  \n                    self.connectToCentral();\n                    self.connectedLocally = true;\n                    self.finishedTestingLocalConnection = true;\n                    this.keepSwarmConnectionAlive();\n                }\n            }\n        };\n\n        if (!window.isNFT) {\n            xhr.open(\"POST\", \"http://localhost:5001/api/v0/swarm/peers\", true);\n            xhr.timeout = 4000; // Set timeout to 4 seconds (4000 milliseconds)\n            xhr.ontimeout = function () {\n                console.log('timed out connecting to local ipfs daemon');\n            };\n        }\n\n        setTimeout(() => {\n            this.finishedTestingLocalConnection = true;\n        }, 4000);\n        xhr.send(\"\");\n    }\n\n    findProvs(hash) {\n        return new Promise((resolve, reject) => {\n            this.ipfs.dht.findprovs(hash, {maxNumProviders: 1}, (err, res) => {\n                resolve(res);\n            });\n        });\n    }\n\n    connectToCentral() {\n        try {\n                this.ipfs.swarm.connect(IPFS_ADDRESS, (err, res) => {\n                })\n                    .catch(e => console.log('error'));\n            } catch (e) {\n                console.log('error connecting to ipfs');\n            }\n    }\n\n    keepSwarmConnectionAlive() {\n        try {\n            this.ipfs.swarm.connect(IPFS_ADDRESS, (err, res) => {\n            })\n                .catch(e => console.log('error'));\n        } catch (e) {\n            console.log('error connecting to ipfs');\n        }\n        setInterval(() => {\n            if (window.sequencerEngine && window.sequencerEngine.getSequenceId) {\n                let id = window.sequencerEngine.getSequenceId();\n                if (window.sequencerEngine.store.getState().sequencer.isPlaying[id]) {\n                    return;\n                }\n            }\n            try {\n                this.ipfs.swarm.connect(IPFS_ADDRESS, (err, res) => {\n                })\n                    .catch(e => console.log('error'));\n            } catch (e) {\n                console.log('error connecting to ipfs');\n            }\n        }, 60000);\n    }\n\n    isConnectedLocally() {\n        return this.connectedLocally;\n    }\n\n    addArrayBuffer(arrayBuffer, id) {\n        let self = this;\n        return this.addHelper(arrayBuffer, id);\n    }\n\n    addArrayBufferAndSaveToDB(arrayBuffer, id) {\n        return this.addBlobAndSaveToDB(new Blob([new Uint8Array(arrayBuffer)]), id);\n    }\n\n    addHelper(arrayBuffer, id=0, name) {\n        if (name === undefined) {\n            name = 'hello';\n        } \n        let self = this;\n        return new Promise((resolve, reject) => {\n            let _ipfs = this._centralIpfs || this.ipfs;\n            if (!_ipfs) {\n                if (window.location.protocol === 'http:') {\n                    _ipfs = ipfsClient('www.zequencer.io', '5001', {protocol: 'http'});\n                } else {\n                    _ipfs = ipfsClient('www.zequencer.io', '5002', {protocol: 'https'});\n                }\n            }\n            _ipfs.add({name: name, path:'hello', content: new Buffer(arrayBuffer)}, (err, ipfsHash) => {\n                console.log(\"IPFS HASH = \", ipfsHash);\n                let hash = ipfsHash[0].hash;\n                if (err) {\n                    reject(err);\n                } else {\n                    resolve(hash);\n                }\n            }); \n        });\n    }\n\n    addBuffer(buffer, location=LOCAL, noUTF) {\n        return new Promise((resolve, reject) => {\n            let ipfsObject = this.centralIpfs;\n            ipfsObject.add(\n                buffer\n                , (err, ipfsHash) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    let hash = ipfsHash[0].hash;\n                    ipfsObject.pin.add(hash);\n\n                    resolve(hash);\n                }\n            });\n        });\n    }\n\n    addJson(json, location=LOCAL, noUTF) {\n        return new Promise((resolve, reject) => {\n            console.log('adding json noUTF=', noUTF, json);\n            let _ipfs = this._centralIpfs || this.ipfs;\n            if (!_ipfs) {\n                if (window.location.protocol === 'http:') {\n                    _ipfs = ipfsClient('www.zequencer.io', '5001', {protocol: 'http'});\n                } else {\n                    _ipfs = ipfsClient('www.zequencer.io', '5002', {protocol: 'https'});\n                }\n            }\n            _ipfs.add(\n                Buffer.from(JSON.stringify(json)) \n                , (err, ipfsHash) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    let hash = ipfsHash[0].hash;\n                    _ipfs.pin.add(hash);\n                    resolve(hash);\n                }\n            });\n\n            if (location === LOCAL) {\n                // add to other IPFS nodes for redundancy\n                if (_ipfs !== this.centralIpfs) {\n                    this.addJson(json, UNIVERSAL, noUTF)\n                        .then((hash) => resolve(hash));\n                }\n                this.addJson(json, INFURA, noUTF)\n                    .then((hash) => resolve(hash));\n            }\n        });\n    }\n\n    getJson(ipfsPath, useCentral=false, timeout=10000, isBytes=false) {\n        this.restart();\n        return new Promise((resolve, reject) => {\n            if (isBytes) {\n                this.ipfs.cat(ipfsPath, function (err, file) {\n                    resolve(JSON.parse(file.toString('utf8')));\n                });\n                return;\n            }\n            let url = \"/api/v0/cat?arg=\" + ipfsPath;\n            let ipfs = useCentral ? this.centralIpfs : this.ipfs;\n            let controller = new AbortController();\n            this.controllers.add(controller);\n            let signal = controller.signal;\n            setTimeout(() => {\n                controller.abort();\n                this.controllers.delete(controller);\n                reject();\n            }, timeout);\n\n            let method = 'POST';\n            let _url = this.getIPFSPrefix() + url;\n            if (window.isNFT) {\n                method = 'GET';\n                _url = ipfsPath;\n                fetch(\n                    _url,\n                    {signal,\n                     method\n                    })\n                    .then(async (resp) => {\n                        let json = await resp.json();\n                        resolve(json);\n                    });\n                return;\n            }\n\n            if (window.isNFT) {\n                return resolve({});\n            }\n\n            let dateA = new Date().getTime();\n            fetch(_url,\n                  {\n                      signal,\n                      method\n                  })\n                .then(async (response) => {\n                    let dateB = new Date().getTime();\n                    console.log('raw request took %s ms', dateB-dateA);\n                    this.readAllChunks(response.body).then(\n                        ret => {\n                            console.log(\"read all chunks took %s ms\", new Date().getTime() - dateB);\n                            let merged = this.mergeArrays(ret, 0, false);\n                            let str = new TextDecoder().decode(merged); \n                            resolve(JSON.parse(str));\n                        });\n                });\n        });\n    }\n\n    async addBytesArray(bytesArray) {\n        let b = new Uint8Array(bytesArray.length + END.length);\n        b.set(bytesArray, 0);\n        b.set(END, bytesArray.length);\n        let hash = await this.addHelper(b.buffer);\n        this.ipfs.pin.add(hash);\n        return hash;\n    }\n\n    async pin(x) {\n        return await this.ipfs.pin.add(x);\n    }\n\n    addBlob(blob, name) {\n        this.restart();\n        return new Promise((resolve, reject) => {\n            let arrayBuffer;\n            let fileReader = new FileReader();\n            let self = this;\n            fileReader.onload = function() {\n                arrayBuffer = this.result;\n                self.addHelper(arrayBuffer, undefined, name)\n                    .then(hash => {\n                        if (this.connectedLocally) {\n                            self.ipfs.pin.add(hash);\n                        }\n                        self.centralIpfs.pin.add(hash);\n                    \n                        resolve(hash);\n                    })\n                    .catch(err => reject(err));\n            };\n            fileReader.readAsArrayBuffer(blob);\n        });\n    }\n\n    addBlobAndSaveToDB(blob, id) {\n    }\n\n    converttoarraybuffer(blob) {\n        return new Promise((resolve, reject) => {\n            let arraybuffer;\n            let filereader = new filereader();\n            let self = this;\n            filereader.onload = function() {\n                resolve(this.result);\n            };\n            filereader.readasarraybuffer(blob);\n        });\n    }\n\n    readAllChunks(readableStream) {\n        const reader = readableStream.getReader();\n        const chunks = [];\n        \n        function pump() {\n            return reader.read().then(({ value, done }) => {\n                if (done) {\n                    return chunks;\n                }\n                chunks.push(value);\n                return pump();\n            });\n        }\n        \n        return pump();\n    }\n\n    getSound(hash, timeout=TIMEOUT) {\n        return new Promise((resolve, reject) => {\n            let controller = new AbortController();\n            this.controllers.add(controller);\n            let signal = controller.signal;\n            setTimeout(() => {\n                controller.abort();\n                this.controllers.delete(controller);\n                reject();\n            }, timeout);\n\n            let method = 'GET';\n            let _url = \"https://zequencer.io/ipfs/\" + hash; //this.getIPFSPrefix() + '/api/v0/get?arg=' + hash + '&stream-channels=true';\n            if (window.spores) {\n                _url = \"https://zequencer.mypinata.cloud/ipfs/\" + hash;\n            }\n            if (window.isNFT) {\n                method = 'GET';\n                _url = hash;\n                return fetch(\n                    _url,\n                    {signal,\n                     method\n                    })\n                    .then(async (resp) => {\n                        let json = await resp.arrayBuffer();\n                        resolve(new Uint8Array(json));\n                    });\n            }\n\n            if (window.isNFT) {\n                return resolve([]);\n            }\n\n            let dateA = new Date().getTime();\n            fetch(_url,\n                  {signal,\n                   method\n                  })\n                .then(async (response) => {\n                    let dateB = new Date().getTime();\n                    console.log(\"raw response took %s ms\", dateB - dateA);\n                    let arrayBuffer = await response.arrayBuffer();\n                    let dateC = new Date().getTime();\n                    console.log(\"Array buffer tranform took %s ms\", new Date().getTime() - dateB);\n                    let processed = this.processArray(new Uint8Array(arrayBuffer));\n                    console.log(\"processing took % ms\", new Date().getTime() - dateC);\n                    resolve(processed);\n                    return;\n                    this.readAllChunks(response.body).then(\n                        ret => {\n                            let merged = this.mergeArrays(ret);\n                            resolve(merged);\n                        })\n                        .catch(err => console.log('error reading chunks'));\n                })\n                .catch(err => {\n                    console.log('aborted');\n                });\n        });\n    }\n\n    arrayToBuffer(array) {\n        var buffer = new ArrayBuffer(array.length);\n\n        array.map(function(value, i){buffer[i] = value});\n        return buffer;\n    }\n\n    cancel() {\n        console.log('cancelling = ', this.controllers);\n        Array.from(this.controllers).forEach(\n            x => x.abort());\n        // this.controllers = new Set();\n    }\n\n    processArray(array, skip=512, skipEnd=true) {\n        if (!skipEnd) {\n            return array;\n        }\n\n        let a = array; //array.slice(0, array.length - (1024));\n        let offset = this.findEnd(a, END);\n        if (offset !== -1) {\n            let x = a.slice(0, offset);\n            return x;\n        }\n        return array.slice(0, array.length - (1024));;\n    }\n\n    mergeArrays(arrays, skip=512, skipEnd=true) {\n        let size = 0;\n        for (let i in arrays) {\n            size += arrays[i].length;\n        }\n\n        let array = new Uint8Array(size - skip);\n        let count = 0;\n        for (let i in arrays) {\n            if (count === 0) {\n                array.set(arrays[i].subarray(skip), count);\n                count += arrays[i].length - skip;\n            } else {\n                array.set(arrays[i], count);\n                count += arrays[i].length;\n            }\n        }\n\n        if (!skipEnd) {\n            return array;\n        }\n\n        let a = array; //array.slice(0, array.length - (1024));\n        let offset = this.findEnd(a, END);\n        if (offset !== -1) {\n            let x = a.slice(0, offset);\n            return x;\n        }\n        return array.slice(0, array.length - (1024));;\n    }\n\n    findEnd(array, ending) {\n        let index = array.length - 1600;\n        let iter = array.slice(index).values();\n        let foundIndex = 0;\n        for (let i=index; i < array.length; i++) {\n            let value = iter.next().value;\n            if (value === ending[foundIndex]) {\n                if (foundIndex == 0) {\n                    index = i;\n                }\n                foundIndex++;\n                if (foundIndex === ending.length - 1) {\n                    return index;\n                }\n            } else {\n                foundIndex=0;\n                index=i;\n            }\n\n        }\n        return -1;\n    }\n\n    getAudioBuffer(hash, context) {\n        this.restart();\n        return new Promise((resolve, reject) => {\n            this.getSound(hash)\n                .then(blob => \n                      context.decodeAudioData(bufferToArrayBuffer(blob), function(buffer) {\n                          resolve(buffer);\n                      }, function (y, d, e) { if (e) { reject(e); }}))\n                .catch(err => {\n                    reject(err);\n                });\n        });\n    }\n}\n\nconst ipfs = new IpfsClient();\n\nexport default ipfs;\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport { ConnectButton } from '@rainbow-me/rainbowkit';\nimport '@rainbow-me/rainbowkit/dist/index.css';\n\nimport {\n  getDefaultWallets,\n  RainbowKitProvider,\n    darkTheme\n} from '@rainbow-me/rainbowkit';\nimport {\n  chain,\n  configureChains,\n  createClient,\n  WagmiConfig,\n} from 'wagmi';\nimport {infuraProvider} from 'wagmi/providers/infura';\nimport { publicProvider } from 'wagmi/providers/public';\n\nconst infuraId = \"2f3dce2af1044e88b4851c3d73c3d00c\";\n      \nconst { chains, provider } = configureChains(\n    [chain.mainnet],\n  [\n      infuraProvider({ infuraId }),\n      publicProvider()\n  ]\n);\n\nconst { connectors } = getDefaultWallets({\n  appName: 'Spore Players',\n  chains\n});\n\nconst wagmiClient = createClient({\n  autoConnect: true,\n  connectors,\n  provider\n});\n\n\n\nconst ConnectWallet = (props) => { \n    return (\n              <WagmiConfig client={wagmiClient}>\n                <RainbowKitProvider chains={chains} theme={darkTheme()}>\n                  <ConnectButton label=\"Sign in\"/>\n                </RainbowKitProvider>\n              </WagmiConfig>\n           );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConnectWallet);\n","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport PulseLoader from 'react-spinners/PulseLoader'\nconst WIDTH = 390;\n\nconst UnknownProgressBar = ({\n    text,\n    className=\"\",\n    width=WIDTH,\n    intervalTime=100,\n    intervalPiece=10}) => {\n    let [loadingProgress, setLoadingProgress] = useState(0);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setLoadingProgress(x => (x + intervalPiece) % 100);\n        }, intervalTime);\n        return () => clearInterval(interval);\n    }, []);\n    \n    let style = {\n        width: width * loadingProgress / 100.0\n    };\n    return (\n        <div className={\"progress-bar \" + className}>\n          <div className=\"inner-progress-bar\">\n          <div className=\"progress\" style={style}/>\n            <div className=\"loading-text\">\n              {text} ...\n            </div>\n          </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props)=> {\n    return {\n    };\n};\n\n\nexport default connect(mapStateToProps, null)(UnknownProgressBar);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport UnknownProgressBar from 'components/progressbar/UnknownProgressBar.js';\nimport {connect} from 'react-redux';\nimport { AsksV11__factory } from \"@zoralabs/v3/dist/typechain/factories/AsksV11__factory\";\nimport { ethers } from \"ethers\";\nimport mainnetZoraAddresses from \"@zoralabs/v3/dist/addresses/4.json\"; // Mainnet addresses, 4.json would be Rinkeby Testnet \nimport { IERC721__factory } from \"@zoralabs/v3/dist/typechain/factories/IERC721__factory\";\nimport { IERC20__factory } from \"@zoralabs/v3/dist/typechain/factories/IERC20__factory\";\nimport { ZoraModuleManager__factory } from \"@zoralabs/v3/dist/typechain/factories/ZoraModuleManager__factory\";\nimport './zora.scss';\n\nconst Zora = (props) => { \n    let [contractAddress, setContractAddress] = useState(window.localStorage.getItem(\"zora-contract-test\") || \"\");\n    let [tokenId, setTokenId] = useState(\"\");\n    let [askPrice, setAskPrice] = useState(\"\");\n    let [approved, setApproved] = useState(0);\n    let [running, setRunning] = useState(false);\n    let [completed, setCompleted] = useState(false);\n\n    const onClick = useCallback(async () => {\n        setRunning(true);\n        window.localStorage.setItem(\"zora-contract-test\", contractAddress);\n         const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n        // Prompt user for account connections\n        let accounts = await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n\n        const moduleManagerAddress = mainnetZoraAddresses.ZoraModuleManager;\n        const ownerAddress = \"0xdc94060e37dcb8816188508536595019c8F0C98a\";// Owner of the assets (my test acct)\n\n        const erc721Contract = IERC721__factory.connect(contractAddress, signer);\n\n        // Initialize ERC20 currency demo contract\n        // Initialize Zora V3 Module Manager contract \n        const moduleManagerContract = ZoraModuleManager__factory.connect(mainnetZoraAddresses.ZoraModuleManager, signer);\n        const erc721TransferHelperAddress = mainnetZoraAddresses.ERC721TransferHelper;\n        let approved = await erc721Contract.isApprovedForAll(\n            ownerAddress, // NFT owner address\n            erc721TransferHelperAddress // V3 Module Transfer Helper to approve\n        );\n        console.log(\"token transfer module approved?\", approved);\n        setApproved(1);\n        \n        // If the approval is not already granted, add it.\n        if (approved === false) {\n            // Notice: Since this interaction submits a transaction to the blockchain it requires an ethers signer.\n            // A signer interfaces with a wallet. You can use walletconnect or injected web3.\n            console.log(\"approving token transfer module\");\n            await erc721Contract.setApprovalForAll(erc721TransferHelperAddress, true);\n        }\n        setApproved(2);\n\n        // Approving Asks v1.1\n        approved = await moduleManagerContract.isModuleApproved(ownerAddress, mainnetZoraAddresses.AsksV1_1);\n        console.log(\"ASKS ARE APPROVED? \", approved);\n\n        if (approved === false) {\n            console.log(\"approving asks module\");\n            await moduleManagerContract.setApprovalForModule(mainnetZoraAddresses.AsksV1_1, true);\n        }\n        setApproved(3);\n\n        // create ask\n        const askModuleContract = AsksV11__factory.connect(mainnetZoraAddresses.AsksV1_1, signer);\n        let ask = await askModuleContract.askForNFT(contractAddress, 1);\n        if (ask.askPrice.toNumber() === 0) {\n            // create ask\n            const _askPrice = ethers.utils.parseEther(askPrice) // 100 ETH Sale Price\n//            const ownerAddress = \"0xF296178d553C8Ec21A2fBD2c5dDa8CA9ac905A00\"; // Owner of the assets\n            const findersFeeBps = \"0\"; // 2% Finders Fee (in BPS)\n            \n            // Calling Create Ask\n            // Notice: Since this interaction submits a transaction to the blockchain it requires a signer.\n            // A signer interfaces with a wallet. You can use walletconnect or injected web3.\n            console.log(\"creating ask\");\n            let tx = await askModuleContract.createAsk(\n                contractAddress,\n                tokenId,\n                _askPrice,\n                \"0x0000000000000000000000000000000000000000\", // 0 address for ETH sale\n                ownerAddress,\n                findersFeeBps\n            );\n            tx.wait(2).then(x => setRunning(false));\n        }\n    }, [setApproved, setRunning, askPrice, tokenId, contractAddress]);\n\n    return (\n        <div className=\"zora-helper\">\n          <div className=\"zora-inner\">\n            <div className=\"z-label\">\n              Contract Address\n            </div>\n            <input\n              value={contractAddress}\n              onChange={(e) => setContractAddress(e.target.value)}\n            />\n            <div className=\"z-label\">\n              Token ID\n            </div>\n            <input\n              value={tokenId}\n              onChange={(e) => setTokenId(e.target.value)}\n            />\n            <div className=\"z-label\">\n              Ask Price (ETH)\n            </div>\n            <input\n              value={askPrice}\n              onChange={(e) => setAskPrice(e.target.value)}\n            />\n            <div\n              onClick={onClick}\n              className=\"pushable big-button\">\n              Approve and List Ask\n            </div>\n            {running && <UnknownProgressBar width={150} text=\"Running\"/>}\n            <div className=\"approvals-completed\">\n              Approvals Completed: {approved} / 3\n            </div>\n          </div>\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Zora);\n","import React, {useCallback, useEffect} from 'react';\nimport { AsksV11__factory } from \"@zoralabs/v3/dist/typechain/factories/AsksV11__factory\";\nimport { ethers } from \"ethers\";\nimport mainnetZoraAddresses from \"@zoralabs/v3/dist/addresses/4.json\"; // Mainnet addresses, 4.json would be Rinkeby Testnet \nimport { IERC721__factory } from \"@zoralabs/v3/dist/typechain/factories/IERC721__factory\";\nimport { IERC20__factory } from \"@zoralabs/v3/dist/typechain/factories/IERC20__factory\";\nimport { ZoraModuleManager__factory } from \"@zoralabs/v3/dist/typechain/factories/ZoraModuleManager__factory\";\nimport { useSigner } from 'wagmi';\n\n\nexport const useMintTest = () => {\n    useEffect(() => {\n        approve();\n    }, []);\n\n    const approve = useCallback(async () => {\n        const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n        // Prompt user for account connections\n        let accounts = await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n\n        const moduleManagerAddress = mainnetZoraAddresses.ZoraModuleManager;\n        const ownerAddress = \"0xdc94060e37dcb8816188508536595019c8F0C98a\";// Owner of the assets (my test acct)\n\n        const nftContractAddress = \"0x9efe0c372310e179104aa5f478e20355a2538e43\"; // zequencer test\n        const erc721Contract = IERC721__factory.connect(nftContractAddress, signer);\n\n        // Initialize ERC20 currency demo contract\n        // Initialize Zora V3 Module Manager contract \n        const moduleManagerContract = ZoraModuleManager__factory.connect(mainnetZoraAddresses.ZoraModuleManager, signer);\n        const erc721TransferHelperAddress = mainnetZoraAddresses.ERC721TransferHelper;\n        let approved = await erc721Contract.isApprovedForAll(\n            ownerAddress, // NFT owner address\n            erc721TransferHelperAddress // V3 Module Transfer Helper to approve\n        );\n        console.log(\"token transfer module approved?\", approved);\n        \n        // If the approval is not already granted, add it.\n        if (approved === false) {\n            // Notice: Since this interaction submits a transaction to the blockchain it requires an ethers signer.\n            // A signer interfaces with a wallet. You can use walletconnect or injected web3.\n            console.log(\"approving token transfer module\");\n            await erc721Contract.setApprovalForAll(erc721TransferHelperAddress, true);\n        }\n\n        // Approving Asks v1.1\n        approved = await moduleManagerContract.isModuleApproved(ownerAddress, mainnetZoraAddresses.AsksV1_1);\n        console.log(\"ASKS ARE APPROVED? \", approved);\n\n        if (approved === false) {\n            console.log(\"approving asks module\");\n            await moduleManagerContract.setApprovalForModule(mainnetZoraAddresses.AsksV1_1, true);\n        }\n\n        // create ask\n        const askModuleContract = AsksV11__factory.connect(mainnetZoraAddresses.AsksV1_1, signer);\n        let ask = await askModuleContract.askForNFT(nftContractAddress, 1);\n        if (ask.askPrice.toNumber() === 0) {\n            // create ask\n            const askPrice = ethers.utils.parseEther(\"0.001\") // 100 ETH Sale Price\n//            const ownerAddress = \"0xF296178d553C8Ec21A2fBD2c5dDa8CA9ac905A00\"; // Owner of the assets\n            const findersFeeBps = \"0\"; // 2% Finders Fee (in BPS)\n            \n            // Calling Create Ask\n            // Notice: Since this interaction submits a transaction to the blockchain it requires a signer.\n            // A signer interfaces with a wallet. You can use walletconnect or injected web3.\n            console.log(\"creating ask\");\n            await askModuleContract.createAsk(\n                nftContractAddress,\n                \"3\", // Token Id\n                askPrice,\n                \"0x0000000000000000000000000000000000000000\", // 0 address for ETH sale\n                ownerAddress,\n                findersFeeBps\n            );\n        }\n    }, []);\n\n};\n","import React, {useCallback} from 'react';\nimport { useSigner } from 'wagmi';\nimport { ethers } from \"ethers\";\nimport mainnetZoraAddresses from \"@zoralabs/v3/dist/addresses/1.json\"; // Mainnet addresses, 4.json would be Rinkeby Testnet \nimport { AsksV11__factory } from \"@zoralabs/v3/dist/typechain/factories/AsksV11__factory\";\n\nexport const useBuy = (contract=\"0x7269c1a1b8aba1390770193771f92bd722c6a77b\") => {\n    const { data: signer, isError, isLoading } = useSigner();\n\n    /*\n      * uncomment to test on rinkeby\n    contract = \"0xe81f2369e74debd9874466d3e31aecf700aed872\";\n    */\n\n    const buy = useCallback(async (tokenId, fillAmount) => {\n        try {\n            /*\n             * Uncomment to test on rinkeybey\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            // Prompt user for account connections\n            let accounts = await provider.send(\"eth_requestAccounts\", []);\n            const signer = provider.getSigner();\n\n            console.log(\"signer accounts=\", signer, accounts);\n\n            fillAmount = undefined;\n            tokenId = 3;\n            */\n\n            tokenId = tokenId.toString();\n            const askModuleContract = AsksV11__factory.connect(mainnetZoraAddresses.AsksV1_1, signer);\n            let ask = await askModuleContract.askForNFT(contract, tokenId);\n            fillAmount = fillAmount ? ethers.parseEth(fillAmount.toString()) : ask.askPrice.toString();\n            const finder = \"0x0000000000000000000000000000000000000000\"; // 0 address for finder\n            \n            //console.log(\"contract=%s tokendId=%s fill=%s finder=%s\", contract, tokenId, fillAmount, finder);\n            let tx = await askModuleContract.fillAsk(\n                contract,\n                tokenId, // Token Id\n                \"0x0000000000000000000000000000000000000000\", // 0 address for ETH sale\n                fillAmount,\n                finder,\n                {\n                    value: fillAmount\n                }\n            );\n            return tx;\n        } catch (e) {\n            console.log(\"error = \", e);\n            return false;\n        }\n    }, [contract]);\n\n    return buy;\n};\n","\nimport React, { useEffect, useCallback, useState} from 'react';\nimport PulseLoader from 'react-spinners/PulseLoader'\nimport {connect} from 'react-redux';\nimport './finalize.scss';\nimport {useMintTest} from './test.js';\nimport {useBuy} from 'components/hooks/useBuy.js';\nimport {useBalance} from 'wagmi';\n\nconst FinalizePurchase = ({account, tokensOnSale, onCompletedBuy, onCancel, cart, onDone, }) => { \n    let {data} = useBalance({addressOrName: account});\n    let balance = data && parseFloat(data.formatted);\n    let [finished, setFinished] = useState(false);\n    let [error, setError] = useState();\n    let [current, setCurrent] = useState(cart[0]);\n    let [waitingForWallet, setWaitingForWallet] = useState(false);\n    let [confirming, setConfirming] = useState(false);\n\n    const buy = useBuy();\n   \n    let thumbnail = tokensOnSale.find(x => x.tokenId === current).thumbnail;\n    let number = cart.indexOf(current) + 1;\n    let total = cart.length;\n\n    //useMintTest();\n\n    const completeBuy = useCallback(() => {\n        let tokenId = current;\n        // we wanna buy this one\n        setWaitingForWallet(true);\n        buy(tokenId).then(\n            x => {\n                if (x) {\n                    console.log(\"TRANSACTION x =\", x);\n                    setConfirming(x.hash);\n                    x.wait(1).then(x => {\n                        setFinished(true);\n                        setConfirming(false);\n                        console.log(\"FINISHED THE TRANSACTION\");\n                        if (number === cart.length) {\n                            // we have truly completed\n                        } else {\n                            setCurrent(cart[number]);\n                        }\n                        onCompletedBuy(tokenId);\n                    });\n                    setWaitingForWallet(false);\n                    setError(undefined);\n                } else {\n                    setError(\"You rejected the transaction. Please try again or continue browsing.\");\n                }\n                setWaitingForWallet(false);\n            });\n    }, [current, setCurrent, number, setWaitingForWallet, tokensOnSale, cart]);\n\n    if (finished || confirming) {\n        return (\n        <div className=\"finalize-modal-drop\">\n          <video\n            playsInline\n            muted\n            className={confirming ? \"confirming shrooms-video\" : \"shrooms-video\"}\n            autoPlay\n            loop\n            src={\"/shrooms.mp4\"}/>\n          <div\n            onClick={(e) => e.stopPropagation()}\n            className=\"finalize-modal\">\n            <div onClick={onDone} className=\"close-button\">x</div>\n            <div className=\"logo-container\">\n              <img className=\"spores-logo-black\" src=\"/spores-logo-black.svg\"/>\n            </div>\n            <div className=\"sp-modal-title\">\n              <div className=\"sp-title\">\n                {confirming ? \"Completing Purchase\" : \"You\\'ve Bought the SP-\" + current}\n                \n              </div>\n            </div>\n            {confirming ? <div className=\"sp-modal-body\">\n              <p>\n                Your new Spore Player should arrive in your wallet in a few moments.\n              </p>\n                            <div className=\"pulse-container\">\n              <PulseLoader\n                sizeUnit={\"px\"}\n                size={10}\n                color={'#ffffff'}\n                loading={true}\n              />\n                            </div>\n                          </div> :\n             <div className=\"sp-modal-body\">\n               <p>\n                 Congrats, you can now dose yourself with some cyber psilocybin.\n               </p>\n               <div className=\"pushable open-your-player\">\n                 Open your New Player\n               </div>\n             </div>}\n            </div>\n        </div>\n        );\n    }\n\n    return (\n        <div onClick={onCancel} className=\"finalize-modal-drop\">\n          <div\n            onClick={(e) => e.stopPropagation()}\n            className=\"finalize-modal\">\n            <div onClick={onCancel} className=\"close-button\">x</div>\n            <div className=\"logo-container\">\n              <img className=\"spores-logo-black\" src=\"/spores-logo-black.svg\"/>\n            </div>\n            <div className=\"sp-modal-title\">\n              <div className=\"sp-title\">\n                Buy SP-{current}\n              </div>\n              {cart.length > 1 && <div className=\"purchase-part\"><span className=\"part-number\">{number}</span> of <span className=\"total-parts\">{total}</span></div>}\n            </div>\n            <div className=\"sp-modal-body\">\n              <p>\n                You're about to buy this Spore Player for a fixed price.\n              </p>\n              <div className=\"thumbnail-and-price\">\n                <img src={thumbnail}/>\n                <div className=\"token-price\">\n                  <div className=\"price-label\">\n                    PRICE\n                  </div>\n                  <div className=\"price-eth\">\n                    0.4 ETH\n                  </div>\n                </div>\n              </div>\n              {error && <div className=\"error-text\"><img src=\"/error-icon.svg\"/> {error}</div>}\n              {waitingForWallet ?\n               <div className=\"waiting-for-wallet\">\n                 <span className=\"inner\">\n                   <span className=\"helper-text\">\n                     Waiting for Wallet \n                   </span>\n                   <PulseLoader\n                     sizeUnit={\"px\"}\n                     size={10}\n                     color={'#ffffff'}\n                     loading={true}\n                   />\n                 </span>\n               </div> : balance < 0.4 ?\n               <div className=\"low-balance complete-buy\">\n                 Insufficient balance for purchase.\n               </div> :\n               <div\n                 onClick={() => completeBuy()}\n                 className=\"complete-buy\">\n                 Complete Purchase \n               </div>}\n            </div>\n          </div>\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FinalizePurchase);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {isMobile} from 'react-device-detect';\n\nconst Cart = ({onClickBuy, tokensOnSale, cart, removeFromCart, clearCart}) => { \n\n    const goToLink = (tokenId) => {\n        window.open('/sp/' + tokenId, '_newtab');\n    };\n    if (cart.length === 0) {\n        return '';\n    }\n\n    return (\n        <div className=\"cart\">\n          <div className=\"cart-options\">\n            {cart.map(\n                tokenId =>\n                <div\n                  key={tokenId}\n                  onClick={() => goToLink(tokenId)}\n                  className=\"cart-option\">\n                  <img src={tokensOnSale.find(x => x.tokenId === tokenId).thumbnail}/>\n                  <div className=\"song-info\">\n                    <div className=\"song-title\">\n                      Psilocybin EP <a href={\"/sp/\" + tokenId} target=\"_blank\" rel=\"noreferrer\">↗</a>\n                    </div>\n                    <div className=\"artist\">\n                      Keyon Christ\n                    </div>\n                  </div>\n                </div>)}\n          </div>\n          <div className=\"buy-info-container\">\n            <div\n              onClick={onClickBuy}\n              className=\"pushable buy-button\">\n              {cart.length === 1 ? \"Buy SP-\" + cart[0] : `Buy all ${cart.length} players`}\n            </div>\n            <div className=\"price-info\">\n              for {isMobile ? \"\" : \"a total of \"} <span className=\"total-price\">{round(cart.length * 0.4)} ETH</span>\n            </div>\n            <div onClick={clearCart} className=\"clear-cart\">\n              Clear Cart\n            </div>\n          </div>\n        </div>);\n};\n\nconst round = (x) => Math.round(x*10)/10;\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {isMobile} from 'react-device-detect';\nimport {connect} from 'react-redux';\nimport './jolly.scss';\nimport './heatmap.scss';\n\nconst JollyRancherPlayer = ({width, store, spore, progress, preset, setPreset}) => { \n    let ref = useRef();\n\n    // TODO: need to wait for the iframe to fully load before sending this\n    // likely need a post message listener for \"zequencerProjectLoaded\"\n\n    useEffect(() => {\n        window.addEventListener(\"message\", onMessage, false);\n        return () => {\n            window.removeEventListener(\"message\", onMessage);\n        };\n    }, [spore]);\n\n    const onMessage = useCallback((e) => {\n        if (e.data === \"sporeIFrameLoaded\") {\n            // then we need to send it over\n            sendHeatmapHash();\n        }\n    }, [spore]);\n\n    const sendHeatmapHash = useCallback(() => {\n        console.log('sending hash', spore.dataHash);\n        if (ref.current && ref.current.contentWindow) {\n            if (spore) {\n                ref.current.contentWindow.postMessage({\n                    type: \"heatmapHash\",\n                    body: spore.dataHash\n                }, \"*\");\n            }\n        }\n    }, [spore]);\n\n    useEffect(() => {\n        if (ref.current && ref.current.contentWindow) {\n            if (spore) {\n                ref.current.contentWindow.postMessage({\n                    type: \"heatmapHash\",\n                    body: spore.dataHash\n                }, \"*\");\n            }\n        }\n    }, [spore]);\n\n    useEffect(() => {\n        if (ref.current && ref.current.contentWindow) {\n            ref.current.contentWindow.postMessage({\n                type: \"sporePosition\",\n                body: progress\n            }, \"*\");\n        }\n    }, [progress]);\n\n    useEffect(() => {\n        if (ref.current && ref.current.contentWindow) {\n            ref.current.contentWindow.postMessage({\n                type: \"heatmapSize\",\n                body: [width, 90]\n            }, \"*\");\n        }\n    }, [width]);\n       \n    return (\n        <iframe\n          ref={ref}\n          sandbox=\"allow-scripts allow-same-origin\"\n          allowtransparency=\"true\"\n          height={110}\n          width={width}\n          aria-describedby=\"spore\"\n          alt=\"spore.vision\"\n          //src={\"https://zequencer.io/ipfs/QmTh6hkgEGGLpVP5XANvDToWMmLNq1VFXcS4vXnCMjrefC/\"}\n          src={\"https://zequencer.io/ipfs/QmTp5n1FsKeqEj4u8MGRScVY9BGkkWPiR3AEgqe8gvbTeE/\"}\n          className=\"spore-heatmap zora-mediaObject css-hnzuw7 zora-mediaObject--mediaLoaded zora-mediaObject--isFullPage\"\n          style={{borderWidth: \"0px\"}}/>\n        );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JollyRancherPlayer);\n","/*\n    This file is part of Universal Sequences.\n    Universal Sequences is free software: you can redistribute it and/or modif\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Universal Sequences is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\nconst MIN_BRIGHTNESS = 170;\nconst brightCache = {};\nconst trackCache = {};\n\nclass Colors {\n    constructor() {\n    }\n\n    transparent(color, opacity) {\n        return color.slice(0, color.length-1) + ', ' + opacity + ')';\n    }\n\n    intToRGB(i){\n        var c = (i & 0x00FFFFFF)\n            .toString(16)\n            .toUpperCase();\n        \n        return \"#\" + \"00000\".substring(0, 6 - c.length) + c;\n    }\n\n    hueShift(c, shift) {\n        let {h, s, l} = getHSLFromString(c);\n        return getHSLString({h: h + shift, s, l});\n    }\n\n    warm(warmth, start=141, s=100) {\n        let h = start;\n        let l = 50;\n        return getHSLString({h: h - warmth, s, l});\n    }\n\n    compliment(c, rotate=2) {\n        let {h, s, l} = getHSLFromString(c);\n        if (h === 0) {\n            h++;\n        }\n        h += rotate*10 % 255;\n        let x = getHSLString({h, s, l});\n        return x;\n    }\n\n    saturate(c, factor, lightFactor=1) {\n        if (!c) {\n            return undefined;\n        }\n        if (c.startsWith(\"hsl\")) {\n            let {h, s, l} = getHSLFromString(c);\n            l *= lightFactor;\n            s = Math.min(s*factor, 100);\n            c = getHSLString({h, s, l});\n            return c;\n        } else {\n            let rgb = this.getRGB(c);\n            let {h, s, l} = RGBToHSL(rgb);\n            l *= lightFactor;\n            s = Math.min(s*factor, 100);\n            c = getHSLString({h, s, l});\n            return c;\n        }\n    }\n\n    brighten(c, factor) {\n        if (c.startsWith(\"hsl\")) {\n            let hsl = getHSLFromString(c);\n            hsl = brightenHSL(hsl, factor);\n            return getHSLString(hsl);\n        }\n        let cacheResult = brightCache[(c + '.' + factor)];\n        if (cacheResult) {\n            return cacheResult;\n        }\n        let r = Math.min(255, Math.floor(parseInt(c.slice(1, 3), 16) * factor));\n        let g = Math.min(255, Math.floor(parseInt(c.slice(3, 5), 16) * factor));\n        let b = Math.min(255, Math.floor(parseInt(c.slice(5), 16) * factor));\n\n        r = r.toString(16);\n        g = g.toString(16);\n        b = b.toString(16);\n\n        if (r.length === 1) {\n            r = '0' + r;\n        }\n\n        if (g.length === 1) {\n            g = '0' + g;\n        }\n\n        if (b.length === 1) {\n            b = '0' + b;\n        }\n\n        let x = '#' + r + g + b;\n        brightCache[c + '.' + factor] = x;\n        return x;\n\n    }\n\n    getBrightness(c) {\n        let rgb = this.getRGB(c);\n\n        let color = 0.299*rgb.r + 0.587*rgb.g + 0.114*rgb.b;\n        return color;\n    }\n\n    rawHSLToHex({h,s,l}) {\n        return hslToHex(h,s,l);\n    }\n\n    hslToHex(color) {\n        let {h,s,l} = getHSLFromString(color);\n        return hslToHex(h,s,l);\n    }\n\n    getRGB(c) {\n        let r = Math.floor(parseInt(c.slice(1, 3), 16)); \n        let g = Math.floor(parseInt(c.slice(3, 5), 16));\n        let b = Math.floor(parseInt(c.slice(5), 16));\n        return {r:r, g:g, b:b};\n    }\n}\n\nfunction RGBToHSL({r,g,b}) {\n    // Make r, g, and b fractions of 1\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    // Find greatest and smallest channel values\n    let cmin = Math.min(r,g,b),\n        cmax = Math.max(r,g,b),\n        delta = cmax - cmin,\n        h = 0,\n        s = 0,\n        l = 0;\n\n    if (delta == 0)\n        h = 0;\n    // Red is max\n    else if (cmax == r)\n        h = ((g - b) / delta) % 6;\n    // Green is max\n    else if (cmax == g)\n        h = (b - r) / delta + 2;\n    // Blue is max\n    else\n        h = (r - g) / delta + 4;\n\n    h = Math.round(h * 60);\n\n    // Make negative hues positive behind 360°\n    if (h < 0)\n        h += 360;\n\n    // Calculate lightness\n    l = (cmax + cmin) / 2;\n\n    // Calculate saturation\n    s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n\n    // Multiply l and s by 100\n    s = +(s * 100).toFixed(1);\n    l = +(l * 100).toFixed(1);\n\n    return {h, s, l};\n}\n\nfunction getHSLString({h, s, l}) {\n    return \"hsl(\" + h + \",\" + s + \"%,\" + l +\"%)\";\n}\n\nfunction getHSLFromString(str) {\n    str = str.substring(4);\n    let [hPart, sPart, lPart] = str.split(\",\");\n    let index = sPart.indexOf(\"%\");\n    sPart = sPart.substring(0, index);\n    index = lPart.indexOf(\"%\");\n    lPart = lPart.substring(0, index);\n    return {\n        h: parseFloat(hPart),\n        s: parseFloat(sPart),\n        l: parseFloat(lPart),\n    };\n\n}\n\nfunction brightenHSL({h, s, l}, factor) {\n    return {\n        h,\n        s,\n        l: l* factor\n    };\n}\n\nfunction hslToHex(h, s, l) {\n  l /= 100;\n  const a = s * Math.min(l, 1 - l) / 100;\n  const f = n => {\n    const k = (n + h / 30) % 12;\n    const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    return Math.round(255 * color).toString(16).padStart(2, '0');   // convert to Hex and prefix \"0\" if needed\n  };\n  return `#${f(0)}${f(8)}${f(4)}`;\n}\n\n\n\nexport default Colors;\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport Colors from 'components/Colors.js';\nimport Tone from 'tone';\nconst colors = new Colors();\nwindow.heatRoot = 1.1;\n//window.bucketSize = 4;\nwindow.bucketSize = 1;\nwindow.saturation = 80;\n\nconst SporeHeatMap = ({heat, width=54, height=10, center=false, saturation=200, duration}) => { \n    // lets start with slider data\n    if (!heat) {\n        return '';\n    }\n\n    // first process the heat\n    let bucketSize = width === 54 ? window.bucketSize*2 : window.bucketSize;\n    let buckets = getBuckets(heat, bucketSize);\n    let max = Math.max(...Object.values(buckets))*.75;\n    let maxStep = Math.max(...Object.keys(buckets));\n    /*\n    if (duration) {\n        let oldMaxStep = maxStep;\n        maxStep = (duration/new Tone.Time('32n'))/(bucketSize);\n        console.log(\"max step=%s old max step=%s dur=%s\", maxStep, oldMaxStep, duration);\n    }\n    */\n    return (\n        <svg className=\"heatmap\" width={width} height={10}>\n          {Object.keys(buckets).map(\n              step => <rect\n                        width={width > 80 ? 4 : 1}\n                        height={center ? height* Math.min(1, Math.pow(buckets[step], window.heatRoot)/max) : height}\n                        opacity={Math.min(1, Math.pow(buckets[step], window.heatRoot)/max)}\n                        fill={colors.warm(190*Math.min(1, Math.pow(buckets[step], window.heatRoot)/max), 190,\n                                          Math.min(1, Math.pow(buckets[step], window.heatRoot)/max)*saturation)}\n                        x={width*step/maxStep}\n                        y={center ? height/2 - height* Math.min(1, Math.pow(buckets[step], window.heatRoot)/max)/2 : 0}/>)}\n        </svg>);\n};\n\nconst getBuckets = (heat, bucketSize) => {\n    let sliderData = heat.sliderChanges;\n    let modeData = heat.modeChanges;\n    let regions = sliderData.map(x => Math.round((isNaN(x[0]) ? 0 : x[0]) / bucketSize));\n    let buckets = {};\n    for (let x of regions) {\n        if (!buckets[x]) {\n            buckets[x] = 0;\n        }\n        buckets[x]+=1;\n    }\n\n    regions = modeData.map(x => Math.round((isNaN(x[0]) ? 0 : x[0]) / bucketSize));\n    let max = Math.max(...Object.values(regions));\n    for (let x of regions) {\n        if (!buckets[x]) {\n            buckets[x] = 0;\n        }\n        buckets[x]+=16;\n        let q=0;\n        for (let i=x+1; i < max; i++) {\n            if (regions.some(x => x === i)) {\n                break;\n            }\n            if (!buckets[i]) {\n                buckets[i] = 0;\n            }\n            buckets[i] += (50+q);\n            q+=8;\n        }\n    }\n    return buckets;\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SporeHeatMap);\n","import React, { Component, useCallback } from 'react';\nimport './buttons.scss';\n\nconst PlayButton = (props) => {\n    const onPlayClicked = useCallback((e) => {\n        e.target.parentNode.blur();\n        e.target.blur();\n        e.currentTarget.blur();\n        props.play();\n    }, [props.isPlaying]);\n\n    return (\n        <div\n          onClick={onPlayClicked}\n          className=\"play-btn-wrapper pushable\">\n          <div\n            className={props.isPlaying ? \"play-btn playing\" : \"play-btn \"}/>\n        </div>\n    );\n}\n\n\nexport default PlayButton;\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport JollyRancherPlayer from './JollyRancherPlayer.js';\nimport {isMobile} from 'react-device-detect';\nimport SporeHeatMap from \"components/spore/SporeHeatMap.js\";\n\nimport {useInterval} from \"components/hooks/useInterval.js\";\nimport PlayButton from \"components/buttons/PlayButton.js\";\nimport {connect} from 'react-redux';\nimport Tone from 'tone';\n\nconst AudioPlayer = ({heat, creator, audioUnit, store, spore, preset, setPreset, sporeMetadata}) => { \n\n    let WIDTH=isMobile ? 240 : 500;\n    let ref = useRef();\n    let [playing, setPlaying] = useState(false);\n    let [playTime, setPlayTime] = useState(undefined);\n    let startPoint = useRef(0);\n    let [progress, setProgress] = useState(0);\n    let [mouseSeeker, setMouseSeeker] = useState();\n\n    useEffect(() => {\n        setPlaying(false);\n        setProgress(0);\n    }, [spore]);\n\n    const onTick = useCallback(() => {\n        let diff = Tone.Master.context.currentTime - playTime;\n        if (playing) {\n            setProgress((diff + startPoint.current) / audioUnit.duration);\n        }\n    }, [playing, setProgress, playTime]);\n\n    useInterval(onTick, 40);\n\n    const onClickPlay = useCallback(() => {\n        if (playing) {\n            startPoint.current = startPoint.current + Tone.Master.context.currentTime - playTime;\n            audioUnit.stopSound();\n        } else {\n            audioUnit.playSound(startPoint.current);\n        }\n        setPlaying(!playing);\n        //setProgress(0);\n        setPlayTime(Tone.Master.context.currentTime);\n    }, [playing, setProgress, setPlaying, audioUnit, playTime]);\n\n    const mouseSeek = useCallback((e) => {\n        e.stopPropagation();\n        setMouseSeeker(undefined);\n        if (!playing) {\n            setPlaying(true);\n        }\n        let x = e.clientX - ref.current.getBoundingClientRect().left;\n        let percentage = x / WIDTH;\n        let startTime = percentage * audioUnit.duration;\n        audioUnit.playSound(startTime);\n        startPoint.current = startTime;\n        setPlayTime(Tone.Master.context.currentTime);\n        setMouseSeeker(x);\n        setTimeout(() => {\n            setMouseSeeker(undefined);\n        }, 300);\n    }, [playing, setPlaying, setPlayTime, setMouseSeeker, audioUnit]);\n\n    useEffect(() => {\n        return () => {\n            if (audioUnit) {\n                audioUnit.stopSound();\n            }\n        }\n    }, [audioUnit]);\n\n    progress = Math.min(100, progress);\n\n    return (\n        <div className=\"audio-player\">\n          {audioUnit &&\n           <PlayButton isPlaying={playing}\n                       play={onClickPlay}/>}\n          <div\n            ref={ref}\n            onClick={mouseSeek}\n            className=\"play-time-and-slider\">\n            {sporeMetadata && <JollyRancherPlayer\n                        setPreset={setPreset}\n                                width={WIDTH}\n                        preset={preset}\n                        progress={progress}\n                        store={store}\n                        spore={sporeMetadata}\n                      />}\n           <div className=\"play-time\">\n              {audioUnit && <div className=\"time\">\n              {formatTime(progress*audioUnit.duration)} / {formatTime(audioUnit.duration)}\n                            </div>}\n              {creator && <div className=\"creator\">\n                {truncate(creator)}\n                          </div>}\n            </div>\n            <div className=\"song-title-and-author\">\n              <div className=\"song-title\">\n              Psilocybin\n              </div>\n              <div className=\"song-creator\">\n                Keyon Christ\n              </div>\n            </div>\n          </div>\n        </div>);\n}\n\nexport const truncate = (creator) => {\n    return creator.slice(0, 4) + '...' + creator.slice(-4);\n};\n\nconst formatTime = (time) => {\n    if (!time) {\n        time = 0;\n    }\n    let minutes = Math.floor(time/60);\n    let seconds = Math.floor(time - minutes * 60);\n    if (seconds < 10) {\n        seconds = '0' + seconds;\n    }\n\n    return `${minutes}:${seconds}`;\n\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\n            /*\n            <div\n              onClick={mouseSeek}\n              ref={ref} className=\"play-slider\">\n              {mouseSeeker && <div style={{left: mouseSeeker}} className=\"mouse-seeker\"/>}\n              <SporeHeatMap duration={audioUnit.duration} center={true} height={8} heat={heat} width={WIDTH}/>\n            <div\n              style={{width: WIDTH * progress}}\n              className=\"play-slider-inner\">\n            </div>\n            */\n \n\n/*\n\n\n*/\nexport default connect(mapStateToProps, mapDispatchToProps)(AudioPlayer);\n","import React, { useState, useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {truncate} from 'components/spore/AudioPlayer.js';\nimport { useEnsName } from 'wagmi';\nimport './ens.scss';\n\nconst ENSName = ({address}) => { \n    const { data, isError, isLoading } = useEnsName({\n        address\n    });\n\n    if (isLoading) return '';\n    return (\n        <span className=\"ens-name\">\n          {data === null ? truncate(address) : data}\n        </span>);\n};\n\nexport default ENSName;\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport ENSName from 'components/ens/ENSName.js';\n\n\nconst TokenSaleCard = ({cart, owner, addToCart, inCart, tokenId, thumbnail, askPrice}) => { \n    let [error, setError] = useState(undefined);\n\n    let className = \"token-sale-card\";\n    if (inCart) {\n        className += \" in-cart\";\n    }\n\n    useEffect(() => {\n        setError(undefined);\n    }, [cart, setError]);\n    useEffect(() => {\n        if (error) {\n            setTimeout(() => {\n                setError(undefined);\n            }, 8000);\n        }\n    }, [error, setError]);\n    if (error) {\n        className += \" has-error\";\n    }\n    return (\n        <div onClick={() => {\n            if (askPrice) {\n                addToCart();\n            } else {\n                setError(\"Already sold\");\n            }\n        }} className={className}>\n          {error &&\n           <div className=\"already-sold\">\n             This player has been already sold. You can make an offer on secondary marketplaces though!\n           </div>}\n          <img src={thumbnail} className=\"token-preview\"/>\n          <div className=\"card-info\">\n            <div className=\"token-name\">\n              SP-{tokenId}\n            </div>\n            {askPrice ? <div className=\"ask-price\">{askPrice} ETH</div> :\n             <div className=\"ask-price not-for-sale\">Owned by <ENSName address={owner}/></div>}\n            {inCart && <div className=\"check\"/>}\n          </div>\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TokenSaleCard);\n","\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useCallback, useState} from 'react';\n\nexport const useTokensOnSale = () => {\n    const [tokensOnSale, setTokensOnSale] = useState([]);\n\n    useEffect(() => {\n        // should query all of these along w buy-now price/whether theres an ask\n        getTokensOnSale().then(setTokensOnSale);\n        // for now just assume theyre for sale and for 0.4 eth\n    }, [setTokensOnSale]);\n\n    return {tokensOnSale, setTokensOnSale};\n};\n\nconst getTokensOnSale = () => {\n    return new Promise((resolve) => {\n        fetch(\"https://zequencer.io/nft-info\")\n            .then(r => r.json())\n            .then(r => resolve(r));\n    });\n};\n/*\nconst getTokensOnSale = async () => {\n    let tokens = [];\n    for (let i=1; i <= 20; i++) {\n        tokens.push(await mockToken(i));\n    }\n    return tokens;\n};\n\nconst mockToken = (tokenId) => {\n    return new Promise(async (resolve) => {\n    let url = \"https://zora.co/_next/data/xBYNv8INPmebM7S5e_TsX/collections/0x7269c1A1b8aBA1390770193771F92bD722c6a77B/\" + tokenId + \".json\";\n    fetch(url)\n        .then(r => r.json())\n        .then(r => {\n            let isSold = r.ownerAddress === \"0x0Fb5e3b3F254cBDcCD69d31bcB0e92B83d381A0A\";\n            let {v3Ask} = r;\n            let askPrice = v3Ask ? r.ethPrice : undefined;\n            return {\n                tokenId: tokenId,\n                askPrice,\n                thumbnail: \"/sp-thumbnail-\" + tokenId + \".png\"\n            };\n        });\n    });\n};\n\n*/\n","import React, { useEffect, useCallback, useState} from 'react';\nimport FinalizePurchase from './FinalizePurchase.js';\nimport Cart from './Cart.js';\nimport TokenSaleCard from './TokenSaleCard.js';\nimport {connect} from 'react-redux';\nimport {useBuy} from '../hooks/useBuy.js';\nimport {useTokensOnSale} from '../hooks/useTokensOnSale.js';\nimport { ConnectButton, darkTheme } from '@rainbow-me/rainbowkit';\nimport './buy-now.scss';\nimport { useAccount } from 'wagmi';\n\nconst BuyNow = ({goBack}) => { \n    const buy = useBuy();\n    const {data, isError, isLoading } = useAccount();\n    console.log(\"acc data =\", data);\n    let [cart, setCart] = useState([]);\n    let [buying, setBuying] = useState();\n    let {setTokensOnSale, tokensOnSale} = useTokensOnSale();\n\n    const  onCompletedBuy = useCallback((tokenId) => {\n        if (!data) {\n            return;\n        }\n        console.log(\"onCompletedBuy account=%s tokenId=%s\", data.address, tokenId);\n        tokensOnSale[tokenId - 1] = {\n            ... tokensOnSale[tokenId - 1],\n            owner: data.address,\n            askPrice: undefined\n        };\n        console.log(\"setting tokenId=%s\", tokenId, tokensOnSale[tokenId - 1]);\n        setTokensOnSale([... tokensOnSale]);\n    }, [tokensOnSale, setTokensOnSale, data]);\n\n    const addToCart = useCallback((tokenId) => {\n        if (!cart.includes(tokenId)) {\n            if (cart.length === 0) {\n                setCart([... cart, tokenId]);\n            } else {\n                setCart([tokenId]);\n            }\n        } else {\n            setCart(cart.filter(x => x !== tokenId));\n        }\n    }, [cart, setCart]);\n\n    const onClickBuy = useCallback(() => {\n        setBuying(cart);\n    }, [cart, setBuying]);\n\n    return (\n        <div className=\"buy-now-view\">\n          {buying && <FinalizePurchase\n                       account={data && data.address}\n                       onCompletedBuy={onCompletedBuy}\n                       onDone={() => {\n                           setBuying(false);\n                           setCart([]);\n                       }}\n                       tokensOnSale={tokensOnSale} onCancel={() => setBuying(false)} cart={cart} setCart={setCart}/>}\n          <div className={cart.length > 0 ? \"buy-grid-header with-cart\" : \"buy-grid-header\"}>\n            <div className=\"logo-container\">\n            <img\n              onClick={() => goBack()}\n              className=\"pushable spores-logo\" src=\"/spores-logo-black.svg\"/>\n            </div>\n            {cart.length === 0 && <div className=\"buy-page-title\">Spore Players</div>}\n            <Cart\n              onClickBuy={onClickBuy}\n              clearCart={() => setCart([])} cart={cart} removeFromCart={addToCart} tokensOnSale={tokensOnSale}/>\n            <div className=\"connect-button-wrapper\">\n              <ConnectButton\n                accountStatus=\"address\" \n                showBalance={{ smallScreen: false, largeScreen: false }}\n                label=\"Connect Wallet\"\n              />\n            </div>\n          </div>\n          <div className=\"buy-grid\">\n            {tokensOnSale.map(\n                ({tokenId, owner, askPrice, thumbnail}) =>\n                <TokenSaleCard\n                  owner={owner}\n                  inCart={cart.includes(tokenId)}\n                  addToCart={() => addToCart(tokenId)}\n                  cart={cart}\n                  tokenId={tokenId}\n                  thumbnail={thumbnail}\n                  askPrice={askPrice}/>)}\n          </div>\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BuyNow);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\n\nconst VisualLinks = ({helperBox, helperRefs, selected}) => { \n    const [locations, setLocations] = useState();\n    useEffect(() => {\n        if (!helperRefs) {\n            return;\n        }\n        let playerEl = helperRefs[selected].current;\n        let helperEl = helperBox.current;\n\n        let playerLocation = getLocation(playerEl);\n        let helperLocation  = getLocation(helperEl);\n\n        setLocations([helperLocation, playerLocation]);\n    }, [selected, setLocations, helperRefs]);\n    if (!locations) {\n        return '';\n    }\n\n    let points = [\n        locations[0].x + locations[0].width, locations[0].y,\n        locations[1].x, locations[1].y + locations[1].height/2-1,\n        locations[1].x, locations[1].y + locations[1].height/2+1,\n        locations[0].x + locations[0].width,\n        locations[0].y+locations[0].height\n    ];\n    return (\n        <svg className=\"visual-links-spore\">\n          <linearGradient id=\"AnnotationGradient\">\n            <stop offset=\"5%\" stopColor=\"#a4c3e55c\" />\n            <stop offset=\"95%\" stopColor=\"#80aaff36\" />\n          </linearGradient>\n          <polygon className=\"visual-link\" points={points}/>\n        </svg>);\n}\n\nconst getLocation = (element, bounding) => {\n    var rect = element.getBoundingClientRect();\n    let bound = {top: 0, left: 0} //bounding.getBoundingClientRect();\n    let y = rect.top - bound.top;\n    let x = rect.left - bound.left;\n    let height = element.offsetHeight;\n    let width = element.offsetWidth;\n    let pos = {x, y, width, height};\n    return pos;\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VisualLinks);\n","export const docs = {\n    centerButton: [\n        \"Pressing the center button starts and stops the song. \",\n        \"Click on any empty space within the Spore Player to go back to a clean slate.\"\n    ],\n    ledButton: [\n        \"Press to enter \\\"Loop Mode\\\". When in this mode, the sliders control different looping parameters.\",\n        \"Slider 1: Loop Length\",\n        \"Slider 2: Pitch-Down (chop n screw)\",\n        \"Slider 3: Space Reverb/Delay)\",\n        \"Slider 4: Gate Effect\",\n    ],\n    spButton1: [\n        \"Press to enter \\\"Space Mode\\\". When in this mode, the sliders control different space parameters. \",\n        \"Slider 1: Vocal Reverb\",\n        \"Slider 2: Crystalized Ambience\",\n        \"Slider 3: Bass Reverb\",\n        \"Slider 4: Drum Reverb\",\n    ],\n    spButton2: [\n        \"Press to enter \\\"Timing Mode\\\". When in this mode, the sliders control different timing parameters. \",\n        \"Slider 1: Gate Rate\",\n        \"Slider 2: 8th note Delay\",\n        \"Slider 3: Gate Depth\",\n        \"Slider 4: 16th note Delay\",\n    ],\n    slider1: [\n        \"Wobble\",\n        \"This slider controls the rate of the wobble filter.\",\n    ],\n    slider2: [\n        \"Pitch-Up (chipmunk)\",\n        \"This slider speeds up the track, raising the pitch as well.\"\n    ],\n    slider3: [\n        \"Stutter\",\n        \"This slider controls stuttering, which repeats the beat at a slider-controlled rate.\",\n        \"You must hold slider down to hear this effect.\"\n    ],\n    slider4: [\n        \"Mutated Stem\",\n        \"Each Spore Player contains a rare, mutated stem.\",\n        \"This slider reveals this mutation.\"\n        ]\n};\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport VisualLinks from './VisualLinks.js';\nimport {docs} from './docs.js';\n\n\nconst HelperLines = ({helperRefs, selected, sliderHovered}) => { \n    let ref= useRef();\n    let doc = docs[selected];\n    return [\n        <div ref={ref} key={1} className=\"helper-box\">\n          {Array.isArray(doc) ? doc.map((x, i) => <p className={(selected.includes(\"spButton\") || selected === \"ledButton\") && i===sliderHovered ? \"selected\" : \"\"}>{x}</p>) : doc}\n        </div>,\n        <VisualLinks helperBox={ref} helperRefs={helperRefs} selected={selected}/>\n    ];\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HelperLines);\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport HelperLines from './HelperLines.js';\nimport {connect} from 'react-redux';\nimport './helper.scss';\n\nconst PlayerHelper = ({clear}) => { \n    let [sliderHovered, setSliderHovered]  = useState(undefined);\n    let [selected, setSelected] = useState(\"centerButton\");\n    let centerButton = useRef();\n    //let spButton1 = useRef();\n    //let spButton2 = useRef();\n    let ledButton = useRef();\n    let slider1 = useRef();\n    let slider2 = useRef();\n    let slider3 = useRef();\n    let slider4 = useRef();\n    return (\n        <div\n          onClick={() => clear()}\n          className=\"player-helper\">\n          <HelperLines\n            sliderHovered={sliderHovered}\n            selected={selected}\n            helperRefs={{\n              slider1,\n              slider2,\n              slider3,\n              slider4,\n              ledButton,\n              //spButton1,\n              //spButton2,\n              centerButton\n          }}/>\n          <div onClick={clear} className=\"pushable x-button\">\n            x\n          </div>\n          <div\n            onClick={e => e.stopPropagation()}\n            className=\"mock-player\">\n            <div ref={centerButton} className={selected === \"centerButton\" ? \"center-button selected\" : \"center-button\"}\n                 onClick={() => setSelected(\"centerButton\")}/>\n            <div ref={ledButton} className={selected === \"ledButton\" ? \"sp-button button1 led-button selected\" : \"sp-button button1 led-button\"}\n                 onClick={() => setSelected(\"ledButton\")}/>\n            <div\n              onMouseLeave={() => setSliderHovered(undefined)}\n              onMouseOver={() => setSliderHovered(1)}\n              ref={slider1} className={selected === \"slider1\" ? \"sp-slider slider1 selected\" : \"sp-slider slider1\"}\n                 onClick={() => setSelected(\"slider1\")}>\n              <span>1</span>\n            </div>\n            <div\n              onMouseLeave={() => setSliderHovered(undefined)}\n              onMouseOver={() => setSliderHovered(4)}\n              ref={slider2} className={selected === \"slider2\" ? \"sp-slider slider2 selected\" : \"sp-slider slider2\"}\n                 onClick={() => setSelected(\"slider2\")}>\n              <span>4</span>\n            </div>\n            <div\n              onMouseLeave={() => setSliderHovered(undefined)}\n              onMouseOver={() => setSliderHovered(3)}\n              ref={slider3} className={selected === \"slider3\" ? \"sp-slider slider3 selected\" : \"sp-slider slider3\"}\n                 onClick={() => setSelected(\"slider3\")}>\n              <span>3</span>\n            </div>\n            <div\n              onMouseLeave={() => setSliderHovered(undefined)}\n              onMouseOver={() => setSliderHovered(2)}\n              ref={slider4} className={selected === \"slider4\" ? \"sp-slider slider4 selected\" : \"sp-slider slider4\"}\n                 onClick={() => setSelected(\"slider4\")}>\n              <span>2</span>\n            </div>\n          </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerHelper);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './credits.scss';\n\nconst Credits = ({setShowCredits}) => { \n    return (\n        <div className=\"credits\">\n          <div onClick={() => setShowCredits(false)} className=\"pushable x-button\">\n            x\n          </div>\n          <div className=\"credits-text\">\n            <p>\n              Spore Players: A new internet for sound. Season One featuring \"Psilocybin\". Fuck just being a collector, become a <i>distributor</i> in the new music world. Beam futuristic songs exclusively to planet earth with your limited edition Spore Player. Each Spore Player is loaded with hidden rarities, such as <i>FX Chains</i>, that alter each song differently. Anyone can remix the song using the Spore Player, but only collectors have the power to mint the official remixes. Become the world’s ultra-rare contact point for futuristic music.\n            </p>\n\n            <p>\n              Song Credits\n            </p>\n\n            <p>\n              Location: Sunset and Gower Recording Studios\n            </p>\n            \n            <p>\n              Keyon Christ - Vocals, Writing, Producer\n              CLLLAPS - Co producer\n              Jonnywood- Co producer, Mixer\n              Zamorrah - Writer\n              Oshi - Co producer \n              Wil Anspach - Recording, Mixer\n            </p>\n            \n            <p>\n              Powered by <a href=\"https://zequencer.io\">Zequencer</a> x <a href=\"https://indigosound.vision\">Indigo Sound</a>\n            </p>\n\n          </div>\n        </div>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Credits);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './credits.scss';\n\nconst Credits = (props) => { \n    let [show, setShow] = useState(false);\n    return (\n        <div className=\"song-credits\">\n          <div onClick={() => setShow(!show)} className={show ? \"credits-btn show\" : \"credits-btn\"}>\n            Credits\n          </div>\n          {show && <div>\n                     <CreditPart type=\"Vocals, Producer\" names={[\"Keyon Christ\"]}/>\n                     <CreditPart type=\"Writing\" names={[\"Keyon Christ\", \"Zamorrah\"]}/>\n                     <CreditPart type=\"Co-Producer\" names={[\"CLLLAPS\", \"JonnyWood\", \"Oshi\"]}/>\n                     <CreditPart type=\"Mixing\" names={[\"JonnyWood\", \"Wil Anspach\"]}/>\n                     <CreditPart type=\"Recording\" names={[\"Wil Anspach\"]}/>\n                     <CreditPart type=\"Location\" names={[\"Sunset and Gower Recording Studios\"]}/>\n                     <CreditPart type=\"Powered By\" names={[\"Zequencer\", \"Indigo Sound\"]}/>\n                   </div>}\n        </div>\n    );\n}\n\nconst CreditPart = ({type, names}) => {\n    return (\n        <div className=\"credit-part\">\n          <div className=\"credit-type\">\n            {type}\n          </div>\n          <div className=\"credit-names\">\n            {names.map((x, i) => <div className=\"credit-name\">{x + (i < names.length - 1 ? ', ' : '')}</div>)}\n          </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Credits);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\n\nconst SongTitle = ({artist=\"Keyon Christ\", song=\"Psilocybin\"}) => { \n    return (\n        <div className=\"song-title\">\n          <div className=\"song-name\">\n            {song}\n          </div>\n          <div className=\"song-artist\">\n            {artist}\n          </div>\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n      song: state.playlist.currentSong\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SongTitle);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {isMobile} from 'react-device-detect';\nimport {setCurrentPlaylistSong} from 'actions/index.js';\nimport PulseLoader from 'react-spinners/PulseLoader'\nimport {connect} from 'react-redux';\nimport './songplaylist.scss';\n\nconst SporePlaylist = ({currentSong, setCurrentSong, sequencerEngine, showPlaylistMenu}) => { \n    let [stems, setStems] = useState([\"Twisting Faith\", \"Psilocybin\"]);\n    let [loading, setLoading] = useState(false);\n\n    let className = \"spores-playlister\";\n\n    const loadSong = useCallback((i, name) => {\n        console.log(\"window stemIFRame=\", window.stemIFrame);\n        if (!window.stemIFrame || !window.stemIFrame.current) {\n            return;\n        }\n        setCurrentSong(name);\n        console.log(\"sending load song=\", i);\n        window.stemIFrame.current.contentWindow.postMessage({\n            type: \"load-song\",\n            body: i\n        }, \"*\");\n    }, [setCurrentSong]);\n\n    if (isMobile && !showPlaylistMenu) {\n        return '';\n    }\n    return (\n        <div\n          onClick={e => e.stopPropagation()}\n          className=\"spores-playlist\">\n          {isMobile && <div className=\"artist-name\">Keyon Christ</div>}\n          {stems.map((x,i) =>\n              <div\n                onClick={(e) => {\n                    console.log(\"clicked playlist item\");\n                    if (currentSong === x) {\n                        return;\n                    }\n                    loadSong(i, x);\n                }}\n                className={x === currentSong ? \"song-item current\" : \"song-item\"}>\n                  {x}\n              </div>)}\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n      showPlaylistMenu: state.playlist.showPlaylistMenu,\n      currentSong: state.playlist.currentSong\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setCurrentSong: x => dispatch(setCurrentPlaylistSong(x))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SporePlaylist);\n","import {NEW_SEQUENCE} from 'constants/action-types.js';\nimport {SET_SHOW_PLAYLIST_MENU} from 'constants/action-types.js';\nimport {SET_CURRENT_PLAYLIST_SONG} from 'constants/action-types.js';\nimport {SET_DROPPED_SAMPLES} from 'constants/action-types.js';\nimport {SET_OBJECT_DRAGGING} from 'constants/action-types.js';\nimport {SET_RECENTLY_ADDED_SOUNDS} from 'constants/action-types.js';\nimport {SET_SHOW_FORMANT_PRESETS} from 'constants/action-types.js';\nimport {SET_PLANAR} from 'constants/action-types.js';\nimport {SET_PLANAR_GRADIENT_COLOR} from 'constants/action-types.js';\nimport {SET_PLANAR_OPACITY} from 'constants/action-types.js';\nimport {SET_RESOLUTION} from 'constants/action-types.js';\nimport {SET_SEQUENCER_ENGINE} from 'constants/action-types.js';\nimport {SET_VIEW_MODE} from 'constants/action-types.js';\nimport {SET_ALTERNATE_VIEW_MODE} from 'constants/action-types.js';\nimport {SET_DETAILS_VIEW} from 'constants/action-types.js';\nimport {SET_DECENTRALIZED} from 'constants/action-types.js';\nimport {SET_SELECTOR_MODE} from 'constants/action-types.js';\nimport {SET_NUMBER_PATTERNS} from 'constants/action-types.js';\nimport {SET_CURRENT_PATTERN} from 'constants/action-types.js';\nimport {SET_CURRENT_STEP} from 'constants/action-types.js';\nimport {SET_CURRENT_AND_GLOBAL_STEPS} from 'constants/action-types.js';\nimport {SET_CURRENT_GLOBAL_STEP} from 'constants/action-types.js';\n\n// tracks\nimport {NEW_TRACK} from 'constants/action-types.js';\n\n// samples\nimport {SET_SAMPLE} from 'constants/action-types.js';\n\n// animation triggers \nimport {START_TRIGGER_TRACK} from 'constants/action-types.js';\nimport {STOP_TRIGGER_TRACK} from 'constants/action-types.js';\n\n// sample packs\nimport {SET_SAMPLE_PACK} from 'constants/action-types.js';\nimport {ADD_SAMPLE_PACK} from 'constants/action-types.js';\nimport {REMOVE_SAMPLE_PACK} from 'constants/action-types.js';\n\nimport {DRAG_SAMPLE} from 'constants/action-types.js';\nimport {DRAG_EFFECT} from 'constants/action-types.js';\nimport {DRAG_PATTERN} from 'constants/action-types.js';\n\nimport {MOUSE_DOWN} from 'constants/action-types.js';\nimport {DRAG_TOGGLE} from 'constants/action-types.js';\nimport {DRAG_STEP_TRANSPOSE} from 'constants/action-types.js';\nimport {COMMAND_DOWN} from 'constants/action-types.js';\n\nimport {TRACK_RECORDING} from 'constants/action-types.js';\nimport {TRACK_PREPARING_TO_RECORD} from 'constants/action-types.js';\n\nimport {SET_TRACK_STEPS} from 'constants/action-types.js';\nimport {SET_TRACK_FILLS} from 'constants/action-types.js';\nimport {SET_TRACK_PIANO_ROLL_STEPS} from 'constants/action-types.js';\nimport {SET_ALL_TRACK_STEPS} from 'constants/action-types.js';\n\nimport {SET_SELECTED_GROUP} from 'constants/action-types.js';\nimport {SET_SELECTED_TRACK} from 'constants/action-types.js';\nimport {SET_SELECTED_STEP} from 'constants/action-types.js';\nimport {SET_HOVERED_STEP} from 'constants/action-types.js';\n\nimport {SET_STEP_DRAGGING} from 'constants/action-types.js';\nimport {SET_STEP_DATA_DRAGGING} from 'constants/action-types.js';\nimport {SET_STEP_AND_DATA_DRAGGING} from 'constants/action-types.js';\nimport {SET_STEP_TO_COPY} from 'constants/action-types.js';\n\nimport {SET_TRACK_VOLUME} from 'constants/action-types.js';\nimport {SET_TRACK_MUTED} from 'constants/action-types.js';\nimport {SET_TRACK_SOLO} from 'constants/action-types.js';\n\nimport {SET_GROUP_VOLUME} from 'constants/action-types.js';\nimport {SET_GROUP_MUTED} from 'constants/action-types.js';\n\nimport {SET_QUANTIZED} from 'constants/action-types.js';\nimport {SET_IS_RECORDING} from 'constants/action-types.js';\nimport {SET_IS_RECORDING_EXPANDED} from 'constants/action-types.js';\nimport {SET_IS_RECORDING_MIX} from 'constants/action-types.js';\nimport {SET_IS_PLAYING} from 'constants/action-types.js';\nimport {SET_IS_PLAYING_MIX} from 'constants/action-types.js';\n\nimport {SET_SEND_MUTED} from 'constants/action-types.js';\n\nimport {SET_SELECTION} from 'constants/action-types.js';\n\nimport {SET_SEQUENCE_NAME} from 'constants/action-types.js';\n\nimport {SET_SELECTED_EFFECT} from 'constants/action-types.js';\n\nimport {SET_EFFECT_PARAMETER_VALUE} from 'constants/action-types.js';\n\nimport {SET_EFFECTS_PANE_OPTION} from 'constants/action-types.js';\n\nimport {SET_SELECTED_PARAMETER} from 'constants/action-types.js';\nimport {SET_SHOW_LOGIN} from 'constants/action-types.js';\nimport {SET_USER_TOKEN} from 'constants/action-types.js';\nimport {SET_SIGNING_UP} from 'constants/action-types.js';\n\nimport {SET_SELECTED_PARAMETER_FLASHING} from 'constants/action-types.js';\n\nimport {SET_MIXES} from 'constants/action-types.js';\nimport {SET_CURRENT_MIX} from 'constants/action-types.js';\nimport {SET_ERASING_AUTOMATION} from 'constants/action-types.js';\n\nimport {SET_TRACK_SEND_VOLUME} from 'constants/action-types.js';\n\nimport {SET_TRACK_FOCUSED} from 'constants/action-types.js';\n\nimport {SET_YEAR_SELECTED} from 'constants/action-types.js';\nimport {SET_TAGS_SELECTED} from 'constants/action-types.js';\nimport {SET_STYLES_SELECTED} from 'constants/action-types.js';\nimport {SET_COUNTRIES_SELECTED} from 'constants/action-types.js';\nimport {SET_VIDEOS_SELECTED} from 'constants/action-types.js';\nimport {SET_HIERARCHY_ROOT} from 'constants/action-types.js';\nimport {SET_HIERARCHY_TREE} from 'constants/action-types.js';\nimport {SET_SHOW_YEAR_SLIDER} from 'constants/action-types.js';\nimport {SET_SHOW_COUNTRIES} from 'constants/action-types.js';\nimport {SET_SHOW_VIDEOS} from 'constants/action-types.js';\nimport {SET_SHOW_STYLES} from 'constants/action-types.js';\nimport {SET_SHOW_TAGS} from 'constants/action-types.js';\nimport {SET_SHOW_CHORD_FILTER} from 'constants/action-types.js';\nimport {SET_CHORD_SELECTED} from 'constants/action-types.js';\n\nimport {SET_IS_DRAGGING_DURATION} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_SELECTION} from 'constants/action-types.js';\nimport {SET_SELECTED_PIANO_ROLL_STEPS} from 'constants/action-types.js';\n\nimport {SET_SEARCH_RESULTS_SAMPLES} from 'constants/action-types.js';\n\nimport {SET_SELECTED_CHORD_SAMPLE} from 'constants/action-types.js';\nimport {SET_STEPS_TO_COPY} from 'constants/action-types.js';\n\nimport {SET_LOADING_SEQUENCE} from 'constants/action-types.js';\n\nimport {SET_EASY_PATTERN_TO_COPY} from 'constants/action-types.js';\nimport {SET_SAMPLE_AUDITIONING} from 'constants/action-types.js';\n\nimport {SET_LAST_MIDI_KEY_MAPPED} from 'constants/action-types.js';\nimport {SET_TRACK_IS_ENABLED} from 'constants/action-types.js';\n\nimport {SET_SELECTED_SAMPLE_TAG} from 'constants/action-types.js';\n\nimport {SET_TRANSPOSE_DRAGGING} from 'constants/action-types.js';\n\nimport {SET_MASTER_VOLUME} from 'constants/action-types.js';\n\nimport {SET_USER_VIEW_MODE} from 'constants/action-types.js';\nimport {SET_CURRENT_USER_MIX} from 'constants/action-types.js';\nimport {SET_USER_HAS_EDITS_TO_SAVE} from 'constants/action-types.js';\n\nimport {SET_PATTERN_TO_EDIT_COLOR} from 'constants/action-types.js';\nimport {SET_PATTERN_COLOR} from 'constants/action-types.js';\n\nimport {SET_COMPACT_MODE} from 'constants/action-types.js';\nimport {SET_SHOW_LFOS} from 'constants/action-types.js';\nimport {SET_SHOW_ENVELOPES} from 'constants/action-types.js';\n\nimport {SET_TRACKS_TO_RESAMPLE} from 'constants/action-types.js';\n\nimport {SET_PROJECT_AUTOMATION_MODE} from 'constants/action-types.js';\n\nimport {SET_STEPS_SELECTION} from 'constants/action-types.js';\nimport {SET_SELECTED_STEPS} from 'constants/action-types.js';\nimport {SET_STEP_NUMBER_DRAGGING_FROM} from 'constants/action-types.js';\n\nimport {SET_SEQUENCE_PATTERN_LOCKED} from 'constants/action-types.js';\nimport {SET_SEQUENCE_PATTERN_LOCKS} from 'constants/action-types.js';\n\nimport {SET_TRACK_PATTERN_LOCKED} from 'constants/action-types.js';\nimport {SET_TRACK_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {SET_EFFECT_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {UPDATE_STEPS_FOR_ALL_TRACKS} from 'constants/action-types.js';\nimport {SET_LFO_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {SET_ENVELOPE_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_PAGINATION} from 'constants/action-types.js';\n\nimport {SET_IS_RESAMPLING} from 'constants/action-types.js';\nimport {SET_RESAMPLE_DURATION} from 'constants/action-types.js';\n\nimport {SET_KEY_MAPPINGS} from 'constants/action-types.js';\nimport {SET_PAD_MAPPINGS} from 'constants/action-types.js';\n\nimport {SET_SHOW_SEQUENCE_MODAL} from 'constants/action-types.js';\n\nimport {SET_MULTI_PARAMETER_SLIDER} from 'constants/action-types.js';\n\nimport {SET_SHOW_MODS_MODAL} from 'constants/action-types.js';\n\nimport {SET_SEQUENCE_ROLLING} from 'constants/action-types.js';\n\nimport {SET_TRACK_EFFECTS_CHAIN} from 'constants/action-types.js';\n\nimport {SET_SHOW_SEQUENCES} from 'constants/action-types.js';\nimport {SET_SHOW_PRESETS} from 'constants/action-types.js';\nimport {SET_SHOW_INSTRUMENTS} from 'constants/action-types.js';\nimport {SET_TRACK_ROLLING} from 'constants/action-types.js';\n\nimport {SET_Z_INDEX_HACK} from 'constants/action-types.js';\n\nimport {SET_LOADED_TRACKS} from 'constants/action-types.js';\nimport {SET_BPM} from 'constants/action-types.js';\nimport {SET_RESAMPLE_MASTER} from 'constants/action-types.js';\n\nimport {SET_YOUTUBE_SEARCH_TERMS} from 'constants/action-types.js';\n\nimport {SET_AUDIO_INPUT_SOURCE} from 'constants/action-types.js';\n\nimport {SET_WAVEFORM_SELECTION} from 'constants/action-types.js';\nimport {SET_WAVEFORM_SELECTION_END} from 'constants/action-types.js';\n\nimport {SET_MIDI_MAP_MODE} from 'constants/action-types.js';\nimport {SET_PARAMETER_MIDI_MAP_SELECTION} from 'constants/action-types.js';\nimport {DELETE_PARAMETER_MIDI_MAPPING} from 'constants/action-types.js';\nimport {SET_PARAMETER_MIDI_MAPPING} from 'constants/action-types.js';\n\nimport {SET_ACTION_MIDI_MAP_SELECTION} from 'constants/action-types.js';\nimport {DELETE_MIDI_MAPPINGS} from 'constants/action-types.js';\nimport {SET_ACTION_MIDI_MAPPING} from 'constants/action-types.js';\n\nimport {SET_LATENCY} from 'constants/action-types.js';\n\nimport {SET_SPOTLIGHT_TRACKS} from 'constants/action-types.js';\n\nimport {SET_CLOCK_TYPE} from 'constants/action-types.js';\nimport {SET_CLOCK_TICK} from 'constants/action-types.js';\nimport {SET_CONNECTION_STATUS} from 'constants/action-types.js';\nimport {SET_CONNECTED_USER_NAME} from 'constants/action-types.js';\nimport {SET_PLAY_SCHEDULED} from 'constants/action-types.js';\nimport {SET_AVAILABLE_USERS_TO_SYNC} from 'constants/action-types.js';\n\nimport {SET_THEME} from 'constants/action-types.js';\nimport {SET_SHOW_THEME_GRID} from 'constants/action-types.js';\n\nimport {SET_SEARCH_SORT_BY} from 'constants/action-types.js';\n\nimport {SET_MIDI_EFFECT_DRAGGING} from 'constants/action-types.js';\n\nimport {SET_SHOW_TRACK_EFFECTS} from 'constants/action-types.js';\n\nimport {SET_SHOW_CONVOLVER_MODAL} from 'constants/action-types.js';\nimport {SET_SHOW_PASSWORD_MODAL} from 'constants/action-types.js';\nimport {SET_PASSWORD_MODAL_CALLBACK} from 'constants/action-types.js';\n\nimport {SET_SHOW_SHARE_SEQUENCE_MODAL} from 'constants/action-types.js';\n\nimport {HIDE_ALL_EFFECTS} from 'constants/action-types.js';\n\nimport {SET_EFFECT_COLLAPSED} from 'constants/action-types.js';\n\nimport {SET_CONTEXTUAL_HELP} from 'constants/action-types.js';\n\nimport {SET_SELECTED_LFO} from 'constants/action-types.js';\nimport {SET_SELECTED_ENVELOPE} from 'constants/action-types.js';\nimport {SET_SIDEBAR_COLLAPSED} from 'constants/action-types.js';\n\nimport {SET_MIX_EVENTS} from 'constants/action-types.js';\n\nimport {SET_SHOW_GROUPS} from 'constants/action-types.js';\n\nimport {SET_CURRENT_SUB_SEQUENCE} from 'constants/action-types.js';\nimport {SET_SUB_SEQUENCES} from 'constants/action-types.js';\n\nimport {SET_ALL_TRACK_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {SET_ALL_LFO_LOCKS} from 'constants/action-types.js';\nimport {SET_ALL_ENVELOPE_LOCKS} from 'constants/action-types.js';\n\nimport {SET_MIX_VIEW_MODE} from 'constants/action-types.js';\nimport {SET_SUB_SEQUENCE_FADE} from 'constants/action-types.js';\n\nimport {SET_SAMPLE_SLICES} from 'constants/action-types.js';\n\nimport {SET_SELECTED_ARRANGEMENT_EVENTS} from 'constants/action-types.js';\n\nimport {SET_SHOW_DATE_SAMPLED} from 'constants/action-types.js';\nimport {SET_DATE_SAMPLED} from 'constants/action-types.js';\n\nimport {SET_EFFECT_PARAMETER_VALUES} from 'constants/action-types.js';\n\nimport {SET_TRACK_PANNING} from 'constants/action-types.js';\nimport {SET_GROUP_PANNING} from 'constants/action-types.js';\nimport {SET_SENDS_PANNING} from 'constants/action-types.js';\n\nimport {SET_SELECTED_RECORD} from 'constants/action-types.js';\nimport {SET_2D_SELECTION} from 'constants/action-types.js';\nimport {SET_SIMILAR_SOUNDS_TO_FIND} from 'constants/action-types.js';\nimport {SET_SHOW_SAMPLES_2D} from 'constants/action-types.js';\nimport {SET_LAST_NOTE_PLAYED} from 'constants/action-types.js';\nimport {SET_SIDEBAR_VIEW_MODE} from 'constants/action-types.js';\nimport {SET_DISCOGS_SELECTED} from 'constants/action-types.js';\nimport {SET_SELECTED_FOLDER} from 'constants/action-types.js';\nimport {SET_SELECTED_PRESET} from 'constants/action-types.js';\nimport {SET_HAS_CHANGES_TO_FOLDERS} from 'constants/action-types.js';\n\nimport {SET_CURSOR_STEP} from 'constants/action-types.js';\nimport {SET_CURSOR_TRACK} from 'constants/action-types.js';\nimport {SET_CURSOR_SHOW} from 'constants/action-types.js';\nimport {SET_FOLDER_DRAGGING} from 'constants/action-types.js';\nimport {SET_PRESET_DRAGGING} from 'constants/action-types.js';\nimport {SET_SAMPLE_DRAGGING} from 'constants/action-types.js';\nimport {SET_EFFECTS_CHAIN_TO_SHOW} from 'constants/action-types.js';\nimport {SET_EFFECTS_CHAINS_TO_SHOW} from 'constants/action-types.js';\nimport {SET_SUB_SEQUENCE_MUTED} from 'constants/action-types.js';\nimport {SET_TRACK_FROZEN} from 'constants/action-types.js';\nimport {SET_TRACK_TO_FREEZE} from 'constants/action-types.js';\nimport {SET_FROZEN_TRACK_PLAYING} from 'constants/action-types.js';\nimport {SET_FROZEN_TRACKS} from 'constants/action-types.js';\nimport {SET_FROZEN_TRACKS_PLAYING} from 'constants/action-types.js';\nimport {SET_SELECTED_ONSETS} from 'constants/action-types.js';\n\nimport {SET_SINGLE_STEP_TO_DRAG} from 'constants/action-types.js';\nimport {SET_STEP_NUMBER_DRAGGED_TO} from 'constants/action-types.js';\nimport {SET_SEARCH_RESULTS_START} from 'constants/action-types.js';\nimport {SET_SHOW_STEP_OPTIONS} from 'constants/action-types.js';\nimport {SET_MASTER_STEP_TOGGLES} from 'constants/action-types.js';\nimport {SET_PARAMETERS_TO_RECORD} from 'constants/action-types.js';\nimport {SET_ONSET_THRESHOLD} from 'constants/action-types.js';\nimport {SET_SHOW_ONSETS} from 'constants/action-types.js';\n\nimport {SET_SELECTED_GUILD} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_DRAG_OFFSET} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_NOTES} from 'constants/action-types.js';\n\nimport {SET_PENDING_TRANSACTIONS} from 'constants/action-types.js';\nimport {SET_COMMAND_INPUT} from 'constants/action-types.js';\nimport {SET_COMMAND_PREFIX} from 'constants/action-types.js';\nimport {SET_VI_MODE} from 'constants/action-types.js';\nimport {SET_TRACK_WARP} from 'constants/action-types.js';\nimport {SET_SUB_SEQUENCE_WARPS} from 'constants/action-types.js';\n\nimport {SET_ARRANGEMENT_SELECTION} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_MOUSE_X} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_AUTOMATION_TO_SHOW} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_LOOPING} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_SELECTED_ROWS} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_LOOP_SELECTED} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_ROW_SELECTIONS} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_ZOOM} from 'constants/action-types.js';\n\nimport {SET_SELECTED_SEQUENCE} from 'constants/action-types.js';\nimport {SET_EXPLORE_MIXER_EFFECT} from 'constants/action-types.js';\nimport {SET_EXPLORE_EQ_EFFECT} from 'constants/action-types.js';\nimport {SET_SELECTED_SEND_EFFECT} from 'constants/action-types.js';\nimport {SET_INSTRUMENT_TYPE_DRAGGING} from 'constants/action-types.js';\n\nimport {SET_TRACK_IS_LOADING} from 'constants/action-types.js';\n\nimport {SET_PIANO_ROLL_CURSOR} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_X_SCALE} from 'constants/action-types.js';\nimport {SET_TOTAL_ARRANGEMENT_LENGTH} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_BOTTOM_HEIGHT} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_BOTTOM_MODE} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_BOTTOM_RESIZING} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_PATTERN_DRAGGING} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_PATTERN_START_STEP} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_CURSOR_STEP} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_PATTERN_RESIZING} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_BROWSER_MODE} from 'constants/action-types.js';\nimport {SET_SAMPLE_TO_EXPLORE} from 'constants/action-types.js';\nimport {SET_EFFECT_RACK_NODE_POSITION} from 'constants/action-types.js';\nimport {SET_ANNOTATION_DRAGGING} from 'constants/action-types.js';\n\nimport {SET_TRACK_AUTOMATION_DEVICE} from 'constants/action-types.js';\nimport {SET_TRACK_AUTOMATION_SUB_DEVICE} from 'constants/action-types.js';\nimport {SET_TRACK_AUTOMATION_RACK_DEVICE} from 'constants/action-types.js';\nimport {SET_TRACK_AUTOMATION_PARAMETER} from 'constants/action-types.js';\nimport {SET_SHOW_AUTOMATION} from 'constants/action-types.js';\nimport {SET_PARAMETER_AUTOMATIONS} from 'constants/action-types.js';\n\nimport {SET_ACTIONS_REMAINING} from 'constants/action-types.js';\nimport {SET_TIME_REMAINING} from 'constants/action-types.js';\n\nimport {SET_SHOW_PIANO_ROLL} from 'constants/action-types.js';\nimport {SET_SELECTED_RACK_SUB_TRACK} from 'constants/action-types.js';\nimport {DELETE_AUTOMATIONS_FOR_PARAMETERS} from 'constants/action-types.js';\nimport {SET_AUTOMATION_GUIDE_POINT} from 'constants/action-types.js';\nimport {SET_AUTOMATION_POINT_DRAGGING} from 'constants/action-types.js';\nimport {SET_AUTOMATION_POINT_HAS_MOVED} from 'constants/action-types.js';\nimport {SET_AUTOMATION_POINT_HOVERED} from 'constants/action-types.js';\nimport {SET_TRACK_TO_CONVERT} from 'constants/action-types.js';\nimport {SET_AUTOMATION_POINTS_SELECTED} from 'constants/action-types.js';\nimport {SET_AUTOMATION_SELECTION} from 'constants/action-types.js';\n\nimport {SET_EXPLORE_PERSON_SELECTED} from 'constants/action-types.js';\nimport {SET_EXPLORE_ALL_SEQUENCES}from 'constants/action-types.js';\n\nimport {DELETE_AUTOMATIONS_FOR_ENGINE}from 'constants/action-types.js';\nimport {SET_RECORDING_EXPLORE_MIX} from 'constants/action-types.js';\nimport {SET_WORKS_LOADED} from 'constants/action-types.js';\nimport {SET_WORK_TRANSPOSE} from 'constants/action-types.js';\nimport {SET_WORK_VOLUME} from 'constants/action-types.js';\nimport {SET_EXPLORE_MIX_LOADED} from 'constants/action-types.js';\n\nimport {SET_IS_MACRO_MAPPING} from 'constants/action-types.js';\nimport {SET_PARAMETER_TO_MAP} from 'constants/action-types.js';\n\nimport {SET_MIX_COLOR_VALUE} from 'constants/action-types.js';\nimport {SET_MIX_HAS_EDITS} from 'constants/action-types.js';\n\nimport {SET_SCRIPT_VARIABLES} from 'constants/action-types.js';\n\nimport {SET_EXPLORE_OPTION} from 'constants/action-types.js';\n\nimport {SET_ANNOTATIONS_VIEW} from 'constants/action-types.js';\nimport {SET_EXPLORE_TOAST} from 'constants/action-types.js';\n\nimport {SET_PARAMETER_SLIDER_DOWN} from 'constants/action-types.js';\nimport {MOVE_ENGINE_AUTOMATIONS} from 'constants/action-types.js';\nimport {SET_SEQUENCE_LOADING_PROGRESS} from 'constants/action-types.js';\n\nimport {SET_TRACK_BROWSED_SAMPLES} from 'constants/action-types.js';\nimport {SET_TRACK_BROWSED_PRESETS} from 'constants/action-types.js';\nimport {SET_BOTTOM_TOOLBAR_OFFSET} from 'constants/action-types.js';\nimport {SET_TRACK_UPDATES} from 'constants/action-types.js';\nimport {SET_IS_TRANSCRIBING} from 'constants/action-types.js';\nimport {SET_SAMPLE_TOOLTIP} from 'constants/action-types.js';\nimport {SET_SELECTED_FREEZE} from 'constants/action-types.js';\nimport {SET_TRACK_LENGTH_MODE} from 'constants/action-types.js';\nimport {SET_TRACK_LENGTH_CHOICE} from 'constants/action-types.js';\nimport {SET_FREEZE_DRAGGING} from 'constants/action-types.js';\nimport {SET_FREEZE_COLUMN_SAMPLES} from 'constants/action-types.js';\nimport {SET_UPLOADING_FILE} from 'constants/action-types.js';\nimport {SET_GROUP_COLLAPSED} from 'constants/action-types.js';\nimport {SET_SELECTED_MIX_EFFECT} from 'constants/action-types.js';\nimport {SET_SAMPLES_DRAGGING} from 'constants/action-types.js';\nimport {SET_DISPLAY_RESOLUTION} from 'constants/action-types.js';\nimport {SET_OFFLINE_ENGINE} from 'constants/action-types.js';\nimport {SET_CURRENT_EXPORT_INFO} from 'constants/action-types.js';\nimport {SET_MIX_TRACK_DRAGGING} from 'constants/action-types.js';\nimport {SET_GROUP_TRACKS} from 'constants/action-types.js';\nimport {SET_LOADING_TEXT} from 'constants/action-types.js';\nimport {SET_TRACK_ENVELOPES} from 'constants/action-types.js';\nimport {SET_COPIED_NODES_FOR_RACK} from 'constants/action-types.js';\nimport {SET_LAST_MIDI_CC_PLAYED} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_MOUSE_DOWN_X} from 'constants/action-types.js';\n\nimport {SET_TRACKER_PARAMETER_TO_EDIT} from 'constants/action-types.js';\nimport {SET_TRACKS_TO_HIDE} from 'constants/action-types.js';\nimport {SET_SELECTED_PALETTE} from 'constants/action-types.js';\nimport {SET_SEQUENCED_PALETTE} from 'constants/action-types.js';\nimport {SET_PROJECT_DRAGGING} from 'constants/action-types.js';\nimport {SET_EXPLORE_UNPUBLISHED} from 'constants/action-types.js';\nimport {SET_QUICK_ADD_SEARCH_TEXT} from 'constants/action-types.js';\nimport {SET_SHOW_TRACK_FREEZE_HISTORY} from 'constants/action-types.js';\nimport {SET_SELECTED_MIDI_TRACK} from 'constants/action-types.js';\nimport {SET_SELECTED_TRACK_SLICE} from 'constants/action-types.js';\nimport {SET_CIRKLON_PARAMETER_SELECTED} from 'constants/action-types.js';\nimport {SET_CIRKLON_MODE} from 'constants/action-types.js';\nimport {SET_NOTES_DOWN} from 'constants/action-types.js';\nimport {SET_SCENES} from 'constants/action-types.js';\nimport {SET_CURRENT_SCENE} from 'constants/action-types.js';\nimport {SET_SHOW_SETTINGS} from 'constants/action-types.js';\nimport {SET_WALLPAPER} from 'constants/action-types.js';\nimport {SET_ANIMATE_WALLPAPER} from 'constants/action-types.js';\nimport {SET_EXPANDED_PROJECT} from 'constants/action-types.js';\nimport {SET_ACCUMULATOR_PARAMETER_SELECTED} from 'constants/action-types.js';\nimport {SET_PLANE_MAPPING} from 'constants/action-types.js';\nimport {SET_TRACK_PRESET_SAVING} from 'constants/action-types.js';\nimport {SET_SAMPLE_TAG_DRAGGING} from 'constants/action-types.js';\nimport {SET_PARAMETER_MIX_AUTOMATIONS} from 'constants/action-types.js';\nimport {SET_SHOW_ARRANGEMENT_TRACKS} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_PATTERN_SELECTED} from 'constants/action-types.js';\nimport {SET_SIDEBAR_SEARCH_INPUT} from 'constants/action-types.js';\nimport {SET_SHOW_ARRANGEMENT_SEARCHER} from 'constants/action-types.js';\nimport {SET_VI_SELECT_MODE} from 'constants/action-types.js';\nimport {SET_EXPLORE_WORK} from 'constants/action-types.js';\nimport {SET_CREATING_NEW_PACK} from 'constants/action-types.js';\nimport {SET_PACK_WINDOW_POSITION} from 'constants/action-types.js';\nimport {SET_DRAGGING_PACK_WINDOW} from 'constants/action-types.js';\nimport {SET_PACK_TO_EDIT} from 'constants/action-types.js';\nimport {SET_IS_MANAGING_GUILDS} from 'constants/action-types.js';\n\nimport {NEW_STEP_GROUP} from 'constants/action-types.js';\nimport {SET_STEPS_GROUP_MODE} from 'constants/action-types.js';\nimport {SET_TRANSFORMATION_EDGE_DRAGGING} from 'constants/action-types.js';\nimport {SET_SHOW_FORMANT_EFFECT} from 'constants/action-types.js';\nimport {SET_SHOWING_FORMANTS} from 'constants/action-types.js';\nimport {SET_PULLED_EFFECTS} from 'constants/action-types.js';\nimport {SET_LOOPS_TO_FREEZE} from 'constants/action-types.js';\nimport {SET_PARAMETER_MIN_MAX} from 'constants/action-types.js';\nimport {SET_CURRENT_SOUND_IN_LIST} from 'constants/action-types.js';\nimport {SET_SHOWING_SOUND_LIST} from 'constants/action-types.js';\nimport {SET_CURRENT_TAG_IN_LIST} from 'constants/action-types.js';\nimport {SET_LINKING_EFFECTS} from 'constants/action-types.js';\nimport {SET_PACK_SELECTED} from 'constants/action-types.js';\nimport {SET_SAMPLE_EXPLORER_SELECTED} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_SLIDE} from 'constants/action-types.js';\nimport {SET_MAXIMIZE_EXPLORER} from 'constants/action-types.js';\n\nimport {SET_PADS} from 'constants/action-types.js';\nimport {SET_PAD_SLOTS} from 'constants/action-types.js';\nimport {SET_PAD_HOVERED} from 'constants/action-types.js';\nimport {SET_WAVEFORM_SHOWING} from 'constants/action-types.js';\nimport {SET_TRACK_DRAGGING} from 'constants/action-types.js';\nimport {SET_HIDE_MIXER} from 'constants/action-types.js';\nimport {SET_SOURCE_EXPLORING} from 'constants/action-types.js';\nimport {SET_YEAR_EXPLORING} from 'constants/action-types.js';\nimport {SET_PULLABLE_PART_DRAGGING} from 'constants/action-types.js';\nimport {SET_PADS_EXPAND} from 'constants/action-types.js';\n\nimport {SET_SEQUENCERS} from 'constants/action-types.js';\nimport {SET_SEQUENCER_TRACKS} from 'constants/action-types.js';\nimport {SET_PLANE_MACROS} from 'constants/action-types.js';\nimport {SET_WINDOW_POSITION} from 'constants/action-types.js';\nimport {SET_BULK_WINDOW_POSITIONS} from 'constants/action-types.js';\nimport {SET_PAD_EFFECTS} from 'constants/action-types.js';\nimport {SET_DRAWING_PAD_EDGE} from 'constants/action-types.js';\nimport {SET_MOVING_PAD_EDGE} from 'constants/action-types.js';\nimport {SET_SELECTED_PAD_EDGE} from 'constants/action-types.js';\nimport {SET_BULK_EFFECTS_COLLAPSED} from 'constants/action-types.js';\nimport {SET_SELECTED_PULLED_ELEMENTS} from 'constants/action-types.js';\nimport {SET_ALL_EFFECT_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {SET_MODULE_COLLAPSED} from 'constants/action-types.js';\nimport {SET_TRACK_MIDI_EFFECTS} from 'constants/action-types.js';\nimport {SET_EFFECT_STARRED} from 'constants/action-types.js';\nimport {SET_BULK_EFFECTS_STARRED} from 'constants/action-types.js';\nimport {SET_BULK_MODULES_COLLAPSED} from 'constants/action-types.js';\nimport {DELETE_TRACK_ID} from 'constants/action-types.js';\nimport {SET_SHOWING_CONTEXT_MENU} from 'constants/action-types.js';\nimport {SET_HIGHER_ORDER_MATRIX} from 'constants/action-types.js';\nimport {SET_MODULE_COLOR} from 'constants/action-types.js';\nimport {SET_MODULES_ROUTING} from 'constants/action-types.js';\nimport {SET_HIGHER_ORDER_STEPS_SELECTED} from 'constants/action-types.js';\nimport {SET_ORIENTATION_ROUTINGS} from 'constants/action-types.js';\nimport {SET_SHOW_HIGHER_ORDER_SEQUENCER} from 'constants/action-types.js';\nimport {SET_MODULE_SIZE} from 'constants/action-types.js';\nimport {SET_INLET_CONNECTIONS} from 'constants/action-types.js';\nimport {SET_ZOBJECTS} from 'constants/action-types.js';\nimport {SET_ZMESSAGES} from 'constants/action-types.js';\nimport {SET_BACKGROUND_COLOR} from 'constants/action-types.js';\nimport {SET_VIEWABLE_SUBPATCHES} from 'constants/action-types.js';\nimport {SET_VIEWABLE_ZOBJECTS} from 'constants/action-types.js';\nimport {SET_SELECTED_ZOBJECT} from 'constants/action-types.js';\nimport {SET_JAKI_GRID} from 'constants/action-types.js';\nimport {SET_ZOBJECT_TYPE_DRAGGING} from 'constants/action-types.js';\nimport {SET_UX_LOCKED} from 'constants/action-types.js';\nimport {SET_MINTED_TOKENS} from 'constants/action-types.js';\nimport {SET_HIC_DIALOG} from 'constants/action-types.js';\nimport {SET_ZORA_DIALOG} from 'constants/action-types.js';\nimport {SET_IS_PREPARING_NFT} from 'constants/action-types.js';\nimport {SET_FULL_SCREEN_ZOBJECT} from 'constants/action-types.js';\nimport {SET_MAIN_SCROLL_REF} from 'constants/action-types.js';\nimport {SET_VIEWPORT_POSITION} from 'constants/action-types.js';\nimport {SET_SIDEBARS_SHOWING} from 'constants/action-types.js';\nimport {SET_SHOW_PAD_SEQUENCER} from 'constants/action-types.js';\nimport {SET_SHOW_PROJECTS_MODAL} from 'constants/action-types.js';\nimport {SET_SHOW_SEARCH_WINDOW} from 'constants/action-types.js';\nimport {SET_STEP_PARAMETER_SELECTED} from 'constants/action-types.js';\nimport {SET_SHOW_TRACK_INSTRUMENT} from 'constants/action-types.js';\nimport {SET_SHOW_MODULATORS} from 'constants/action-types.js';\nimport {SET_CABLE_SEGMENTATION} from 'constants/action-types.js';\nimport {SET_CABLE_SEGMENTATIONS} from 'constants/action-types.js';\n\nimport {SET_UX_LOCK_OBJECT} from 'constants/action-types.js';\nimport {SET_UX_LOCK_OBJECTS} from 'constants/action-types.js';\nimport {SET_UX_HIDE_OBJECT} from 'constants/action-types.js';\nimport {SET_UX_HIDE_OBJECTS} from 'constants/action-types.js';\nimport {SET_ZOBJECT_INPUT_TEXT} from 'constants/action-types.js';\nimport {SET_SHOW_EDITOR_BOTTOM} from 'constants/action-types.js';\nimport {SET_MINTING_PROGRESS} from 'constants/action-types.js';\nimport {SET_NEW_ZORA_TOKEN_ID} from 'constants/action-types.js';\nimport {SET_TRANSACTION_UPON_LOGIN} from 'constants/action-types.js';\nimport {SET_KEYBOARD_CONTEXT} from 'constants/action-types.js';\nimport {SET_PAD_FX_MODE} from 'constants/action-types.js';\nimport {SET_JAKI_GRID_MODE} from 'constants/action-types.js';\nimport {SET_OBJECT_STYLING} from 'constants/action-types.js';\nimport {SET_SELECTED_PLANAR_PARAMETERS} from 'constants/action-types.js';\nimport {SET_FILTERED_PLANAR_PARAMETERS} from 'constants/action-types.js';\nimport {SET_PLANAR_MACRO_TO_SHOW} from 'constants/action-types.js';\nimport {SET_PLANAR_REGION_MODE} from 'constants/action-types.js';\nimport {SET_GROUP_PRESETS_BY_PACKS} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_LEFT_SPACE} from 'constants/action-types.js';\nimport {SET_ZOBJECT_SIZE} from 'constants/action-types.js';\nimport {SET_SECONDARY_ZOBJECT} from 'constants/action-types.js';\nimport {CLEAR_DRAG_DROP} from 'constants/action-types.js';\nimport {SET_SAMPLES_TO_SAVE} from 'constants/action-types.js';\nimport {SET_EDITOR_PADDING} from 'constants/action-types.js';\nimport {SET_EDGES_PADDING} from 'constants/action-types.js';\nimport {SET_EDGES_SIZE} from 'constants/action-types.js';\nimport {SET_LEFT_SIDEBAR_WIDTH} from 'constants/action-types.js';\nimport {SET_DOCUMENTATION_SUB_SECTION} from 'constants/action-types.js';\nimport {SET_RIGHT_SIDEBAR_OPTION} from 'constants/action-types.js';\nimport {SET_SELECTED_FM_ENVELOPE_TYPE} from 'constants/action-types.js';\nimport {SET_SELECTED_FM_OPERATOR_DETAILS} from 'constants/action-types.js';\nimport {SET_SELECTED_FM_FORMANT} from 'constants/action-types.js';\nimport {SET_SHOW_SAVE_MODAL} from 'constants/action-types.js';\nimport {SET_ZOBJECT_FLASHING} from 'constants/action-types.js';\nimport {SET_SAMPLE_DOWNLOAD_PROGRESS} from 'constants/action-types.js';\nimport {SET_PRESET_SAVED} from 'constants/action-types.js';\nimport {SET_COMPLETELY_DONE_LOADING} from 'constants/action-types.js';\nimport {SET_PLUGIN_TO_SAVE} from 'constants/action-types.js';\nimport {SET_SHOW_PLUGINS} from 'constants/action-types.js';\nimport {SET_PLUGINS_LOADED} from 'constants/action-types.js';\nimport {SET_SHOW_PLUGINS_PANE} from 'constants/action-types.js';\nimport {SET_PLUGINS_PANE_HEIGHT} from 'constants/action-types.js';\nimport {SET_ZOBJECT_BACKGROUND} from 'constants/action-types.js';\nimport {SET_PRESENTATION_MODE} from 'constants/action-types.js';\nimport {SET_PRESENTATION_WINDOW_POSITION} from 'constants/action-types.js';\nimport {SET_BULK_PRESENTATION_WINDOW_POSITIONS} from 'constants/action-types.js';\nimport {SET_SHOW_FREEZE_MODAL} from 'constants/action-types.js';\nimport {SET_ZOBJECT_TOOLTIP} from 'constants/action-types.js';\nimport {SET_ZOBJECTS_STACK} from 'constants/action-types.js';\nimport {SET_ZOBJECT_CONTEXT_MENU} from 'constants/action-types.js';\nimport {SET_ENABLE_ROLL_VIEWER} from 'constants/action-types.js';\nimport {SET_ZOBJECT_MODAL} from 'constants/action-types.js';\nimport {SET_ZOBJECT_PROGRESSBAR} from 'constants/action-types.js';\n\nexport const setResolution = resolution => ({ type: SET_RESOLUTION, payload: resolution });\nexport const setSequencerEngine = sequencerEngine => ({ type: SET_SEQUENCER_ENGINE, payload: sequencerEngine});\nexport const setViewMode = viewMode => ({ type: SET_VIEW_MODE, payload: viewMode});\nexport const setAlternateViewMode = viewMode => ({ type: SET_ALTERNATE_VIEW_MODE, payload: viewMode});\nexport const setDetailsView = trackNumber => ({ type: SET_DETAILS_VIEW, payload: trackNumber});\nexport const setDecentralized = decentralized => ({ type: SET_DECENTRALIZED, payload: decentralized});\nexport const setSelectorMode = selectorMode => ({ type: SET_SELECTOR_MODE , payload: selectorMode});\nexport const setNumberOfPatterns = (id, numberOfPatterns) => (\n    {\n        type: SET_NUMBER_PATTERNS,\n        payload: {\n            id,\n            numberOfPatterns\n        }\n    });\nexport const setCurrentPattern =\n    (sequenceId, currentPattern) =>\n    ({\n        type: SET_CURRENT_PATTERN ,\n        payload: {\n            sequenceId: sequenceId,\n            currentPattern: currentPattern}});\nexport const setCurrentStep =\n    (sequenceId, currentStep) =>\n    ({\n        type: SET_CURRENT_STEP ,\n        payload: {\n            sequenceId: sequenceId,\n            currentStep: currentStep}});\nexport const setCurrentGlobalStep =\n    (sequenceId, currentStep) =>\n    ({\n        type: SET_CURRENT_GLOBAL_STEP,\n        payload: {\n            sequenceId: sequenceId,\n            currentGlobalStep: currentStep\n        }\n    });\n\nexport const setCurrentAndGlobalSteps =\n    (sequenceId, currentStep, currentGlobalStep) =>\n    ({\n        type: SET_CURRENT_AND_GLOBAL_STEPS,\n        payload: {\n            sequenceId: sequenceId,\n            currentStep: currentStep,\n            currentGlobalStep: currentGlobalStep,\n        }\n    }\n    );\n\n// samples\n\nexport const setSample = (id, sample) => ({ type: SET_SAMPLE, payload: {sampleId: id, sample: sample}});\n\nexport const startTriggerTrack = (trackNumber, sliceNumber) => ({ type: START_TRIGGER_TRACK, payload: {trackNumber: trackNumber, sliceNumber: sliceNumber}});\nexport const stopTriggerTrack = (trackNumber, sliceNumber) => ({ type: STOP_TRIGGER_TRACK, payload: {trackNumber: trackNumber, sliceNumber: sliceNumber}});\n\nexport const setSamplePack = (samplePack) => ({ type: SET_SAMPLE_PACK , payload: samplePack});\n\n// add sample pack to your palette\nexport const addSamplePack = (samplePack) => ({ type: ADD_SAMPLE_PACK , payload: samplePack});\nexport const removeSamplePack = (samplePack) => ({ type: REMOVE_SAMPLE_PACK , payload: samplePack});\n\n\nexport const dragSample = (sample) => ({ type: DRAG_SAMPLE , payload: sample});\nexport const dragEffect = (effectNumber) => ({ type: DRAG_EFFECT , payload: effectNumber});\nexport const dragPattern = (patternNumber) => ({ type: DRAG_PATTERN, payload: patternNumber});\n\nexport const mouseDown = (m) => ({ type: MOUSE_DOWN, payload: m});\nexport const dragToggle = (toggle) => ({ type: DRAG_TOGGLE, payload: toggle});\nexport const dragStepTranspose = (transpose) => ({ type: DRAG_STEP_TRANSPOSE, payload: transpose});\nexport const setCommandDown = (c) => ({ type: COMMAND_DOWN, payload: c});\n\nexport const trackRecording = (t, r) => ({ type: TRACK_RECORDING, payload: {id: t, recording: r}});\nexport const trackPreparingToRecord = (t, r) => ({ type: TRACK_PREPARING_TO_RECORD, payload: {trackNumber: t, preparing: r}});\n\nexport const setAllTrackSteps = (t, steps, pianoSteps, fills, stepToId, stepToPosition, pianoRollDurations, patternSteps, groups) => (\n    {\n        type: SET_ALL_TRACK_STEPS,\n        payload: {\n            id: t,\n            steps: steps,\n            pianoRollSteps: pianoSteps,\n            fills: fills,\n            stepToId: stepToId,\n            stepToPosition: stepToPosition,\n            pianoRollDurations: pianoRollDurations,\n            patternSteps: patternSteps,\n            groups\n        }});\n\nexport const setTrackSteps = (t, s) => ({ type: SET_TRACK_STEPS, payload: {id: t, steps: s}});\nexport const setTrackFills = (t, s) => ({ type: SET_TRACK_FILLS, payload: {id: t, fills: s}});\nexport const setTrackPianoRollSteps = (t, s) => ({ type: SET_TRACK_PIANO_ROLL_STEPS, payload: {id: t, steps: s}});\n\nexport const setSelectedTrack = (track) => ({ type: SET_SELECTED_TRACK, payload: track});\nexport const setSelectedStep = (step) => ({ type: SET_SELECTED_STEP, payload: step});\nexport const setHoveredStep = (step) => ({ type: SET_HOVERED_STEP, payload: step});\nexport const setSelectedGroup = (group) => ({ type: SET_SELECTED_GROUP, payload: group});\n\n\nexport const setTrackVolume = (trackNumber, volume) => ({ type: SET_TRACK_VOLUME, payload:\n                                                          {id: trackNumber, volume: volume }});\nexport const setTrackMuted = (id, muted) => ({ type: SET_TRACK_MUTED, payload: {\n    id: id, muted: muted}});\n\nexport const setTrackSolo = (id, solo) => ({ type: SET_TRACK_SOLO, payload: {\n    id, solo: solo}});\n\nexport const setGroupVolume = (groupNumber, volume) => ({ type: SET_GROUP_VOLUME, payload:\n                                                          {groupNumber: groupNumber, volume: volume }});\nexport const setGroupMuted = (groupNumber, muted) => ({ type: SET_GROUP_MUTED, payload: {\n    groupNumber: groupNumber, muted: muted}});\n\nexport const setQuantized = (quantized) => ({ type: SET_QUANTIZED, payload: quantized});\nexport const setIsRecording = (isRecording) => ({ type: SET_IS_RECORDING, payload: isRecording});\nexport const setIsRecordingExpanded = (isRecordingExpanded) => ({ type: SET_IS_RECORDING_EXPANDED, payload: isRecordingExpanded});\nexport const setIsRecordingMix = (isRecordingMix) => ({ type: SET_IS_RECORDING_MIX, payload: isRecordingMix});\nexport const setIsPlaying =\n    (sequenceId, isPlaying) =>\n    ({\n        type: SET_IS_PLAYING,\n        payload: {\n            sequenceId: sequenceId,\n            isPlaying: isPlaying\n        }});\nexport const setIsPlayingMix = (isPlayingMix) => ({ type: SET_IS_PLAYING_MIX, payload: isPlayingMix});\n\nexport const setSendMuted = (sendNumber, muted) => ({ type: SET_SEND_MUTED, payload: {\n    sendNumber: sendNumber, muted: muted}});\n\nexport const setStepDragging = (step) => ({ type: SET_STEP_DRAGGING, payload: step});\nexport const setStepToCopy = (step) => ({ type: SET_STEP_TO_COPY, payload: step});\n\nexport const setSequenceName = (name) => ({ type: SET_SEQUENCE_NAME, payload: name});\n\nexport const setSelectedEffect = (effectNumber) => ({ type: SET_SELECTED_EFFECT, payload: effectNumber});\n\nexport const setEffectParameterValue = (id, value) => ({ type: SET_EFFECT_PARAMETER_VALUE, payload: {id: id, value: value}});\n\nexport const setEffectsPaneOption = (option) => ({ type: SET_EFFECTS_PANE_OPTION, payload: option});\n\nexport const setSelectedParameter = (parameter) => ({ type: SET_SELECTED_PARAMETER, payload: parameter});\nexport const setSelectedParameterFlashing = (parameter) => ({ type: SET_SELECTED_PARAMETER_FLASHING, payload: parameter});\n\nexport const setMixes = (mixes) => ({ type: SET_MIXES, payload: mixes});\nexport const setCurrentMix = (mix) => ({ type: SET_CURRENT_MIX, payload: mix});\n\nexport const setErasingAutomation = (mix) => ({ type: SET_ERASING_AUTOMATION, payload: mix});\n\nexport const setTrackSendVolume = (subSequenceId, trackNumber, sendNumber, volume) => (\n    { type: SET_TRACK_SEND_VOLUME,\n      payload: {\n          subSequenceId: subSequenceId,\n          trackNumber: trackNumber,\n          sendNumber: sendNumber,\n          volume: volume\n      }});\n\nexport const setTrackFocused = (track) => ({ type: SET_TRACK_FOCUSED, payload: track});\n\nexport const setYearSelected = (year) => ({ type: SET_YEAR_SELECTED, payload: year});\nexport const setCountriesSelected = (countries) => ({ type: SET_COUNTRIES_SELECTED, payload: countries});\nexport const setVideosSelected = (videos) => ({ type: SET_VIDEOS_SELECTED, payload: videos});\nexport const setStylesSelected = (styles) => ({ type: SET_STYLES_SELECTED, payload: styles});\nexport const setTagsSelected = (tags) => ({ type: SET_TAGS_SELECTED, payload: tags});\nexport const setChordSelected = (chord) => ({ type: SET_CHORD_SELECTED, payload: chord});\nexport const setHierarchyRoot = (root) => ({ type: SET_HIERARCHY_ROOT, payload: root});\nexport const setHierarchyTree = (tree) => ({ type: SET_HIERARCHY_TREE, payload: tree});\n\nexport const setShowYearSlider = (show) => ({ type: SET_SHOW_YEAR_SLIDER, payload: show});\nexport const setShowCountries = (show) => ({ type: SET_SHOW_COUNTRIES, payload: show});\nexport const setShowVideos  = (show) => ({ type: SET_SHOW_VIDEOS, payload: show});\nexport const setShowStyles = (show) => ({ type: SET_SHOW_STYLES, payload: show});\nexport const setShowTags = (show) => ({ type: SET_SHOW_TAGS, payload: show});\nexport const setShowChordFilter = (show) => ({ type: SET_SHOW_CHORD_FILTER, payload: show});\n\nexport const setIsDraggingDuration = (duration) => ({ type: SET_IS_DRAGGING_DURATION, payload: duration});\nexport const setStepDataDragging = (stepData) => ({ type: SET_STEP_DATA_DRAGGING, payload: stepData});\nexport const setPianoRollSelection =\n    (stepNumber, transpose, numSteps, numNotes) =>\n    ({\n        type: SET_PIANO_ROLL_SELECTION,\n        payload: {\n            stepNumber: stepNumber,\n            transpose: transpose,\n            numSteps: numSteps,\n            numNotes: numNotes,\n        }});\n\n\nexport const setSelectedPianoRollSteps =\n    (selectedSteps) =>\n    ({\n        type: SET_SELECTED_PIANO_ROLL_STEPS,\n        payload: selectedSteps\n    });\n\nexport const setSearchResultsSamples =\n    (sampleHashes) =>\n    ({\n        type: SET_SEARCH_RESULTS_SAMPLES,\n        payload: sampleHashes\n    });\n\nexport const setSelectedChordSample =\n    (obj =>\n    ({\n        type: SET_SELECTED_CHORD_SAMPLE,\n        payload: obj\n    }));\n\nexport const setStepsToCopy =\n    (steps =>\n    ({\n        type: SET_STEPS_TO_COPY,\n        payload: steps\n    }));\n\nexport const setLoadingSequence = (id, loading) => ({ type: SET_LOADING_SEQUENCE, payload: {id: id, loading: loading}});\n\nexport const setEasyPatternToCopy = (easyPattern) => ({ type: SET_EASY_PATTERN_TO_COPY, payload: easyPattern});\n\nexport const setSampleAuditioning = (sampleId) => ({ type: SET_SAMPLE_AUDITIONING, payload: sampleId});\n\nexport const setLastMidiKeyMapped = (midiKey) => ({ type: SET_LAST_MIDI_KEY_MAPPED, payload: midiKey});\nexport const setTrackIsEnabled = (subSequenceId, trackNumber, isEnabled) => (\n    {\n        type: SET_TRACK_IS_ENABLED,\n        payload: {\n            subSequenceId: subSequenceId,\n            trackNumber: trackNumber,\n            isEnabled: isEnabled\n        }\n    });\n\nexport const setSelectedSampleTag = (sampleId, tag) => ({ type: SET_SELECTED_SAMPLE_TAG, payload: {sampleId: sampleId, tag: tag}});\n\nexport const setTransposeDragging = (dragging) => ({ type: SET_TRANSPOSE_DRAGGING, payload: {transpose: dragging}});\n\nexport const setMasterVolume =\n    (sequenceId, volume) => (\n        { type: SET_MASTER_VOLUME,\n          payload: {\n              sequenceId: sequenceId,\n              volume: volume\n          }\n        });\n\nexport const setUserViewMode = (userViewMode) => ({ type: SET_USER_VIEW_MODE, payload: userViewMode});\nexport const setCurrentUserMix = (mix) => ({ type: SET_CURRENT_USER_MIX, payload: mix});\nexport const setUserHasEditsToSave = (hasEdits) => ({ type: SET_USER_HAS_EDITS_TO_SAVE, payload: hasEdits});\n\nexport const setPatternToEditColor = (pattern) => ({ type: SET_PATTERN_TO_EDIT_COLOR, payload: pattern});\nexport const setPatternColor = (pattern, color) => (\n    { type: SET_PATTERN_COLOR,\n      payload: {\n          pattern: pattern,\n          color: color}});\n\nexport const setCompactMode = (isCompact) => ({ type: SET_COMPACT_MODE, payload: isCompact});\n\nexport const setShowLFOs = (show) => ({ type: SET_SHOW_LFOS, payload: show});\nexport const setShowEnvelopes = (show) => ({ type: SET_SHOW_ENVELOPES, payload: show});\n\nexport const setTracksToResample = (tracks) => ({ type: SET_TRACKS_TO_RESAMPLE, payload: tracks});\n\nexport const setProjectAutomationMode  = (mode) => ({ type: SET_PROJECT_AUTOMATION_MODE, payload: mode});\n\nexport const newSequence = () => ({ type: NEW_SEQUENCE, payload: {}});\n\nexport const setStepsSelection = (trackNumber, stepFrom, stepTo) =>\n    ({\n        type: SET_STEPS_SELECTION ,\n        payload: {\n            trackNumber: trackNumber,\n            fromStep: stepFrom,\n            toStep: stepTo\n        }\n    });\nexport const setSelectedSteps = (trackNumber, patternNumber, steps) => ({ type: SET_SELECTED_STEPS, payload: {trackNumber: trackNumber, patternNumber: patternNumber, steps: steps}});\nexport const setStepNumberDraggingFrom = (stepNumber) => ({ type: SET_STEP_NUMBER_DRAGGING_FROM, payload: stepNumber});\n\nexport const setSequencePatternLocks = (patternLocks) => (\n    { type: SET_SEQUENCE_PATTERN_LOCKS,\n      payload: {\n          patternLocks: patternLocks,\n      }});\n\nexport const setSequencePatternLocked = (patternNumber, locked) => (\n    {\n        type: SET_SEQUENCE_PATTERN_LOCKED,\n        payload: {\n            patternNumber: patternNumber,\n            locked: locked\n        }});\n\nexport const setTrackPatternLocked = (subSequence, trackNumber, patternNumber, locked) => (\n    {\n        type: SET_TRACK_PATTERN_LOCKED,\n        payload: {\n            subSequence: subSequence,\n            trackNumber: trackNumber,\n            patternNumber: patternNumber,\n            locked: locked\n        }});\n\nexport const setTrackPatternLocks = (subSequence, trackNumber, patternLocks) => (\n    { type: SET_TRACK_PATTERN_LOCKS,\n      payload: {\n          subSequence: subSequence,\n          trackNumber: trackNumber,\n          patternLocks: patternLocks,\n      }});\n\nexport const setEffectPatternLocks = (effectId, patternLocks) => (\n    { type: SET_EFFECT_PATTERN_LOCKS,\n      payload: {\n          id: effectId,\n          patternLocks: patternLocks\n      }});\n\nexport const updateStepsForAllTracks = (updateData) => ({ type: UPDATE_STEPS_FOR_ALL_TRACKS, payload: updateData});\n\nexport const setLFOPatternLocks = (subSequence, patternLocks) =>\n    ({\n        type: SET_LFO_PATTERN_LOCKS,\n        payload: {\n            patternLocks: patternLocks,\n            subSequence: subSequence,}\n    });\n\nexport const setEnvelopePatternLocks = (subSequence, patternLocks) =>\n    ({\n        type: SET_ENVELOPE_PATTERN_LOCKS,\n        payload: {\n            patternLocks: patternLocks,\n            subSequence: subSequence\n        }\n    });\n\nexport const setPianoRollPagination = (start, end) => ({ type: SET_PIANO_ROLL_PAGINATION, payload: {start : start, end: end}});\n\nexport const setIsResampling = (isResampling) => ({ type: SET_IS_RESAMPLING, payload: isResampling});\nexport const setResampleDuration = (resampleDuration) => ({ type: SET_RESAMPLE_DURATION, payload: resampleDuration});\n\nexport const setKeyMappings = (keyMappings) => ({ type: SET_KEY_MAPPINGS, payload: keyMappings});\nexport const setPadMappings = (padMappings) => ({ type: SET_PAD_MAPPINGS, payload: padMappings});\n\nexport const setShowSequenceModal = (show) => ({ type: SET_SHOW_SEQUENCE_MODAL, payload: show});\n\nexport const setShowModsModal = (show) => ({ type: SET_SHOW_MODS_MODAL, payload: show});\n\nexport const setMultiParameterSliderValue = (id, value) => (\n    {\n        type: SET_MULTI_PARAMETER_SLIDER,\n        payload: {\n            id: id,\n            value: value\n        }\n    });\n\nexport const setSequenceRolling = (rolling) => ({ type: SET_SEQUENCE_ROLLING, payload: rolling});\n\nexport const setTrackEffectsChain = (trackNumber, effectsChain) => (\n    {\n        type: SET_TRACK_EFFECTS_CHAIN,\n        payload: {\n            trackNumber: trackNumber,\n            effectsChain: effectsChain\n        }\n    });\n\nexport const setShowSequences = (show) => ({ type: SET_SHOW_SEQUENCES, payload: show});\nexport const setShowPresets = (show) => ({ type: SET_SHOW_PRESETS, payload: show});\nexport const setShowInstruments = (show) => ({ type: SET_SHOW_INSTRUMENTS, payload: show});\n\nexport const setTrackRolling = (rolling) => ({ type: SET_TRACK_ROLLING, payload: rolling});\n\nexport const setZIndexHack = (hack) => ({ type: SET_Z_INDEX_HACK, payload: hack});\n\nexport const setLoadedTracks = (tracks) => ({ type: SET_LOADED_TRACKS, payload: tracks});\n\nexport const setBPM = (bpm) => ({ type: SET_BPM, payload: bpm});\n\nexport const setResampleMaster = (flag) => ({ type: SET_RESAMPLE_MASTER, payload: flag});\n\nexport const setYoutubeSearchTerms = (s) => ({ type: SET_YOUTUBE_SEARCH_TERMS, payload: s});\n\nexport const setAudioInputSource = (s) => ({ type: SET_AUDIO_INPUT_SOURCE, payload: s});\n\nexport const setWaveformSelection = (x) => (\n    {\n        type: SET_WAVEFORM_SELECTION,\n        payload: x\n    });\n\nexport const setWaveformSelectionEnd = (x) => (\n    {\n        type: SET_WAVEFORM_SELECTION_END,\n        payload: x\n    });\n\nexport const setMidiMapMode= (mode) => (\n    {\n        type: SET_MIDI_MAP_MODE,\n        payload: mode\n    });\n\nexport const setParameterMidiMapSelection= (parameter) => (\n    {\n        type: SET_PARAMETER_MIDI_MAP_SELECTION,\n        payload: parameter\n    });\n\nexport const setParameterMidiMapping= (parameter, midiControl) => (\n    {\n        type: SET_PARAMETER_MIDI_MAPPING,\n        payload: {\n            parameter: parameter,\n            midiControl: midiControl\n        }\n    });\n\nexport const deleteParameterMidiMapping = (parameter) => (\n    {\n        type: DELETE_PARAMETER_MIDI_MAPPING,\n        payload: parameter,\n    });\n\nexport const setActionMidiMapSelection= (action) => (\n    {\n        type: SET_ACTION_MIDI_MAP_SELECTION,\n        payload: action\n    });\n\nexport const setActionMidiMapping= (action, midiControl) => (\n    {\n        type: SET_ACTION_MIDI_MAPPING,\n        payload: {\n            action: action,\n            midiControl: midiControl\n        }\n    });\n\nexport const deleteMidiMappings = (control) => (\n    {\n        type: DELETE_MIDI_MAPPINGS,\n        payload: control,\n    });\n\n\nexport const setLatency = (latency) => (\n    {\n        type: SET_LATENCY,\n        payload: latency,\n    });\n\nexport const setSpotlightTracks = (tracks) => (\n    {\n        type: SET_SPOTLIGHT_TRACKS,\n        payload: tracks,\n    });\n\nexport const setClockType = (type) => (\n    {\n        type: SET_CLOCK_TYPE,\n        payload: type,\n    });\n\nexport const setConnectionStatus = (status) => (\n    {\n        type: SET_CONNECTION_STATUS,\n        payload: status,\n    });\n\nexport const setConnectedUserName = (userName) => (\n    {\n        type: SET_CONNECTED_USER_NAME,\n        payload: userName,\n    });\n\nexport const setClockTick = (step) => (\n    {\n        type: SET_CLOCK_TICK,\n        payload: step,\n    });\n\nexport const setPlayScheduled = (flag) => (\n    {\n        type: SET_PLAY_SCHEDULED,\n        payload: flag,\n    });\n\nexport const setAvailableUsersToSync = (users) => (\n    {\n        type: SET_AVAILABLE_USERS_TO_SYNC,\n        payload: users,\n    });\n\nexport const setSearchSortBy = (sortBy) => (\n    {\n        type: SET_SEARCH_SORT_BY,\n        payload: sortBy,\n    });\n\nexport const setMidiEffectDragging = (effect) => (\n    {\n        type: SET_MIDI_EFFECT_DRAGGING,\n        payload: effect,\n    });\n\nexport const setShowTrackEffects = (trackNumber, show) => (\n    {\n        type: SET_SHOW_TRACK_EFFECTS,\n        payload: {\n            trackNumber: trackNumber,\n            show: show\n        },\n    });\n\nexport const setShowConvolverModal = (show, sample) => (\n    {\n        type: SET_SHOW_CONVOLVER_MODAL,\n        payload: {\n            show: show,\n            convolverSample: sample\n        },\n    });\n\nexport const setShowPasswordModal = (show) => (\n    {\n        type: SET_SHOW_PASSWORD_MODAL,\n        payload: show\n    });\n\nexport const setPasswordModalCallback = (callback) => (\n    {\n        type: SET_PASSWORD_MODAL_CALLBACK,\n        payload: callback\n    });\n\nexport const setShowShareSequenceModal = (show) => (\n    {\n        type: SET_SHOW_SHARE_SEQUENCE_MODAL,\n        payload: show\n    });\n\nexport const hideAllEffects = () => (\n    {\n        type: HIDE_ALL_EFFECTS,\n        payload: {},\n    });\n\nexport const setEffectCollapsed = (id, isCollapsed) => (\n    {\n        type: SET_EFFECT_COLLAPSED,\n        payload: {\n            id: id,\n            isCollapsed: isCollapsed\n        },\n    });\n\nexport const setContextualHelp = (element, arg) => (\n    {\n        type: SET_CONTEXTUAL_HELP,\n        payload: {element, arg}\n    });\n\nexport const setSelectedLFO = (lfo) => (\n    {\n        type: SET_SELECTED_LFO,\n        payload: lfo,\n    });\n\nexport const setSelectedEnvelope = (envelope) => (\n    {\n        type: SET_SELECTED_ENVELOPE,\n        payload: envelope\n    });\n\nexport const setSidebarCollapsed = (collapsed) => (\n    {\n        type: SET_SIDEBAR_COLLAPSED,\n        payload: collapsed\n    });\n\nexport const setMixEvents = (subSequenceId, type, events) => (\n    {\n        type: SET_MIX_EVENTS,\n        payload: {\n            subSequenceId: subSequenceId,\n            type: type,\n            events: events\n        }\n    });\n\nexport const setShowGroups = (showGroups) => (\n    {\n        type: SET_SHOW_GROUPS,\n        payload: showGroups\n    });\n\nexport const setCurrentSubSequence = (sequenceId, subSequenceId) => (\n    {\n        type: SET_CURRENT_SUB_SEQUENCE,\n        payload: {\n            sequenceId: sequenceId,\n            subSequenceId: subSequenceId,\n        }\n    });\n\n\nexport const setSubSequences = (id, ids) => (\n    {\n        type: SET_SUB_SEQUENCES,\n        payload: {\n            sequenceId: id,\n            ids: ids,\n        },\n    });\n\nexport const setAllTrackPatternLocks = (locks) => (\n    {\n        type: SET_ALL_TRACK_PATTERN_LOCKS,\n        payload: locks\n    });\n\nexport const setAllLFOLocks = (locks) => (\n    {\n        type: SET_ALL_LFO_LOCKS,\n        payload: locks,\n    });\n\nexport const setAllEnvelopeLocks= (locks) => (\n    {\n        type: SET_ALL_ENVELOPE_LOCKS,\n        payload: locks\n    });\n\nexport const setMixViewMode = (mode) => (\n    {\n        type: SET_MIX_VIEW_MODE,\n        payload: mode\n    });\n\nexport const setSubSequenceFade = (id, value) => (\n    {\n        type: SET_SUB_SEQUENCE_FADE,\n        payload: {\n            subSequenceId: id,\n            value: value,\n        },\n    });\n\nexport const setSampleSlices= (id, slices) => (\n    {\n        type: SET_SAMPLE_SLICES,\n        payload: {\n            id: id,\n            slices: slices,\n        },\n    });\n\nexport const setSelectedArrangementEvents  = (events) => (\n    {\n        type: SET_SELECTED_ARRANGEMENT_EVENTS,\n        payload: events,\n    });\n\nexport const setShowDateSampled = (show) => (\n    {\n        type: SET_SHOW_DATE_SAMPLED,\n        payload: show\n    });\n\nexport const setDateSampled = (dates) => (\n    {\n        type: SET_DATE_SAMPLED,\n        payload: dates\n    });\n\nexport const setEffectParameterValues = (values) => (\n    {\n        type: SET_EFFECT_PARAMETER_VALUES,\n        payload: values\n    });\n\nexport const setTrackPanning = (trackNumber, pan) => (\n    {\n        type: SET_TRACK_PANNING,\n        payload: {\n            trackNumber: trackNumber,\n            pan: pan\n        }\n    });\n\nexport const setGroupPanning = (groupNumber, pan) => (\n    {\n        type: SET_GROUP_PANNING,\n        payload: {\n            groupNumber: groupNumber,\n            pan: pan\n        }\n    });\n\nexport const setSelectedRecord = (record) => (\n    {\n        type: SET_SELECTED_RECORD,\n        payload: record,\n    });\n\nexport const set2DSelection = (startX, startY, endX, endY) => (\n    {\n        type: SET_2D_SELECTION,\n        payload: {\n            startX: startX,\n            startY: startY,\n            endX: endX,\n            endY: endY\n        },\n    });\n\nexport const setSimilarSoundsToFind = (sampleId) => (\n    {\n        type: SET_SIMILAR_SOUNDS_TO_FIND,\n        payload: sampleId,\n    });\n\nexport const setShowSamples2D = (show) => (\n    {\n        type: SET_SHOW_SAMPLES_2D,\n        payload: show,\n    });\n\nexport const setLastNotePlayed = (lastNote) => (\n    {\n        type: SET_LAST_NOTE_PLAYED,\n        payload: lastNote,\n    });\n\nexport const setSidebarViewMode = (mode) => (\n    {\n        type: SET_SIDEBAR_VIEW_MODE,\n        payload: mode,\n    });\n\nexport const setDiscogsSelected = (selected) => (\n    {\n        type: SET_DISCOGS_SELECTED,\n        payload: selected,\n    });\n\nexport const setSelectedFolder = (selected) => (\n    {\n        type: SET_SELECTED_FOLDER,\n        payload: selected,\n    });\n\nexport const setSelectedPreset = (selected) => (\n    {\n        type: SET_SELECTED_PRESET,\n        payload: selected,\n    });\n\nexport const setHasChangesToFolders = (flag) => (\n    {\n        type: SET_HAS_CHANGES_TO_FOLDERS,\n        payload: flag,\n    });\n\nexport const setCursorTrack = (track) => (\n    {\n        type: SET_CURSOR_TRACK,\n        payload: track,\n    });\n\nexport const setCursorStep = (step) => (\n    {\n        type: SET_CURSOR_STEP,\n        payload: step,\n    });\n\nexport const setCursorShow = (show) => (\n    {\n        type: SET_CURSOR_SHOW,\n        payload: show,\n    });\n\nexport const setFolderDragging = (folder) => (\n    {\n        type: SET_FOLDER_DRAGGING,\n        payload: folder,\n    });\n\nexport const setPresetDragging = (preset) => (\n    {\n        type: SET_PRESET_DRAGGING,\n        payload: preset,\n    });\n\nexport const setSampleDragging = (sample) => (\n    {\n        type: SET_SAMPLE_DRAGGING,\n        payload: sample,\n    });\n\nexport const setEffectsChainToShow = (subSequenceId, track, chainNumber) => (\n    {\n        type: SET_EFFECTS_CHAIN_TO_SHOW,\n        payload: {\n            subSequenceId: subSequenceId,\n            trackNumber: track,\n            chainNumber: chainNumber\n        },\n    });\n\nexport const setSubSequenceMuted = (id, muted) => (\n    {\n        type: SET_SUB_SEQUENCE_MUTED,\n        payload: {\n            id: id,\n            muted: muted,\n        },\n    });\n\nexport const setTrackFrozen = (subSequenceId, trackNumber, frozen) => (\n    {\n        type: SET_TRACK_FROZEN,\n        payload: {\n            subSequenceId: subSequenceId,\n            trackNumber: trackNumber,\n            frozen: frozen,\n        },\n    });\n\nexport const setTrackToFreeze = (subSequenceId, trackNumber) => (\n    {\n        type: SET_TRACK_TO_FREEZE,\n        payload: {\n            subSequenceId: subSequenceId,\n            trackNumber: trackNumber,\n        },\n    });\n\nexport const setFrozenTrackPlaying = (subSequenceId, trackNumber, playing) => (\n    {\n        type: SET_FROZEN_TRACK_PLAYING,\n        payload: {\n            subSequenceId: subSequenceId,\n            trackNumber: trackNumber,\n            playing: playing,\n        },\n    });\n\nexport const setFrozenTracksPlaying = (subSequenceId, frozenTracksPlaying) => (\n    {\n        type: SET_FROZEN_TRACKS_PLAYING,\n        payload: {\n            subSequenceId: subSequenceId,\n            frozenTracksPlaying: frozenTracksPlaying,\n        },\n    });\n\nexport const setFrozenTracks = (subSequenceId, frozenTracks) => (\n    {\n        type: SET_FROZEN_TRACKS,\n        payload: {\n            subSequenceId: subSequenceId,\n            frozenTracks: frozenTracks,\n        },\n    });\n\nexport const setEffectsChainsToShow = (subSequenceId, effectsChains) => (\n    {\n        type: SET_EFFECTS_CHAINS_TO_SHOW,\n        payload: {\n            subSequenceId: subSequenceId,\n            effectsChains: effectsChains,\n        },\n    });\n\nexport const setSelectedOnsets = (id, selectedOnsets) => (\n    {\n        type: SET_SELECTED_ONSETS,\n        payload: {\n            id: id,\n            selectedOnsets: selectedOnsets,\n        },\n    });\n\nexport const setSingleStepToDrag = (stepData) => (\n    {\n        type: SET_SINGLE_STEP_TO_DRAG,\n        payload: stepData\n    });\n\nexport const setStepNumberDraggedTo = (stepNumber) => (\n    {\n        type: SET_STEP_NUMBER_DRAGGED_TO,\n        payload: stepNumber\n    });\n\nexport const setSearchResultsStart = (start) => (\n    {\n        type: SET_SEARCH_RESULTS_START,\n        payload: start\n    });\n\nexport const setShowStepOptions = (option, effect) => (\n    {\n        type: SET_SHOW_STEP_OPTIONS,\n        payload: {\n            option: option,\n            effect: effect,\n        }\n    });\n\nexport const setMasterStepToggles = (steps) => (\n    {\n        type: SET_MASTER_STEP_TOGGLES,\n        payload:  steps\n    });\n\nexport const setParametersToRecord = (params) => (\n    {\n        type: SET_PARAMETERS_TO_RECORD,\n        payload:  params\n    });\n\nexport const setOnsetThreshold = (threshold) => (\n    {\n        type: SET_ONSET_THRESHOLD,\n        payload: threshold\n    });\n\nexport const setShowOnsets = (show) => (\n    {\n        type: SET_SHOW_ONSETS,\n        payload: show\n    });\n\nexport const setSelectedGuild = (guild) => (\n    {\n        type: SET_SELECTED_GUILD,\n        payload: guild\n    });\n\nexport const setPianoRollDragOffset = (offset) => (\n    {\n        type: SET_PIANO_ROLL_DRAG_OFFSET,\n        payload: offset\n    });\n\nexport const setPianoRollNotes = (notes) => (\n    {\n        type: SET_PIANO_ROLL_NOTES,\n        payload: notes\n    });\n\nexport const setStepAndDataDragging = (stepNumber, stepData) => (\n    {\n        type: SET_STEP_AND_DATA_DRAGGING,\n        payload: {\n            stepNumber: stepNumber,\n            stepData: stepData\n        }\n    });\n\nexport const setShowLogin= (show) => (\n    {\n        type: SET_SHOW_LOGIN,\n        payload: show\n    });\n\nexport const setSigningUp = (signingUp) => (\n    {\n        type: SET_SIGNING_UP,\n        payload: signingUp\n    });\n\nexport const setUserToken = (userName, token) => (\n    {\n        type: SET_USER_TOKEN,\n        payload: {\n            userName,\n            token\n        }\n    });\n\nexport const setPendingTransactions = (pendingTransactions) => (\n    {\n        type: SET_PENDING_TRANSACTIONS,\n        payload: pendingTransactions\n    });\n\nexport const setCommandInput = (input) => (\n    {\n        type: SET_COMMAND_INPUT,\n        payload: input\n    });\n\nexport const setCommandPrefix = (prefix) => (\n    {\n        type: SET_COMMAND_PREFIX,\n        payload: prefix\n    });\n\nexport const setViMode = (mode) => (\n    {\n        type: SET_VI_MODE,\n        payload: mode\n    });\n\nexport const setTrackWarp = (subSequenceId, trackNumber, warp) => (\n    {\n        type: SET_TRACK_WARP,\n        payload: {\n            subSequenceId,\n            trackNumber,\n            warp,\n        }\n    });\n\nexport const setSubSequenceWarps = (subSequenceId, warps) => (\n    {\n        type: SET_SUB_SEQUENCE_WARPS,\n        payload: {\n            subSequenceId,\n            warps,\n        }\n    });\n\nexport const setArrangementSelection = (start, end) => (\n    {\n        type: SET_ARRANGEMENT_SELECTION,\n        payload: {\n            start: start,\n            end: end,\n        }\n    });\n\nexport const setArrangementMouseX= (mouseX) => (\n    {\n        type: SET_ARRANGEMENT_MOUSE_X,\n        payload: mouseX\n    });\n\nexport const setArrangementAutomationToShow = (subSequenceId, type) => (\n    {\n        type: SET_ARRANGEMENT_AUTOMATION_TO_SHOW,\n        payload: {\n            subSequenceId,\n            type\n        }\n    });\n\nexport const setArrangementLooping = (looping) => (\n    {\n        type: SET_ARRANGEMENT_LOOPING,\n        payload: looping\n    });\n\nexport const setArrangementSelectedRows = (rows) => (\n    {\n        type: SET_ARRANGEMENT_SELECTED_ROWS,\n        payload: rows\n    });\n\nexport const setArrangementLoopSelected = (selected) => (\n    {\n        type: SET_ARRANGEMENT_LOOP_SELECTED,\n        payload: selected\n    });\n\nexport const setArrangementRowSelections = (selections) => (\n    {\n        type: SET_ARRANGEMENT_ROW_SELECTIONS,\n        payload: selections\n    });\n\nexport const setArrangementZoom = (zoom) => (\n    {\n        type: SET_ARRANGEMENT_ZOOM,\n        payload: zoom\n    });\n\nexport const setSelectedSequence = (id) => (\n    {\n        type: SET_SELECTED_SEQUENCE,\n        payload: id\n    });\n\nexport const setExploreMixerEffect = (effect, toggle) => (\n    {\n        type: SET_EXPLORE_MIXER_EFFECT,\n        payload: {\n            effect,\n            toggle\n        }\n    });\n\nexport const setExploreEQEffect = (type, toggle) => (\n    {\n        type: SET_EXPLORE_EQ_EFFECT,\n        payload: {\n            type,\n            toggle\n        }\n    });\n\nexport const setSelectedSendEffect = (effect) => (\n    {\n        type: SET_SELECTED_SEND_EFFECT,\n        payload: effect\n    });\n\nexport const setInstrumentTypeDragging = (type) => (\n    {\n        type: SET_INSTRUMENT_TYPE_DRAGGING,\n        payload: type\n    });\n\nexport const setTrackIsLoading = (subSequenceId, trackNumber, isLoading) => {\n    return {\n        type: SET_TRACK_IS_LOADING,\n        payload: {\n            subSequenceId,\n            trackNumber,\n            isLoading\n        }\n    };\n}\n\nexport const setPianoRollCursor = (cursor) => (\n    {\n        type: SET_PIANO_ROLL_CURSOR,\n        payload: cursor\n    });\n\nexport const setArrangementXScale = (xScale) => (\n    {\n        type: SET_ARRANGEMENT_X_SCALE,\n        payload: xScale\n    });\n\nexport const setTotalArrangementLength = (len) => (\n    {\n        type: SET_TOTAL_ARRANGEMENT_LENGTH,\n        payload: len\n    });\n\nexport const setArrangementBottomHeight = (height) => (\n    {\n        type: SET_ARRANGEMENT_BOTTOM_HEIGHT,\n        payload: height\n    });\n\nexport const setArrangementBottomMode = (mode) => (\n    {\n        type: SET_ARRANGEMENT_BOTTOM_MODE,\n        payload: mode\n    });\n\nexport const setArrangementBottomResizing = (isResizing) => (\n    {\n        type: SET_ARRANGEMENT_BOTTOM_RESIZING,\n        payload: isResizing,\n    });\n\nexport const setArrangementPatternDragging = (patternDragging, offsetX) => (\n    {\n        type: SET_ARRANGEMENT_PATTERN_DRAGGING,\n        payload: patternDragging === undefined ? undefined :\n            {\n                patternDragging,\n                offsetX\n            }\n    });\n\nexport const setArrangementPatternStartStep = (subSequenceId, patternId, startStep) => (\n    {\n        type: SET_ARRANGEMENT_PATTERN_START_STEP,\n        payload:  {\n            subSequenceId,\n            patternId,\n            startStep\n        }\n    });\n\nexport const setArrangementCursorStep = (step) => (\n    {\n        type: SET_ARRANGEMENT_CURSOR_STEP,\n        payload: step\n    });\n\nexport const setArrangementPatternResizing = (pattern, direction) => (\n    {\n        type: SET_ARRANGEMENT_PATTERN_RESIZING,\n        payload: pattern === undefined ? undefined :\n            {\n                pattern,\n                direction\n            }\n    });\n\nexport const setArrangementBrowserMode = (mode) => (\n    {\n        type: SET_ARRANGEMENT_BROWSER_MODE,\n        payload: mode\n    });\n\nexport const setSampleToExplore = (sampleToExplore) => (\n    {\n        type: SET_SAMPLE_TO_EXPLORE,\n        payload: sampleToExplore\n    });\n\nexport const setEffectRackNodePosition = (rackId, effectId, x, y) => (\n    {\n        type: SET_EFFECT_RACK_NODE_POSITION,\n        payload: {\n            rackId,\n            effectId,\n            x,\n            y\n        },\n    });\n\nexport const setAnnotationDragging = (dragging) => (\n    {\n        type: SET_ANNOTATION_DRAGGING,\n        payload: dragging\n    });\n\nexport const setTrackAutomationDevice = (trackId, device) => (\n    {\n        type: SET_TRACK_AUTOMATION_DEVICE,\n        payload: {\n            trackId,\n            device\n        }\n    });\n\nexport const setTrackAutomationRackDevice = (trackId, device) => (\n    {\n        type: SET_TRACK_AUTOMATION_RACK_DEVICE,\n        payload: {\n            trackId,\n            device\n        }\n    });\n\nexport const setTrackAutomationSubDevice = (trackId, subDevice) => (\n    {\n        type: SET_TRACK_AUTOMATION_SUB_DEVICE,\n        payload: {\n            trackId,\n            subDevice \n        }\n    });\n\nexport const setTrackAutomationParameter = (trackId, parameter) => (\n    {\n        type: SET_TRACK_AUTOMATION_PARAMETER,\n        payload: {\n            trackId,\n            parameter\n        }\n    });\n\nexport const setShowAutomation = (show) => (\n    {\n        type: SET_SHOW_AUTOMATION,\n        payload: {\n            show,\n        }\n    });\n\nexport const setParameterAutomations = (parameter, automations, scheduler) => (\n    {\n        type: SET_PARAMETER_AUTOMATIONS,\n        payload: {\n            parameter,\n            automations,\n            scheduler\n        }\n    });\n\nexport const setActionsRemaining = (actionsRemaining) => (\n    {\n        type: SET_ACTIONS_REMAINING,\n        payload: actionsRemaining\n    });\n\nexport const setTimeRemaining = (timeRemaining) => (\n    {\n        type: SET_TIME_REMAINING,\n        payload: timeRemaining\n    });\n\nexport const setShowPianoRoll = (showPianoRoll) => (\n    {\n        type: SET_SHOW_PIANO_ROLL,\n        payload: showPianoRoll\n    });\n\nexport const setSelectedRackSubTrack  = (trackId, track) => (\n    {\n        type: SET_SELECTED_RACK_SUB_TRACK,\n        payload: {\n            trackId,\n            track\n        }\n    });\n\nexport const deleteAutomationsForParameters = (parameters) => (\n    {\n        type: DELETE_AUTOMATIONS_FOR_PARAMETERS,\n        payload: parameters\n    });\n\nexport const deleteAutomationsForEngine = (engineId) => (\n    {\n        type: DELETE_AUTOMATIONS_FOR_ENGINE,\n        payload: engineId\n    });\n\nexport const setAutomationGuidePoint = (id, guidePoint) => (\n    {\n        type: SET_AUTOMATION_GUIDE_POINT,\n        payload: {id, guidePoint}\n    });\n\nexport const setAutomationPointDragging  = (id, point) => (\n    {\n        type: SET_AUTOMATION_POINT_DRAGGING,\n        payload: {id, point},\n    });\n\nexport const setAutomationPointHasMoved  = (id, hasMoved) => (\n    {\n        type: SET_AUTOMATION_POINT_HAS_MOVED,\n        payload: {id, hasMoved},\n    });\n\nexport const setAutomationPointHovered  = (id, pt) => (\n    {\n        type: SET_AUTOMATION_POINT_HOVERED,\n        payload: {id, pt}\n    });\n\nexport const setTrackToConvert = (track) => ({\n        type: SET_TRACK_TO_CONVERT,\n        payload: track\n    });\n\nexport const setAutomationSelection = (id, selection) => ({\n    type: SET_AUTOMATION_SELECTION,\n    payload: {id, selection}\n});\n\nexport const setAutomationPointsSelected = (id, points) => ({\n    type: SET_AUTOMATION_POINTS_SELECTED,\n    payload: {id, points}\n});\n\nexport const setExplorePersonSelected = (person) => ({\n        type: SET_EXPLORE_PERSON_SELECTED,\n        payload: person\n    });\n\nexport const setExploreAllSequences = (sequences) => ({\n        type: SET_EXPLORE_ALL_SEQUENCES,\n        payload: sequences\n    });\n\nexport const setRecordingExploreMix = (isRecording) => ({\n        type: SET_RECORDING_EXPLORE_MIX,\n        payload: isRecording\n    });\n\nexport const setWorksLoaded = (worksLoaded) => ({\n    type: SET_WORKS_LOADED,\n    payload: worksLoaded\n});\n\nexport const setWorkTranspose = (sequenceId, transpose) => ({\n    type: SET_WORK_TRANSPOSE,\n    payload: {\n        sequenceId,\n        transpose\n    }\n});\n\nexport const setWorkVolume = (sequenceId, volume) => ({\n    type: SET_WORK_VOLUME,\n    payload: {\n        sequenceId,\n        volume\n    }\n});\n\nexport const setExploreMixLoaded = (mix) => ({\n    type: SET_EXPLORE_MIX_LOADED,\n    payload: mix\n});\n\nexport const setIsMacroMapping = (isMapping) => ({\n    type: SET_IS_MACRO_MAPPING,\n    payload: isMapping\n});\n\nexport const setParameterToMap = (parameter) => ({\n    type: SET_PARAMETER_TO_MAP,\n    payload: parameter\n});\n\nexport const setMixColorValue = (id, value) => ({\n    type: SET_MIX_COLOR_VALUE,\n    payload: {id, value}\n});\n\nexport const setMixHasEdits = (hasEdits) => ({\n    type: SET_MIX_HAS_EDITS,\n    payload: hasEdits\n});\n\nexport const setScriptVariables = (id, variables) => ({\n    type: SET_SCRIPT_VARIABLES,\n    payload: {\n        id, variables\n    }\n});\n\nexport const setExploreOption = (opt) => ({\n    type: SET_EXPLORE_OPTION,\n    payload: opt\n});\n\nexport const setAnnotationsView = (work) => ({\n    type: SET_ANNOTATIONS_VIEW,\n    payload: work\n});\n\nexport const setExploreToast = (toast) => ({\n    type: SET_EXPLORE_TOAST,\n    payload: toast\n});\n\nexport const setParameterSliderDown = (param) => ({\n    type: SET_PARAMETER_SLIDER_DOWN,\n    payload: param\n});\n\nexport const moveEngineAutomations = (oldId, newId) => ({\n    type: MOVE_ENGINE_AUTOMATIONS,\n    payload: {oldId, newId}\n});\n\nexport const setSequenceLoadingProgress = (sequenceId, progress) => ({\n    type: SET_SEQUENCE_LOADING_PROGRESS,\n    payload: {sequenceId, progress}\n});\n\nexport const setTrackBrowsedSamples = (trackId, samples) => ({\n    type: SET_TRACK_BROWSED_SAMPLES,\n    payload: {trackId, samples}\n});\n\nexport const setTrackBrowsedPresets = (trackId, presets) => ({\n    type: SET_TRACK_BROWSED_PRESETS,\n    payload: {trackId, presets}\n});\n\nexport const setBottomToolbarOffset = (off) => ({\n    type: SET_BOTTOM_TOOLBAR_OFFSET,\n    payload: off\n});\n\nexport const setTrackUpdates = (updates) => ({\n    type: SET_TRACK_UPDATES,\n    payload: updates\n});\n\nexport const setIsTranscribing = (isTranscribing) => ({\n    type: SET_IS_TRANSCRIBING,\n    payload: isTranscribing\n});\n\nexport const setSampleTooltip = (sampleInfo) => ({\n    type: SET_SAMPLE_TOOLTIP,\n    payload: sampleInfo\n});\n\nexport const setSelectedFreeze = (id) => ({\n    type: SET_SELECTED_FREEZE,\n    payload: id\n});\n\nexport const setTrackLengthMode = (mode) => ({\n    type: SET_TRACK_LENGTH_MODE,\n    payload: mode\n});\n\nexport const setTrackLengthChoice = (length) => ({\n    type: SET_TRACK_LENGTH_CHOICE,\n    payload: length\n});\n\nexport const setFreezeDragging = (freeze) => ({\n    type: SET_FREEZE_DRAGGING,\n    payload: freeze\n});\n\nexport const setFreezeColumnSamples = (trackId, column, samples) => ({\n    type: SET_FREEZE_COLUMN_SAMPLES,\n    payload: {\n        trackId,\n        column,\n        samples\n    }\n});\n\nexport const setUploadingFile = (f) => ({\n    type: SET_UPLOADING_FILE,\n    payload: f\n});\n\nexport const setGroupCollapsed = (subSequenceId, groupNumber, collapsed) => ({\n    type: SET_GROUP_COLLAPSED,\n    payload: {\n        subSequenceId,\n        groupNumber,\n        collapsed\n    }\n});\n\nexport const setSelectedMixEffect = (subSequenceId, trackNumber, groupNumber, effectType, effect) => ({\n    type: SET_SELECTED_MIX_EFFECT,\n    payload: {\n        subSequenceId,\n        trackNumber,\n        groupNumber,\n        effectType,\n        effect\n    }\n});\n\nexport const setSamplesDragging = (samples) => ({\n    type: SET_SAMPLES_DRAGGING,\n    payload: samples\n});\n\nexport const setDisplayResolution = (resolution) => ({\n    type: SET_DISPLAY_RESOLUTION,\n    payload: resolution\n});\n\nexport const setOfflineEngine = (offlineEngine) => ({\n    type: SET_OFFLINE_ENGINE,\n    payload: offlineEngine\n});\n\nexport const setCurrentExportInfo = (name, index, total) => ({\n    type: SET_CURRENT_EXPORT_INFO,\n    payload: name === undefined ?\n        undefined :\n        {\n            name, index, total\n        }\n});\n\nexport const setMixTrackDragging = (track) => ({\n    type: SET_MIX_TRACK_DRAGGING,\n    payload: track\n});\n\nexport const setGroupTracks = (groupId, tracks) => ({\n    type: SET_GROUP_TRACKS,\n    payload: {\n        groupId,\n        tracks\n    }\n});\n\nexport const setLoadingText = (loadingText) => ({\n    type: SET_LOADING_TEXT,\n    payload: loadingText\n});\n\nexport const setTrackEnvelopes = (id, envelopes) => ({\n    type: SET_TRACK_ENVELOPES,\n    payload:  {\n        id, envelopes \n    }\n});\n\nexport const setCopiedNodesForRack = (nodes) => ({\n    type: SET_COPIED_NODES_FOR_RACK,\n    payload: nodes\n});\n\nexport const setLastMidiCCPlayed = (midiCC) => ({\n    type: SET_LAST_MIDI_CC_PLAYED,\n    payload: midiCC\n});\n\nexport const setArrangementMouseDownX = (mouseX) => ({\n    type: SET_ARRANGEMENT_MOUSE_DOWN_X,\n    payload: mouseX\n});\n\nexport const setTrackerParameterToEdit= (parameter) => ({\n    type: SET_TRACKER_PARAMETER_TO_EDIT,\n    payload: parameter\n});\n\nexport const setTracksToHide = (tracks) => ({\n    type: SET_TRACKS_TO_HIDE,\n    payload: tracks\n});\n\nexport const setSelectedPalette = (trackId, palette) => ({\n    type: SET_SELECTED_PALETTE,\n    payload: {trackId, palette}\n});\n\nexport const setSequencedPalette = (trackId, palette) => ({\n    type: SET_SEQUENCED_PALETTE,\n    payload: {trackId, palette}\n});\n\n\nexport const setProjectDragging = (project) => ({\n    type: SET_PROJECT_DRAGGING,\n    payload: project\n});\n\nexport const setExploreUnpublished = (changed) => ({\n    type: SET_EXPLORE_UNPUBLISHED,\n    payload: changed\n});\n\nexport const setQuickAddSearchText = (text) => ({\n    type: SET_QUICK_ADD_SEARCH_TEXT,\n    payload: text\n});\n\nexport const setShowTrackFreezeHistory = (id, show) => ({\n    type: SET_SHOW_TRACK_FREEZE_HISTORY,\n    payload: {id, show}\n});\n\nexport const setSelectedMidiTrack = (track) => ({\n    type: SET_SELECTED_MIDI_TRACK,\n    payload: track\n});\n\nexport const setSelectedTrackSlice = (track, slice) => ({\n    type: SET_SELECTED_TRACK_SLICE,\n    payload: {\n        track, slice\n    }\n});\n\nexport const setCirklonParameterSelected = (track, parameter) => ({\n    type: SET_CIRKLON_PARAMETER_SELECTED,\n    payload: {\n        track,\n        parameter\n    }\n});\n\nexport const setCirklonMode = (track, mode) => ({\n    type: SET_CIRKLON_MODE,\n    payload: {\n        track,\n        mode\n    }\n});\n\nexport const setNotesDown = (notes) => ({\n    type: SET_NOTES_DOWN,\n    payload: notes\n\n});\n\nexport const setScenes = (scenes) => ({\n    type: SET_SCENES,\n    payload: scenes\n});\n\nexport const setCurrentScene = (scene) => ({\n    type: SET_CURRENT_SCENE,\n    payload: scene\n});\n\nexport const setShowSettings = (show) => ({\n    type: SET_SHOW_SETTINGS,\n    payload: show\n});\n\nexport const setWallpaper  = (wallpaper) => ({\n    type: SET_WALLPAPER,\n    payload: wallpaper\n});\n\nexport const setAnimateWallpaper  = (wallpaper) => ({\n    type: SET_ANIMATE_WALLPAPER,\n    payload: wallpaper\n});\n\nexport const setExpandedProject = (project) => ({\n    type: SET_EXPANDED_PROJECT,\n    payload: project\n});\n\nexport const setAccumulatorParameterSelected = (param) => ({\n    type: SET_ACCUMULATOR_PARAMETER_SELECTED,\n    payload: param\n});\n\nexport const setPlaneMapping = (plane) => ({\n    type: SET_PLANE_MAPPING,\n    payload: plane\n});\n\nexport const setTrackPresetSaving = (track) => ({\n    type: SET_TRACK_PRESET_SAVING,\n    payload: track\n});\n\nexport const setSampleTagDragging = (tag) => ({\n    type: SET_SAMPLE_TAG_DRAGGING,\n    payload: tag\n});\n\nexport const setParameterMixAutomations = (parameter, automations, scheduler) => ({\n    type: SET_PARAMETER_MIX_AUTOMATIONS,\n    payload: {\n        parameter,\n        automations,\n        scheduler\n    }\n});\n\nexport const setShowArrangementTracks = (subSequenceId, show) => ({\n    type: SET_SHOW_ARRANGEMENT_TRACKS,\n    payload: {\n        subSequenceId,\n        show\n    }\n});\n\nexport const setArrangementPatternSelected = (pattern) => ({\n    type: SET_ARRANGEMENT_PATTERN_SELECTED,\n    payload: pattern\n});\n\nexport const setSidebarSearchInput = (element) => ({\n    type: SET_SIDEBAR_SEARCH_INPUT,\n    payload: element\n});\n\nexport const setShowArrangementSearcher = (show) => ({\n    type: SET_SHOW_ARRANGEMENT_SEARCHER,\n    payload: show\n});\n\nexport const setExploreWork = (work) => ({\n    type: SET_EXPLORE_WORK,\n    payload: work\n});\n\nexport const setCreatingNewPack = (creating) => ({\n    type: SET_CREATING_NEW_PACK,\n    payload: creating\n});\n\nexport const setPackWindowPosition = (x,y) => ({\n    type: SET_PACK_WINDOW_POSITION,\n    payload: {x,y}\n});\n\nexport const setDraggingPackWindow = (dragging) => ({\n    type: SET_DRAGGING_PACK_WINDOW,\n    payload: dragging\n});\n\nexport const setPackToEdit = (pack) => ({\n    type: SET_PACK_TO_EDIT,\n    payload: pack\n});\n\nexport const setIsManagingGuilds = (s) => ({\n    type: SET_IS_MANAGING_GUILDS,\n    payload: s\n});\n\nexport const newStepGroup = (g) => ({\n    type: NEW_STEP_GROUP,\n    payload: g\n});\n\nexport const setStepsGroupMode = (g) => ({\n    type: SET_STEPS_GROUP_MODE,\n    payload: g\n});\n\nexport const setTransformationEdgeDragging= (tr) => ({\n    type: SET_TRANSFORMATION_EDGE_DRAGGING,\n    payload: tr\n});\n\nexport const setShowFormantEffect = (formant) => ({\n    type: SET_SHOW_FORMANT_EFFECT,\n    payload: formant\n});\n\nexport const setShowingFormants = (show) => ({\n    type: SET_SHOWING_FORMANTS,\n    payload: show\n});\n\nexport const setPulledEffects = (effects) => ({\n    type: SET_PULLED_EFFECTS,\n    payload: effects\n});\n\nexport const setLoopsToFreeze = (loops) => ({\n    type: SET_LOOPS_TO_FREEZE,\n    payload: loops\n});\n\nexport const setParameterMinMax = (bulk) => ({\n    type: SET_PARAMETER_MIN_MAX,\n    payload: bulk\n});\n\nexport const setCurrentSoundInList = (number) => ({\n    type: SET_CURRENT_SOUND_IN_LIST,\n    payload: number\n});\n\nexport const setShowingSoundList = (show) => ({\n    type: SET_SHOWING_SOUND_LIST,\n    payload: show\n});\n\nexport const setCurrentTagInList = (number) => ({\n    type: SET_CURRENT_TAG_IN_LIST,\n    payload: number\n});\n\nexport const setLinkingEffects = (effect, name) => ({\n    type: SET_LINKING_EFFECTS,\n    payload: effect ? {\n        effect,\n        name\n    } : undefined\n});\n\nexport const setPackSelected = (number) => ({\n    type: SET_PACK_SELECTED,\n    payload: number\n});\n\nexport const setSampleExplorerSelected = (f) => ({\n    type: SET_SAMPLE_EXPLORER_SELECTED,\n    payload: f\n});\n\nexport const setPianoRollSlide = (f) => ({\n    type: SET_PIANO_ROLL_SLIDE,\n    payload: f\n});\n\nexport const setMaximizeExplorer = (f) => ({\n    type: SET_MAXIMIZE_EXPLORER,\n    payload: f\n});\n\nexport const setPads = (id, pads) => ({\n    type: SET_PADS,\n    payload: {\n        id, pads\n    }\n});\n\nexport const setPadSlots = (id, slots) => ({\n    type: SET_PAD_SLOTS,\n    payload: {\n        id, slots\n    }\n});\n\nexport const setPadHovered = (f) => ({\n    type: SET_PAD_HOVERED,\n    payload: f\n});\n\nexport const setWaveformShowing = (f) => ({\n    type: SET_WAVEFORM_SHOWING,\n    payload: f\n});\n\nexport const setTrackDragging = (f) => ({\n    type: SET_TRACK_DRAGGING,\n    payload: f\n});\n\nexport const setHideMixer = (h) => ({\n    type: SET_HIDE_MIXER,\n    payload: h\n});\n\nexport const setSourceExploring = (h) => ({\n    type: SET_SOURCE_EXPLORING,\n    payload: h\n});\n\nexport const setYearExploring = (year) => ({\n    type: SET_YEAR_EXPLORING,\n    payload: year\n});\n\nexport const setPullablePartDragging = (part) => ({\n    type: SET_PULLABLE_PART_DRAGGING,\n    payload: part\n});\n\nexport const setPadsExpand = (id) => ({\n    type: SET_PADS_EXPAND,\n    payload: id\n});\n\nexport const setSequencers = (id, sequencers) => ({\n    type: SET_SEQUENCERS,\n    payload: {id, sequencers}\n});\n\nexport const setSequencerTracks = (id, tracks) => ({\n    type: SET_SEQUENCER_TRACKS,\n    payload: {id, tracks}\n});\n\nexport const setPlaneMacros = (id, macros) => ({\n    type: SET_PLANE_MACROS,\n    payload: {id, macros}\n});\n\nexport const setWindowPosition = (id, position) => ({\n    type: SET_WINDOW_POSITION,\n    payload: {id, position}\n});\n\nexport const setPresentationWindowPosition = (id, position) => ({\n    type: SET_PRESENTATION_WINDOW_POSITION,\n    payload: {id, position}\n});\n\nexport const setPadEffects = (id, effects) => ({\n    type: SET_PAD_EFFECTS,\n    payload: {id, effects}\n});\n\nexport const setDrawingPadEdge = (id, edge) => ({\n    type: SET_DRAWING_PAD_EDGE,\n    payload: {id, edge}\n});\n\nexport const setSelectedPadEdge  = (edge) => ({\n    type: SET_SELECTED_PAD_EDGE,\n    payload: edge\n});\n\nexport const setBulkEffectsCollapsed = (x) => ({\n    type: SET_BULK_EFFECTS_COLLAPSED,\n    payload: x\n});\n\nexport const setSelectedPulledElements = (x) => ({\n    type: SET_SELECTED_PULLED_ELEMENTS,\n    payload: x\n});\n\nexport const setBulkWindowPositions = (bulk) => ({\n    type: SET_BULK_WINDOW_POSITIONS,\n    payload: bulk\n});\n\nexport const setBulkPresentationWindowPositions = (bulk) => ({\n    type: SET_BULK_PRESENTATION_WINDOW_POSITIONS,\n    payload: bulk\n});\n\nexport const setAllEffectPatternLocks = (bulk) => ({\n    type: SET_ALL_EFFECT_PATTERN_LOCKS,\n    payload: bulk\n});\n\nexport const setModuleCollapsed = (id, collapsed) => ({\n    type: SET_MODULE_COLLAPSED,\n    payload: {\n        id, collapsed\n    }\n});\n\nexport const setTrackMidiEffects = (id, effects) => ({\n    type: SET_TRACK_MIDI_EFFECTS,\n    payload: {\n        id, effects\n    }\n});\n\nexport const setEffectStarred = (id, starred) => ({\n    type: SET_EFFECT_STARRED,\n    payload: {\n        id, starred\n    }\n});\n\nexport const setBulkEffectsStarred = (bulk) => ({\n    type: SET_BULK_EFFECTS_STARRED,\n    payload: bulk\n});\n\nexport const setBulkModulesCollapsed = (bulk) => ({\n    type: SET_BULK_MODULES_COLLAPSED,\n    payload: bulk\n});\n\nexport const deleteTrackId = (id) => ({\n    type: DELETE_TRACK_ID,\n    payload: id\n});\n\nexport const setShowingContextMenu = (show) => ({\n    type: SET_SHOWING_CONTEXT_MENU,\n    payload: show\n});\n\nexport const setHigherOrderMatrix = (matrix) => ({\n    type: SET_HIGHER_ORDER_MATRIX,\n    payload: matrix\n});\n\nexport const setModuleColor = (id, color) => ({\n    type: SET_MODULE_COLOR,\n    payload: {\n        id, color\n    }\n});\n\nexport const setModulesRouting = (inputModules, outputModules) => ({\n    type: SET_MODULES_ROUTING,\n    payload: {inputModules, outputModules}\n});\n\nexport const setHigherOrderStepsSelected = (steps) => ({\n    type: SET_HIGHER_ORDER_STEPS_SELECTED,\n    payload: steps\n});\n\nexport const setOrientationRoutings = (routings) => ({\n    type: SET_ORIENTATION_ROUTINGS,\n    payload: routings\n});\n\nexport const setShowHigherOrderSequencer = (show) => ({\n    type: SET_SHOW_HIGHER_ORDER_SEQUENCER,\n    payload: show\n});\n\nexport const setPlanar = (track, planar) => ({\n    type: SET_PLANAR,\n    payload: {track, planar}\n});\n\nexport const setPlanarGradientColor = (id, color) => ({\n    type: SET_PLANAR_GRADIENT_COLOR,\n    payload: {id, color}\n});\n\nexport const setPlanarOpacity = (id, opacity) => ({\n    type: SET_PLANAR_OPACITY,\n    payload: {id, opacity}\n});\n\nexport const setModuleSize = (id, size) => ({\n    type: SET_MODULE_SIZE,\n    payload: {id, size}\n});\n\nexport const setInletConnections = (id, connections) => ({\n    type: SET_INLET_CONNECTIONS,\n    payload: {id, connections}\n});\n\nexport const setZObjects = (id, objects) => ({\n    type: SET_ZOBJECTS,\n    payload: {id, objects}\n});\n\nexport const setZMessages = (id, messages) => ({\n    type: SET_ZMESSAGES,\n    payload: {id, messages}\n});\n   \nexport const setBackgroundColor = (color) => ({\n    type: SET_BACKGROUND_COLOR,\n    payload: color\n});\n\nexport const setViewableSubPatches = (subpatches) => ({\n    type: SET_VIEWABLE_SUBPATCHES,\n    payload: subpatches\n});\n\nexport const setViewableZObjects = (zobjects) => ({\n    type: SET_VIEWABLE_ZOBJECTS,\n    payload: zobjects\n});\n\nexport const setSelectedZObject = (obj) => ({\n    type: SET_SELECTED_ZOBJECT,\n    payload: obj\n});\n\nexport const setJakiGrid = (id, grid) => ({\n    type: SET_JAKI_GRID,\n    payload: {id, grid}\n});\n\nexport const setZObjectTypeDragging = (type) => ({\n    type: SET_ZOBJECT_TYPE_DRAGGING,\n    payload: type\n});\n\nexport const setUXLocked = (locked) => ({\n    type: SET_UX_LOCKED,\n    payload: locked\n});\n\nexport const setMintedTokens = (tokens) => ({\n    type: SET_MINTED_TOKENS,\n    payload: tokens\n});\n\nexport const setHicDialog = (data) => ({\n    type: SET_HIC_DIALOG,\n    payload: data\n});\n\nexport const setIsPreparingNFT = (flag) => ({\n    type: SET_IS_PREPARING_NFT,\n    payload: flag\n});\n\nexport const setFullScreenZObject = (zobject) => ({\n    type: SET_FULL_SCREEN_ZOBJECT,\n    payload: zobject\n});\n\nexport const setMainScrollRef = (ref) => ({\n    type: SET_MAIN_SCROLL_REF,\n    payload: ref\n});\n\nexport const setViewportPosition = (position) => ({\n    type: SET_VIEWPORT_POSITION,\n    payload: position\n});\n\nexport const setSidebarsShowing= (s) => ({\n    type: SET_SIDEBARS_SHOWING,\n    payload: s\n});\n\nexport const setShowPadSequencer= (s) => ({\n    type: SET_SHOW_PAD_SEQUENCER,\n    payload: s\n});\n\nexport const setShowProjectsModal= (s) => ({\n    type: SET_SHOW_PROJECTS_MODAL,\n    payload: s\n});\n\nexport const setShowSearchWindow = (s) => ({\n    type: SET_SHOW_SEARCH_WINDOW,\n    payload: s\n});\n\n\nexport const setStepParameterSelected = (s) => ({\n    type: SET_STEP_PARAMETER_SELECTED,\n    payload: s\n});\n\nexport const setShowTrackInstrument = (s) => ({\n    type: SET_SHOW_TRACK_INSTRUMENT,\n    payload: s\n});\n\nexport const setShowModulators = (s) => ({\n    type: SET_SHOW_MODULATORS,\n    payload: s\n});\n\nexport const setCableSegmentation = (id, segmentation) => ({\n    type: SET_CABLE_SEGMENTATION,\n    payload: {\n        id,\n        segmentation\n    }\n});\n\nexport const setCableSegmentations = (segmentations) => ({\n    type: SET_CABLE_SEGMENTATIONS,\n    payload: segmentations\n});\n\nexport const setUXLockObject= (id, lock) => ({\n    type: SET_UX_LOCK_OBJECT,\n    payload: {id, lock}\n});\n\nexport const setUXLockObjects = ( locks) => ({\n    type: SET_UX_LOCK_OBJECTS,\n    payload: locks\n});\n\nexport const setUXHideObject = ( id, hide) => ({\n    type: SET_UX_HIDE_OBJECT,\n    payload: {id, hide}\n});\n\nexport const setUXHideObjects = ( locks) => ({\n    type: SET_UX_HIDE_OBJECTS,\n    payload: locks\n});\n\nexport const setZoraDialog = (zora) => ({\n    type: SET_ZORA_DIALOG,\n    payload: zora\n});\n\nexport const setZObjectInputText = (txt) => ({\n    type: SET_ZOBJECT_INPUT_TEXT,\n    payload: txt\n});\n\nexport const setShowEditorBottom = (show) => ({\n    type: SET_SHOW_EDITOR_BOTTOM,\n    payload: show\n});\n\nexport const setMintingProgress = (progress) => ({\n    type: SET_MINTING_PROGRESS,\n    payload: progress\n});\n\nexport const setNewZoraTokenId  = (tokenId) => ({\n    type: SET_NEW_ZORA_TOKEN_ID,\n    payload: tokenId\n});\n\nexport const setTransactionUponLogin = (transaction) => ({\n    type: SET_TRANSACTION_UPON_LOGIN,\n    payload: transaction\n});\n\nexport const setKeyboardContext = (object) => ({\n    type: SET_KEYBOARD_CONTEXT,\n    payload: object\n});\n\nexport const setPadFXMode = (id, mode) => ({\n    type: SET_PAD_FX_MODE,\n    payload: {id, mode}\n});\n\nexport const setJakiGridMode = (mode) => ({\n    type: SET_JAKI_GRID_MODE,\n    payload: mode\n});\n\nexport const setObjectStyling = (id, styling) => ({\n    type: SET_OBJECT_STYLING,\n    payload: {\n        id, styling\n    }\n});\n\nexport const setSelectedPlanarParameters = (id, selected) => ({\n    type: SET_SELECTED_PLANAR_PARAMETERS,\n    payload: {\n        id, selected\n    }\n});\n\nexport const setFilteredPlanarParameters = (id, filtered) => ({\n    type: SET_FILTERED_PLANAR_PARAMETERS,\n    payload: {\n        id, filtered\n    }\n});\n\nexport const setPlanarMacroToShow = (id, macro) => ({\n    type: SET_PLANAR_MACRO_TO_SHOW,\n    payload: {\n        id, macro\n    }\n});\n\nexport const setPlanarRegionMode = (id, isRegionMode) => ({\n    type: SET_PLANAR_REGION_MODE,\n    payload: {\n        id, isRegionMode\n    }\n});\n\nexport const setGroupPresetsByPacks  = (groupBy) => ({\n    type: SET_GROUP_PRESETS_BY_PACKS,\n    payload: groupBy\n});\n\nexport const setPianoRolllLeftSpace = (leftSpace) => ({\n    type: SET_PIANO_ROLL_LEFT_SPACE,\n    payload: leftSpace\n});\n\nexport const setZObjectSize = (id, size) => ({\n    type: SET_ZOBJECT_SIZE,\n    payload: {id, size}\n});\n\nexport const setSecondaryZObject = (zobject) => ({\n    type: SET_SECONDARY_ZOBJECT,\n    payload: zobject\n});\n\nexport const clearDragDrop = () => ({\n    type: CLEAR_DRAG_DROP,\n    payload: {}\n});\n\nexport const setSamplesToSave = (samples) => ({\n    type: SET_SAMPLES_TO_SAVE,\n    payload: samples\n});\n\nexport const setEditorPadding = (x,y) => ({\n    type: SET_EDITOR_PADDING,\n    payload: {x,y}\n});\n\nexport const setEdgesPadding = (x,y) => ({\n    type: SET_EDGES_PADDING,\n    payload: {x,y}\n});\n\nexport const setEdgesSize = (width, height) => ({\n    type: SET_EDGES_SIZE,\n    payload: {\n        width,\n        height}\n});\n\nexport const setLeftSidebarWidth = (width) => ({\n    type: SET_LEFT_SIDEBAR_WIDTH,\n    payload: width\n        \n});\n\nexport const setMovingPadEdge = (edge) => ({\n    type: SET_MOVING_PAD_EDGE,\n    payload: edge\n});\n\nexport const setDocumentationSubSection = (sub) => ({\n    type: SET_DOCUMENTATION_SUB_SECTION,\n    payload: sub\n});\n\nexport const setRightSidebarOption = (sub) => ({\n    type: SET_RIGHT_SIDEBAR_OPTION,\n    payload: sub\n});\n\n\nexport const setSelectedFMEnvelopeType = (type) => ({\n    type: SET_SELECTED_FM_ENVELOPE_TYPE,\n    payload: type\n});\n\nexport const setSelectedFMOperatorDetails  = (type) => ({\n    type: SET_SELECTED_FM_OPERATOR_DETAILS,\n    payload: type\n});\n\nexport const setSelectedFMFormant  = (type) => ({\n    type: SET_SELECTED_FM_FORMANT,\n    payload: type\n});\n\nexport const setShowSaveModal = (show) => ({\n    type: SET_SHOW_SAVE_MODAL,\n    payload: show\n});\n\nexport const setZObjectFlashing = (id, timestamp) => ({\n    type: SET_ZOBJECT_FLASHING,\n    payload: {\n        id,\n        timestamp\n    }\n});\n\nexport const setSampleDownloadProgress = (downloaded, total) => ({\n    type: SET_SAMPLE_DOWNLOAD_PROGRESS,\n    payload: {\n        downloaded,\n        total\n    }\n});\n\nexport const setPresetSaved = (preset) => ({\n    type: SET_PRESET_SAVED,\n    payload: preset\n});\n\nexport const setCompletelyDoneLoading = (load) => ({\n    type: SET_COMPLETELY_DONE_LOADING,\n    payload: load\n});\n\nexport const setPluginToSave = (zobject) => ({\n    type: SET_PLUGIN_TO_SAVE,\n    payload: zobject\n});\n\n\nexport const setShowPlugins = (show) => ({\n    type: SET_SHOW_PLUGINS,\n    payload: show\n});\n\nexport const setPluginsLoaded = (plugins) => ({\n    type: SET_PLUGINS_LOADED,\n    payload: plugins\n});\n\nexport const setShowPluginsPane = (show) => ({\n    type: SET_SHOW_PLUGINS_PANE,\n    payload: show\n});\n\nexport const setPluginsPaneHeight = (h) => ({\n    type: SET_PLUGINS_PANE_HEIGHT,\n    payload: h\n});\n\nexport const setDroppedSamples = (h) => ({\n    type: SET_DROPPED_SAMPLES,\n    payload: h\n});\n\nexport const setShowFormantPresets= (show) => ({\n    type: SET_SHOW_FORMANT_PRESETS,\n    payload: show\n});\n\nexport const setZObjectBackground = (zobject) => ({\n    type: SET_ZOBJECT_BACKGROUND,\n    payload: zobject\n});\n\nexport const setPresentationMode = (mode) => ({\n    type: SET_PRESENTATION_MODE,\n    payload: mode\n});\n\nexport const setShowFreezeModal = (show) => ({\n    type: SET_SHOW_FREEZE_MODAL,\n    payload: show\n});\n\nexport const setTheme = (theme) => ({\n    type: SET_THEME,\n    payload: theme\n});\n\nexport const setShowThemeGrid = (show) => ({\n    type: SET_SHOW_THEME_GRID,\n    payload: show\n});\n\n\nexport const setRecentlyAddedSounds = (samples) => ({\n    type: SET_RECENTLY_ADDED_SOUNDS,\n    payload: samples\n});\n\nexport const setZObjectTooltip = (id, position, text) => ({\n    type: SET_ZOBJECT_TOOLTIP,\n    payload: {\n        id,\n        position,\n        text\n    }\n});\n\nexport const setZObjectsStack = (stack) => ({\n    type: SET_ZOBJECTS_STACK,\n    payload: stack\n});\n\nexport const setZObjectContextMenu = (id, position, zobject) => ({\n    type: SET_ZOBJECT_CONTEXT_MENU,\n    payload: {\n        id,\n        position,\n        zobject\n    }\n});\n\nexport const setObjectDragging = (object) => ({\n    type: SET_OBJECT_DRAGGING,\n    payload: object\n});\n\nexport const setEnableRollViewer = (enable) => ({\n    type: SET_ENABLE_ROLL_VIEWER,\n    payload: enable\n});\n\nexport const setZObjectModal = (modal) => ({\n    type: SET_ZOBJECT_MODAL,\n    payload: modal\n});\n\nexport const setZObjectProgressBar = (text) => ({\n    type: SET_ZOBJECT_PROGRESSBAR,\n    payload: text\n});\n\nexport const setShowPlaylistMenu = (show) => ({\n    type: SET_SHOW_PLAYLIST_MENU,\n    payload: show\n});\n\nexport const setCurrentPlaylistSong = (song) => ({\n    type: SET_CURRENT_PLAYLIST_SONG,\n    payload: song\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","export const SET_RESOLUTION = 1;\nexport const SET_SEQUENCER_ENGINE = 2;\nexport const SET_VIEW_MODE = 3;\nexport const SET_DETAILS_VIEW = 4;\nexport const SET_DECENTRALIZED = 5;\nexport const SET_SELECTOR_MODE = 6;\nexport const SET_NUMBER_PATTERNS= 7;\nexport const SET_CURRENT_PATTERN = 8;\nexport const SET_CURRENT_STEP = 9;\nexport const SET_CURRENT_GLOBAL_STEP = 10;\n\nexport const SET_SAMPLE = 11;\n\nexport const START_TRIGGER_TRACK = 12;\nexport const STOP_TRIGGER_TRACK = 13;\n\nexport const TOGGLE_TRACK = 14;\nexport const UNTOGGLE_TRACK = 15;\n\nexport const SET_SAMPLE_PACK = 16;\n\nexport const ADD_SAMPLE_PACK = 17;\nexport const REMOVE_SAMPLE_PACK = 18;\n\nexport const DRAG_SAMPLE = 19;\nexport const DRAG_EFFECT = 20;\nexport const DRAG_PATTERN = 21;\n\n// for when the user drags across steps to quickly toggle them,\n// either true (the mouse is currently clicking and dragging) or\n// false (the mouse is not clicking right now)\nexport const MOUSE_DOWN = 22;\n\n// when MOUSE_DOWN is true, this is used to tell you whether it should\n// toggle the step should toggle on or off\nexport const DRAG_TOGGLE = 23;\nexport const DRAG_STEP_TRANSPOSE = 24;\n\n// true when the \"command\" key is held down, this mode allows\n// people to drag the durations of steps\nexport const COMMAND_DOWN = 25;\n\nexport const TRACK_RECORDING = 26;\nexport const TRACK_PREPARING_TO_RECORD = 27;\n\nexport const SET_TRACK_STEPS = 28;\nexport const UPDATE_STEPS_FOR_ALL_TRACKS = 29;\nexport const SET_ALL_TRACK_STEPS = 30;\nexport const SET_TRACK_FILLS = 31;\nexport const SET_TRACK_PIANO_ROLL_STEPS = 32;\n\nexport const SET_SELECTED_TRACK = 33;\nexport const SET_SELECTED_GROUP = 34;\n\nexport const SET_TRACK_VOLUME = 35;\nexport const SET_TRACK_MUTED = 36;\nexport const SET_TRACK_SOLO = 37;\n\nexport const SET_GROUP_VOLUME = 38;\nexport const SET_GROUP_MUTED = 39;\n\nexport const SET_QUANTIZED = 40;\nexport const SET_IS_RECORDING = 41;\nexport const SET_IS_RECORDING_EXPANDED  = 42;\nexport const SET_IS_RECORDING_MIX = 43;\nexport const SET_IS_PLAYING = 44; \nexport const SET_IS_PLAYING_MIX = 45;\n\nexport const SET_SEND_MUTED = 46;\n\nexport const SET_SELECTED_STEP = 47;\nexport const SET_HOVERED_STEP = 48;\n\nexport const SET_STEP_DRAGGING = 49;\nexport const SET_STEP_TO_COPY = 50;\n\nexport const SET_SEQUENCE_NAME = 51;\n\nexport const SET_SELECTED_EFFECT = 52;\n\nexport const SET_EFFECT_PARAMETER_VALUE = 53;\n\nexport const SET_EFFECTS_PANE_OPTION = 54;\n\nexport const SET_SELECTED_PARAMETER = 55;\nexport const SET_SELECTED_PARAMETER_FLASHING = 56;\n\nexport const SET_MIXES = 57;\nexport const SET_CURRENT_MIX = 58;\n\nexport const SET_ERASING_AUTOMATION = 59;\n\nexport const SET_TRACK_SEND_VOLUME = 60;\n\nexport const SET_TRACK_FOCUSED = 61;\n\nexport const SET_YEAR_SELECTED = 62;\nexport const SET_COUNTRIES_SELECTED = 63;\nexport const SET_VIDEOS_SELECTED = 64;\nexport const SET_STYLES_SELECTED = 65;\nexport const SET_TAGS_SELECTED = 66;\nexport const SET_HIERARCHY_ROOT = 67;\nexport const SET_HIERARCHY_TREE = 68;\nexport const SET_SHOW_YEAR_SLIDER = 69;\nexport const SET_SHOW_COUNTRIES = 70;\nexport const SET_SHOW_VIDEOS = 71;\nexport const SET_SHOW_STYLES = 72;\nexport const SET_SHOW_TAGS = 73;\nexport const SET_SHOW_CHORD_FILTER = 74;\nexport const SET_CHORD_SELECTED = 75;\n\nexport const SET_IS_DRAGGING_DURATION = 76;\nexport const SET_STEP_DATA_DRAGGING = 77;\n\nexport const SET_PIANO_ROLL_SELECTION = 78;\nexport const SET_SELECTED_PIANO_ROLL_STEPS  = 79;\n\nexport const SET_SEARCH_RESULTS_SAMPLES = 80;\n\nexport const SET_SELECTED_CHORD_SAMPLE = 81;\n\nexport const SET_STEPS_TO_COPY = 82;\n\nexport const SET_LOADING_SEQUENCE = 83;\n\nexport const SET_EASY_PATTERN_TO_COPY = 84;\n\nexport const SET_SAMPLE_AUDITIONING = 85;\n\nexport const SET_LAST_MIDI_KEY_MAPPED = 86;\n\nexport const SET_TRACK_IS_ENABLED = 87;\n\nexport const SET_SELECTED_SAMPLE_TAG = 88;\n\nexport const SET_TRANSPOSE_DRAGGING = 89;\n\nexport const SET_MASTER_VOLUME = 90;\n\nexport const SET_USER_VIEW_MODE = 91;\n\nexport const SET_CURRENT_USER_MIX = 92;\n\nexport const SET_USER_HAS_EDITS_TO_SAVE = 93;\n\nexport const SET_PATTERN_TO_EDIT_COLOR = 94;\nexport const SET_PATTERN_COLOR = 95;\n\nexport const SET_COMPACT_MODE = 96;\n\nexport const SET_SHOW_LFOS = 97;\n\nexport const SET_TRACKS_TO_RESAMPLE = 98;\n\nexport const SET_PROJECT_AUTOMATION_MODE = 99;\n\nexport const NEW_SEQUENCE = 100;\n\nexport const SET_STEPS_SELECTION = 101;\nexport const SET_SELECTED_STEPS = 102;\nexport const SET_STEP_NUMBER_DRAGGING_FROM = 103;\n\nexport const SET_ALL_TRACK_PATTERN_LOCKS = 104;\nexport const SET_ALL_ENVELOPE_LOCKS = 105;\nexport const SET_ALL_LFO_LOCKS = 106;\nexport const SET_TRACK_PATTERN_LOCKED = 107;\nexport const SET_TRACK_PATTERN_LOCKS = 108;\nexport const SET_LFO_PATTERN_LOCKS = 109;\nexport const SET_ENVELOPE_PATTERN_LOCKS = 110;\nexport const SET_PIANO_ROLL_PAGINATION = 111;\n\nexport const SET_IS_RESAMPLING = 112;\n\nexport const SET_RESAMPLE_DURATION = 113;\n\nexport const SET_KEY_MAPPINGS = 114;\n\nexport const SET_SHOW_SEQUENCE_MODAL = 115;\n\nexport const SET_MULTI_PARAMETER_SLIDER = 116;\n\nexport const SET_SHOW_MODS_MODAL = 117;\n\nexport const SET_SEQUENCE_ROLLING = 118;\n\nexport const SET_TRACK_EFFECTS_CHAIN = 119;\n\nexport const SET_SHOW_SEQUENCES = 120;\nexport const SET_SHOW_PRESETS = 121;\nexport const SET_SHOW_INSTRUMENTS = 122;\n\nexport const SET_TRACK_ROLLING = 123;\n\nexport const SET_Z_INDEX_HACK = 124;\n\nexport const SET_LOADED_TRACKS = 125;\n\nexport const SET_BPM = 126;\n\nexport const SET_RESAMPLE_MASTER = 127;\n\nexport const SET_YOUTUBE_SEARCH_TERMS = 128;\n\nexport const SET_AUDIO_INPUT_SOURCE = 129;\n\nexport const SET_WAVEFORM_SELECTION = 130;\n\nexport const SET_WAVEFORM_SELECTION_END = 131;\n\nexport const SET_MIDI_MAP_MODE = 132;\nexport const SET_PARAMETER_MIDI_MAP_SELECTION = 133;\nexport const SET_PARAMETER_MIDI_MAPPING = 134;\nexport const DELETE_PARAMETER_MIDI_MAPPING = 135;\n\nexport const SET_LATENCY = 136;\n\nexport const SET_PAD_MAPPINGS = 137;\n\nexport const SET_ACTION_MIDI_MAP_SELECTION = 138;\nexport const SET_ACTION_MIDI_MAPPING = 139;\nexport const DELETE_MIDI_MAPPINGS = 140;\n\nexport const SET_SEQUENCE_PATTERN_LOCKED = 141;\nexport const SET_SEQUENCE_PATTERN_LOCKS = 142;\n\nexport const SET_SPOTLIGHT_TRACKS = 143;\n\nexport const SET_CLOCK_TYPE = 144;\n\nexport const SET_CONNECTION_STATUS = 145;\nexport const SET_CONNECTED_USER_NAME = 146;\nexport const SET_CLOCK_TICK = 147;\nexport const SET_PLAY_SCHEDULED = 148;\nexport const SET_AVAILABLE_USERS_TO_SYNC = 149;\n\nexport const SET_SEARCH_SORT_BY = 150;\n\nexport const SET_MIDI_EFFECT_DRAGGING = 151;\n\nexport const SET_SHOW_TRACK_EFFECTS = 152;\n\nexport const SET_SHOW_CONVOLVER_MODAL = 153;\n\nexport const SET_SHOW_PASSWORD_MODAL = 154;\nexport const SET_PASSWORD_MODAL_CALLBACK = 155;\n\nexport const SET_SHOW_SHARE_SEQUENCE_MODAL = 156;\n\nexport const HIDE_ALL_EFFECTS = 157;\n\nexport const SET_SHOW_ENVELOPES = 158;\n\nexport const SET_EFFECT_COLLAPSED = 159;\n\nexport const SET_CONTEXTUAL_HELP = 160;\n\nexport const SET_SELECTED_LFO = 161;\nexport const SET_SELECTED_ENVELOPE= 162;\n\nexport const SET_SIDEBAR_COLLAPSED = 163;\n\nexport const SET_MIX_EVENTS = 164;\n\nexport const SET_SHOW_GROUPS = 165;\n\nexport const SET_SUB_SEQUENCES = 166;\nexport const SET_CURRENT_SUB_SEQUENCE = 167;\n\nexport const SET_MIX_VIEW_MODE = 168;\n\nexport const SET_SUB_SEQUENCE_FADE = 169;\n\nexport const SET_SAMPLE_SLICES = 170;\n\nexport const SET_SELECTED_ARRANGEMENT_EVENTS = 171;\n\nexport const SET_SHOW_DATE_SAMPLED = 172;\nexport const SET_DATE_SAMPLED = 173;\n\nexport const SET_EFFECT_PARAMETER_VALUES = 174;\n\nexport const SET_TRACK_PANNING = 175;\nexport const SET_GROUP_PANNING = 176;\nexport const SET_SEND_PANNING = 177;\n\nexport const SET_SELECTED_RECORD = 178;\n\nexport const SET_2D_SELECTION = 179;\nexport const SET_SIMILAR_SOUNDS_TO_FIND = 180;\nexport const SET_SHOW_SAMPLES_2D = 181;\n\nexport const SET_LAST_NOTE_PLAYED = 182;\n\nexport const SET_SIDEBAR_VIEW_MODE = 183;\n\nexport const SET_DISCOGS_SELECTED = 184;\n\nexport const SET_SELECTED_FOLDER = 185;\nexport const SET_SELECTED_PRESET = 186;\nexport const SET_HAS_CHANGES_TO_FOLDERS = 187;\n\nexport const SET_CURSOR_TRACK = 188;\nexport const SET_CURSOR_STEP = 189;\nexport const SET_CURSOR_SHOW = 190;\n\nexport const SET_FOLDER_DRAGGING = 191;\nexport const SET_PRESET_DRAGGING = 192;\n\nexport const SET_SAMPLE_DRAGGING = 193;\n\nexport const SET_EFFECTS_CHAIN_TO_SHOW = 194;\nexport const SET_SUB_SEQUENCE_MUTED = 195;\n\nexport const SET_TRACK_FROZEN = 196;\nexport const SET_TRACK_TO_FREEZE = 197;\nexport const SET_FROZEN_TRACK_PLAYING = 198;\nexport const SET_FROZEN_TRACKS = 199;\nexport const SET_FROZEN_TRACKS_PLAYING = 200;\nexport const SET_EFFECTS_CHAINS_TO_SHOW = 201;\nexport const SET_SELECTED_ONSETS = 202;\nexport const SET_SINGLE_STEP_TO_DRAG = 203;\nexport const SET_STEP_NUMBER_DRAGGED_TO = 204;\n\nexport const SET_SEARCH_RESULTS_START = 205;\nexport const SET_SHOW_STEP_OPTIONS = 206;\n\nexport const SET_MASTER_STEP_TOGGLES = 207;\nexport const SET_PARAMETERS_TO_RECORD = 208;\nexport const SET_ONSET_THRESHOLD = 209;\nexport const SET_SHOW_ONSETS = 210;\n\nexport const SET_SELECTED_GUILD = 211;\nexport const SET_CURRENT_AND_GLOBAL_STEPS = 212;\n\nexport const SET_PIANO_ROLL_DRAG_OFFSET= 213;\nexport const SET_PIANO_ROLL_NOTES = 214;\nexport const SET_STEP_AND_DATA_DRAGGING = 215;\n\nexport const SET_SHOW_LOGIN= 216;\nexport const SET_SIGNING_UP= 217;\nexport const SET_USER_TOKEN = 218;\n\nexport const SET_PENDING_TRANSACTIONS = 219;\n\nexport const SET_COMMAND_INPUT = 220;\nexport const SET_COMMAND_PREFIX = 221;\nexport const SET_VI_MODE = 222;\nexport const SET_TRACK_WARP = 223;\nexport const SET_SUB_SEQUENCE_WARPS = 224;\n\nexport const SET_ARRANGEMENT_SELECTION = 225;\nexport const SET_ARRANGEMENT_MOUSE_X = 226;\nexport const SELECT_COMPOUND_EVENT = 227;\nexport const UNSELECT_COMPOUND_EVENT = 228;\n\nexport const SET_ARRANGEMENT_AUTOMATION_TO_SHOW= 229;\nexport const SET_ARRANGEMENT_LOOPING = 230;\n\nexport const SET_ALTERNATE_VIEW_MODE = 231;\nexport const SET_ARRANGEMENT_SELECTED_ROWS = 232;\nexport const SET_ARRANGEMENT_LOOP_SELECTED = 233;\nexport const SET_ARRANGEMENT_ROW_SELECTIONS = 234;\nexport const SET_ARRANGEMENT_ZOOM = 235;\n\nexport const SET_SELECTED_SEQUENCE = 236;\nexport const SET_EXPLORE_MIXER_EFFECT = 237;\nexport const SET_EXPLORE_EQ_EFFECT = 238;\nexport const SET_SELECTED_SEND_EFFECT= 239;\nexport const SET_INSTRUMENT_TYPE_DRAGGING = 240;\nexport const SET_TRACK_IS_LOADING = 241;\n\nexport const SET_PIANO_ROLL_CURSOR = 242;\nexport const SET_ARRANGEMENT_X_SCALE = 243;\nexport const SET_TOTAL_ARRANGEMENT_LENGTH = 244;\nexport const SET_ARRANGEMENT_BOTTOM_HEIGHT = 245;\nexport const SET_ARRANGEMENT_BOTTOM_MODE = 246;\nexport const SET_ARRANGEMENT_BOTTOM_RESIZING = 247;\nexport const SET_ARRANGEMENT_PATTERN_DRAGGING = 248;\nexport const SET_ARRANGEMENT_PATTERN_START_STEP = 249;\nexport const SET_ARRANGEMENT_CURSOR_STEP = 250;\nexport const SET_ARRANGEMENT_PATTERN_RESIZING = 251;\nexport const SET_ARRANGEMENT_BROWSER_MODE = 252;\nexport const SET_SAMPLE_TO_EXPLORE = 253;\nexport const SET_EFFECT_RACK_NODE_POSITION = 254;\n\nexport const SET_ANNOTATION_DRAGGING = 255;\n\nexport const SET_TRACK_AUTOMATION_DEVICE = 256;\nexport const SET_TRACK_AUTOMATION_PARAMETER = 257;\nexport const SET_SHOW_AUTOMATION = 258;\nexport const SET_TRACK_AUTOMATION_SUB_DEVICE = 259;\nexport const SET_PARAMETER_AUTOMATIONS = 260;\n\nexport const SET_ACTIONS_REMAINING = 261;\nexport const SET_TIME_REMAINING = 262;\n\nexport const SET_SHOW_PIANO_ROLL = 263;\n\nexport const SET_SELECTED_RACK_SUB_TRACK= 264;\n\nexport const DELETE_AUTOMATIONS_FOR_PARAMETERS = 265;\n\nexport const SET_TRACK_AUTOMATION_RACK_DEVICE = 266;\nexport const SET_AUTOMATION_GUIDE_POINT = 267;\nexport const SET_AUTOMATION_POINT_DRAGGING  = 268;\nexport const SET_AUTOMATION_POINT_HAS_MOVED= 269;\nexport const SET_AUTOMATION_POINT_HOVERED = 270;\n\nexport const SET_TRACK_TO_CONVERT = 271;\n\nexport const SET_AUTOMATION_SELECTION = 272;\nexport const SET_AUTOMATION_POINTS_SELECTED = 273;\n\nexport const SET_EXPLORE_PERSON_SELECTED = 274;\nexport const SET_EXPLORE_ALL_SEQUENCES = 275;\n\nexport const DELETE_AUTOMATIONS_FOR_ENGINE = 276;\n\nexport const SET_RECORDING_EXPLORE_MIX = 277;\n\nexport const SET_WORKS_LOADED = 278;\n\nexport const SET_WORK_TRANSPOSE = 279;\nexport const SET_WORK_VOLUME = 280;\n\nexport const SET_EXPLORE_MIX_LOADED = 281;\n\nexport const SET_IS_MACRO_MAPPING = 282;\n\nexport const SET_PARAMETER_TO_MAP = 283;\n\nexport const SET_MIX_COLOR_VALUE = 284;\n\nexport const SET_MIX_HAS_EDITS = 285;\nexport const SET_SCRIPT_VARIABLES = 286;\n\nexport const SET_EXPLORE_OPTION = 287;\n\nexport const SET_ANNOTATIONS_VIEW = 288;\n\nexport const SET_EXPLORE_TOAST = 289;\nexport const SET_PARAMETER_SLIDER_DOWN = 290;\n\nexport const MOVE_ENGINE_AUTOMATIONS = 291;\n\nexport const SET_SEQUENCE_LOADING_PROGRESS = 292;\n\nexport const SET_TRACK_BROWSED_SAMPLES = 293;\n\nexport const SET_BOTTOM_TOOLBAR_OFFSET = 294;\n\nexport const SET_TRACK_UPDATES = 295;\n\nexport const SET_IS_TRANSCRIBING = 296;\n\nexport const SET_SAMPLE_TOOLTIP = 297;\nexport const SET_TRACK_BROWSED_PRESETS = 298;\n\nexport const SET_SELECTED_FREEZE = 299;\n\nexport const SET_TRACK_LENGTH_MODE = 300;\nexport const SET_TRACK_LENGTH_CHOICE = 301;\nexport const SET_FREEZE_DRAGGING = 302;\nexport const SET_FREEZE_COLUMN_SAMPLES = 303;\nexport const SET_UPLOADING_FILE = 304;\nexport const SET_GROUP_COLLAPSED = 305;\n\nexport const SET_SELECTED_MIX_EFFECT = 306;\nexport const SET_SAMPLES_DRAGGING = 307;\n\nexport const SET_DISPLAY_RESOLUTION = 308;\n\nexport const SET_OFFLINE_ENGINE = 309;\n\nexport const SET_CURRENT_EXPORT_INFO = 310;\nexport const SET_MIX_TRACK_DRAGGING = 311;\nexport const SET_GROUP_TRACKS = 312;\n\nexport const SET_LOADING_TEXT = 313;\nexport const SET_TRACK_ENVELOPES = 314;\n\nexport const SET_COPIED_NODES_FOR_RACK= 315;\n\nexport const SET_LAST_MIDI_CC_PLAYED = 316;\n\nexport const SET_ARRANGEMENT_MOUSE_DOWN_X = 317;\n\nexport const SET_TRACKER_PARAMETER_TO_EDIT = 318;\n\nexport const SET_TRACKS_TO_HIDE = 319;\n\nexport const SET_SELECTED_PALETTE = 320;\n\nexport const SET_PROJECT_DRAGGING = 321;\n\nexport const SET_EXPLORE_UNPUBLISHED = 322;\nexport const SET_QUICK_ADD_SEARCH_TEXT = 323;\n\nexport const SET_SHOW_TRACK_FREEZE_HISTORY = 324;\nexport const SET_SELECTED_MIDI_TRACK = 325;\n\nexport const SET_SELECTED_TRACK_SLICE = 326;\n\nexport const SET_CIRKLON_PARAMETER_SELECTED = 327;\nexport const SET_CIRKLON_MODE = 328;\n\nexport const SET_NOTES_DOWN = 329;\nexport const SET_SEQUENCED_PALETTE = 330;\n\nexport const SET_SCENES = 331;\nexport const SET_CURRENT_SCENE = 332;\n\nexport const SET_SHOW_SETTINGS = 333;\nexport const SET_WALLPAPER = 334;\nexport const SET_ANIMATE_WALLPAPER = 335;\n\nexport const SET_EXPANDED_PROJECT = 336;\n\nexport const SET_ACCUMULATOR_PARAMETER_SELECTED= 337;\n\nexport const SET_PLANE_MAPPING = 338;\n\nexport const SET_TRACK_PRESET_SAVING = 339;\n\nexport const SET_SAMPLE_TAG_DRAGGING = 340;\n\nexport const SET_PARAMETER_MIX_AUTOMATIONS = 341;\n\nexport const SET_SHOW_ARRANGEMENT_TRACKS= 342;\n\nexport const SET_ARRANGEMENT_PATTERN_SELECTED = 343;\n\nexport const SET_SIDEBAR_SEARCH_INPUT = 344;\n\nexport const SET_SHOW_ARRANGEMENT_SEARCHER = 345;\n\nexport const SET_VI_SELECT_MODE = 346;\n\nexport const SET_EXPLORE_WORK = 347;\n\nexport const SET_CREATING_NEW_PACK = 348;\n\nexport const SET_PACK_WINDOW_POSITION = 349;\n\nexport const SET_DRAGGING_PACK_WINDOW = 350;\n\nexport const SET_PACK_TO_EDIT = 351;\n\nexport const SET_IS_MANAGING_GUILDS= 352;\n\nexport const NEW_STEP_GROUP = 353;\nexport const SET_STEPS_GROUP_MODE = 354;\n\nexport const SET_TRANSFORMATION_EDGE_DRAGGING = 355;\nexport const SET_SHOW_FORMANT_EFFECT = 356;\nexport const SET_SHOWING_FORMANTS= 357;\n\nexport const SET_PULLED_EFFECTS = 358;\n\nexport const SET_LOOPS_TO_FREEZE = 359;\nexport const SET_PARAMETER_MIN_MAX = 360;\n\nexport const SET_CURRENT_SOUND_IN_LIST = 361;\nexport const SET_SHOWING_SOUND_LIST = 362;\nexport const SET_CURRENT_TAG_IN_LIST = 363;\n\nexport const SET_LINKING_EFFECTS = 364;\nexport const SET_PACK_SELECTED = 365;\nexport const SET_SAMPLE_EXPLORER_SELECTED = 366;\n\nexport const SET_PIANO_ROLL_SLIDE = 367;\nexport const SET_MAXIMIZE_EXPLORER = 368;\n\nexport const SET_PADS = 369;\nexport const SET_PAD_SLOTS = 370;\n\nexport const SET_PAD_HOVERED = 371;\n\nexport const SET_WAVEFORM_SHOWING = 372;\nexport const SET_TRACK_DRAGGING = 373;\n\nexport const SET_HIDE_MIXER = 374;\n\nexport const SET_SOURCE_EXPLORING = 375;\nexport const SET_YEAR_EXPLORING = 376;\nexport const SET_PULLABLE_PART_DRAGGING= 377;\nexport const SET_PADS_EXPAND = 378;\n\nexport const SET_SEQUENCERS = 379;\nexport const SET_SEQUENCER_TRACKS = 379;\n\nexport const SET_PLANE_MACROS = 380;\nexport const SET_WINDOW_POSITION = 381;\nexport const SET_PAD_EFFECTS = 382;\nexport const SET_SELECTED_PAD_EDGE = 383;\nexport const SET_DRAWING_PAD_EDGE = 384;\nexport const SET_BULK_EFFECTS_COLLAPSED = 385;\nexport const SET_SELECTED_PULLED_ELEMENTS= 386;\nexport const SET_BULK_WINDOW_POSITIONS = 387;\nexport const SET_EFFECT_PATTERN_LOCKS = 388;\nexport const SET_ALL_EFFECT_PATTERN_LOCKS = 389;\nexport const SET_MODULE_COLLAPSED = 390;\nexport const SET_TRACK_MIDI_EFFECTS = 391;\nexport const SET_EFFECT_STARRED= 392;\nexport const SET_BULK_EFFECTS_STARRED= 393;\nexport const SET_BULK_MODULES_COLLAPSED = 394;\nexport const DELETE_TRACK_ID = 395;\nexport const SET_SHOWING_CONTEXT_MENU = 396;\nexport const SET_HIGHER_ORDER_MATRIX= 397;\nexport const SET_MODULE_COLOR=398;\nexport const SET_MODULES_ROUTING =399;\nexport const SET_HIGHER_ORDER_STEPS_SELECTED=400;\nexport const SET_ORIENTATION_ROUTINGS=401;\nexport const SET_SHOW_HIGHER_ORDER_SEQUENCER=402;\nexport const SET_PLANAR = 403;\n\nexport const SET_PLANAR_GRADIENT_COLOR = 404;\nexport const SET_PLANAR_OPACITY = 405;\n\nexport const SET_MODULE_SIZE = 406;\nexport const SET_INLET_CONNECTIONS = 407;\nexport const SET_ZOBJECTS = 408;\nexport const SET_ZMESSAGES = 409;\n\nexport const SET_BACKGROUND_COLOR = 410;\n\nexport const SET_VIEWABLE_SUBPATCHES = 411;\nexport const SET_SELECTED_ZOBJECT = 412;\n\nexport const SET_JAKI_GRID = 413;\n\nexport const SET_ZOBJECT_TYPE_DRAGGING= 414;\n\nexport const SET_UX_LOCKED = 415;\n\nexport const SET_MINTED_TOKENS = 416;\n\nexport const SET_HIC_DIALOG = 417;\nexport const SET_IS_PREPARING_NFT = 418;\nexport const SET_FULL_SCREEN_ZOBJECT = 419;\n\nexport const SET_MAIN_SCROLL_REF= 420;\nexport const SET_VIEWPORT_POSITION = 421;\nexport const SET_SIDEBARS_SHOWING = 422;\nexport const SET_SHOW_PAD_SEQUENCER = 423;\nexport const SET_SHOW_PROJECTS_MODAL = 424;\nexport const SET_SHOW_SEARCH_WINDOW = 425;\n\nexport const SET_STEP_PARAMETER_SELECTED = 426;\nexport const SET_SHOW_TRACK_INSTRUMENT = 427;\nexport const SET_SHOW_MODULATORS = 428;\n\nexport const SET_CABLE_SEGMENTATION = 429;\nexport const SET_CABLE_SEGMENTATIONS = 430;\n\nexport const SET_UX_LOCK_OBJECT = 431;\nexport const SET_UX_LOCK_OBJECTS = 432;\nexport const SET_UX_HIDE_OBJECT = 433;\nexport const SET_UX_HIDE_OBJECTS = 434;\nexport const SET_ZORA_DIALOG = 445;\nexport const SET_ZOBJECT_INPUT_TEXT = 446;\nexport const SET_VIEWABLE_ZOBJECTS = 447;\nexport const SET_SHOW_EDITOR_BOTTOM = 448;\n\nexport const SET_MINTING_PROGRESS = 449;\nexport const SET_NEW_ZORA_TOKEN_ID = 450;\nexport const SET_TRANSACTION_UPON_LOGIN = 451;\n\nexport const SET_KEYBOARD_CONTEXT = 452;\nexport const SET_PAD_FX_MODE = 453;\nexport const SET_JAKI_GRID_MODE = 454;\nexport const SET_OBJECT_STYLING = 455;\n\n// planar items\n\nexport const SET_SELECTED_PLANAR_PARAMETERS = 456;\nexport const SET_FILTERED_PLANAR_PARAMETERS = 457;\nexport const SET_PLANAR_MACRO_TO_SHOW = 458;\nexport const SET_PLANAR_REGION_MODE = 459;\nexport const SET_GROUP_PRESETS_BY_PACKS = 460;\nexport const SET_PIANO_ROLL_LEFT_SPACE = 461;\nexport const SET_ZOBJECT_SIZE = 462;\nexport const SET_SECONDARY_ZOBJECT = 463;\n\nexport const CLEAR_DRAG_DROP = 464;\n\nexport const SET_SAMPLES_TO_SAVE = 465;\nexport const SET_EDITOR_PADDING = 466;\nexport const SET_EDGES_PADDING = 467;\nexport const SET_EDGES_SIZE = 468;\n\nexport const SET_LEFT_SIDEBAR_WIDTH = 469;\nexport const SET_MOVING_PAD_EDGE = 470;\nexport const SET_DOCUMENTATION_SUB_SECTION = 471;\nexport const SET_RIGHT_SIDEBAR_OPTION = 472;\n\nexport const SET_SELECTED_FM_ENVELOPE_TYPE = 473;\nexport const SET_SELECTED_FM_OPERATOR_DETAILS = 474;\nexport const SET_SELECTED_FM_FORMANT = 475;\nexport const SET_SHOW_SAVE_MODAL = 476;\nexport const SET_ZOBJECT_FLASHING = 477;\nexport const SET_SAMPLE_DOWNLOAD_PROGRESS = 478;\n\nexport const SET_PRESET_SAVED = 479;\n\nexport const SET_COMPLETELY_DONE_LOADING = 480;\nexport const SET_PLUGIN_TO_SAVE = 481;\nexport const SET_SHOW_PLUGINS = 482;\nexport const SET_PLUGINS_LOADED = 483;\nexport const SET_SHOW_PLUGINS_PANE= 484;\nexport const SET_PLUGINS_PANE_HEIGHT = 485;\nexport const SET_DROPPED_SAMPLES = 486;\nexport const SET_SHOW_FORMANT_PRESETS = 487;\nexport const SET_ZOBJECT_BACKGROUND= 488;\nexport const SET_PRESENTATION_MODE = 489;\n\n\nexport const SET_PRESENTATION_WINDOW_POSITION = 490;\nexport const SET_BULK_PRESENTATION_WINDOW_POSITIONS = 491;\n\nexport const SET_SHOW_FREEZE_MODAL = 492;\nexport const SET_THEME = 493;\nexport const SET_SHOW_THEME_GRID = 494;\n\nexport const SET_RECENTLY_ADDED_SOUNDS = 495;\n\nexport const SET_ZOBJECT_TOOLTIP = 496;\n\nexport const SET_ZOBJECTS_STACK= 497;\nexport const SET_ZOBJECT_CONTEXT_MENU = 498;\n\nexport const SET_OBJECT_DRAGGING = 499;\n\nexport const SET_ENABLE_ROLL_VIEWER = 500;\n\nexport const SET_ZOBJECT_MODAL = 501;\nexport const SET_ZOBJECT_PROGRESSBAR = 502;\n\nexport const SET_SHOW_PLAYLIST_MENU= 503;\nexport const SET_CURRENT_PLAYLIST_SONG = 504;\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport Credits from \"components/credits/Credits.js\";\nimport SongTitle from './SongTitle.js';\nimport SporePlaylist from 'components/playlist/SporePlaylist.js';\nimport {connect} from 'react-redux';\nimport {isMobile} from 'react-device-detect';\nimport './caurosel.scss';\n\nconst Caurosel = ({playerChosen, setPlayerChosen, showStemPlayer, setShowStemPlayer}) => { \n    let ref = useRef();\n    let [selectedPlayer, setSelectedPlayer] = useState(undefined);\n    let [mouse, setMouse] = useState();\n    let [over, setOver] = useState();\n\n    const onMouseMove = useCallback((e) => {\n        let rect = ref.current.getBoundingClientRect();\n        let x = e.clientX - rect.left;\n        let y = e.clientY - rect.top;\n        setMouse({x,y});\n    }, [setMouse]);\n\n    const onMouseLeave = useCallback(() => {\n        setMouse(undefined);\n    }, [setMouse]);\n\n    let brect = ref.current && ref.current.getBoundingClientRect();\n\n    let className = \"caurosel\";\n    if (playerChosen) {\n        className += \" player-chosen\";\n    }\n  \n    let tokens = new Array(20).fill(0);\n    for (let i=1; i < 20; i++) {\n        tokens[i-1] = i;\n    }\n    return (\n        <div onMouseLeave={onMouseLeave} ref={ref} onMouseMove={onMouseMove} className={className}>\n          {mouse && <div className=\"mouse-radial\" style={{left: mouse.x-500, top: mouse.y-500}}></div>}\n          <SporeOption\n                playerChosen={playerChosen}\n                brect={brect}\n                setShowStemPlayer={setShowStemPlayer}\n                showStemPlayer={showStemPlayer}\n                mouse={mouse}\n                isOver={over===playerChosen}\n                setOver={setOver}\n                setPlayerChosen={setPlayerChosen} rarity=\"\" tokenId={playerChosen}\n                thumbnail={isMobile ? \"/sp-\" + playerChosen + \".png\" : '/sp-' + playerChosen + '.png'}\n              />\n       </div>);\n};\n\nconst SporeOption = ({\n    showStemPlayer,\n    setShowStemPlayer,\n    brect,\n    tokenId, playerChosen, isOver, mouse, setOver, rarity, thumbnail, setPlayerChosen\n}) => {\n    let ref= useRef();\n    let [currentSong, setCurrentSong] = useState(\"Twisting Faith\");\n\n    let rect = ref.current && ref.current.getBoundingClientRect();\n    let _x = rect && mouse && mouse.x - rect.left + brect.left;\n    let _y= rect && mouse && mouse.y - rect.top + brect.top;\n    let className = \"spore-player-option\";\n    if (playerChosen === tokenId) {\n        className += \" chosen\";\n    } else if (playerChosen) {\n        className += \" unchosen\";\n    }\n\n        const onClick = useCallback(() => {\n              if (showStemPlayer) {\n                  setShowStemPlayer(undefined);\n                  setPlayerChosen(undefined);\n                  return;\n              }\n              if (playerChosen === tokenId) {\n                  setShowStemPlayer(undefined);\n                  setPlayerChosen(undefined);\n              } else {\n                  setPlayerChosen(tokenId);\n                  setShowStemPlayer(true);\n              }\n        }, [setPlayerChosen, showStemPlayer, playerChosen, tokenId]);\n\n    return (\n        <div\n          ref={ref}\n          onMouseOver={() => setOver(tokenId)}\n          className={className}>\n          {isOver && mouse && <div className=\"mouse-radial\" style={{left: _x-500, top: _y-500}}></div>}\n          <div\n            onClick={onClick}>\n            <img src={thumbnail}/>\n            <div\n              className=\"sp-fields\">\n              <div\n                className=\"sp-name\">\n                SP-{tokenId}\n              </div>\n              <div className=\"sp-rarity\">\n                {rarity}\n              </div>\n            </div>\n          </div>\n          {showStemPlayer && <SongTitle/>}\n          {!isMobile && showStemPlayer && playerChosen === tokenId && <SporePlaylist currentSong={currentSong} setCurrentSong={setCurrentSong}/>}\n          {showStemPlayer && playerChosen === tokenId && <Credits/>}\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Caurosel);\n","class EthereumEventLog {\n    // for example, SampleTagged(bytes32,bytes32) would be the event\n    // and the arguments would be EthereumTopic(\"ipfsHash\", IPFS_HASH),\n    // EthereumTopic(\"tag\", BYTES_32)\n    constructor(event, topics, ...data) {\n        this.event = event;\n        this.topics = topics;\n        this.data = data;\n    }\n}\n\nexport default EthereumEventLog;\n","class EthereumTopic {\n    constructor(name, type, size=1) {\n        this.name = name;\n        this.type = type;\n        this.size = size*64;\n    }\n\n    convertTo(x) {\n        if (x === undefined || x === null) {\n            return undefined;\n        }\n        return this.type.convertTo(x);\n    }\n   \n    convertFrom(x) {\n        if (x === undefined || x === null) {\n            return undefined;\n        }\n        return this.type.convertFrom(x);\n    }\n}\n\nexport default EthereumTopic;\n","import {IPFS_HASH} from 'decentralized/EthereumDataTypes.js';\nimport {INT_8} from 'decentralized/EthereumDataTypes.js';\nimport {INT_16} from 'decentralized/EthereumDataTypes.js';\nimport {INT_32} from 'decentralized/EthereumDataTypes.js';\nimport {UINT_256} from 'decentralized/EthereumDataTypes.js';\nimport {RIGHT_PADDED_BYTES_32} from 'decentralized/EthereumDataTypes.js';\nimport {BYTES_32, BYTES_32_LEFT} from 'decentralized/EthereumDataTypes.js';\nimport {BYTES_32_ENCRYPTED} from 'decentralized/EthereumDataTypes.js';\nimport {BYTES_32_ARRAY} from 'decentralized/EthereumDataTypes.js';\nimport {NOTE_BYTES_32} from 'decentralized/EthereumDataTypes.js';\nimport {NOTES_BYTES_32} from 'decentralized/EthereumDataTypes.js';\nimport {ADDRESS} from 'decentralized/EthereumDataTypes.js';\nimport {STRING} from 'decentralized/EthereumDataTypes.js';\n\nimport EthereumEventLog from 'decentralized/EthereumEventLog.js';\nimport EthereumTopic from 'decentralized/EthereumTopic.js';\n\nexport const SampleTagged = new EthereumEventLog(\n    'SampleTagged(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('tag', BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\n export const SampleStyle = new EthereumEventLog(\n    'SampleStyle(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('style', BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n                                                 \n export const SampleYear = new EthereumEventLog(\n    'SampleYear(bytes32,int16,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('year', INT_16),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SampleCountry = new EthereumEventLog(\n    'SampleCountry(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('country', BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SampleYoutube = new EthereumEventLog(\n    'SampledYoutube(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('videoId', RIGHT_PADDED_BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n \nexport const SequenceCreated = new EthereumEventLog(\n    'SequenceCreated(address,bytes32,string)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('ipfsHash', IPFS_HASH)],\n    new EthereumTopic('title', STRING));\n\nexport const SampleCreated = new EthereumEventLog(\n    'SampleCreated(address,bytes32,string,uint32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('guildId', INT_32)\n    ],\n    new EthereumTopic('title', STRING),\n);\n\nexport const NewNoteSequence = new EthereumEventLog(\n    'NewNoteSequence(bytes32,bytes32)',\n    [new EthereumTopic('sampleHash', IPFS_HASH),\n     new EthereumTopic('noteSequenceHash', IPFS_HASH)]);\n\nexport const NewDiscogsSample = new EthereumEventLog(\n    'NewDiscogsSample(bytes32,uint256,bytes32,uint32)',\n    [new EthereumTopic('sampleHash', IPFS_HASH),\n     new EthereumTopic('coverArtHash', IPFS_HASH),\n     new EthereumTopic('guildId', INT_32)\n    ],\n     new EthereumTopic('discogsId', UINT_256),\n);\n\nexport const NewNoteSequenceAggregation = new EthereumEventLog(\n    'NewNotesAggregation(bytes32,bytes32,bytes32,uint32,uint32,bytes32)',\n    [new EthereumTopic('sampleHash', IPFS_HASH),\n     new EthereumTopic('noteA', NOTE_BYTES_32),\n     new EthereumTopic('noteB', NOTE_BYTES_32)],\n    new EthereumTopic('startTime', INT_32),\n    new EthereumTopic('endTime', INT_32),\n    new EthereumTopic('remainingNotes', NOTES_BYTES_32));\n\nexport const SampleFavorited = new EthereumEventLog(\n    'SampleFavorited(address,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('sampleHash', IPFS_HASH)]);\n\nexport const SampleUnfavorited = new EthereumEventLog(\n    'SampleUnfavorited(address,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('sampleHash', IPFS_HASH)]);\n\nexport const SequenceEdited = new EthereumEventLog(\n    'SequenceEdited(address,bytes32,bytes32,bytes32,string)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('previousSequence', IPFS_HASH),\n     new EthereumTopic('newSequence', IPFS_HASH)],\n    new EthereumTopic('diff', IPFS_HASH),\n    new EthereumTopic('title', STRING),\n    );\n\nexport const TokenizedSequenceEdited = new EthereumEventLog(\n    'SequenceEdited(address,bytes32,bytes32,string,uint32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('previousSequence', IPFS_HASH),\n     new EthereumTopic('newSequence', IPFS_HASH)],\n    new EthereumTopic('title', STRING),\n    new EthereumTopic('bpm', INT_32),\n    );\n\n\nexport const PresetTag = new EthereumEventLog(\n    'PresetTagged(address,bytes32,bytes32,uint32)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n     new EthereumTopic('tag', BYTES_32),\n     new EthereumTopic('guildId', INT_32),\n    ],\n    new EthereumTopic('user', ADDRESS),\n);\n\nexport const NewGuild = new EthereumEventLog(\n    'NewGuild(address,uint32,string)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)],\n    new EthereumTopic('name', STRING),\n);\n\n//event NewGuildMemberRequest(address indexed, address indexed, uint256 indexed);\nexport const NewGuildMemberRequest = new EthereumEventLog(\n    'NewGuildMemberRequest(address,address,uint32)',\n    [new EthereumTopic('requester', ADDRESS),\n     new EthereumTopic('newMember', ADDRESS),\n     new EthereumTopic('guildId', INT_32)]);\n\n// event NewGuildMemberRequestAccepted(address indexed, uint256 indexed);\nexport const NewGuildMemberRequestAccepted = new EthereumEventLog(\n    'NewGuildMemberRequestAccepted(address,uint32)',\n    [new EthereumTopic('newMember', ADDRESS),\n     new EthereumTopic('guildId', INT_32)]);\n\n// event NewGuildMemberRequestRejected(address indexed, uint256 indexed);\nexport const NewGuildMemberRequestRejected = new EthereumEventLog(\n    'NewGuildMemberRequestRejected(address,uint32)',\n    [new EthereumTopic('newMember', ADDRESS),\n     new EthereumTopic('guildId', INT_32)]);\n\n// event NewGuildMemberRequestRejected(address indexed, uint256 indexed);\nexport const GuildKeyEncrypted = new EthereumEventLog(\n    'GuildKeyEncrypted(address,uint32,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32),\n     new EthereumTopic('ipfsHash',IPFS_HASH)]);\n\nexport const NewEncryptedContent = new EthereumEventLog(\n    'NewEncryptedContent(address,bytes32,bytes32,int8,bytes32,bytes32[9],bytes32[6])',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('newContent', IPFS_HASH),\n     new EthereumTopic('contentType', INT_8),\n    ],\n     new EthereumTopic('previousContent', IPFS_HASH),\n    new EthereumTopic('encryptedName', BYTES_32_ENCRYPTED),\n    new EthereumTopic('encryptedContentKey', BYTES_32_ARRAY(9), 9),\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\nexport const EncryptedContentShared = new EthereumEventLog(\n    'EncryptedContentShared(address,address,bytes32,bytes32[9],bytes32[6])',\n    [new EthereumTopic('sharedWith', ADDRESS),\n     new EthereumTopic('creator', ADDRESS),\n     new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('encryptedContentKey', BYTES_32_ARRAY(9), 9),\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\n\nexport const NewPublicKey = new EthereumEventLog(\n    'NewPublicKey(address,bytes32[6])',\n    [new EthereumTopic('user', ADDRESS),\n    ],\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\nexport const NewPreset2 = new EthereumEventLog(\n    'NewPreset(address,bytes32,uint32,bytes32,bytes32[9],bytes32[6])',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('contentHash', IPFS_HASH),\n     new EthereumTopic('guildId', INT_32)\n    ],\n    new EthereumTopic('encryptedName', BYTES_32_ENCRYPTED),\n    new EthereumTopic('encryptedContentKey', BYTES_32_ARRAY(9), 9),\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\nexport const PresetSample = new EthereumEventLog(\n    'PresetSample(bytes32,bytes32,uint32)',\n    [\n        new EthereumTopic('contentHash', IPFS_HASH),\n        new EthereumTopic('sampleHash', IPFS_HASH),\n        new EthereumTopic('guildId', INT_32)\n    ],\n    );\n\nexport const PresetInstrumentType = new EthereumEventLog(\n    'PresetInstrumentType(bytes32,bytes32,uint32)',\n    [\n        new EthereumTopic('contentHash', IPFS_HASH),\n        new EthereumTopic('instrumentType', BYTES_32_LEFT),\n        new EthereumTopic('guildId', INT_32)\n    ],\n    );\n\nexport const NewMonthlyIndex = new EthereumEventLog(\n    'NewMonthlyIndex(bytes32,uint32,uint64)',\n    [\n     new EthereumTopic('month', UINT_256),\n     new EthereumTopic('year', UINT_256)\n    ],\n     new EthereumTopic('hash', IPFS_HASH)\n    );\n\nexport const New2DMapping = new EthereumEventLog(\n    'New2DMapping(bytes32)',\n    [\n     new EthereumTopic('ipfsHash', IPFS_HASH)\n    ],\n\n    );\n\nexport const PublicMessageSent = new EthereumEventLog(\n    'PublicMessageSent(address,address,bytes32,bytes32)',\n    [\n        new EthereumTopic('fromUser', ADDRESS),\n        new EthereumTopic('toUser', ADDRESS),\n        new EthereumTopic('referenceHash', IPFS_HASH),\n    ],\n    new EthereumTopic('messageHash', IPFS_HASH),\n    );\n\nexport const SampleCopyStrike = new EthereumEventLog(\n    'SampleCopyStrike(address,bytes32,bytes32)',\n    [\n        new EthereumTopic('user', ADDRESS),\n        new EthereumTopic('sampleHash', IPFS_HASH),\n        new EthereumTopic('referenceHash', IPFS_HASH),\n    ]\n    );\n\nexport const SampleTakenDown = new EthereumEventLog(\n    'SampleTakenDown(bytes32)',\n    [\n        new EthereumTopic('sampleHash', IPFS_HASH),\n    ]\n    );\n\nexport const FoldersUpdated = new EthereumEventLog(\n    'FoldersUpdated(address,bytes32)',\n    [\n        new EthereumTopic('user', ADDRESS),\n        new EthereumTopic('foldersHash', IPFS_HASH),\n    ]\n    );\n\nexport const NewIndex = new EthereumEventLog(\n    'NewIndex(uint32,bytes32)',\n    [\n        new EthereumTopic('guildId', INT_32),\n    ],\n    new EthereumTopic('indexHash', IPFS_HASH),\n    );\n\nexport const NewGuildSequence = new EthereumEventLog(\n    'NewGuildSequence(address,bytes32,uint32,bytes32,bytes32,bytes32[9],bytes32[6])',\n    [\n        new EthereumTopic('user', ADDRESS),\n        new EthereumTopic('contentHash', IPFS_HASH),\n        new EthereumTopic('guildId', INT_32),\n    ],\n    new EthereumTopic('previousHash', IPFS_HASH),\n    new EthereumTopic('encryptedName', BYTES_32_ENCRYPTED),\n    new EthereumTopic('encryptedContentKey', BYTES_32_ARRAY(9), 9),\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\nexport const NewGuildClassification = new EthereumEventLog(\n    'NewGuildClassification(uint32,bytes32)',\n    [\n        new EthereumTopic('guildId', INT_32),\n        new EthereumTopic('contentHash', IPFS_HASH),\n    ]);;\n\n export const Transfer = new EthereumEventLog(\n    'Transfer(address,address,uint256)',\n    [\n        new EthereumTopic('fromUser', ADDRESS),\n        new EthereumTopic('toUser', ADDRESS),\n    ],\n     new EthereumTopic('amount', INT_32 ),\n );;\n\nexport const SequenceTagged= new EthereumEventLog(\n    'SequenceTagged(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('tag', BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SequenceFavorited = new EthereumEventLog(\n    'SequenceFavorited(bytes32,address,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SequenceStarred = new EthereumEventLog(\n    'SequenceStarred(bytes32,address,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SequenceUnfavorited = new EthereumEventLog(\n    'SequenceUnfavorited(bytes32,address,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\n\nexport const SequenceUnstarred = new EthereumEventLog(\n    'SequenceUnstarred(bytes32,address,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\n\nexport const NewDataType = new EthereumEventLog(\n    'NewDataType(bytes32,string)',\n    [new EthereumTopic('dataType', BYTES_32),\n    ],\n    new EthereumTopic('description', STRING));\n\nexport const NewLinkType = new EthereumEventLog(\n    'NewLinkType(bytes32,string)',\n    [new EthereumTopic('linkType', BYTES_32),\n    ],\n    new EthereumTopic('description', STRING));\n\nexport const NewAnnotationType = new EthereumEventLog(\n    'NewAnnotationType(bytes32,string)',\n    [new EthereumTopic('annotationType', BYTES_32),\n    ],\n    new EthereumTopic('description', STRING));\n\nexport const NewAnnotation = new EthereumEventLog(\n    'NewAnnotation(bytes32,bytes32,bytes32,address)',\n    [\n        new EthereumTopic('annotationType', BYTES_32),\n        new EthereumTopic('data', IPFS_HASH),\n        new EthereumTopic('address', ADDRESS),\n    ],\n    new EthereumTopic('annotationData', BYTES_32),\n);\n\nexport const NewLink = new EthereumEventLog(\n    'NewLink(bytes32,bytes32,bytes32,address)',\n    [new EthereumTopic('linkType', BYTES_32),\n     new EthereumTopic('fromData', IPFS_HASH),\n     new EthereumTopic('toData', IPFS_HASH),\n    ],\n     new EthereumTopic('address', ADDRESS),\n    );\n\nexport const NewMix= new EthereumEventLog(\n    'NewMix(address,bytes32,bytes32,string,uint32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('mixHash', IPFS_HASH),\n     new EthereumTopic('previousHash', IPFS_HASH),\n    ],\n     new EthereumTopic('title', STRING),\n     new EthereumTopic('guildId', INT_32),\n    );\n\nexport const NewEffect = new EthereumEventLog(\n    'NewEffect(address,bytes32,bytes32,string,uint32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('effectHash', IPFS_HASH),\n     new EthereumTopic('effectType', BYTES_32),\n    ],\n     new EthereumTopic('title', STRING),\n     new EthereumTopic('guildId', INT_32),\n    );\n\nexport const ReleaseInfo = new EthereumEventLog(\n    'ReleaseInfo(bytes32,uint32,string,bytes32,bytes32)',\n    [new EthereumTopic('artistName', BYTES_32),\n     new EthereumTopic('releaseId', INT_32),\n    ],\n     new EthereumTopic('releaseName', STRING),\n     new EthereumTopic('coverArtHash', IPFS_HASH),\n     new EthereumTopic('releaseType', BYTES_32),\n    );\n\nexport const SampleByArtist = new EthereumEventLog(\n    'SampleByArtist(bytes32,bytes32)',\n    [new EthereumTopic('artistName', BYTES_32),\n     new EthereumTopic('ipfsHash', IPFS_HASH),\n     ]\n    );\n\nexport const ArtistInfo = new EthereumEventLog(\n    'ArtistInfo(bytes32,bytes32,string)',\n    [new EthereumTopic('artistName', BYTES_32),\n     new EthereumTopic('linkType', BYTES_32),\n    ],\n     new EthereumTopic('link', STRING),\n    );\n\nexport const MidiCCParameter = new EthereumEventLog(\n    'MidiCCParameter(bytes32,uint32,bytes32,address)',\n    [new EthereumTopic('deviceName', BYTES_32),\n     new EthereumTopic('ccNumber', INT_32),\n     new EthereumTopic('parameterName', BYTES_32),\n    ],\n     new EthereumTopic('user', ADDRESS),\n    );\n\nexport const SampleInSequence = new EthereumEventLog(\n    'SampleInSequence(bytes32,bytes32)',\n    [new EthereumTopic('sequenceHash', IPFS_HASH),\n     new EthereumTopic('sampleHash', IPFS_HASH)\n    ]\n    );\n\nexport const ListEdited = new EthereumEventLog(\n    'ListEdited(bytes32,bytes32,address,bytes32,uint32)',\n    [new EthereumTopic('newContent', IPFS_HASH),\n     new EthereumTopic('previousContent', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n    ],\n    new EthereumTopic('title', BYTES_32),\n    new EthereumTopic('guildId', INT_32),\n    );\n\nexport const ListHighlighted = new EthereumEventLog(\n    'ListHighlighted(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('user', ADDRESS)\n    );\n\nexport const ListUnhighlighted = new EthereumEventLog(\n    'ListUnhighlighted(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('user', ADDRESS)\n    );\n\nexport const ListFavorited = new EthereumEventLog(\n    'ListFavorited(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('user', ADDRESS)\n    );\n\nexport const ListUnfavorited = new EthereumEventLog(\n    'ListUnfavorited(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('user', ADDRESS)\n    );\n\nexport const ListDeleted = new EthereumEventLog(\n    'ListDeleted(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    new EthereumTopic('user', ADDRESS)\n    ],\n    );\n\nexport const NewWallpaper = new EthereumEventLog(\n    'NewWallpaper(address,bytes32,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('wallpaperHash', IPFS_HASH),\n     new EthereumTopic('thumbnailHash', IPFS_HASH)\n    ]);\n\nexport const DefaultWallpaper = new EthereumEventLog(\n    'DefaultWallpaper(address,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('wallpaperHash', IPFS_HASH)\n    ]);\n\nexport const NewPack = new EthereumEventLog(\n    'NewPack(address,bytes32,bytes32,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('packHash', IPFS_HASH),\n     new EthereumTopic('previousHash', IPFS_HASH)\n    ],\n     new EthereumTopic('title', BYTES_32)\n);\n\nexport const PackHasContent = new EthereumEventLog(\n    'PackHasContent(bytes32,bytes32)',\n    [new EthereumTopic('packHash', IPFS_HASH),\n     new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n);\n\nexport const UserLeftGuild = new EthereumEventLog(\n    'UserLeftGuild(uint256,address)',[\n     new EthereumTopic('guildId', INT_32),\n    ],\n    new EthereumTopic('user', ADDRESS),\n);\n\nexport const NewScript = new EthereumEventLog(\n    'NewScript(address,bytes32,bytes32,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('scriptHash', IPFS_HASH),\n     new EthereumTopic('scriptType', BYTES_32)\n    ],\n     new EthereumTopic('title', BYTES_32)\n);\n\nexport const NewCreatorProject = new EthereumEventLog(\n    'NewCreatorProject(address,uint256,bytes32,uint256,string)',\n    [\n        new EthereumTopic('creator', ADDRESS),\n        new EthereumTopic('projectId', UINT_256),\n        new EthereumTopic('contentHash', IPFS_HASH)\n    ],\n    new EthereumTopic('maxInvocations', UINT_256),\n    new EthereumTopic('title', STRING)\n);\n\nexport const NewTokenSeed = new EthereumEventLog(\n    'NewTokenSeed(uint256,uint256,bytes32)',\n    [\n        new EthereumTopic('projectId', UINT_256),\n        new EthereumTopic('tokenId', UINT_256)\n    ],\n    new EthereumTopic('seedHash', BYTES_32)\n);\n\nexport const ZoraProject = new EthereumEventLog(\n    'ZoraProject(bytes32,uint256)',\n    [\n        new EthereumTopic('projectHash', IPFS_HASH),\n        new EthereumTopic('zoraId', UINT_256)\n    ]);\n\nexport const AccountAuthorized = new EthereumEventLog(\n    'AccountAuthorized(address,address,string,uint8,bytes32,bytes32)',\n    [\n        new EthereumTopic('zequencerAddress', ADDRESS),\n        new EthereumTopic('walletAddress', ADDRESS),\n    ],\n    new EthereumTopic('message', STRING),\n    new EthereumTopic('v', INT_8),\n    new EthereumTopic('r', BYTES_32_ENCRYPTED),\n    new EthereumTopic('s', BYTES_32_ENCRYPTED)\n);\n\nexport const PluginCreated = new EthereumEventLog(\n    'PluginCreated(uint256,address,string)',\n    [\n        new EthereumTopic(\"tokenId\", UINT_256),\n        new EthereumTopic(\"creator\", ADDRESS),\n    ],\n    new EthereumTopic(\"name\", STRING)\n);\n\nexport const NewPluginVersion = new EthereumEventLog(\n    'NewPluginVersion(uint256,uint256,bytes32,string)',\n    [\n        new EthereumTopic(\"tokenId\", UINT_256),\n        new EthereumTopic(\"versionNumber\", UINT_256),\n    ],\n    new EthereumTopic(\"pluginContentHash\", IPFS_HASH),\n    new EthereumTopic(\"pluginMetadataURI\", STRING)\n);\n\nexport const ProjectHasArrangement = new EthereumEventLog(\n    'ProjectHasArrangement(bytes32)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n);\n\nexport const ProjectBPM = new EthereumEventLog(\n    'ProjectBPM(bytes32,int16)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n    new EthereumTopic(\"bpm\", UINT_256),\n);\n\nexport const ProjectVisuals = new EthereumEventLog(\n    'ProjectVisuals(bytes32,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n    new EthereumTopic(\"thumbnailhash\", IPFS_HASH),\n);\n\nexport const ProjectUsesPreset = new EthereumEventLog(\n    'ProjectUsesPreset(bytes32,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n    new EthereumTopic(\"presetHash\", IPFS_HASH),\n);\n\nexport const ProjectPatternsCount = new EthereumEventLog(\n    'ProjectPatternsCount(bytes32,int8)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n    new EthereumTopic(\"patterns\", UINT_256),\n);\n\nexport const NewSporeCreated = new EthereumEventLog(\n    'NewSporeCreated(uint256,uint256,address,address,bytes32,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"sporeId\", UINT_256),\n    new EthereumTopic(\"tokenId\", UINT_256),\n    new EthereumTopic(\"proxy\", ADDRESS),\n    new EthereumTopic(\"creator\", ADDRESS),\n    new EthereumTopic(\"sporeHash\", IPFS_HASH),\n    new EthereumTopic(\"dataHash\", IPFS_HASH),\n);\n\nexport const NewChainCreated = new EthereumEventLog(\n    'NewChainCreated(uint256,bytes32,address,address,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"chainId\", UINT_256),\n    new EthereumTopic(\"name\", BYTES_32),\n    new EthereumTopic(\"proxy\", ADDRESS),\n    new EthereumTopic(\"creator\", ADDRESS),\n    new EthereumTopic(\"chainHash\", IPFS_HASH),\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import {SampleTagged} from 'decentralized/EthereumEvents.js';\nimport {web3, web3WSS} from './web3.js';\nimport {SampleYoutube} from 'decentralized/EthereumEvents.js';\nimport {STRING} from 'decentralized/EthereumDataTypes.js';\nconst metamaskInstalled = typeof window.web3 !== 'undefined';\n\nclass EthereumQuery {\n    constructor(address) {\n        this.address = address;\n        this.distinct = false;\n        this.selectStatements = [];\n        this.whereClauses = [];\n        this.groupBy = [];\n        this.joinClauses = [];\n        this.limitSize = undefined;\n        this.fromBlockNumber = '0x2';\n        this.toBlockNumber = undefined;\n    }\n\n    from(eventLog) {\n        this.eventLog = eventLog;\n        return this;\n    }\n\n    select(arg) {\n        this.selectStatements.push(arg);\n        return this;\n    }\n\n    // only selects distinct items in the select clause\n    distinct() {\n        this.distinct = true;\n        return this;\n    }\n\n    groupBy(col) {\n        this.groupBy.push(col);\n        return this;\n    }\n\n    where(name, value) {\n        this.whereClauses.push(new WhereClause(name, value));\n        return this;\n    }\n\n    whereIn(name, valueList) {\n        this.whereClauses.push(new WhereClause(name, undefined, valueList));\n        return this;\n    }\n\n    join(event, field) {\n        this.joinClauses.push(new JoinClause(event, field));\n    }\n\n    fromBlock(fromBlock) {\n        this.fromBlockNumber = web3.utils.toHex(fromBlock);\n        return this;\n    }\n\n    toBlock(toBlock) {\n        this.toBlockNumber = web3.utils.toHex(toBlock);\n        return this;\n    }\n\n    limit(limit) {\n        this.limitSize = limit;\n        return this;\n    }\n\n    getTopics() {\n        let topics = [web3.utils.sha3(this.eventLog.event)];\n\n        for (let i in this.eventLog.topics) {\n            let arg = this.eventLog.topics[parseInt(i)];\n            let toAdd = null;\n            for (let j in this.whereClauses) {\n                let whereClause = this.whereClauses[parseInt(j)];\n                if (whereClause.name === arg.name) {\n                    let value = whereClause.value !== undefined ?\n                        whereClause.value : whereClause.valueList[0];\n                    toAdd = arg.convertTo(value);\n                    // console.log(\"where %s = %s / %s\", whereClause.name, value, toAdd);\n                }\n              }\n            topics.push(toAdd);\n        }\n        return topics;\n    }\n\n    executeQuery() {\n        return new Promise((resolve, reject) => {\n            web3.eth.getPastLogs({\n                address: this.address,\n                topics: this.getTopics(),\n                toBlock: this.toBlockNumber,\n                fromBlock: this.fromBlockNumber}, (err, results) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        let parsedResults = [];\n                        results.reverse();\n                        let limit = Math.min(results.length, this.limitSize || results.length);\n                        for (let i=0; i < limit; i++) {\n                            parsedResults.push(this.parseResult(results[i]));\n                        }\n                        resolve(parsedResults);\n                    }\n                });\n        });\n    }\n\n    async watchQuery(callback) {\n        let blockNumber = await web3.eth.getBlockNumber();\n        let web3ToUse = metamaskInstalled ? web3 : web3WSS;\n        web3ToUse.eth.subscribe(\n            'logs',\n            {\n                address: this.address,\n                topics: this.getTopics(),\n                fromBlock: web3.utils.toHex(blockNumber),\n            },\n            (err, result) => {\n                if (err) {\n                    console.log('error watching ');\n                    console.log(err);\n                }\n                let ret = this.parseResult(result);\n                console.log('watch query got ');\n                console.log(ret);\n                callback(ret);\n            });\n    }\n\n    parseResult(data) {\n        if (data === undefined || data === null) {\n            return undefined;\n        }\n        let resultSet = {};\n\n        for (let j in this.selectStatements) {\n            let select = this.selectStatements[parseInt(j)];\n            for (let i in this.eventLog.topics) {\n                let field = data.topics[1 + parseInt(i)];\n                let arg = this.eventLog.topics[parseInt(i)];\n                if (arg.name === select) {\n                    // convert field\n                    resultSet[select] = arg.type.convertFrom(field);\n                }\n            }\n            \n            let dataIndexSoFar = 0;\n            for (let fieldIndex in this.eventLog.data) {\n                fieldIndex = parseInt(fieldIndex);\n                let fieldData = this.eventLog.data[fieldIndex];\n                \n                if (fieldData !== undefined) {\n                    if (select == fieldData.name) {\n                        // the data field in ethereum event logs is basically a huge hex string\n                        // divided into 64-length pieces, for each data point.\n                        // Also, it starts with 0x, so we must skip the first 2 characters when\n                        // slicing out the desired data\n                        let d = data.data.slice(2 + dataIndexSoFar, 2 + dataIndexSoFar + fieldData.size);\n                        d = '0x' + d;\n                        \n                        if (fieldData.type == STRING ) {\n                            d = '0x' + data.data.slice(130 + 64*fieldIndex);\n                        } \n                        resultSet[select] = fieldData.convertFrom(d);\n                    }\n                }\n                dataIndexSoFar += fieldData.size;\n                \n            }\n        }\n        \n        resultSet.blockNumber = data.blockNumber;\n        return resultSet;\n    }\n\n    getCopy() {\n        let query = new EthereumQuery(this.address);\n        query.eventLog = this.eventLog;\n        query.selectStatements = [... this.selectStatements];\n        query.joinClauses = [... this.joinClauses];\n        query.groupBy = [... this.groupBy];\n        query.fromBlockNumber = this.fromBlockNumber;\n        query.toBlockNumber = this.toBlockNumber;\n        query.limitSize = this.limitSize;\n        return query;\n    }\n\n    getJson() {\n        return {\n            address: this.address,\n            eventLog: this.eventLog.event,\n            selectStatements: [... this.selectStatements],\n            whereClauses: [... this.whereClauses],\n            joinClauses: [... this.joinClauses],\n            groupBy: [... this.groupBy],\n            fromBlockNumber: web3.utils.hexToNumber(this.fromBlockNumber),\n            toBlockNumber: this.toBlockNumber === undefined ? undefined : web3.utils.hexToNumber(this.toBlockNumber),\n            limitSize: this.limitSize,\n            distinct: this.distinct,\n        };\n    }\n}\n\nclass WhereClause {\n    constructor(argName, argValue, valueList=[]) {\n        this.name = argName;\n        this.value = argValue;\n        this.valueList = valueList;\n    }\n}\n\nclass JoinClause {\n    constructor(event, field) {\n        this.event = event;\n        this.field = field;\n    }\n}\n\nexport default EthereumQuery;\n","import EthereumQuery from './EthereumQuery.js';\nimport {SampleCreated} from './EthereumEvents.js';\nimport BackendQueryRunner from './BackendQueryRunner.js';\n\nconst runner = new BackendQueryRunner();\n\nclass BackendQuery extends EthereumQuery {\n    constructor(address) {\n        super(address);\n    }\n\n    /*\n    async executeQuery() {\n        let queries = [];\n        for (let i in this.whereClauses) {\n            let whereClause = this.whereClauses[i];\n            let {valueList} = whereClause;\n            if (valueList.length > 0) {\n                for (let j in valueList) {\n                    let query = this.getCopy();\n                    query.whereClauses = this.whereClauses.filter(\n                        x =>\n                            x.value !== undefined);\n                    query.where(whereClause.name, valueList[j]);\n                    console.log('making of copy = ', this.getJson(), query.getJson());\n                    queries.push(query);\n                }\n            } \n        }\n\n        if (queries.length === 0) {\n            return super.executeQuery();\n        }\n        console.log('queries = ', queries);\n\n        let results  = [];\n        for (let i in queries) {\n            results = [... results, ... await queries[i].executeQuery(true)];;\n        }\n        return results;\n    }\n    */\n\n    executeQuery(useBackend=true) { \n        return new Promise((resolve, reject) => {\n            if (window.isNFT) {\n                // thenn we dont have a query\n                return resolve([]);\n            }\n            runner.submit(this.getJson())\n                .then(resolve);\n        });\n    }\n}\n\nexport default BackendQuery;\n","/**\n * Blocking query\n */\nconst MAX_QUERIES = 4;\nconst SLEEP_TIME = 20;\n\nclass BackendQueryRunner {\n    constructor() {\n        this.runningQueries = new Set();\n    }\n\n    submit(queryJson) {\n        return new Promise(async (resolve, reject) => {\n            while (this.runningQueries.size >= MAX_QUERIES) {\n                await this.sleep(SLEEP_TIME);\n            }\n\n            this.runningQueries.add(queryJson);\n\n            let url = \"/search\";\n            if (window.spores) {\n                url = \"https://zequencer.io\" + url;\n            }\n            fetch(url , {\n                method: 'POST',\n                body: JSON.stringify(queryJson),\n                \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                }\n            })\n                .then(resp => resp.json())\n                .then(resp => {\n                    this.removeQuery(queryJson);\n                    resolve(resp || []);\n                })\n                .catch(err => {\n                    console.log(err);\n                    this.removeQuery(queryJson);\n                });\n        });\n    }\n\n    removeQuery(queryJson) {\n        this.runningQueries.delete(queryJson);\n    }\n\n    sleep(time) {\n        return new Promise((resolve, reject) => {\n            setTimeout(resolve, time);\n        });\n    }\n}\n\nexport default BackendQueryRunner;\n","export default class SporeContract {\n    constructor() {\n        this.abi = [\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"sporeHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"dataHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"message\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"v\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"r\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"s\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"newSpore\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"NewSporeCreated\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"message\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"v\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"r\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"s\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"verifyString\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"signer\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"pure\",\n\t\t\"type\": \"function\"\n\t}\n        ];\n\n        \n        this.contractAddress = '0x335355fc5F5Fd3fC1b307d8468275f402C8B6dB2';\n    }\n\n    getContract(web3) {\n        return new web3.eth.Contract(this.abi, this.contractAddress);\n    }\n}\n\t\n\n","/*\n    This file is part of Universal Sequencer.\n    Universal Sequencer is free software: you can redistribute it and/or modif\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Universal Sequencer is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport Tone from 'tone';\nimport ipfsClient from 'decentralized/Ipfs.js';\nvar bufferToArrayBuffer = require('buffer-to-arraybuffer');\n\nclass AudioUnit {\n    constructor(context=Tone.Master.context) {\n        this.duration = 0;\n        this.source = undefined;\n        this.buffer = undefined;\n        this.playbackRate = 1;\n        this.looping = false;\n        this.playSound.bind(this);\n        this.context = context;\n        this.seek.bind(this);\n        this.stopSound.bind(this);\n    }\n\n    dispose() {\n        if (this.source !== undefined) {\n            this.source.disconnect();\n        }\n        this.buffer = undefined;\n        this.source = undefined;\n    }\n\n    getContext() {\n        return this.context;\n    }\n\n    playSound(x, duration) {\n        if (x == undefined) {\n            x = 0;\n        }\n        if (this.source != undefined) {\n            this.source.stop();\n        }\n        this.source = Tone.Master.context.createBufferSource(); // creates a sound source\n        this.source.connect(Tone.Master.context.destination);       // connect the source to the context's destination (the speakers)\n        this.source.buffer = this.buffer;\n        this.source.playbackRate.value = this.playbackRate;\n        this.source.loop = false;\n        this.source.start(0, Math.max(0, x), duration);\n    }\n\n    seek(x) {\n        this.stopSound();\n        this.playSound(x);\n    }\n\n    stopSound() {\n        if (this.source != undefined) {\n            this.source.stop();\n        }\n    }\n\n    loadRawBuffer(buffer) {\n        this.buffer = buffer;\n        this.duration = buffer.duration;\n    }\n    \n    setBuffer(buffer) {\n        this.buffer = buffer;\n        this.duration = buffer.duration;\n    }\n}\n\nexport default AudioUnit;\n\n","import SporeContract from \"decentralized/contracts/SporeContract.js\";\nimport axios from 'axios';\nimport AudioUnit from 'engine/audio.js';\nimport Tone from 'tone';\nimport BackendQuery from \"decentralized/BackendQuery.js\";\nimport {NewSporeCreated} from \"decentralized/EthereumEvents.js\"\nimport ipfs from 'decentralized/Ipfs.js';\nconst bufferToArrayBuffer = require('buffer-to-arraybuffer');\n\nexport const getAllSpores = async (tokenId) => {\n\n   let query = new BackendQuery(new SporeContract().contractAddress)\n        .from(NewSporeCreated);\n    let results = await query.executeQuery();\n    for (let result of results) {\n        if (result.sporeId === 4) {\n            result.tokenId = 3;\n        }\n    }\n    if (tokenId !== undefined) {\n        results = results.filter(x => (x.tokenId === null && tokenId === 1) || x.tokenId === tokenId);\n    }\n    return results;\n};\n\nexport const getLatestSpore = async (spore, tokenId, setSporeMetadata) => {\n    let query = new BackendQuery(new SporeContract().contractAddress)\n        .from(NewSporeCreated);\n\n    if (spore) {\n        query.where(\"sporeId\", spore.sporeId);\n    }\n\n    let results = await query.executeQuery();\n    console.log(\"RESULTS=\", results, spore, query);\n    for (let result of results) {\n        if (result.sporeId === 4) {\n            result.tokenId = 3;\n        }\n    }\n    if (tokenId !== undefined) {\n        results = results.filter(x => (x.tokenId === null && tokenId === 1) || x.tokenId === tokenId);\n    }\n    if (results.length === 0) {\n        return null;\n    }\n    let latest = results[0];\n\n    setSporeMetadata(latest);\n\n    let sporeHash = latest.sporeHash;\n    let dataHash = latest.dataHash;\n\n\n    let dateA = new Date().getTime();\n    let blob = await ipfs.getSound(sporeHash, 10000000);\n    let dateB = new Date().getTime();\n    let audioBuffer = await Tone.Master.context.decodeAudioData(bufferToArrayBuffer(blob));\n    let player = new AudioUnit(Tone.Master.context);\n    player.setBuffer(audioBuffer);\n    let ret = {\n        audioUnit: player, \n        audioBuffer,\n        ... latest\n    };\n\n    if (dataHash) {\n        console.log(\"data hash=\", dataHash);\n        ret.heat = await ipfs.getJson(dataHash);\n    }\n    return ret; \n};\n\nexport const pinAll = async () => {\n    let query = new BackendQuery(new SporeContract().contractAddress)\n        .from(NewSporeCreated);\n\n    let results = await query.executeQuery();\n    for (let result of results) {\n        await saveOnPinata(result.sporeHash);\n    }\n\n};\n\nconst saveOnPinata = (hash) => {\n    return new Promise((resolve) => {\n    const url = `https://api.pinata.cloud/pinning/pinByHash`;\n    axios\n        .post(url, \n            {\n                hashToPin: hash,\n            },\n              {\n            headers: {\n                pinata_api_key: '819763bfd08f709bc8f1',\n                pinata_secret_api_key: '48cd285bcb2a634fa7d1ae033779793c655baf3faa1fc68bf235b1f15f8549a1'\n            }\n        })\n        .then(function (response) {\n            resolve();\n            //handle your response here\n        })\n        .catch(function (error) {\n            //handle error here\n        });\n    });\n};\n","import React, { useEffect, useRef, useCallback, useState} from 'react';\nimport AudioPlayer from './AudioPlayer.js';\nimport BackendQuery from \"decentralized/BackendQuery.js\";\nimport {connect} from 'react-redux';\nimport {getLatestSpore} from './getSpores.js';\nimport UnknownProgressBar from \"components/progressbar/UnknownProgressBar.js\";\n\nconst links = {\n    1: \"https://opensea.io/assets/0x7269c1a1b8aba1390770193771f92bd722c6a77b/1\",\n    2: \"https://opensea.io/assets/0x7269c1a1b8aba1390770193771f92bd722c6a77b/2\",\n    3: \"https://opensea.io/assets/0x7269c1a1b8aba1390770193771f92bd722c6a77b/3\",\n    4: \"https://opensea.io/assets/0x7269c1a1b8aba1390770193771f92bd722c6a77b/4\",\n};\nconst SimplePlayer = ({store, audioUnit, selected, tokenId, spore, setShowStemPlayer, setPreset, preset}) => { \n    let [playing, setPlaying] = useState(false);\n    let [latestSpore, setLatestSpore] = useState(undefined);\n    let [sporeMetadata, setSporeMetadata] = useState();\n    let left = useRef(false);\n\n    useEffect(() => {\n        if (audioUnit.current) {\n            audioUnit.current.dispose();\n            audioUnit.current = undefined;\n        }\n        setLatestSpore(undefined);\n        getLatestSpore(selected, tokenId, setSporeMetadata).then((spore) => {\n            if (left.current) {\n                spore.audioUnit.dispose();\n                return;\n            }\n            if (spore) {\n                audioUnit.current = spore.audioUnit;\n            }\n            setLatestSpore(spore);\n        });\n\n        return () => {\n        };\n    }, [setLatestSpore, tokenId, selected, setSporeMetadata]);\n\n    useEffect(() => {\n        return () =>{\n            left.current = true;\n            if (audioUnit.current) {\n                audioUnit.current.dispose();\n            }\n        }\n    }, []);\n\n\n    const goToLink = useCallback(() => {\n        window.open(links[tokenId], '_blank');\n    }, [tokenId]);\n\n    let className = \"simple-player\";\n    if (!latestSpore) {\n        className += \" hide\";\n    }\n    return (\n        <div className={className}>\n          {latestSpore === null ? <div\n                                    className=\"no-spores\">No spores have been made yet.</div> :\n           <div>\n             {!latestSpore && <UnknownProgressBar intervalTime={100} intervalPiece={3} text={selected ? \"Loading Spore #\" + selected.sporeId : \"Loading Latest Spore\"}/>}\n             {sporeMetadata &&\n              <AudioPlayer\n                store={store}\n                spore={latestSpore}\n                setPreset={setPreset}\n                sporeMetadata={sporeMetadata}\n                preset={preset}\n                saturation={80}\n                heat={latestSpore && latestSpore.heat}\n                creator={sporeMetadata.creator}\n                audioUnit={latestSpore && latestSpore.audioUnit}/>}\n           </div>}\n        {!selected && <div\n            onClick={() => setShowStemPlayer(true)}\n            className=\"pushable stem-player-button\">\n            Expand Player\n                      </div>}\n          {!selected &&\n           <div\n             onClick={() => goToLink()}\n             className=\"pushable stem-player-button view-on-opensea\">\n           {links[tokenId] ? <div>\n               OpenSea <span>↗</span>\n                             </div> : \"Soon\"}\n           </div>}\n          {selected &&\n           <div className=\"stem-player-button mint-spore\">\n             Mint Spore\n             <div className=\"spore-tooltip\">\n               to mint, you must own a spore player\n             </div>\n           </div>}\n       </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SimplePlayer);\n","class LStorage {\n    constructor() {\n    }\n\n    setItem(a,b) {\n        if (window.isNFT) {\n            return;\n        }\n        return window.localStorage.setItem(a,b);\n        \n    }\n\n    removeItem(a) {\n        if (window.isNFT) {\n            return;\n        }\n        window.localStorage.removeItem(a);\n    }\n\n    getItem(a) {\n        if (window.isNFT) {\n            return null;\n        }\n        return window.localStorage.getItem(a);\n    }\n}\n\nexport const lstorage = new LStorage();\n","import {web3} from 'decentralized/web3.js';\nimport {lstorage} from 'utils/lstorage.js';\n\nlet cache = {};\n\nexport const getBlockDate = async (blockNumber) => {\n    let storage = lstorage;\n    if (storage.getItem('blockDate.' + blockNumber)) {\n        return new Date(storage.getItem('blockDate.' + blockNumber) * 1000);\n    }\n    if (blockNumber === undefined) {\n        return undefined;\n    }\n    let block = await web3.eth.getBlock(blockNumber);\n    if (block === null) {\n        return new Date();\n    }\n    let date = new Date(block.timestamp * 1000);\n    storage.setItem('blockDate.' + blockNumber, block.timestamp);\n    return date;\n}\n\n \n","import React, { useEffect, useCallback, useState} from 'react';\nimport SporeHeatMap from './SporeHeatMap.js';\nimport {formatDate} from 'utils/formatDate.js';\nimport {truncate} from './AudioPlayer.js';\nimport {connect} from 'react-redux';\nimport ipfs from 'decentralized/Ipfs.js';\nimport {getBlockDate} from 'utils/getBlockDate.js';\n\nconst CLOSER = 60*48*60*1000;\nconst CLOSER_MIN = 60*60*1000;\nconst _formatDate = (date) => {\n    let dist = new Date().getTime() - date.getTime() \n    if (dist < CLOSER_MIN) {\n        return `${Math.round(dist / 1000 / 60 )} min. ago`;\n    } else if (dist < CLOSER) {\n        let hours = Math.round(dist / 1000 / 60 / 60);\n        if (hours === 1) {\n            return `${hours} hours ago`;\n        }\n        return `${hours} hour ago`;\n    }\n    return formatDate(date);\n};\n\nconst SporeItem = ({spore, isSelected, setSelected}) => { \n    let [date, setDate] = useState();\n    let [heat, setHeat] = useState();\n    useEffect(() => {\n        getBlockDate(spore.blockNumber).then(setDate);\n    }, [spore]);\n\n    useEffect(() => {\n        ipfs.getJson(spore.dataHash).then(\n            setHeat);\n    }, [spore]);\n\n    return (\n        <div\n          onClick={() => {\n              ipfs.cancel();\n              setSelected(spore);\n          }}\n          className={isSelected ? \"spore-item selected\" : \"spore-item\"}>\n          <div className=\"spore-id\">\n            Spore #{spore.sporeId}\n          </div>\n          <SporeHeatMap heat={heat}/>\n          {/*<div className=\"hyphen\"/>*/}\n          <div className=\"spore-creator\">\n            {truncate(spore.creator)}\n          </div>\n          <div className=\"spore-date\">\n            {date && _formatDate(date)}\n          </div>\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SporeItem);\n","export function formatDate(date) {\n    return (date.getMonth() + 1) + '/' + date.getDate();\n}\n\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport SimplePlayer from \"components/spore/SimplePlayer.js\";\nimport {useConsumeWheel} from \"components/hooks/useConsumeWheel.js\"\nimport SporeItem from './SporeItem.js';\nimport {getAllSpores} from './getSpores.js';\nimport {connect} from 'react-redux';\n\nconst SporesView = ({store, setShowStemPlayer, tokenId, audioUnit, preset, setPreset}) => { \n    let [spores, setSpores] = useState([]);\n    let ref = useRef();\n    let [selected, setSelected] = useState();\n\n    useEffect(() => {\n        getAllSpores(tokenId).then((spores) => {\n            setSpores(spores);\n        });\n    }, [setSpores, tokenId]);\n\n    // useConsumeWheel(ref);\n\n    return (\n        <div className=\"list-and-player\">\n          <div ref={ref} className=\"spores-list\">\n            {spores.length === 0 && <div className=\"no-spores-yet\">No spores have been detected on-chain.</div>}\n            {spores.map(x =>\n                <SporeItem isSelected={x === selected} setSelected={setSelected} spore={x}/>)}\n          </div>\n          {selected &&\n           <SimplePlayer\n             preset={preset}\n             setPreset={setPreset}\n             store={store} audioUnit={audioUnit} selected={selected} setShowStemPlayer={setShowStemPlayer}/>}\n          \n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SporesView);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './recording.scss';\n\nconst RecordingIndicator = (props) => { \n    let [playing, setPlaying] = useState(false);\n\n    useEffect(() => {\n        window.addEventListener(\"message\", onMessage, false);\n    }, [setPlaying]);\n\n    const onMessage = useCallback((e) => {\n        if (e.data && Array.isArray(e.data.type) && e.data.type[0] === \"sequencer.start\") {\n            setPlaying(true);\n        } else if (e.data && Array.isArray(e.data.type) && e.data.type[0] === \"sequencer.stop\") {\n            setPlaying(false);\n        }\n    }, [setPlaying]);\n\n\n    let className = \" recording-indicator\";\n    if (playing) {\n        className += \" is-recording\";\n    }\n\n    return (<div className={className}>\n            </div>\n           );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecordingIndicator);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\n\nconst Mushroom = ({materials, nodes, mushroomMat, position, scale=0.5}) => { \n    return (\n        <group name=\"mushroom 3\" position={position} rotation={[0.12, 0, 0]} scale={scale}>\n          <mesh\n            name=\"hat\"\n            geometry={nodes.hat.geometry}\n            material={mushroomMat}\n            castShadow\n            receiveShadow\n            position={[109.15, 398.99, 297.3]}\n            scale={[0.49, 1.1, 0.49]}\n          />\n          <mesh\n            name=\"feet\"\n            geometry={nodes.feet.geometry}\n            material={materials.feet}\n            castShadow\n            receiveShadow\n            position={[103.16, 165.95, 307.5]}\n            scale={[0.36, 1, 0.5]}\n          />\n      </group>);\n}\n\nexport default Mushroom;\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\n\nconst Mushroom2 = ({materials, nodes, mushroomMat, position, scale=1}) => { \n    return (\n        <group name=\"mushroom1\" position={position} rotation={[0.12, 0, 0]} scale={scale}>\n          <mesh\n            name=\"top1\"\n            geometry={nodes.top1.geometry}\n            material={mushroomMat}\n            castShadow\n            receiveShadow\n            position={[-97.07, -4.34, 14.33]}\n          />\n          <mesh\n            name=\"bottom1\"\n            geometry={nodes.bottom1.geometry}\n            material={nodes.bottom1.material}\n            castShadow\n            receiveShadow\n            position={[-97.07, -4.34, 14.33]}\n          />\n        </group>);\n}\n\nexport default Mushroom2;\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\n\nconst Mushroom3 = ({materials, nodes, mushroomMat, position, scale=1}) => { \n    return (\n        <group name=\"mushroom2\" position={position} rotation={[0.12, 0, 0]} scale={scale}>\n          <mesh\n            name=\"top2\"\n            geometry={nodes.top2.geometry}\n            material={mushroomMat}\n            castShadow\n            receiveShadow\n            position={[7.16, 13.06, 3.97]}\n          />\n          <mesh\n            name=\"bottom2\"\n            geometry={nodes.bottom2.geometry}\n            material={nodes.bottom2.material}\n            castShadow\n            receiveShadow\n            position={[7.16, 13.06, 3.97]}\n          />\n        </group>);\n}\n\nexport default Mushroom3;\n","import * as THREE from 'three'\nimport {isMobile} from 'react-device-detect';\nimport useSpline from '@splinetool/r3f-spline'\nimport { OrthographicCamera } from '@react-three/drei'\nimport React, { useRef } from 'react'\nimport Mushroom from './Mushroom.js';\nimport Mushroom2 from './Mushroom2.js';\nimport Mushroom3 from './Mushroom3.js';\n\nexport default function Scene({ ...props }) {\n  const { nodes, materials } = useSpline('https://prod.spline.design/4CF6xEKxsHbnQn4O/scene.splinecode')\n  const sceneCamera = useRef()\n\n  const textureLoader = new THREE.TextureLoader();\n  const threeTone = textureLoader.load( 'threeTone.jpg' );\n  threeTone.minFilter = THREE.NearestFilter;\n  threeTone.magFilter = THREE.NearestFilter;\n\n  const mushroomMat = new THREE.MeshToonMaterial( { color: 0x049EF4, gradientMap: threeTone });\n\n  window.addEventListener(\"message\", receiveMessage, false);\n  function receiveMessage(event) {\n    if (event.origin !== \"https://zequencer.mypinata.cloud\") {\n      return;\n    } else {\n      var message = event.data;\n\n      if (Array.isArray(message)) {\n        if (message.length == 4) {\n          mushroomMat.color.r = message[3]\n          mushroomMat.color.g = message[1]\n          mushroomMat.color.b = message[0]\n          mushroomMat.color.addScalar(0.25 * message[2])\n        }\n      }\n    }\n  }\n\n  return (\n    <>\n      <group {...props} dispose={null}>\n        <Mushroom position={[145, -100, 0]} mushroomMat={mushroomMat} nodes={nodes} materials={materials} />\n        <Mushroom3 position={[-110, -50, 0]} scale={2} mushroomMat={mushroomMat} nodes={nodes} materials={materials} />\n        <Mushroom3 position={[110, -90, 0]} scale={1.5} mushroomMat={mushroomMat} nodes={nodes} materials={materials} />\n\n        <Mushroom2 position={[100, 0, 0]} scale={1} mushroomMat={mushroomMat} nodes={nodes} materials={materials} />\n        <Mushroom3 position={[20, -25, -190]} scale={1} mushroomMat={mushroomMat} nodes={nodes} materials={materials} />\n\n        <Mushroom position={[45, 10, -190]} scale={0.1} mushroomMat={mushroomMat} nodes={nodes} materials={materials} />\n        <Mushroom2 position={[-20, 25, -290]} scale={0.7} mushroomMat={mushroomMat} nodes={nodes} materials={materials} />\n        <directionalLight\n          name=\"Directional Light\"\n          castShadow\n          intensity={1}\n          shadow-mapSize-width={1024}\n          shadow-mapSize-height={1024}\n          shadow-camera-near={1}\n          shadow-camera-far={2500}\n          shadow-camera-left={-1250}\n          shadow-camera-right={1250}\n          shadow-camera-top={1250}\n          shadow-camera-bottom={-1250}\n          position={[-461.22, 260.59, 1269.06]}\n        />\n       <OrthographicCamera\n          name=\"Personal Camera\"\n          ref={sceneCamera}\n          makeDefault={true}\n          far={100000}\n          near={-100000}\n          position={[0, 0, 1000]}\n          zoom={isMobile ? .15 : .27}\n        />\n        <hemisphereLight name=\"Default Ambient Light\" intensity={1} color=\"#eaeaea\" position={[0, 1, 0]} />\n      </group>\n    </>\n  )\n}\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport SporePlaylist from \"components/playlist/SporePlaylist.js\";\nimport RecordingIndicator from 'components/buttons/RecordingIndicator.js';\nimport App from 'components/SP-2D/App.js';\nimport {connect} from 'react-redux';\n\nlet players = {\n    // LUXURY\n    /*\n    1: \"https://zequencer.mypinata.cloud/ipfs/QmU4WDJwh2Ya6jqt8hXMvWdpWmt5Afq9LrmbKbgbevY3oQ/?tokenId=1\", // SMOKE LUXURY\n    2: \"https://zequencer.mypinata.cloud/ipfs/QmP5o4XjJGikxKw1KkDCgmgmxwwCkNFKezZFPyzWPPpNax/?tokenId=2\",\n    3: \"https://zequencer.mypinata.cloud/ipfs/QmYBEvQD3GqEU8Wzd6kCCEBeRjXvVJgecP4MMn3HCmcA8U/?tokenId=3\",\n    4: \"https://zequencer.mypinata.cloud/ipfs/QmWtqt2UAj8mJaxT2gztD22gBELPNsBpsrnSvhngMMP28d/?tokenId=4\",\n    5: \"https://zequencer.mypinata.cloud/ipfs/QmSaawSKPp5E27Rw72crmLwuAk5UkoHJWMCM9eK9WekiKe/?tokenId=5\",\n    6: \"https://zequencer.mypinata.cloud/ipfs/QmRCyZfaPevNRrxbExgtykHka1Tf1UjKf5C2c6z2PoVTDZ/?tokenId=6\",\n    */\n    \"jeremih\": \"https://zequencer.mypinata.cloud/ipfs/QmeVr2geKp8Z2SX3awdp3JWy4rKNvXKfPq3mToouXhfwcy/?tokenId=666\",\n    \"doodles1\": \"https://zequencer.mypinata.cloud/ipfs/QmWzLQzUsZ2jquJ54HhckXoX9sNBrYWp13NWQDJfGY5pk1/?tokenId=666\",\n    \"doodles2\": \"https://zequencer.mypinata.cloud/ipfs/QmWryrHhY6WickEfKDBHQMv2WPwCGqKp1zwZk5kXGRHNbN/?tokenId=666\",\n    \"ragnarok\": \"https://zequencer.mypinata.cloud/ipfs/QmVquHENE1Dcyq839ajJWRuBHttvuiT5WvcLbqwoEbVvDa/?tokenId=666\",\n    // colors:\n    /*\n    1: \"https://zequencer.mypinata.cloud/ipfs/QmPV4fERYfcESR5aguCUGCwUhLPJWL45ZBvwgXoBD8xmNh/?tokenId=1\",\n    2: \"https://zequencer.mypinata.cloud/ipfs/QmPLV5GuxQuzZoD5MizDd1AzfgoDRUt7gzm8B2VfAVhqA6/?tokenId=2\",\n    3: \"https://zequencer.mypinata.cloud/ipfs/QmSY5bybSoRxkJxaenK4r3VRCci9nZqz3QvonZCWzaqWAV/?tokenId=3\",\n    4: \"https://zequencer.mypinata.cloud/ipfs/QmWtqt2UAj8mJaxT2gztD22gBELPNsBpsrnSvhngMMP28d/?tokenId=4\",\n    5: \"https://zequencer.mypinata.cloud/ipfs/QmSaawSKPp5E27Rw72crmLwuAk5UkoHJWMCM9eK9WekiKe/?tokenId=5\",\n    6: \"https://zequencer.mypinata.cloud/ipfs/QmXBLreHXuW3dj9UxtdrktVrUr64TuTSEFBNQ323CKpxHc/?tokenId=6\"\n    */\n    // SLIDER CALIBRATION\n    //1: \"https://zequencer.mypinata.cloud/ipfs/QmNciiSvquyNLpy2Uq6PSKW3k82UHb3UbSbe9tUMKa9S5L/?tokenId=1\",\n    //2: \"https://zequencer.mypinata.cloud/ipfs/QmSM8A1o2QsxjK7jdmaAZGML8FtbfJ6osMjvfSudAcGU4Z/?tokenId=2\",\n    //3: \"https://zequencer.mypinata.cloud/ipfs/QmaZki4iZPcMXehtNLMVkggUjZZ29fJZmqaZG7KVppRrdq/?tokenId=3\",\n    //RAINBOW\n    /*\n    1: \"https://zequencer.mypinata.cloud/ipfs/QmWzy4h8nXafokLDtK8aUGnZU7ikBVbNQfVZXYJxRtas2x/?tokenId=1\",\n    2: \"https://zequencer.mypinata.cloud/ipfs/QmNevpN2mqWhZzFQGHDENbLQSPJeGRv9aL2JT9bh4cBeBm/?tokenId=2\",\n    3: \"https://zequencer.mypinata.cloud/ipfs/QmbNqiGkNPgwQvZzo7CevedRhig8eD7P3PtKNCZgAutfBu/?tokenId=3\",\n    */\n    //UNIT CIRCLE\n    //1: \"https://zequencer.mypinata.cloud/ipfs/Qmdx16tRNijEMMU3U1aocBHfQRi8Lf8R2zPcPQEtBewGVP/?tokenId=1\",\n    //1: \"https://zequencer.mypinata.cloud/ipfs/QmXk1VHJLJjxsEVwHFicYgTbs1BCiWf4vFxxdgeZTNUY6q/?tokenId=1\",\n    //2: \"https://zequencer.mypinata.cloud/ipfs/QmVubUHozCNQPD9ExCnBgd3Lv7j9xoRXavJpc7apB64g55/?tokenId=2\",\n    //3: \"https://zequencer.mypinata.cloud/ipfs/QmYgH6NV9URi4mnpJVDejtbeQodiCVL2rk9in9yU63Y1tA/?tokenId=3\"\n    //1: \"https://zequencer.mypinata.cloud/ipfs/QmbfvpDvPAH9F1p2jmHDXC52a4ho4bbBeAQ8kqgp25CyUM/?tokenId=1\",\n    //1: \"https://zequencer.mypinata.cloud/ipfs/QmUcPkhq5ZpXfjKTUnwraJG1vDpWmkRYMNVp7yh2vGsD72/?tokenId=1\",\n    //1: \"https://zequencer.mypinata.cloud/ipfs/QmaTizVBjcKG6vsjLQ2qW4B4wYBFJYTsmDkEGXk7V2q8Ri/?tokenId=1\",\n    //1: \"https://zequencer.mypinata.cloud/ipfs/QmY9yhU4WsnXPf28uCQ6n5rm9SzS4QWuNjaJ5cUWp43iNp/?tokenId=1\",\n    //1: \"https://zequencer.mypinata.cloud/ipfs/QmYErgGMEmZLnnP1vAvMKQNMVTPqKJh2WiLETujZXDS2HR/?tokenId=1\",\n    //2: \"https://zequencer.mypinata.cloud/ipfs/QmVoDtvCGKnVdr7jiTBDhmetqZ6sDXM5ufXKxfsrGWB5oi/?tokenId=2\",\n    //2: \"https://zequencer.mypinata.cloud/ipfs/QmTBM3fb6fq4eDQEvAdavaJhfCAf3rfBRoPTsRk6JChFKc/?tokenId=2\",\n    //2: \"https://zequencer.mypinata.cloud/ipfs/QmRbr2iXG5z75LTBXccxF8vKfHzT34ZtrCvPhG5RLXLf57/?tokenId=2\",\n    //\"https://zequencer.mypinata.cloud/ipfs/QmeGU4SzFDPdkv38kwAqWZFSXjiwaw4yb6DaNgmRax56P2/?tokenId=2\",\n    //3: \"https://zequencer.mypinata.cloud/ipfs/QmdmGpP8EwuDweUrcyXoB1HghvuyLFCVbzKrp4YVLGoCh7/?tokenId=3\"\n    //3: \"https://zequencer.mypinata.cloud/ipfs/QmaZXaJfv41yV9SeyiyxHPGmgxbAPktpYBezY9SHMkzD2V/?tokenId=3\",\n            \n    //3: \"https://zequencer.mypinata.cloud/ipfs/QmRYo8dbhz2RsoPHATi2FL81hXoziT2R6zzxHSRhQbHn3S/?tokenId=3\"\n    //3: \"https://zequencer.mypinata.cloud/ipfs/QmbxrsWoPFFjfSgLK6AytVzBnCUwWDTR3J5ApFRh4yZzWD/?tokenId=3\"\n};\nconst StemPlayer = ({tokenId}) => { \n    let ref = useRef();\n\n    useEffect(() => {\n        var root = document.getElementsByTagName( 'html' )[0]; // '0' to assign the first (and only `HTML` tag)\n        root.setAttribute( 'class', 'bad-scroll' );\n        return () => {\n            root.setAttribute( 'class', '' );\n        };\n    }, []);\n\n    let url = tokenId <= 20 ? \"https://zequencer.mypinata.cloud/ipfs/Qmb57sHJC8Zq6AYRPy6gGzqYQpevjRAnPbkqRbJTPt1n4o/?tokenId=\" + tokenId + \"&gallery=true\" : players[tokenId];\n    //let url = tokenId <= 20 ? \"http://localhost:9090/nftviewer/QmTu96UweijKQquvTubt25jAM2SyGDm57T7pbEJT7ADZ33/?tokenId=\" + tokenId + \"&gallery=true\" : players[tokenId];\n\n    window.stemIFrame = ref;\n    return [\n        <RecordingIndicator/>,\n        <SporePlaylist/>,\n        (<iframe\n           ref={ref}\n           sandbox=\"allow-scripts allow-same-origin\"\n           //height={600}\n           //width={600}\n           height={tokenId <= 20 ? \"400\" : \"360\"}\n           width={tokenId <= 20 ? \"340\" : \"310\"}\n           aria-describedby=\"spore\"\n           alt=\"spore.vision\"\n           src={url}\n           className=\"zora-mediaObject css-hnzuw7 zora-mediaObject--mediaLoaded zora-mediaObject--isFullPage\"\n           style={{borderWidth: \"0px\"}}>\n         </iframe>)\n    ];\n}\n\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StemPlayer);\n","import React, {useCallback} from 'react';\nimport {connect} from 'react-redux';\nimport { EffectComposer, Bloom } from '@react-three/postprocessing'\nimport { Suspense } from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport { OrbitControls } from '@react-three/drei'\nimport Scene from './Scene'\nimport { KernelSize } from 'postprocessing'\nimport './styles.scss';\nimport {setShowPlaylistMenu} from 'actions/index.js';\n\nconst App = ({setShowPlaylistMenu, showPlaylistMenu}) => {\n    const onClick = useCallback((e) => {\n        setShowPlaylistMenu(!showPlaylistMenu);\n    }, [showPlaylistMenu]);\n\n  return (\n    <Suspense fallback={null}>\n      <div\n        onClick={onClick}\n        className='canvas-container'>\n        <Canvas\n          shadows flat linear>\n          <EffectComposer>\n            <Bloom\n              intensity={0.85}\n              kernelSize={KernelSize.LARGE}\n              luminanceThreshold={0.01}\n              luminanceSmoothing={0.5}\n            />\n          </EffectComposer>\n          <Scene />\n          <OrbitControls enableZoom={false} enableRotate={false} enablePan={false}/>\n        </Canvas>\n      </div>\n    </Suspense>\n  )\n}\nconst mapStateToProps = (state, props) => {\n  return {\n      showPlaylistMenu: state.playlist.showPlaylistMenu\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setShowPlaylistMenu: x => dispatch(setShowPlaylistMenu(x))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import UnknownProgressBar from 'components/progressbar/UnknownProgressBar.js';\nimport ipfs from 'decentralized/Ipfs.js';\nimport {isMobile} from 'react-device-detect';\nimport React, { useRef, useEffect, useCallback, useState} from 'react';\nimport PlayerHelper from './PlayerHelper.js';\nimport Credits from './Credits.js';\nimport Caurosel from './Caurosel.js';\nimport {useConsumeWheel} from \"components/hooks/useConsumeWheel.js\";\nimport SporesView from './SporesView.js';\nimport {pinAll} from './getSpores.js';\nimport {sleep} from 'utils/sleep.js';\nimport {useShader} from './sketch.js';\nimport StemPlayer from './StemPlayer.js';\nimport SimplePlayer from './SimplePlayer.js';\nimport {connect} from 'react-redux';\nimport './spore.scss';\n\nconst Spore = ({setPlayerChosen, playerChosen ,setShowStemPlayer, showStemPlayer, ...props}) => { \n    let [preset, setPreset] = useState();\n    let [uploading, setUploading] = useState();\n\n    let tokenId = props.match && props.match.params.tokenId;\n    if (tokenId) {\n        tokenId = parseInt(tokenId);\n    }\n    let audioUnit = useRef();\n    let [showCredits, setShowCredits] = useState(undefined);\n    //let [playerChosen, setPlayerChosen] = useState(tokenId);\n    //let [showStemPlayer, setShowStemPlayer] = useState(tokenId !== undefined);\n    let [showSpores, setShowSpores] = useState(false);\n    let [s, setS] = useState(false);\n    let [sequencerEngine, setSequencerEngine] = useState();\n    let [canvasBackground, setCanvasBackground]= useState();\n    let [customVideo, setCustomVideo] = useState();\n    let ref = useRef();\n\n //   useEffect(() => {\n//        pinAll();\n  //  }, []);\n\n    useEffect(() => {\n        setShowSpores(false);\n    }, [showStemPlayer, setShowSpores]);\n\n    useEffect(() => {\n        window.addEventListener(\"mousewheel\", preventDefault, {passive: false});\n        return () => window.removeEventListener(\"mousewheel\", preventDefault);\n    }, []);\n\n    useEffect(() => {\n        if (audioUnit.current && audioUnit.current.buffer) {\n            audioUnit.current.dispose();\n        }\n    }, [showStemPlayer]);\n\n    const preventDefault = (e) => e.preventDefault();\n\n    useEffect(() => {\n        document. title = \"Spores\"\n    }, []);\n\n    //useShader(ref, showStemPlayer);\n\n    let className = \"spore\";\n    if (showStemPlayer) {\n        className += \" showing-spore-player\";\n    }\n    if (showSpores) {\n        className += \" showing-spores\";\n    }\n\n    useEffect(() => {\n\n        let url = window.localStorage.getItem(\"custom-video-background\");\n        if (url) {\n            setCustomVideo(url);\n        }\n    }, [setCustomVideo]);\n\n    useEffect(() => {\n        window.addEventListener(\"drop\", onDrop);\n\n        window.addEventListener(\"dragenter\", function(e) {\n            e.preventDefault();\n            e.dataTransfer.effectAllowed = \"none\";\n            e.dataTransfer.dropEffect = \"none\";\n        }, false);\n        \n        window.addEventListener(\"dragover\", function(e) {\n            e.preventDefault();\n            e.dataTransfer.effectAllowed = \"none\";\n            //e.dataTransfer.dropEffect = \"none\";\n            return false;\n        });\n    }, [setCustomVideo, setUploading]);\n\n    const onDrop = useCallback((ev) => {\n        ev.preventDefault();\n        ev.dataTransfer.effectAllowed = \"none\";\n        ev.dataTransfer.dropEffect = \"none\";\n        \n        if (ev.dataTransfer.items) {\n            // Use DataTransferItemList interface to access the file(s)\n            let len = ev.dataTransfer.items.length;\n            for (var i = 0; i < ev.dataTransfer.items.length; i++) {\n                // If dropped items aren't files, reject them\n                if (ev.dataTransfer.items[i].kind === 'file') {\n                    setUploading(true);\n                    uploadFile(ev.dataTransfer.items[i].getAsFile())\n                        .then(url => {\n                            if (url) {\n                                setCustomVideo(url);\n                                window.localStorage.setItem(\"custom-video-background\", url);\n                            } \n                            setUploading(false);\n                        });\n                }\n            }\n        }\n    }, [setCustomVideo, setUploading]);\n\n    useEffect(() => {\n        if (showStemPlayer && !isMobile) {\n            setShowCredits(true);\n        }\n    }, [showStemPlayer, setShowCredits]);\n          \n    if (customVideo) {\n        className += \" custom-video-background\";\n    }\n    return (\n        <div\n          onDrop={onDrop}\n          ref={ref} className={className}>\n          {uploading && <div className=\"video-progress-bar\"><UnknownProgressBar width={200} text=\"Uploading Video Background\"/></div>}\n          <video\n            playsInline\n            className=\"rain-video\"\n            autoPlay\n            loop\n            muted\n            src={customVideo ? customVideo : isMobile ? \"/mobile-rain.mp4\" : \"/desktop-rain.mp4\"}/>\n          {showCredits && (showStemPlayer ? <PlayerHelper clear={() => setShowCredits(undefined)}/> : <Credits setShowCredits={setShowCredits}/>)}\n          {<Caurosel showStemPlayer={showStemPlayer || showSpores}\n                     setShowStemPlayer={(x) => {\n                         setShowStemPlayer(x);\n                         setShowSpores(x);\n                     }}\n                     playerChosen={playerChosen} setPlayerChosen={setPlayerChosen}/>}\n          {(playerChosen && !showStemPlayer && showSpores) && <SporesView\n                                                                setPreset={setPreset}\n                                                                preset={preset}\n                                                                store={props.store}\n                                                                audioUnit={audioUnit}\n                                                                tokenId={playerChosen} setShowStemPlayer={setShowStemPlayer}/>}\n          {playerChosen && !showSpores && (showStemPlayer ? <StemPlayer tokenId={playerChosen}/> :\n                                           <SimplePlayer\n                                             setPreset={setPreset}\n                                             preset={preset}\n                                             store={props.store}\n                                             audioUnit={audioUnit}\n                                             tokenId={playerChosen} setShowStemPlayer={setShowStemPlayer}/>)}\n          {playerChosen && (showSpores || showStemPlayer) &&\n           <div\n             onClick={() => {\n                 setShowStemPlayer(false);\n                 setShowSpores(false);\n             }}\n             className=\"spore-button pushable stem-player-button\">\n             See Latest Spore\n             <img className=\"spore-icon one-spore\" src=\"/one-spore.svg\"/>\n           </div>}\n          {playerChosen && !showSpores && !showStemPlayer &&\n           <div\n             onClick={() => setShowSpores(true)}\n             className=\"spore-button pushable stem-player-button\">\n             See All Spores <img className=\"spore-icon\" src=\"/spores-icon-glow2.svg\"/>\n           </div>}\n          <div onClick={() => setShowCredits(true)} className=\"explainer-button\">\n            ?\n          </div>\n        </div>\n    );\n};\n\nconst uploadFile = (file, setter) => {\n    return new Promise(resolve => {\n        let reader = new FileReader();\n        if (!file.name.includes('.mp4')) {\n            window.alert(\"Only accepts .mp4\");\n            resolve();\n            return;\n        }\n        reader.readAsArrayBuffer(file);\n        reader.onloadend = async () => {\n            let raw = reader.result;\n            if (raw.byteLength > 3*17567767) {\n                window.alert(\"Video file must be under 15 mb\");\n                resolve();\n                return;\n            }\n            let hash = await ipfs.addArrayBuffer(raw);\n            let url = \"https://zequencer.io/ipfs/\" + hash;\n            resolve(url);\n        };\n    });\n};\n          \nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Spore);\n","import React from 'react';\nimport * as THREE from \"three\";\nimport useSpline from '@splinetool/r3f-spline'\nimport { PerspectiveCamera, Stars, Sparkles } from '@react-three/drei'\nimport { useEffect, useRef } from 'react'\nimport { useFrame } from \"@react-three/fiber\";\n\nexport default function Scene({ scroll, ...props }) {\n  const { nodes, materials } = useSpline('https://prod.spline.design/3Ksr4pXhJtOTxLZG/scene.splinecode')\n  const camera = useRef();\n  const lerpedScroll = useRef(0);\n\n  const curve = new THREE.CatmullRomCurve3([\n    new THREE.Vector3( -2, 0, 195 ), \n    new THREE.Vector3( -2, -15, 30 ),\n    new THREE.Vector3( -2, -100, 50 )\n  ]);\n\n  useEffect(() => {\n    if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)){\n      camera.current.fov = 60\n    }\n  })\n\n  useFrame(() => {\n    lerpedScroll.current += (scroll.current - lerpedScroll.current) * 0.04;\n    const t = lerpedScroll.current;\n    if (t < 1) {\n      camera.current.position.set(\n        curve.getPointAt(t).x,\n        curve.getPointAt(t).y,\n        curve.getPointAt(t).z\n      );\n    }\n  })\n\n  return (\n    <>\n      <color attach=\"background\" args={['#4b4d52']} />\n      <fog attach=\"fog\" args={['#4b4d52', 73.518, 187.199]} />\n      <group {...props} dispose={null}>\n      <Sparkles count={100} scale={[50,70,40]} size={20} speed={1.5} position={[-2, -75, -5]}/>\n      <Stars radius={350} depth={50} count={5000} factor={8} saturation={1} fade speed={0.5} />\n      <PerspectiveCamera\n          name=\"Personal Camera\"\n          ref={camera}\n          makeDefault={true}\n          far={100000}\n          near={5}\n          fov={45}\n          position={[0,0,200]}\n          rotation={[0.1,0,0]}\n        />\n        <mesh\n          name=\"root 4\"\n          geometry={nodes['root 4'].geometry}\n          material={nodes['root 4'].material}\n          castShadow\n          receiveShadow\n          position={[-39.88, -125.68, -61]}\n          rotation={[-0.43, 0.4, 1.3]}\n          scale={[16.18, 17.1, 20.82]}\n        />\n        <mesh\n          name=\"root 3\"\n          geometry={nodes['root 3'].geometry}\n          material={nodes['root 3'].material}\n          castShadow\n          receiveShadow\n          position={[31.88, -78.42, -53.6]}\n          rotation={[-0.24, -0.68, 0.21]}\n          scale={[28.63, 22.5, 9.4]}\n        />\n        <mesh\n          name=\"root 2\"\n          geometry={nodes['root 2'].geometry}\n          material={nodes['root 2'].material}\n          castShadow\n          receiveShadow\n          position={[-36.47, -47.67, -43.45]}\n          rotation={[0.55, 0.32, 0]}\n          scale={[11.68, 12.35, 9.4]}\n        />\n        <mesh\n          name=\"root\"\n          geometry={nodes.root.geometry}\n          material={nodes.root.material}\n          castShadow\n          receiveShadow\n          position={[-0.97, -20.37, -6.91]}\n          rotation={[Math.PI / 2, 0, 0]}\n          scale={[11.68, 9.4, 9.4]}\n        />\n        <mesh\n          name=\"cover\"\n          geometry={nodes.cover.geometry}\n          material={materials.ground}\n          castShadow\n          receiveShadow\n          position={[17.99, -14.47, 21.13]}\n          rotation={[-Math.PI / 2, 0, 0]}\n        />\n        <pointLight\n          name=\"Point Light 3\"\n          castShadow\n          intensity={15}\n          decay={7}\n          distance={100}\n          shadow-mapSize-width={256}\n          shadow-mapSize-height={256}\n          shadow-camera-near={100}\n          shadow-camera-far={2500}\n          color=\"#00fbfe\"\n          position={[28.37, -82.6, -42.87]}\n          scale={0.21}\n        />\n        <pointLight\n          name=\"Point Light 4\"\n          castShadow\n          intensity={15}\n          decay={7}\n          distance={100}\n          shadow-mapSize-width={256}\n          shadow-mapSize-height={256}\n          shadow-camera-near={100}\n          shadow-camera-far={2500}\n          color=\"#83d9fe\"\n          position={[-26, -110.71, -29.43]}\n          scale={0.21}\n        />\n        <pointLight\n          name=\"Point Light 2\"\n          castShadow\n          intensity={15}\n          decay={7}\n          distance={100}\n          shadow-mapSize-width={256}\n          shadow-mapSize-height={256}\n          shadow-camera-near={100}\n          shadow-camera-far={2500}\n          color=\"#63ebf4\"\n          position={[-33.08, -48.62, -36.51]}\n          scale={0.21}\n        />\n        <mesh\n          name=\"filler\"\n          geometry={nodes.filler.geometry}\n          material={materials.ground}\n          castShadow\n          receiveShadow\n          position={[-0.71, -14.22, -21.18]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          scale={[3.44, 2.84, 0.21]}\n        />\n        <mesh\n          name=\"underground\"\n          geometry={nodes.underground.geometry}\n          material={materials.ground}\n          castShadow\n          receiveShadow\n          position={[-0.77, -72.19, -34.95]}\n          scale={[2.06, 3.71, 1.37]}\n        />\n        <mesh\n          name=\"Rock_Moss_3\"\n          geometry={nodes.Rock_Moss_3.geometry}\n          material={nodes.Rock_Moss_3.material}\n          castShadow\n          receiveShadow\n          position={[22.34, -6.66, -17.11]}\n          rotation={[-Math.PI / 2, 0, -2.96]}\n          scale={[12.55, 19.32, 19.32]}\n        />\n        <mesh\n          name=\"Rock_Moss_1\"\n          geometry={nodes.Rock_Moss_1.geometry}\n          material={nodes.Rock_Moss_1.material}\n          castShadow\n          receiveShadow\n          position={[-39.03, -6.29, -3.84]}\n          rotation={[-Math.PI / 2, 0, -0.02]}\n          scale={34.86}\n        />\n        <mesh\n          name=\"Plant_1 6\"\n          geometry={nodes['Plant_1 6'].geometry}\n          material={nodes['Plant_1 6'].material}\n          castShadow\n          receiveShadow\n          position={[26.99, -10.43, 142.73]}\n          rotation={[-Math.PI / 2, 0, 1.53]}\n          scale={[3.27, 3.65, 3.46]}\n        />\n        <mesh\n          name=\"Plant_1 13\"\n          geometry={nodes['Plant_1 13'].geometry}\n          material={nodes['Plant_1 13'].material}\n          castShadow\n          receiveShadow\n          position={[4.22, -11.49, 58.39]}\n          rotation={[-1.58, 0.01, 2.21]}\n          scale={[8.57, 8.57, 6.3]}\n        />\n        <mesh\n          name=\"Plant_1 5\"\n          geometry={nodes['Plant_1 5'].geometry}\n          material={nodes['Plant_1 5'].material}\n          castShadow\n          receiveShadow\n          position={[-21.52, -10.43, 154.94]}\n          rotation={[-Math.PI / 2, 0, 1.53]}\n          scale={8.57}\n        />\n        <mesh\n          name=\"Plant_1 3\"\n          geometry={nodes['Plant_1 3'].geometry}\n          material={nodes['Plant_1 3'].material}\n          castShadow\n          receiveShadow\n          position={[-18.97, -10.43, 104.6]}\n          rotation={[-Math.PI / 2, 0, 0.29]}\n          scale={8.57}\n        />\n        <mesh\n          name=\"Plant_1 2\"\n          geometry={nodes['Plant_1 2'].geometry}\n          material={nodes['Plant_1 2'].material}\n          castShadow\n          receiveShadow\n          position={[-20.49, -10.43, 80.95]}\n          rotation={[-Math.PI / 2, 0, 1.38]}\n          scale={6.48}\n        />\n        <mesh\n          name=\"Plant_1 10\"\n          geometry={nodes['Plant_1 10'].geometry}\n          material={nodes['Plant_1 10'].material}\n          castShadow\n          receiveShadow\n          position={[-23.72, -10.43, 17.69]}\n          rotation={[-Math.PI / 2, 0, 2.8]}\n          scale={[3.12, 4.42, 6.02]}\n        />\n        <mesh\n          name=\"Plant_1 9\"\n          geometry={nodes['Plant_1 9'].geometry}\n          material={nodes['Plant_1 9'].material}\n          castShadow\n          receiveShadow\n          position={[-35.51, -10.43, 33.82]}\n          rotation={[-Math.PI / 2, 0, 3.58]}\n          scale={[3.12, 4.42, 7.7]}\n        />\n        <mesh\n          name=\"Plant_1 4\"\n          geometry={nodes['Plant_1 4'].geometry}\n          material={nodes['Plant_1 4'].material}\n          castShadow\n          receiveShadow\n          position={[10.43, -10.43, 88.31]}\n          rotation={[-1.36, -0.08, 2.81]}\n          scale={[3.12, 4.42, 7.7]}\n        />\n        <mesh\n          name=\"Plant_1 8\"\n          geometry={nodes['Plant_1 8'].geometry}\n          material={nodes['Plant_1 8'].material}\n          castShadow\n          receiveShadow\n          position={[-10.97, -11.75, 118.47]}\n          rotation={[-Math.PI / 2, 0, 1.97]}\n          scale={[8.57, 13.55, 4.8]}\n        />\n        <mesh\n          name=\"Plant_1 11\"\n          geometry={nodes['Plant_1 11'].geometry}\n          material={nodes['Plant_1 11'].material}\n          castShadow\n          receiveShadow\n          position={[14.22, -6.62, 2.35]}\n          rotation={[-1.45, -0.07, -0.61]}\n          scale={[12.72, 9.24, 8.26]}\n        />\n        <mesh\n          name=\"Plant_1 7\"\n          geometry={nodes['Plant_1 7'].geometry}\n          material={nodes['Plant_1 7'].material}\n          castShadow\n          receiveShadow\n          position={[-1.92, -11.75, 80.9]}\n          rotation={[-1.53, -0.09, 0.47]}\n          scale={8.57}\n        />\n        <mesh\n          name=\"Plant_1 12\"\n          geometry={nodes['Plant_1 12'].geometry}\n          material={nodes['Plant_1 12'].material}\n          castShadow\n          receiveShadow\n          position={[-19.89, -10.43, 57.32]}\n          rotation={[-1.5, 0.14, 2.69]}\n          scale={8.57}\n        />\n        <mesh\n          name=\"Plant_1\"\n          geometry={nodes.Plant_1.geometry}\n          material={nodes.Plant_1.material}\n          castShadow\n          receiveShadow\n          position={[33.26, -10.43, 71.65]}\n          rotation={[-Math.PI / 2, 0, 1.38]}\n          scale={8.57}\n        />\n        <mesh\n          name=\"Plant_4 4\"\n          geometry={nodes['Plant_4 4'].geometry}\n          material={nodes['Plant_4 4'].material}\n          castShadow\n          receiveShadow\n          position={[-0.99, -11.07, 142.88]}\n          rotation={[-Math.PI / 2, 0, 0.69]}\n          scale={4.22}\n        />\n        <mesh\n          name=\"Plant_4 2\"\n          geometry={nodes['Plant_4 2'].geometry}\n          material={nodes['Plant_4 2'].material}\n          castShadow\n          receiveShadow\n          position={[12.05, -11.07, 123.52]}\n          rotation={[-Math.PI / 2, 0, -0.75]}\n          scale={7.51}\n        />\n        <mesh\n          name=\"Plant_4 3\"\n          geometry={nodes['Plant_4 3'].geometry}\n          material={nodes['Plant_4 3'].material}\n          castShadow\n          receiveShadow\n          position={[28.36, -10.43, 111.41]}\n          rotation={[-Math.PI / 2, 0, -0.35]}\n          scale={8.34}\n        />\n        <mesh\n          name=\"Plant_4 6\"\n          geometry={nodes['Plant_4 6'].geometry}\n          material={nodes['Plant_4 6'].material}\n          castShadow\n          receiveShadow\n          position={[-16.63, -7.86, 0.12]}\n          rotation={[-1.56, -0.02, 0.11]}\n          scale={8.22}\n        />\n        <mesh\n          name=\"Plant_4 5\"\n          geometry={nodes['Plant_4 5'].geometry}\n          material={nodes['Plant_4 5'].material}\n          castShadow\n          receiveShadow\n          position={[26.04, -10.43, 40.82]}\n          rotation={[-Math.PI / 2, 0, -0.21]}\n          scale={13.08}\n        />\n        <mesh\n          name=\"Plant_4\"\n          geometry={nodes.Plant_4.geometry}\n          material={nodes.Plant_4.material}\n          castShadow\n          receiveShadow\n          position={[-28.57, -10.43, 93.01]}\n          rotation={[-1.55, 0.05, -0.35]}\n          scale={13.08}\n        />\n        <mesh\n          name=\"Plant_5 2\"\n          geometry={nodes['Plant_5 2'].geometry}\n          material={nodes['Plant_5 2'].material}\n          castShadow\n          receiveShadow\n          position={[27.86, -12.28, 132.65]}\n          rotation={[-Math.PI / 2, 0, -1.18]}\n          scale={6.95}\n        />\n        <mesh\n          name=\"Plant_5 3\"\n          geometry={nodes['Plant_5 3'].geometry}\n          material={nodes['Plant_5 3'].material}\n          castShadow\n          receiveShadow\n          position={[-21.31, -7.6, -33.41]}\n          rotation={[-Math.PI / 2, 0, -0.66]}\n          scale={10.19}\n        />\n        <mesh\n          name=\"Plant_5\"\n          geometry={nodes.Plant_5.geometry}\n          material={nodes.Plant_5.material}\n          castShadow\n          receiveShadow\n          position={[-24.42, -7.6, 44.64]}\n          rotation={[-Math.PI / 2, 0, -0.66]}\n          scale={10.19}\n        />\n        <mesh\n          name=\"PineTree_1\"\n          geometry={nodes.PineTree_1.geometry}\n          material={nodes.PineTree_1.material}\n          castShadow\n          receiveShadow\n          position={[49.88, -9.7, 94.77]}\n          rotation={[-1.52, -0.08, -0.87]}\n          scale={20}\n        />\n        <mesh\n          name=\"PineTree_2 2\"\n          geometry={nodes['PineTree_2 2'].geometry}\n          material={nodes['PineTree_2 2'].material}\n          castShadow\n          receiveShadow\n          position={[34.82, -7.81, 49.22]}\n          rotation={[-Math.PI / 2, 0.03, 0]}\n          scale={24.02}\n        />\n        <mesh\n          name=\"PineTree_2 3\"\n          geometry={nodes['PineTree_2 3'].geometry}\n          material={nodes['PineTree_2 3'].material}\n          castShadow\n          receiveShadow\n          position={[30.28, -7.81, -112.55]}\n          rotation={[-Math.PI / 2, 0, 0.32]}\n          scale={20}\n        />\n        <mesh\n          name=\"PineTree_2\"\n          geometry={nodes.PineTree_2.geometry}\n          material={nodes.PineTree_2.material}\n          castShadow\n          receiveShadow\n          position={[48.86, -7.81, 2.77]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          scale={20}\n        />\n        <mesh\n          name=\"PineTree_3 3\"\n          geometry={nodes['PineTree_3 3'].geometry}\n          material={nodes['PineTree_3 3'].material}\n          castShadow\n          receiveShadow\n          position={[66.02, -17.17, 34.76]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 5\"\n          geometry={nodes['PineTree_3 5'].geometry}\n          material={nodes['PineTree_3 5'].material}\n          castShadow\n          receiveShadow\n          position={[61.8, -7.3, -54.45]}\n          rotation={[-Math.PI / 2, 0, 1.93]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 11\"\n          geometry={nodes['PineTree_3 11'].geometry}\n          material={nodes['PineTree_3 11'].material}\n          castShadow\n          receiveShadow\n          position={[-17.75, -13.56, -104.06]}\n          rotation={[-Math.PI / 2, 0, 0.61]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 10\"\n          geometry={nodes['PineTree_3 10'].geometry}\n          material={nodes['PineTree_3 10'].material}\n          castShadow\n          receiveShadow\n          position={[-98.48, -14.56, -66.63]}\n          rotation={[-Math.PI / 2, 0, 0.61]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 8\"\n          geometry={nodes['PineTree_3 8'].geometry}\n          material={nodes['PineTree_3 8'].material}\n          castShadow\n          receiveShadow\n          position={[101.28, -14.56, 50.98]}\n          rotation={[-Math.PI / 2, 0, 0.02]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 7\"\n          geometry={nodes['PineTree_3 7'].geometry}\n          material={nodes['PineTree_3 7'].material}\n          castShadow\n          receiveShadow\n          position={[89.79, -14.56, -73.29]}\n          rotation={[-Math.PI / 2, 0, 0.02]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 6\"\n          geometry={nodes['PineTree_3 6'].geometry}\n          material={nodes['PineTree_3 6'].material}\n          castShadow\n          receiveShadow\n          position={[-99.92, -14.56, 30.17]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 4\"\n          geometry={nodes['PineTree_3 4'].geometry}\n          material={nodes['PineTree_3 4'].material}\n          castShadow\n          receiveShadow\n          position={[-51.31, -14.56, -53.36]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 2\"\n          geometry={nodes['PineTree_3 2'].geometry}\n          material={nodes['PineTree_3 2'].material}\n          castShadow\n          receiveShadow\n          position={[-44.87, -17.17, 132.34]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3\"\n          geometry={nodes.PineTree_3.geometry}\n          material={nodes.PineTree_3.material}\n          castShadow\n          receiveShadow\n          position={[-43.35, -7.81, 32.37]}\n          rotation={[-Math.PI / 2, 0.02, 0]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_5 2\"\n          geometry={nodes['PineTree_5 2'].geometry}\n          material={nodes['PineTree_5 2'].material}\n          castShadow\n          receiveShadow\n          position={[-42.02, -5.71, 78.2]}\n          rotation={[-1.51, 0.05, -1.64]}\n          scale={31.23}\n        />\n        <mesh\n          name=\"PineTree_5\"\n          geometry={nodes.PineTree_5.geometry}\n          material={nodes.PineTree_5.material}\n          castShadow\n          receiveShadow\n          position={[34.89, -12.34, 127.44]}\n          rotation={[-1.51, 0.05, 0]}\n          scale={20}\n        />\n        <mesh\n          name=\"WoodLog_Moss\"\n          geometry={nodes.WoodLog_Moss.geometry}\n          material={nodes.WoodLog_Moss.material}\n          castShadow\n          receiveShadow\n          position={[10.38, -6.49, -49.1]}\n          rotation={[-1.39, 0.13, 2.18]}\n          scale={13.21}\n        />\n        <mesh\n          name=\"Rock_Moss_2\"\n          geometry={nodes.Rock_Moss_2.geometry}\n          material={nodes.Rock_Moss_2.material}\n          castShadow\n          receiveShadow\n          position={[-12.74, -3.05, -66.99]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          scale={29.46}\n        />\n        <mesh\n          name=\"top-ground 3\"\n          geometry={nodes['top-ground 3'].geometry}\n          material={materials.ground}\n          castShadow\n          receiveShadow\n          position={[111.79, -18.3, 10.28]}\n          rotation={[-Math.PI / 2, 0, -1.55]}\n          scale={[0.76, 0.42, 1]}\n        />\n        <mesh\n          name=\"top-ground 2\"\n          geometry={nodes['top-ground 2'].geometry}\n          material={materials.ground}\n          castShadow\n          receiveShadow\n          position={[-96.19, -18.3, -21.01]}\n          rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n          scale={[0.5, 0.22, 1]}\n        />\n        <mesh\n          name=\"top-ground\"\n          geometry={nodes['top-ground'].geometry}\n          material={materials.ground}\n          castShadow\n          receiveShadow\n          position={[-0.04, -16.13, 39.95]}\n          rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n          scale={[1, 0.58, 1]}\n        />\n        <pointLight\n          name=\"Point Light\"\n          castShadow\n          intensity={10}\n          decay={3}\n          distance={100}\n          shadow-mapSize-width={256}\n          shadow-mapSize-height={256}\n          shadow-camera-near={100}\n          shadow-camera-far={2020.207}\n          color=\"#00a6fe\"\n          position={[-2.13, 7.31, -2.95]}\n        />\n        <group name=\"mushroom\" position={[-4, -8, 0.37]} rotation={[0.12, 0, 0]} scale={0.02}>\n          <mesh\n            name=\"hat\"\n            geometry={nodes.hat.geometry}\n            material={materials.hat}\n            castShadow\n            receiveShadow\n            position={[109.15, 398.99, 297.3]}\n            scale={[0.49, 1.1, 0.49]}\n          />\n          <mesh\n            name=\"feet\"\n            geometry={nodes.feet.geometry}\n            material={materials.feet}\n            castShadow\n            receiveShadow\n            position={[103.16, 165.95, 307.5]}\n            scale={[0.36, 1, 0.5]}\n          />\n        </group>\n        <hemisphereLight name=\"Default Ambient Light\" intensity={0.25} color=\"#eaeaea\" position={[0, 1, 0]} />\n      </group>\n    </>\n  )\n}\n","import React from 'react';\nimport { ConnectButton, darkTheme } from '@rainbow-me/rainbowkit';\nimport {useState, useEffect} from 'react';\nimport styles from \"./Landing.module.css\";\nimport Carousel from 'react-spring-3d-carousel';\nimport uuidv4 from \"uuid\";\nimport { IoLogoTwitter } from 'react-icons/io'\nimport { isMobile } from 'react-device-detect';\n\nexport default function Landing({ playerChosen, setBuyingMode, setShowStemPlayer, setPlayerChosen }) {\n    const [state, setState] = useState({\n        goToSlide: 0,\n        offsetRadius: 2\n      });\n  \n      const slides = [\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-1.png\" alt=\"1\" />\n              <button\n                  onClick={() => {\n                      setPlayerChosen(1);\n                      setShowStemPlayer(1);\n                  }}\n                  className={styles.spButton + \" pushable\"}> SP-1</button>\n            </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-2.png\" alt=\"2\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(2);\n                  setShowStemPlayer(2);\n              }}\n              className={styles.spButton + \" pushable\"}> SP-2</button>\n            </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-3.png\" alt=\"3\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(3);\n                  setShowStemPlayer(3);\n              }}\n              className={styles.spButton + \" pushable\"}> SP-3</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-4.png\" alt=\"4\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(4);\n                  setShowStemPlayer(4);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-4</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-5.png\" alt=\"5\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(5);\n                  setShowStemPlayer(5);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-5</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-6.png\" alt=\"6\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(6);\n                  setShowStemPlayer(6);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-6</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-7.png\" alt=\"7\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(7);\n                  setShowStemPlayer(7);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-7</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-8.png\" alt=\"8\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(8);\n                  setShowStemPlayer(8);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-8</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-9.png\" alt=\"9\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(9);\n                  setShowStemPlayer(9);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-9</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-10.png\" alt=\"10\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(10);\n                  setShowStemPlayer(10);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-10</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-11.png\" alt=\"11\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(11);\n                  setShowStemPlayer(11);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-11</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-12.png\" alt=\"12\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(12);\n                  setShowStemPlayer(12);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-12</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-13.png\" alt=\"13\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(13);\n                  setShowStemPlayer(13);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-13</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-14.png\" alt=\"14\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(14);\n                  setShowStemPlayer(14);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-14</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-15.png\" alt=\"15\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(15);\n                  setShowStemPlayer(15);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-15</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-16.png\" alt=\"16\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(16);\n                  setShowStemPlayer(16);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-16</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-17.png\" alt=\"17\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(17);\n                  setShowStemPlayer(17);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-17</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-18.png\" alt=\"18\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(18);\n                  setShowStemPlayer(18);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-18</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-19.png\" alt=\"19\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(19);\n                  setShowStemPlayer(19);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-19</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-20.png\" alt=\"20\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(20);\n                  setShowStemPlayer(20);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-20</button>\n          </div>\n        }\n      ].map((slide, index) => {\n        return { ...slide, onClick: () => setState({ goToSlide: index }) };\n      });\n  \n      const onChangeInput = (e) => {\n        setState({\n          [e.target.name]: parseInt(e.target.value, 10) || 0\n        });\n      };\n    \n      let xDown = null;\n      let yDown = null;\n    \n      const getTouches = (evt) => {\n        return (\n          evt.touches || evt.originalEvent.touches // browser API\n        ); // jQuery\n      };\n    \n      const handleTouchStart = (evt) => {\n        const firstTouch = getTouches(evt)[0];\n        xDown = firstTouch.clientX;\n        yDown = firstTouch.clientY;\n      };\n    \n      const handleTouchMove = (evt) => {\n        if (!xDown || !yDown) {\n          return;\n        }\n    \n        let xUp = evt.touches[0].clientX;\n        let yUp = evt.touches[0].clientY;\n    \n        let xDiff = xDown - xUp;\n        let yDiff = yDown - yUp;\n    \n        if (Math.abs(xDiff) > Math.abs(yDiff)) {\n          /*most significant*/\n          if (xDiff > 0) {\n            /* left swipe */\n            setState({ goToSlide: state.goToSlide + 1 });\n          } else {\n            /* right swipe */\n            setState({ goToSlide: state.goToSlide - 1 });\n          }\n        } else {\n          if (yDiff > 0) {\n            /* up swipe */\n          } else {\n            /* down swipe */\n          }\n        }\n        /* reset values */\n        xDown = null;\n        yDown = null;\n      };\n\nreturn (\n    <>\n    <div className={styles.landingContainer}>\n        <div className={styles.titleContainer}>\n            <div className={styles.title}>\n                <strong>Spore Players</strong>\n            </div>\n            <div className={styles.navBar}>\n                {/* <a href=\"/explore\" className={styles.navItem}><b>Explore</b></a>\n                <a href=\"/learn\" className={styles.navItem}><b>Learn</b></a> */}\n                <a href=\"/lore\" className={styles.navItem}><b>Lore</b></a>\n                <div className={styles.navItem} style={{marginTop: \"-2px\"}}><a href=\"https://twitter.com/SporesDAO\"><IoLogoTwitter/></a></div>\n              <div className={styles.connectButtonWrapper}>\n              <ConnectButton\n                accountStatus=\"address\" \n                showBalance={{ smallScreen: false, largeScreen: false }}\n                label=\"Connect Wallet\"\n              />\n              </div>\n            </div>\n        </div>\n        <div style={{marginLeft: \"15px\"}}>\n        <p className={styles.smallText}>\n            &#x2764;&#xFE0F; music NFTs\n          </p>\n        </div>\n        <div className={styles.playerCarousel} onTouchStart={handleTouchStart} onTouchMove={handleTouchMove}>\n            <Carousel slides={slides} goToSlide={state.goToSlide} offsetRadius={state.offsetRadius}/>\n        </div>\n        <section style={{marginTop: \"100px\", marginBottom: \"100px\"}}>\n            <div style={{display: \"flex\", justifyContent: \"space-evenly\", flexWrap: \"wrap\", alignContent: \"center\", flexDirection: \"column\", textAlign: \"center\"}}>\n              <div><p className={styles.shimmer}>Rarity</p></div>\n              <div><p className={styles.defPronun}>rar•i•ty | 'rer-ə-tē</p></div>\n              <div><p className={styles.defText}><i>Spores</i> powers a new wave of rarity in music.{isMobile && <br/>} {isMobile && <br/>} Each <i>Spore Player</i> owns a unique version of songs in the <i>Spore</i> ecosystem.<br></br><br></br>Use the mutated stem slider to uncover the sonic rarity embedded in each <i>Spore Player.</i></p>\n              </div>\n    {/*<div\n                onClick={() => setBuyingMode(true)}\n                className={\"pushable \" + styles.mintButton}>\n                Buy Now\n                </div>*/}\n            </div>\n        </section>\n        <section>\n            <div className={styles.sectionTitle} style={{marginBottom: \"10px\"}}>Spore Ecosystem Overview</div>\n            <div>\n              <img src={isMobile ? '/spore-overview-mobile.png' : '/spore-overview.png'} style={{objectFit: \"contain\", width: \"100%\"}}></img>\n            </div>\n        </section>\n        <div className={styles.poweredByContainer}>\n        <p className={styles.smallText}>\n            Powered by\n        </p>\n        <div>\n          <img\n            onClick={() => {\n                window.location.href = \"https://www.ghostwaveform.one\";\n            }\n                    }\n            src=\"/indigo-logo-black.png\" style={{height: 20}} className={styles.logo + \" pushable\"}></img>\n          <img src=\"/x.png\" id={styles.x}></img>\n          <img\n            onClick={() => {\n                window.location.href = \"https://zequencer.io\";\n            }\n                    }\n            src=\"/zeq-logo-black.png\" style={{height: 20}} className={styles.logo + \" pushable \" + styles.zeqLogo}></img>\n            </div>\n            </div>\n        <section style={{height: \"10vh\"}}></section>\n    </div>\n    </>\n)}\n","\nimport React from 'react';\nimport {useRef, useState, useEffect} from 'react';\nimport styles from \"./Overlay.module.css\";\n\nexport function Overlay({ playerChosen, scroll, setShowStemPlayer, setPlayerChosen }) {\n    const scrollContainer = useRef();\n    useEffect(() => {\n        if (!playerChosen && scroll.current !== 0) {\n            if (scrollContainer.current) {\n                scrollContainer.current.scrollTo(0, scrollContainer.current.scrollHeight* scroll.current);\n            }\n        }\n    }, [playerChosen]);\n\n  return (\n    <div\n      ref={scrollContainer}\n      className={styles.scrollContainer}\n      onScroll={(e) => {\n        const scroll01 =\n          e.target.scrollTop / (e.target.scrollHeight - window.innerHeight);\n        scroll.current = scroll01;\n      }}\n    >\n      <section\n        style={{ height: \"50vh\" }}\n        className={styles.sectionLeft + \" \" + styles.sectionHero}\n      >\n        <header>\n          <h1>\n            LORE\n          </h1>\n          <svg\n            width=\"15\"\n            height=\"30\"\n            viewBox=\"0 0 30 71\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <rect\n              x=\"1.5\"\n              y=\"1.5\"\n              width=\"27\"\n              height=\"45\"\n              rx=\"13.5\"\n              stroke=\"#2D3A94\"\n              stroke-opacity=\"0.6\"\n              stroke-width=\"3\"\n            />\n            <path\n              d=\"M15 12V20\"\n              stroke=\"#2D3A94\"\n              stroke-opacity=\"0.6\"\n              stroke-width=\"3\"\n              stroke-linecap=\"round\"\n            />\n            <path\n              d=\"M8 54L14.5 60.5L21 54\"\n              stroke=\"#2D3A94\"\n              stroke-opacity=\"0.6\"\n              stroke-width=\"3\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            />\n            <path\n              d=\"M8 63L14.5 69.5L21 63\"\n              stroke=\"#2D3A94\"\n              stroke-opacity=\"0.6\"\n              stroke-width=\"3\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            />\n          </svg>\n        </header>\n      </section>\n      <section style={{ height: \"180vh\" }} className={styles.sectionRight + \" \" + styles.sectionFirst}>\n        <p>\n          Do you see it?\n          <br />\n          That light in the dark?\n          <br />\n          It calls to you.\n        </p>\n      </section>\n      <section style={{ height: \"50vh\" }} className={styles.sectionLeft + \" \" + styles.sectionSecond}>\n       <p>\n          Deep underground...\n        </p>\n      </section>\n      <section style={{ height: \"150vh\" }} className={styles.sectionRight + \" \" + styles.sectionLast}>\n        <p>\n          The spores resonate.\n          <br />\n          Awakening from their slumber.\n        </p>\n        <button\n              onClick={() => {\n                window.location.href='https://spores.vision';\n              }}\n              className={\"pushable \" + styles.spButton}> Home</button>\n      </section>\n    </div>\n  );\n}\n","import React from 'react';\nimport BuyNow from 'components/buy/BuyNow.js';\nimport Spore from 'components/spore/Spore.js';\nimport {useState, useEffect} from 'react';\nimport { Suspense, useRef } from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport Scene from './Scene'\nimport Landing from './Landing';\nimport { Overlay } from './Overlay';\nimport { EffectComposer, SSAO, Bloom } from \"@react-three/postprocessing\";\nimport { KernelSize } from 'postprocessing'\nimport './styles.css';\n\nexport default function App(props) {\n    useEffect(() => {\n        document.title = \"Spores\";\n    }, []);\n\n    let tokenId = props.match && props.match.params.tokenId;\n    if (tokenId) {\n        tokenId = parseInt(tokenId);\n    }\n\n    console.log(\"tokenId=\", tokenId);\n    let [playerChosen, setPlayerChosen] = useState(tokenId);\n    let [showStemPlayer, setShowStemPlayer] = useState(tokenId !== undefined);\n    let [buyingMode, setBuyingMode] = useState(props.buying);\n\n    useEffect(() => {\n        if (props.buying) {\n            return;\n        }\n        if (playerChosen !== undefined) {\n            window.history.pushState('page2', 'Title', '/sp/' + playerChosen);\n        } else {\n            window.history.pushState('page2', 'Title', '/');\n        }\n    }, [playerChosen]);\n \n    const scroll = useRef(0);\n    console.log(\"store in app.js =\", props.store);\n\n    if (showStemPlayer || playerChosen) {\n        return (<Spore\n                  store={props.store}\n                  playerChosen={playerChosen}\n                  setPlayerChosen={setPlayerChosen}\n                  setShowStemPlayer={setShowStemPlayer}\n                  showStemPlayer={showStemPlayer}/>);\n    }\n    if (buyingMode) {\n        return (\n            <BuyNow goBack={() => setBuyingMode(false)}></BuyNow>\n        );\n    }\n    return [\n      <Landing\n        setBuyingMode={setBuyingMode}\n        playerChosen={playerChosen}\n        setPlayerChosen={setPlayerChosen}\n        setShowStemPlayer={setShowStemPlayer}/>\n    ];\n}\n","import React, { useEffect, useCallback, useState} from 'react';\nimport App from 'components/spores-landing/App.js';\nimport {connect} from 'react-redux';\n\nconst SporeLanding = (props) => { \n    return (<App {...props}></App>);\n};\n\nexport default SporeLanding;\n","\nimport {isMobile} from 'react-device-detect';\nimport SongTitle from \"components/spore/SongTitle.js\";\nimport React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport StemPlayer from \"components/spore/StemPlayer.js\";\nimport './demo.scss';\n\nconst Demo = ({name}) => { \n    let [passed, setPassed] = useState(false);\n    let [failed, setFailed] = useState(false);\n    let [password, setPassword] = useState(\"\");\n    let className = \"spore showing-spore-player demo\";\n    if (name.includes(\"doodles\")) {\n        className += \" doodles\";\n    }\n    if (name.includes(\"ragnarok\")) {\n        className += \" ragnarok\";\n    }\n    let artist = \"Keyon Christ\";\n    let song = \"Twisting Faith\";\n\n    if (name === \"doodles1\") {\n        artist = \"Doodles\";\n        song = \"Spaceships\";\n    }\n\n    if (name === \"jeremih\") {\n        artist = \"Jeremih\";\n        song = \"Don\\'t Tell 'Em\";\n    }\n\n    const onClickPassword = useCallback((e) => {\n        if (password === \"d12efa@71e\") {\n            setPassed(true);\n        } else {\n            setFailed(true);\n        }\n    }, [password, setFailed, setPassed]);\n\n    if (!passed) {\n        className += \" password-protected\";\n        return (\n            <div className={className}>\n              <div className=\"password-box\">\n                <div className=\"password-label\">\n                  Password\n                </div>\n                <input type=\"password\"\n                  placeholder=\"Enter password here\" text={password} onChange={(e) => setPassword(e.target.value)}/>\n                {failed && <div className=\"password-failed\">The password you entered is incorrect.</div>}\n                <div onClick={onClickPassword} className=\"password-enter\">\n                  Enter\n                </div>\n              </div>\n            </div>\n        );\n    }\n    return (\n        <div className={className}>\n          {name === \"jeremih\" && \n          <video\n            playsInline\n            className=\"rain-video\"\n            autoPlay\n            loop\n            src={isMobile ? \"/mobile-rain.mp4\" : \"/desktop-rain.mp4\"}/>}\n          <div className=\"caurosel player-chosen\">\n            <div className=\"spore-player-option chosen\">\n              <SongTitle artist={artist} song={song}/>\n            </div>\n          </div>\n          <StemPlayer tokenId={name}/>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Demo);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport Spore from './Spore.js';\nimport {connect} from 'react-redux';\n\nconst SporeWrapper = (props) => { \n    let tokenId = props.match && props.match.params.tokenId;\n    if (tokenId) {\n        tokenId = parseInt(tokenId);\n    }\n    let [playerChosen, setPlayerChosen] = useState(tokenId);\n    let [showStemPlayer, setShowStemPlayer] = useState(tokenId !== undefined);\n    console.log(\"tokenId=\", tokenId, playerChosen, showStemPlayer);\n \n    return (<Spore\n              playerChosen={playerChosen}\n              setPlayerChosen={setPlayerChosen}\n              setShowStemPlayer={setShowStemPlayer}\n              showStemPlayer={showStemPlayer}/>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SporeWrapper);\n","import React from 'react';\nimport Spore from 'components/spore/Spore.js';\nimport {useState, useEffect} from 'react';\nimport { Suspense, useRef } from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport Scene from './Scene'\nimport Landing from './Landing';\nimport { Overlay } from './Overlay';\nimport { EffectComposer, SSAO, Bloom } from \"@react-three/postprocessing\";\nimport { KernelSize } from 'postprocessing'\nimport './styles.css';\n\nexport default function LoreApp(props) {\n    console.log(props, props.match);\n\n    useEffect(() => {\n        document.title = \"Spores\";\n    }, []);\n\n    let tokenId = props.match && props.match.params.tokenId;\n    if (tokenId) {\n        tokenId = parseInt(tokenId);\n    }\n\n    console.log(\"tokenId=\", tokenId);\n    let [playerChosen, setPlayerChosen] = useState(tokenId);\n    let [showStemPlayer, setShowStemPlayer] = useState(tokenId !== undefined);\n\n    useEffect(() => {\n        if (playerChosen !== undefined) {\n            window.history.pushState('page2', 'Title', '/sp/' + playerChosen);\n        } else {\n            window.history.pushState('page2', 'Title', '/');\n        }\n    }, [playerChosen]);\n \n    const scroll = useRef(0);\n    console.log(\"store in app.js =\", props.store);\n\n    if (showStemPlayer || playerChosen) {\n        return (<Spore\n                  store={props.store}\n                  playerChosen={playerChosen}\n                  setPlayerChosen={setPlayerChosen}\n                  setShowStemPlayer={setShowStemPlayer}\n                  showStemPlayer={showStemPlayer}/>);\n    }\n    return [\n        <Canvas shadows flat linear>,\n          <EffectComposer smaa>\n            <Bloom\n              intensity={1}\n              kernelSize={KernelSize.VERY_LARGE}\n              luminanceThreshold={0.01}\n              luminanceSmoothing={0.9}\n            />\n          </EffectComposer>\n          <Scene scroll={scroll} />\n        </Canvas>,\n        <Overlay\n          playerChosen={playerChosen}\n          setPlayerChosen={setPlayerChosen}\n          setShowStemPlayer={setShowStemPlayer} scroll={scroll}/>\n    ];\n}\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport LoreApp from 'components/spores-landing/LoreApp.js';\n\nconst SporeLore = (props) => { \n    return (<LoreApp {...props}></LoreApp>);\n};\n\nexport default SporeLore;\n","import React, { Suspense, Component } from 'react';\nimport ConnectWallet from 'components/connect-wallet/ConnectWallet.js';\nimport Zora from 'components/zora/Zora.js';\nimport { BrowserRouter, StaticRouter, withRouter, Route, Switch } from 'react-router-dom';\nimport SporeLanding from \"components/spore/SporeLanding.js\";\nimport Demo from \"components/demo/Demo.js\";\nimport SporeWrapper from \"components/spore/SporeWrapper.js\";\nimport './App.scss';\nimport SporeLore from 'components/spore/SporeLore.js';\nimport '@rainbow-me/rainbowkit/dist/index.css';\nimport {\n  getDefaultWallets,\n  RainbowKitProvider,\n    darkTheme\n} from '@rainbow-me/rainbowkit';\nimport {\n  chain,\n  configureChains,\n  createClient,\n  WagmiConfig,\n} from 'wagmi';\nimport {infuraProvider} from 'wagmi/providers/infura';\nimport { publicProvider } from 'wagmi/providers/public';\n\nconst infuraId = \"2f3dce2af1044e88b4851c3d73c3d00c\";\n      \nconst { chains, provider } = configureChains(\n    [chain.mainnet],\n  [\n      infuraProvider({ infuraId }),\n      publicProvider()\n  ]\n);\n\nconst { connectors } = getDefaultWallets({\n  appName: 'Spore Players',\n  chains\n});\n\nconst wagmiClient = createClient({\n  autoConnect: true,\n  connectors,\n  provider\n});\n\n\n\nconst App = (props) => {\n    window.spores = true;\n    return (\n        <Suspense fallback={() => <div>Loading...</div>}>\n          <WagmiConfig client={wagmiClient}>\n          <RainbowKitProvider chains={chains}\n                              theme={darkTheme({\n                                  accentColor: 'black',\n                                  accentColorForeground: 'white',\n                                  borderRadius: 'small',\n                              })}\n          >\n          <BrowserRouter>\n            <Switch>\n              <Route  path=\"/zora/\" \n                      render={(props) => <Zora {...props} store={props.store}/>}/>\n              <Route  path=\"/buy/\" \n                      render={(props) => <SporeLanding buying={true} {...props} store={props.store}/>}/>\n              <Route  path=\"/connect/\" \n                      render={(props) => <ConnectWallet name=\"jeremih\" {...props} store={props.store}/>}/>\n              <Route  path=\"/jeremih/\" \n                      render={(props) => <Demo name=\"jeremih\" {...props} store={props.store}/>}/>\n              <Route  path=\"/doodles1/\" \n                      render={(props) => <Demo name=\"doodles1\" {...props} store={props.store}/>}/>\n              <Route  path=\"/doodles2/\" \n                      render={(props) => <Demo name=\"doodles2\" {...props} store={props.store}/>}/>\n              <Route  path=\"/ragnarok/\" \n                      render={(props) => <Demo name=\"ragnarok\" {...props} store={props.store}/>}/>\n              <Route  path=\"/lore\" \n                      render={(props) => <SporeLore {...props} store={props.store}/>}/>\n              <Route  path=\"/sp/:tokenId\" \n                      render={(props) => <SporeLanding {...props} store={props.store}/>}/>\n              <Route  path=\"/\" \n                      render={(props) => <SporeLanding {...props} store={props.store}/>}/>\n            </Switch>\n          </BrowserRouter>\n        </RainbowKitProvider>\n        </WagmiConfig>\n        </Suspense>\n    );\n};\n\nexport default App;\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n      console.log(\"UNREGISTERING\");\n    navigator.serviceWorker.ready.then(registration => {\n        console.log(\"regstieration UNREGISTERING\", registration);\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\nimport {playlistReducer} from './playlist.js';\n\nconst rootReducer = combineReducers(\n    {\n        playlist: playlistReducer\n    });\n\nexport default rootReducer;\n","import {SET_SHOW_PLAYLIST_MENU} from 'constants/action-types.js';\nimport {SET_CURRENT_PLAYLIST_SONG} from 'constants/action-types.js';\n\nexport const playlistReducer = (state = {currentSong: \"Twisting Faith\"}, action) => {\n    let newState;\n    switch (action.type) {\n    case SET_SHOW_PLAYLIST_MENU:\n        return {\n            ... state,\n            showPlaylistMenu: action.payload\n        };\n    case SET_CURRENT_PLAYLIST_SONG:\n        return {\n            ... state,\n            currentSong: action.payload\n        };\n    default:\n        return state;\n    }\n}\n \n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {unregister} from './registerServiceWorker';\nimport store from \"./store/index\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n      <App store={store}/>\n    </Provider>\n    , document.getElementById('root'));\n\nunregister();\n","import Web3 from 'web3';\nimport {web3} from '../web3.js';\n\nexport const noteToAscii= {\n    'A': 'a',\n    'A#': 'A',\n    'B': 'b',\n    'C': 'c',\n    'C#': 'C',\n    'D': 'd',\n    'D#': 'D',\n    'E': 'e',\n    'F': 'f',\n    'F#': 'F',\n    'G': 'g',\n    'G#': 'G'\n};\n\nexport const noteToBytes32 = {\n    'A': web3.utils.asciiToHex('a'),\n    'A#': web3.utils.asciiToHex('A'),\n    'B': web3.utils.asciiToHex('b'),\n    'C': web3.utils.asciiToHex('c'),\n    'C#': web3.utils.asciiToHex('C'),\n    'D': web3.utils.asciiToHex('d'),\n    'D#': web3.utils.asciiToHex('D'),\n    'E': web3.utils.asciiToHex('e'),\n    'F': web3.utils.asciiToHex('f'),\n    'F#': web3.utils.asciiToHex('F'),\n    'G': web3.utils.asciiToHex('g'),\n    'G#': web3.utils.asciiToHex('G')\n};\n\nlet tmp = {};\n\nfor (let i in noteToBytes32) {\n    tmp[noteToBytes32[i]] = i;\n}\n\nexport const bytes32ToNote = tmp;\ntmp = {};\n\nfor (let i in noteToAscii) {\n    tmp[noteToAscii[i]] = i;\n}\n\n\nexport const asciiToNote = tmp;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spButtons\":\"Landing_spButtons__2lA0a\",\"connectButtonWrapper\":\"Landing_connectButtonWrapper__3Wt43\",\"spButton\":\"Landing_spButton__wkOrL\",\"logo\":\"Landing_logo__1_4MQ\",\"zeqLogo\":\"Landing_zeqLogo__1aulZ\",\"x\":\"Landing_x__5AW6k\",\"smallText\":\"Landing_smallText__3EmQL\",\"sectionLeft\":\"Landing_sectionLeft__j8wh1\",\"sectionRight\":\"Landing_sectionRight__2CAqY\",\"caroItem\":\"Landing_caroItem__1cxvv\",\"playerCarousel\":\"Landing_playerCarousel__7sZd2\",\"defText\":\"Landing_defText__i0fW6\",\"noImgSelector\":\"Landing_noImgSelector__3XSwW\",\"landingContainer\":\"Landing_landingContainer__2Lx2B\",\"titleContainer\":\"Landing_titleContainer__1JB41\",\"navItem\":\"Landing_navItem__mV48P\",\"mintButton\":\"Landing_mintButton__2R9SU\",\"navBar\":\"Landing_navBar__2sKob\",\"title\":\"Landing_title__32OHo\",\"sectionTitle\":\"Landing_sectionTitle__hq-ce\",\"poweredByContainer\":\"Landing_poweredByContainer__gIUyv\",\"infoImage\":\"Landing_infoImage__3MY-t\",\"defPronun\":\"Landing_defPronun__3FpRo\",\"shimmer\":\"Landing_shimmer__3BITt\"};","import Web3 from 'web3';\n\nconst metamaskInstalled = false; // typeof window.web3 !== 'undefined';\nexport const web3 = metamaskInstalled ?\n      new Web3(window.web3.currentProvider) :\n      new Web3(new Web3.providers.HttpProvider('https://ropsten.infura.io/v3/2f3dce2af1044e88b4851c3d73c3d00c'));\nexport const web3WSS = \n    new Web3(new Web3.providers.WebsocketProvider('wss://ropsten.infura.io/ws/v3/2f3dce2af1044e88b4851c3d73c3d00c'));\n\n/*\n\nclass Contract {\n    constructor() {\n        this.methods = {};\n        this.options = {\n            address: ''\n        };\n    }\n}\n\nexport const web3 = {\n    eth: {\n        Contract: Contract,\n        net: {\n            isListening: () => true\n        }\n    },\n    utils: {\n        asciiToHex: () => 'aa',\n        padLeft: () => '',\n        padRight: () => '',\n    }\n};\n\nexport const web3WSS = web3;\n*/\n","import Web3 from 'web3';\nimport {bytes32ToNote} from './chords/NoteConstants.js';\nimport {noteToBytes32} from './chords/NoteConstants.js';\nimport {asciiToNote} from './chords/NoteConstants.js';\nimport {web3} from './web3.js';\n\nconst bs58 = require('bs58');\nconst metamaskInstalled = typeof window.web3 !== 'undefined';\nconst nullBytes32 = web3.utils.padLeft('0x0', 64);\n\nclass EthereumDataType {\n    constructor(toConversion, fromConversion) {\n        this.toConversion = toConversion;\n        this.fromConversion = fromConversion;\n    }\n\n    convertTo(jsValue) {\n        return this.toConversion(jsValue);\n    }\n\n    convertFrom(ethereumValue) {\n        if (ethereumValue === nullBytes32) {\n            return null;\n        }\n        return this.fromConversion(ethereumValue);\n    }\n}\n\nfunction ipfsHashToBytes32(ipfs_hash) {\n    var h = bs58.decode(ipfs_hash).toString('hex').replace(/^1220/, '');\n    if (h.length != 64) {\n        return null;\n    }\n    return '0x' + h;\n}\n\nfunction bytes32ToIPFSHash(hash_hex) {\n    var buf = new Buffer(hash_hex.replace(/^0x/, '1220'), 'hex')\n    return bs58.encode(buf)\n}\n\nfunction trimEmpty(str) {\n    let trimmed = \"\";\n    for (let i in str) {\n        if (str.charCodeAt(i) == 0) {\n            continue;\n        }\n        trimmed += str.charAt(i);\n    }\n    return trimmed;\n}\n\nexport const IPFS_HASH = new EthereumDataType(\n    (x) => ipfsHashToBytes32(x),\n    (x) => bytes32ToIPFSHash(x));\n\nexport const INT_8 = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.numberToHex(x), 64),\n    (x) => web3.utils.hexToNumber(x));\n\nexport const INT_16 = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.numberToHex(x), 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\nexport const INT_32 = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.numberToHex(x), 64),\n    (x) => web3.utils.hexToNumber(x));\n\nexport const UINT_256 = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.numberToHex(parseInt(x)), 64),\n    (x) => web3.utils.hexToNumber(x));\n\nexport const BYTES_32 = new EthereumDataType(\n    (x) => web3.utils.padRight(web3.utils.fromAscii(x), 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\nexport const BYTES_32_LEFT = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.fromAscii(x), 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\n\nexport const BYTES_32_ENCRYPTED = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.toHex(x), 64),\n    (x) => stripLeadingZeroes(x.slice(2)));\n\nfunction stripLeadingZeroes(str) {\n    for (let i=0; i < str.length; i++) {\n        if (str.slice(i, i+1) !== '0') {\n            return str.slice(i);\n        }\n    }\n \n    return str;\n}\n\n\n\n\nexport const RIGHT_PADDED_BYTES_32 = new EthereumDataType(\n    (x) => web3.utils.padRight(web3.utils.toHex(x), 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\nexport const NOTES_BYTES_32 = new EthereumDataType(\n    (x) => web3.utils.padRight(x, 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)).split('').map(x => asciiToNote[x]));\n\nexport const NOTE_BYTES_32 = new EthereumDataType(\n    (x) => web3.utils.padRight(x, 64),\n    (x) => asciiToNote[trimEmpty(web3.utils.toAscii(x))]);\n\nexport const ADDRESS = new EthereumDataType(\n    (x) => web3.utils.padLeft(x, 64),\n    (x) => getAddress(x));\n\nexport const STRING = new EthereumDataType(\n    (x) => web3.utils.padLeft(x[0], 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\nexport const BYTES_32_ARRAY = (len) =>\n    new EthereumDataType(\n        (x) => x, // no need to convert to\n        (data) => data.slice(2, 2 + len * 64));\n\nfunction getAddress(x) {\n    return '0x' + x.slice(x.length - 40);\n}\n\n\n"],"sourceRoot":""}