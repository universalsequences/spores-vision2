{"version":3,"sources":["components/spore/VisualLinks.js","components/spore/docs.js","components/spore/HelperLines.js","components/spore/PlayerHelper.js","components/spore/Credits.js","components/credits/Credits.js","components/spore/SongTitle.js","components/playlist/SporePlaylist.js","actions/index.js","constants/action-types.js","components/spore/Caurosel.js","components/spore/JollyRancherPlayer.js","components/Colors.js","components/spore/SporeHeatMap.js","components/buttons/PlayButton.js","components/spore/AudioPlayer.js","components/hooks/useInterval.js","decentralized/EthereumEventLog.js","decentralized/EthereumTopic.js","decentralized/EthereumEvents.js","decentralized/EthereumQuery.js","decentralized/BackendQuery.js","decentralized/BackendQueryRunner.js","decentralized/contracts/SporeContract.js","engine/audio.js","components/spore/getSpores.js","components/progressbar/UnknownProgressBar.js","components/spore/SimplePlayer.js","utils/lstorage.js","utils/getBlockDate.js","components/spore/SporeItem.js","utils/formatDate.js","components/spore/SporesView.js","components/buttons/RecordingIndicator.js","components/SP-2D/Mushroom.js","components/SP-2D/Mushroom2.js","components/SP-2D/Mushroom3.js","components/SP-2D/Scene.js","components/SP-2D/App.js","components/spore/StemPlayer.js","components/spore/Spore.js","components/spores-landing/Scene.js","components/spores-landing/Landing.js","components/spores-landing/Overlay.js","components/spores-landing/App.js","components/spore/SporeLanding.js","components/demo/Demo.js","components/spore/SporeWrapper.js","components/spores-landing/LoreApp.js","components/spore/SporeLore.js","App.js","registerServiceWorker.js","reducers/index.js","reducers/playlist.js","store/index.js","index.js","components/spores-landing/Landing.module.css","decentralized/chords/NoteConstants.js","decentralized/web3.js","decentralized/EthereumDataTypes.js","components/spores-landing/Overlay.module.css","decentralized/Ipfs.js"],"names":["getLocation","element","bounding","rect","getBoundingClientRect","bound","y","top","x","left","height","offsetHeight","width","offsetWidth","connect","state","props","dispatch","_ref","helperBox","helperRefs","selected","_useState","useState","_useState2","Object","slicedToArray","locations","setLocations","useEffect","playerEl","current","helperEl","playerLocation","helperLocation","points","react_default","a","createElement","className","id","offset","stopColor","docs","centerButton","ledButton","spButton1","spButton2","slider1","slider2","slider3","slider4","sliderHovered","ref","useRef","doc","key","Array","isArray","map","i","includes","spore_VisualLinks","clear","undefined","setSliderHovered","_useState3","_useState4","setSelected","spore_HelperLines","onClick","onMouseLeave","onMouseOver","setShowCredits","href","CreditPart","type","names","length","show","setShow","Credits_CreditPart","song","playlist","currentSong","_ref$artist","artist","_ref$song","showPlaylistMenu","setCurrentSong","payload","sequencerEngine","stems","loadSong","useCallback","name","console","log","window","stemIFrame","contentWindow","postMessage","body","isMobile","e","stopPropagation","SporeOption","_ref2","showStemPlayer","setShowStemPlayer","brect","tokenId","playerChosen","isOver","mouse","setOver","rarity","thumbnail","setPlayerChosen","_useState7","_useState8","_x","_y","style","src","spore_SongTitle","playlist_SporePlaylist","credits_Credits","setMouse","_useState5","_useState6","over","onMouseMove","clientX","clientY","Caurosel_SporeOption","spore","store","progress","preset","setPreset","dataHash","sandbox","aria-describedby","alt","borderWidth","brightCache","getHSLString","_ref3","h","s","l","getHSLFromString","str","_str$split","substring","split","_str$split2","hPart","sPart","lPart","index","indexOf","parseFloat","hslToHex","Math","min","f","n","k","color","max","round","toString","padStart","concat","Colors","classCallCheck","this","opacity","slice","c","toUpperCase","shift","_getHSLFromString","warmth","arguments","rotate","_getHSLFromString2","factor","lightFactor","startsWith","_getHSLFromString3","_RGBToHSL","r","g","b","cmin","cmax","delta","abs","toFixed","RGBToHSL","getRGB","hsl","_ref4","brightenHSL","cacheResult","floor","parseInt","rgb","_getHSLFromString4","colors","heatRoot","bucketSize","saturation","getBuckets","heat","_step","sliderData","sliderChanges","modeData","modeChanges","regions","isNaN","buckets","_iterator","_createForOfIteratorHelper","done","value","err","_step2","apply","toConsumableArray","values","_iterator2","q","_loop","some","_ref$width","_ref$height","_ref$center","center","_ref$saturation","duration","maxStep","keys","step","pow","fill","warm","PlayButton","onPlayClicked","target","parentNode","blur","currentTarget","play","isPlaying","truncate","creator","formatTime","time","minutes","seconds","audioUnit","sporeMetadata","WIDTH","playing","setPlaying","playTime","setPlayTime","startPoint","setProgress","setMouseSeeker","callback","delay","savedCallback","setInterval","clearInterval","useInterval","diff","Tone","Master","context","currentTime","onClickPlay","stopSound","playSound","mouseSeek","startTime","setTimeout","buttons_PlayButton","spore_JollyRancherPlayer","EthereumEventLog","event","topics","_len","data","_key","EthereumTopic","size","convertTo","convertFrom","NewSporeCreated","IPFS_HASH","BYTES_32","INT_32","INT_16","RIGHT_PADDED_BYTES_32","ADDRESS","STRING","UINT_256","NOTE_BYTES_32","NOTES_BYTES_32","INT_8","BYTES_32_ENCRYPTED","BYTES_32_ARRAY","BYTES_32_LEFT","metamaskInstalled","web3","EthereumQuery","address","distinct","selectStatements","whereClauses","groupBy","joinClauses","limitSize","fromBlockNumber","toBlockNumber","eventLog","arg","push","col","WhereClause","valueList","field","JoinClause","fromBlock","utils","toHex","toBlock","limit","sha3","toAdd","j","whereClause","_this","Promise","resolve","reject","eth","getPastLogs","getTopics","results","parsedResults","reverse","parseResult","_callee","blockNumber","_this2","regenerator_default","wrap","_context","prev","next","getBlockNumber","sent","web3WSS","subscribe","result","ret","stop","resultSet","select","dataIndexSoFar","fieldIndex","fieldData","d","query","hexToNumber","argName","argValue","runner","BackendQueryRunner","runningQueries","Set","queryJson","asyncToGenerator","mark","url","sleep","add","spores","fetch","method","JSON","stringify","headers","Accept","Content-Type","then","resp","json","removeQuery","catch","_x2","delete","BackendQuery","_super","call","isNFT","submit","getJson","SporeContract","abi","inputs","internalType","outputs","stateMutability","anonymous","indexed","contractAddress","Contract","AudioUnit","require","source","buffer","playbackRate","looping","bind","seek","disconnect","createBufferSource","destination","loop","start","bufferToArrayBuffer","getAllSpores","from","executeQuery","getSpores_createForOfIteratorHelper","sporeId","filter","abrupt","getLatestSpore","_callee2","setSporeMetadata","latest","sporeHash","blob","audioBuffer","player","_context2","where","Date","getTime","ipfs","getSound","decodeAudioData","setBuffer","objectSpread","_x3","_x4","text","_ref$className","_ref$intervalTime","intervalTime","_ref$intervalPiece","intervalPiece","loadingProgress","setLoadingProgress","interval","links","1","2","3","4","latestSpore","setLatestSpore","dispose","goToLink","open","progressbar_UnknownProgressBar","spore_AudioPlayer","lstorage","LStorage","localStorage","setItem","removeItem","getItem","getBlockDate","storage","block","date","getBlock","timestamp","isSelected","setDate","setHeat","cancel","spore_SporeHeatMap","dist","hours","getMonth","getDate","formatDate","_formatDate","setSpores","spore_SporeItem","spore_SimplePlayer","addEventListener","onMessage","Mushroom","materials","nodes","mushroomMat","position","_ref$scale","scale","rotation","geometry","hat","material","castShadow","receiveShadow","feet","Mushroom2","top1","bottom1","Mushroom3","top2","bottom2","Scene","esm_extends","_useSpline","useSpline","sceneCamera","threeTone","THREE","load","minFilter","magFilter","gradientMap","origin","message","addScalar","Fragment","assign","SP_2D_Mushroom","SP_2D_Mushroom3","SP_2D_Mushroom2","intensity","shadow-mapSize-width","shadow-mapSize-height","shadow-camera-near","shadow-camera-far","shadow-camera-left","shadow-camera-right","shadow-camera-top","shadow-camera-bottom","OrthographicCamera","makeDefault","far","near","zoom","setShowPlaylistMenu","react","fallback","react_three_fiber_esm","shadows","flat","linear","postprocessing_dist","kernelSize","KernelSize","LARGE","luminanceThreshold","luminanceSmoothing","OrbitControls","enableZoom","enableRotate","enablePan","players","jeremih","doodles1","doodles2","ragnarok","root","document","getElementsByTagName","setAttribute","SP_2D_App","buttons_RecordingIndicator","uploadFile","file","setter","reader","FileReader","readAsArrayBuffer","onloadend","raw","hash","addArrayBuffer","alert","objectWithoutProperties","setUploading","match","params","showCredits","showSpores","setShowSpores","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","customVideo","setCustomVideo","preventDefault","passive","removeEventListener","title","onDrop","dataTransfer","effectAllowed","dropEffect","ev","items","kind","getAsFile","playsInline","autoPlay","spore_PlayerHelper","spore_Credits","spore_Caurosel","spore_SporesView","spore_StemPlayer","scroll","camera","lerpedScroll","curve","test","navigator","userAgent","fov","useFrame","t","set","getPointAt","z","attach","args","Sparkles","count","speed","Stars","radius","depth","fade","PerspectiveCamera","PI","cover","ground","decay","distance","filler","underground","Rock_Moss_3","Rock_Moss_1","Plant_1","Plant_4","Plant_5","PineTree_1","PineTree_2","PineTree_3","PineTree_5","WoodLog_Moss","Rock_Moss_2","Landing","goToSlide","offsetRadius","setState","slides","uuidv4","content","styles","caroItem","noImgSelector","spButton","slide","xDown","yDown","landingContainer","titleContainer","navBar","navItem","marginTop","index_esm","marginLeft","smallText","playerCarousel","onTouchStart","evt","firstTouch","touches","originalEvent","getTouches","onTouchMove","xUp","yUp","xDiff","yDiff","bundle_default","marginBottom","display","justifyContent","flexWrap","alignContent","flexDirection","textAlign","shimmer","defPronun","defText","sectionTitle","objectFit","poweredByContainer","location","logo","zeqLogo","Overlay","scrollContainer","scrollTo","scrollHeight","onScroll","scroll01","scrollTop","innerHeight","sectionLeft","sectionHero","viewBox","xmlns","rx","stroke","stroke-opacity","stroke-width","stroke-linecap","stroke-linejoin","sectionRight","sectionFirst","sectionSecond","sectionLast","App","history","pushState","spore_Spore","SporeLanding","spores_landing_App_App","passed","setPassed","failed","setFailed","password","setPassword","onClickPassword","placeholder","onChange","LoreApp","smaa","VERY_LARGE","Scene_Scene","SporeLore","BrowserRouter","Switch","Route","path","render","demo_Demo","spore_SporeLore","spore_SporeLanding","Boolean","hostname","rootReducer","combineReducers","action","createStore","ReactDOM","es","src_App_0","getElementById","serviceWorker","ready","registration","unregister","module","exports","spButtons","infoImage","__webpack_require__","__webpack_exports__","asciiToNote","_web3_js__WEBPACK_IMPORTED_MODULE_1__","noteToAscii","A","A#","B","C","C#","D","D#","E","F","F#","G","G#","noteToBytes32","asciiToHex","tmp","web3__WEBPACK_IMPORTED_MODULE_0__","web3__WEBPACK_IMPORTED_MODULE_0___default","Web3","providers","HttpProvider","WebsocketProvider","bs58","nullBytes32","padLeft","EthereumDataType","toConversion","fromConversion","_Users_alecresende_code_spores_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","jsValue","ethereumValue","trimEmpty","trimmed","charCodeAt","charAt","ipfs_hash","decode","replace","ipfsHashToBytes32","hash_hex","buf","Buffer","encode","bytes32ToIPFSHash","numberToHex","toAscii","padRight","fromAscii","stripLeadingZeroes","getAddress","len","xhr","XMLHttpRequest","IPFS_ADDRESS","END","httpV","httpsV","IpfsClient","_Users_alecresende_code_spores_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","controllers","protocol","backupIpfs","ipfsClient","centralIpfs","_centralIpfs","self","connectedLocally","finishedTestingLocalConnection","onreadystatechange","readyState","status","connectToCentral","keepSwarmConnectionAlive","timeout","ontimeout","send","list","_Users_alecresende_code_spores_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","refs","local","dht","findprovs","maxNumProviders","res","swarm","_this3","getSequenceId","getState","sequencer","arrayBuffer","addHelper","addBlobAndSaveToDB","Blob","Uint8Array","_this4","_ipfs","ipfsHash","_this5","ipfsObject","pin","_this6","noUTF","addJson","ipfsPath","_this7","useCentral","isBytes","restart","cat","parse","controller","AbortController","signal","abort","_url","getIPFSPrefix","_Users_alecresende_code_spores_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","dateA","_callee3","response","dateB","_context3","readAllChunks","merged","mergeArrays","TextDecoder","_callee4","bytesArray","_context4","_callee5","_context5","_this8","fileReader","onload","_this9","filereader","readasarraybuffer","readableStream","getReader","chunks","pump","read","_this11","_callee6","_context6","_x5","_ref5","_callee7","dateC","processed","_context7","processArray","_x6","array","ArrayBuffer","forEach","findEnd","arrays","skip","skipEnd","subarray","ending","iter","foundIndex","_this12"],"mappings":"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","file":"static/js/main.a5c4c813.chunk.js","sourcesContent":["import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\n\nconst VisualLinks = ({helperBox, helperRefs, selected}) => { \n    const [locations, setLocations] = useState();\n    useEffect(() => {\n        if (!helperRefs) {\n            return;\n        }\n        let playerEl = helperRefs[selected].current;\n        let helperEl = helperBox.current;\n\n        let playerLocation = getLocation(playerEl);\n        let helperLocation  = getLocation(helperEl);\n\n        setLocations([helperLocation, playerLocation]);\n    }, [selected, setLocations, helperRefs]);\n    if (!locations) {\n        return '';\n    }\n\n    let points = [\n        locations[0].x + locations[0].width, locations[0].y,\n        locations[1].x, locations[1].y + locations[1].height/2-1,\n        locations[1].x, locations[1].y + locations[1].height/2+1,\n        locations[0].x + locations[0].width,\n        locations[0].y+locations[0].height\n    ];\n    return (\n        <svg className=\"visual-links-spore\">\n          <linearGradient id=\"AnnotationGradient\">\n            <stop offset=\"5%\" stopColor=\"#a4c3e55c\" />\n            <stop offset=\"95%\" stopColor=\"#80aaff36\" />\n          </linearGradient>\n          <polygon className=\"visual-link\" points={points}/>\n        </svg>);\n}\n\nconst getLocation = (element, bounding) => {\n    var rect = element.getBoundingClientRect();\n    let bound = {top: 0, left: 0} //bounding.getBoundingClientRect();\n    let y = rect.top - bound.top;\n    let x = rect.left - bound.left;\n    let height = element.offsetHeight;\n    let width = element.offsetWidth;\n    let pos = {x, y, width, height};\n    return pos;\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VisualLinks);\n","export const docs = {\n    centerButton: [\n        \"Pressing the center button starts and stops the song. \",\n        \"Click on any empty space within the Spore Player to go back to a clean slate.\"\n    ],\n    ledButton: [\n        \"Press to enter \\\"Loop Mode\\\". When in this mode, the sliders control different looping parameters.\",\n        \"Slider 1: Loop Length\",\n        \"Slider 2: Pitch-Down (chop n screw)\",\n        \"Slider 3: Space Reverb/Delay)\",\n        \"Slider 4: Gate Effect\",\n    ],\n    spButton1: [\n        \"Press to enter \\\"Space Mode\\\". When in this mode, the sliders control different space parameters. \",\n        \"Slider 1: Vocal Reverb\",\n        \"Slider 2: Crystalized Ambience\",\n        \"Slider 3: Bass Reverb\",\n        \"Slider 4: Drum Reverb\",\n    ],\n    spButton2: [\n        \"Press to enter \\\"Timing Mode\\\". When in this mode, the sliders control different timing parameters. \",\n        \"Slider 1: Gate Rate\",\n        \"Slider 2: 8th note Delay\",\n        \"Slider 3: Gate Depth\",\n        \"Slider 4: 16th note Delay\",\n    ],\n    slider1: [\n        \"Wobble\",\n        \"This slider controls the rate of the wobble filter.\",\n    ],\n    slider2: [\n        \"Pitch-Up (chipmunk)\",\n        \"This slider speeds up the track, raising the pitch as well.\"\n    ],\n    slider3: [\n        \"Stutter\",\n        \"This slider controls stuttering, which repeats the beat at a slider-controlled rate.\",\n        \"You must hold slider down to hear this effect.\"\n    ],\n    slider4: [\n        \"Mutated Stem\",\n        \"Each Spore Player contains a rare, mutated stem.\",\n        \"This slider reveals this mutation.\"\n        ]\n};\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport VisualLinks from './VisualLinks.js';\nimport {docs} from './docs.js';\n\n\nconst HelperLines = ({helperRefs, selected, sliderHovered}) => { \n    let ref= useRef();\n    let doc = docs[selected];\n    return [\n        <div ref={ref} key={1} className=\"helper-box\">\n          {Array.isArray(doc) ? doc.map((x, i) => <p className={(selected.includes(\"spButton\") || selected === \"ledButton\") && i===sliderHovered ? \"selected\" : \"\"}>{x}</p>) : doc}\n        </div>,\n        <VisualLinks helperBox={ref} helperRefs={helperRefs} selected={selected}/>\n    ];\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HelperLines);\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport HelperLines from './HelperLines.js';\nimport {connect} from 'react-redux';\nimport './helper.scss';\n\nconst PlayerHelper = ({clear}) => { \n    let [sliderHovered, setSliderHovered]  = useState(undefined);\n    let [selected, setSelected] = useState(\"centerButton\");\n    let centerButton = useRef();\n    //let spButton1 = useRef();\n    //let spButton2 = useRef();\n    let ledButton = useRef();\n    let slider1 = useRef();\n    let slider2 = useRef();\n    let slider3 = useRef();\n    let slider4 = useRef();\n    return (\n        <div className=\"player-helper\">\n          <HelperLines\n            sliderHovered={sliderHovered}\n            selected={selected}\n            helperRefs={{\n              slider1,\n              slider2,\n              slider3,\n              slider4,\n              ledButton,\n              //spButton1,\n              //spButton2,\n              centerButton\n          }}/>\n          <div onClick={clear} className=\"pushable x-button\">\n            x\n          </div>\n          <div className=\"mock-player\">\n            <div ref={centerButton} className={selected === \"centerButton\" ? \"center-button selected\" : \"center-button\"}\n                 onClick={() => setSelected(\"centerButton\")}/>\n            <div ref={ledButton} className={selected === \"ledButton\" ? \"sp-button button1 led-button selected\" : \"sp-button button1 led-button\"}\n                 onClick={() => setSelected(\"ledButton\")}/>\n            <div\n              onMouseLeave={() => setSliderHovered(undefined)}\n              onMouseOver={() => setSliderHovered(1)}\n              ref={slider1} className={selected === \"slider1\" ? \"sp-slider slider1 selected\" : \"sp-slider slider1\"}\n                 onClick={() => setSelected(\"slider1\")}>\n              <span>1</span>\n            </div>\n            <div\n              onMouseLeave={() => setSliderHovered(undefined)}\n              onMouseOver={() => setSliderHovered(4)}\n              ref={slider2} className={selected === \"slider2\" ? \"sp-slider slider2 selected\" : \"sp-slider slider2\"}\n                 onClick={() => setSelected(\"slider2\")}>\n              <span>4</span>\n            </div>\n            <div\n              onMouseLeave={() => setSliderHovered(undefined)}\n              onMouseOver={() => setSliderHovered(3)}\n              ref={slider3} className={selected === \"slider3\" ? \"sp-slider slider3 selected\" : \"sp-slider slider3\"}\n                 onClick={() => setSelected(\"slider3\")}>\n              <span>3</span>\n            </div>\n            <div\n              onMouseLeave={() => setSliderHovered(undefined)}\n              onMouseOver={() => setSliderHovered(2)}\n              ref={slider4} className={selected === \"slider4\" ? \"sp-slider slider4 selected\" : \"sp-slider slider4\"}\n                 onClick={() => setSelected(\"slider4\")}>\n              <span>2</span>\n            </div>\n          </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerHelper);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './credits.scss';\n\nconst Credits = ({setShowCredits}) => { \n    return (\n        <div className=\"credits\">\n          <div onClick={() => setShowCredits(false)} className=\"pushable x-button\">\n            x\n          </div>\n          <div className=\"credits-text\">\n            <p>\n              Spore Players: A new internet for sound. Season One featuring \"Psilocybin\". Fuck just being a collector, become a <i>distributor</i> in the new music world. Beam futuristic songs exclusively to planet earth with your limited edition Spore Player. Each Spore Player is loaded with hidden rarities, such as <i>FX Chains</i>, that alter each song differently. Anyone can remix the song using the Spore Player, but only collectors have the power to mint the official remixes. Become the world’s ultra-rare contact point for futuristic music.\n            </p>\n\n            <p>\n              Song Credits\n            </p>\n\n            <p>\n              Location: Sunset and Gower Recording Studios\n            </p>\n            \n            <p>\n              Keyon Christ - Vocals, Writing, Producer\n              CLLLAPS - Co producer\n              Jonnywood- Co producer, Mixer\n              Zamorrah - Writer\n              Oshi - Co producer \n              Wil Anspach - Recording, Mixer\n            </p>\n            \n            <p>\n              Powered by <a href=\"https://zequencer.io\">Zequencer</a> x <a href=\"https://indigosound.vision\">Indigo Sound</a>\n            </p>\n\n          </div>\n        </div>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Credits);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './credits.scss';\n\nconst Credits = (props) => { \n    let [show, setShow] = useState(false);\n    return (\n        <div className=\"song-credits\">\n          <div onClick={() => setShow(!show)} className={show ? \"credits-btn show\" : \"credits-btn\"}>\n            Credits\n          </div>\n          {show && <div>\n                     <CreditPart type=\"Vocals, Producer\" names={[\"Keyon Christ\"]}/>\n                     <CreditPart type=\"Writing\" names={[\"Keyon Christ\", \"Zamorrah\"]}/>\n                     <CreditPart type=\"Co-Producer\" names={[\"CLLLAPS\", \"JonnyWood\", \"Oshi\"]}/>\n                     <CreditPart type=\"Mixing\" names={[\"JonnyWood\", \"Wil Anspach\"]}/>\n                     <CreditPart type=\"Recording\" names={[\"Wil Anspach\"]}/>\n                     <CreditPart type=\"Location\" names={[\"Sunset and Gower Recording Studios\"]}/>\n                     <CreditPart type=\"Powered By\" names={[\"Zequencer\", \"Indigo Sound\"]}/>\n                   </div>}\n        </div>\n    );\n}\n\nconst CreditPart = ({type, names}) => {\n    return (\n        <div className=\"credit-part\">\n          <div className=\"credit-type\">\n            {type}\n          </div>\n          <div className=\"credit-names\">\n            {names.map((x, i) => <div className=\"credit-name\">{x + (i < names.length - 1 ? ', ' : '')}</div>)}\n          </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Credits);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\n\nconst SongTitle = ({artist=\"Keyon Christ\", song=\"Psilocybin\"}) => { \n    return (\n        <div className=\"song-title\">\n          <div className=\"song-name\">\n            {song}\n          </div>\n          <div className=\"song-artist\">\n            {artist}\n          </div>\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n      song: state.playlist.currentSong\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SongTitle);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {isMobile} from 'react-device-detect';\nimport {setCurrentPlaylistSong} from 'actions/index.js';\nimport PulseLoader from 'react-spinners/PulseLoader'\nimport {connect} from 'react-redux';\nimport './songplaylist.scss';\n\nconst SporePlaylist = ({currentSong, setCurrentSong, sequencerEngine, showPlaylistMenu}) => { \n    let [stems, setStems] = useState([\"Twisting Faith\", \"Psilocybin\"]);\n    let [loading, setLoading] = useState(false);\n\n    let className = \"spores-playlister\";\n\n    const loadSong = useCallback((i, name) => {\n        console.log(\"window stemIFRame=\", window.stemIFrame);\n        if (!window.stemIFrame || !window.stemIFrame.current) {\n            return;\n        }\n        setCurrentSong(name);\n        console.log(\"sending load song=\", i);\n        window.stemIFrame.current.contentWindow.postMessage({\n            type: \"load-song\",\n            body: i\n        }, \"*\");\n    }, [setCurrentSong]);\n\n    if (isMobile && !showPlaylistMenu) {\n        return '';\n    }\n    return (\n        <div\n          onClick={e => e.stopPropagation()}\n          className=\"spores-playlist\">\n          {isMobile && <div className=\"artist-name\">Keyon Christ</div>}\n          {stems.map((x,i) =>\n              <div\n                onClick={(e) => {\n                    console.log(\"clicked playlist item\");\n                    if (currentSong === x) {\n                        return;\n                    }\n                    loadSong(i, x);\n                }}\n                className={x === currentSong ? \"song-item current\" : \"song-item\"}>\n                  {x}\n              </div>)}\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n      showPlaylistMenu: state.playlist.showPlaylistMenu,\n      currentSong: state.playlist.currentSong\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setCurrentSong: x => dispatch(setCurrentPlaylistSong(x))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SporePlaylist);\n","import {NEW_SEQUENCE} from 'constants/action-types.js';\nimport {SET_SHOW_PLAYLIST_MENU} from 'constants/action-types.js';\nimport {SET_CURRENT_PLAYLIST_SONG} from 'constants/action-types.js';\nimport {SET_DROPPED_SAMPLES} from 'constants/action-types.js';\nimport {SET_OBJECT_DRAGGING} from 'constants/action-types.js';\nimport {SET_RECENTLY_ADDED_SOUNDS} from 'constants/action-types.js';\nimport {SET_SHOW_FORMANT_PRESETS} from 'constants/action-types.js';\nimport {SET_PLANAR} from 'constants/action-types.js';\nimport {SET_PLANAR_GRADIENT_COLOR} from 'constants/action-types.js';\nimport {SET_PLANAR_OPACITY} from 'constants/action-types.js';\nimport {SET_RESOLUTION} from 'constants/action-types.js';\nimport {SET_SEQUENCER_ENGINE} from 'constants/action-types.js';\nimport {SET_VIEW_MODE} from 'constants/action-types.js';\nimport {SET_ALTERNATE_VIEW_MODE} from 'constants/action-types.js';\nimport {SET_DETAILS_VIEW} from 'constants/action-types.js';\nimport {SET_DECENTRALIZED} from 'constants/action-types.js';\nimport {SET_SELECTOR_MODE} from 'constants/action-types.js';\nimport {SET_NUMBER_PATTERNS} from 'constants/action-types.js';\nimport {SET_CURRENT_PATTERN} from 'constants/action-types.js';\nimport {SET_CURRENT_STEP} from 'constants/action-types.js';\nimport {SET_CURRENT_AND_GLOBAL_STEPS} from 'constants/action-types.js';\nimport {SET_CURRENT_GLOBAL_STEP} from 'constants/action-types.js';\n\n// tracks\nimport {NEW_TRACK} from 'constants/action-types.js';\n\n// samples\nimport {SET_SAMPLE} from 'constants/action-types.js';\n\n// animation triggers \nimport {START_TRIGGER_TRACK} from 'constants/action-types.js';\nimport {STOP_TRIGGER_TRACK} from 'constants/action-types.js';\n\n// sample packs\nimport {SET_SAMPLE_PACK} from 'constants/action-types.js';\nimport {ADD_SAMPLE_PACK} from 'constants/action-types.js';\nimport {REMOVE_SAMPLE_PACK} from 'constants/action-types.js';\n\nimport {DRAG_SAMPLE} from 'constants/action-types.js';\nimport {DRAG_EFFECT} from 'constants/action-types.js';\nimport {DRAG_PATTERN} from 'constants/action-types.js';\n\nimport {MOUSE_DOWN} from 'constants/action-types.js';\nimport {DRAG_TOGGLE} from 'constants/action-types.js';\nimport {DRAG_STEP_TRANSPOSE} from 'constants/action-types.js';\nimport {COMMAND_DOWN} from 'constants/action-types.js';\n\nimport {TRACK_RECORDING} from 'constants/action-types.js';\nimport {TRACK_PREPARING_TO_RECORD} from 'constants/action-types.js';\n\nimport {SET_TRACK_STEPS} from 'constants/action-types.js';\nimport {SET_TRACK_FILLS} from 'constants/action-types.js';\nimport {SET_TRACK_PIANO_ROLL_STEPS} from 'constants/action-types.js';\nimport {SET_ALL_TRACK_STEPS} from 'constants/action-types.js';\n\nimport {SET_SELECTED_GROUP} from 'constants/action-types.js';\nimport {SET_SELECTED_TRACK} from 'constants/action-types.js';\nimport {SET_SELECTED_STEP} from 'constants/action-types.js';\nimport {SET_HOVERED_STEP} from 'constants/action-types.js';\n\nimport {SET_STEP_DRAGGING} from 'constants/action-types.js';\nimport {SET_STEP_DATA_DRAGGING} from 'constants/action-types.js';\nimport {SET_STEP_AND_DATA_DRAGGING} from 'constants/action-types.js';\nimport {SET_STEP_TO_COPY} from 'constants/action-types.js';\n\nimport {SET_TRACK_VOLUME} from 'constants/action-types.js';\nimport {SET_TRACK_MUTED} from 'constants/action-types.js';\nimport {SET_TRACK_SOLO} from 'constants/action-types.js';\n\nimport {SET_GROUP_VOLUME} from 'constants/action-types.js';\nimport {SET_GROUP_MUTED} from 'constants/action-types.js';\n\nimport {SET_QUANTIZED} from 'constants/action-types.js';\nimport {SET_IS_RECORDING} from 'constants/action-types.js';\nimport {SET_IS_RECORDING_EXPANDED} from 'constants/action-types.js';\nimport {SET_IS_RECORDING_MIX} from 'constants/action-types.js';\nimport {SET_IS_PLAYING} from 'constants/action-types.js';\nimport {SET_IS_PLAYING_MIX} from 'constants/action-types.js';\n\nimport {SET_SEND_MUTED} from 'constants/action-types.js';\n\nimport {SET_SELECTION} from 'constants/action-types.js';\n\nimport {SET_SEQUENCE_NAME} from 'constants/action-types.js';\n\nimport {SET_SELECTED_EFFECT} from 'constants/action-types.js';\n\nimport {SET_EFFECT_PARAMETER_VALUE} from 'constants/action-types.js';\n\nimport {SET_EFFECTS_PANE_OPTION} from 'constants/action-types.js';\n\nimport {SET_SELECTED_PARAMETER} from 'constants/action-types.js';\nimport {SET_SHOW_LOGIN} from 'constants/action-types.js';\nimport {SET_USER_TOKEN} from 'constants/action-types.js';\nimport {SET_SIGNING_UP} from 'constants/action-types.js';\n\nimport {SET_SELECTED_PARAMETER_FLASHING} from 'constants/action-types.js';\n\nimport {SET_MIXES} from 'constants/action-types.js';\nimport {SET_CURRENT_MIX} from 'constants/action-types.js';\nimport {SET_ERASING_AUTOMATION} from 'constants/action-types.js';\n\nimport {SET_TRACK_SEND_VOLUME} from 'constants/action-types.js';\n\nimport {SET_TRACK_FOCUSED} from 'constants/action-types.js';\n\nimport {SET_YEAR_SELECTED} from 'constants/action-types.js';\nimport {SET_TAGS_SELECTED} from 'constants/action-types.js';\nimport {SET_STYLES_SELECTED} from 'constants/action-types.js';\nimport {SET_COUNTRIES_SELECTED} from 'constants/action-types.js';\nimport {SET_VIDEOS_SELECTED} from 'constants/action-types.js';\nimport {SET_HIERARCHY_ROOT} from 'constants/action-types.js';\nimport {SET_HIERARCHY_TREE} from 'constants/action-types.js';\nimport {SET_SHOW_YEAR_SLIDER} from 'constants/action-types.js';\nimport {SET_SHOW_COUNTRIES} from 'constants/action-types.js';\nimport {SET_SHOW_VIDEOS} from 'constants/action-types.js';\nimport {SET_SHOW_STYLES} from 'constants/action-types.js';\nimport {SET_SHOW_TAGS} from 'constants/action-types.js';\nimport {SET_SHOW_CHORD_FILTER} from 'constants/action-types.js';\nimport {SET_CHORD_SELECTED} from 'constants/action-types.js';\n\nimport {SET_IS_DRAGGING_DURATION} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_SELECTION} from 'constants/action-types.js';\nimport {SET_SELECTED_PIANO_ROLL_STEPS} from 'constants/action-types.js';\n\nimport {SET_SEARCH_RESULTS_SAMPLES} from 'constants/action-types.js';\n\nimport {SET_SELECTED_CHORD_SAMPLE} from 'constants/action-types.js';\nimport {SET_STEPS_TO_COPY} from 'constants/action-types.js';\n\nimport {SET_LOADING_SEQUENCE} from 'constants/action-types.js';\n\nimport {SET_EASY_PATTERN_TO_COPY} from 'constants/action-types.js';\nimport {SET_SAMPLE_AUDITIONING} from 'constants/action-types.js';\n\nimport {SET_LAST_MIDI_KEY_MAPPED} from 'constants/action-types.js';\nimport {SET_TRACK_IS_ENABLED} from 'constants/action-types.js';\n\nimport {SET_SELECTED_SAMPLE_TAG} from 'constants/action-types.js';\n\nimport {SET_TRANSPOSE_DRAGGING} from 'constants/action-types.js';\n\nimport {SET_MASTER_VOLUME} from 'constants/action-types.js';\n\nimport {SET_USER_VIEW_MODE} from 'constants/action-types.js';\nimport {SET_CURRENT_USER_MIX} from 'constants/action-types.js';\nimport {SET_USER_HAS_EDITS_TO_SAVE} from 'constants/action-types.js';\n\nimport {SET_PATTERN_TO_EDIT_COLOR} from 'constants/action-types.js';\nimport {SET_PATTERN_COLOR} from 'constants/action-types.js';\n\nimport {SET_COMPACT_MODE} from 'constants/action-types.js';\nimport {SET_SHOW_LFOS} from 'constants/action-types.js';\nimport {SET_SHOW_ENVELOPES} from 'constants/action-types.js';\n\nimport {SET_TRACKS_TO_RESAMPLE} from 'constants/action-types.js';\n\nimport {SET_PROJECT_AUTOMATION_MODE} from 'constants/action-types.js';\n\nimport {SET_STEPS_SELECTION} from 'constants/action-types.js';\nimport {SET_SELECTED_STEPS} from 'constants/action-types.js';\nimport {SET_STEP_NUMBER_DRAGGING_FROM} from 'constants/action-types.js';\n\nimport {SET_SEQUENCE_PATTERN_LOCKED} from 'constants/action-types.js';\nimport {SET_SEQUENCE_PATTERN_LOCKS} from 'constants/action-types.js';\n\nimport {SET_TRACK_PATTERN_LOCKED} from 'constants/action-types.js';\nimport {SET_TRACK_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {SET_EFFECT_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {UPDATE_STEPS_FOR_ALL_TRACKS} from 'constants/action-types.js';\nimport {SET_LFO_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {SET_ENVELOPE_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_PAGINATION} from 'constants/action-types.js';\n\nimport {SET_IS_RESAMPLING} from 'constants/action-types.js';\nimport {SET_RESAMPLE_DURATION} from 'constants/action-types.js';\n\nimport {SET_KEY_MAPPINGS} from 'constants/action-types.js';\nimport {SET_PAD_MAPPINGS} from 'constants/action-types.js';\n\nimport {SET_SHOW_SEQUENCE_MODAL} from 'constants/action-types.js';\n\nimport {SET_MULTI_PARAMETER_SLIDER} from 'constants/action-types.js';\n\nimport {SET_SHOW_MODS_MODAL} from 'constants/action-types.js';\n\nimport {SET_SEQUENCE_ROLLING} from 'constants/action-types.js';\n\nimport {SET_TRACK_EFFECTS_CHAIN} from 'constants/action-types.js';\n\nimport {SET_SHOW_SEQUENCES} from 'constants/action-types.js';\nimport {SET_SHOW_PRESETS} from 'constants/action-types.js';\nimport {SET_SHOW_INSTRUMENTS} from 'constants/action-types.js';\nimport {SET_TRACK_ROLLING} from 'constants/action-types.js';\n\nimport {SET_Z_INDEX_HACK} from 'constants/action-types.js';\n\nimport {SET_LOADED_TRACKS} from 'constants/action-types.js';\nimport {SET_BPM} from 'constants/action-types.js';\nimport {SET_RESAMPLE_MASTER} from 'constants/action-types.js';\n\nimport {SET_YOUTUBE_SEARCH_TERMS} from 'constants/action-types.js';\n\nimport {SET_AUDIO_INPUT_SOURCE} from 'constants/action-types.js';\n\nimport {SET_WAVEFORM_SELECTION} from 'constants/action-types.js';\nimport {SET_WAVEFORM_SELECTION_END} from 'constants/action-types.js';\n\nimport {SET_MIDI_MAP_MODE} from 'constants/action-types.js';\nimport {SET_PARAMETER_MIDI_MAP_SELECTION} from 'constants/action-types.js';\nimport {DELETE_PARAMETER_MIDI_MAPPING} from 'constants/action-types.js';\nimport {SET_PARAMETER_MIDI_MAPPING} from 'constants/action-types.js';\n\nimport {SET_ACTION_MIDI_MAP_SELECTION} from 'constants/action-types.js';\nimport {DELETE_MIDI_MAPPINGS} from 'constants/action-types.js';\nimport {SET_ACTION_MIDI_MAPPING} from 'constants/action-types.js';\n\nimport {SET_LATENCY} from 'constants/action-types.js';\n\nimport {SET_SPOTLIGHT_TRACKS} from 'constants/action-types.js';\n\nimport {SET_CLOCK_TYPE} from 'constants/action-types.js';\nimport {SET_CLOCK_TICK} from 'constants/action-types.js';\nimport {SET_CONNECTION_STATUS} from 'constants/action-types.js';\nimport {SET_CONNECTED_USER_NAME} from 'constants/action-types.js';\nimport {SET_PLAY_SCHEDULED} from 'constants/action-types.js';\nimport {SET_AVAILABLE_USERS_TO_SYNC} from 'constants/action-types.js';\n\nimport {SET_THEME} from 'constants/action-types.js';\nimport {SET_SHOW_THEME_GRID} from 'constants/action-types.js';\n\nimport {SET_SEARCH_SORT_BY} from 'constants/action-types.js';\n\nimport {SET_MIDI_EFFECT_DRAGGING} from 'constants/action-types.js';\n\nimport {SET_SHOW_TRACK_EFFECTS} from 'constants/action-types.js';\n\nimport {SET_SHOW_CONVOLVER_MODAL} from 'constants/action-types.js';\nimport {SET_SHOW_PASSWORD_MODAL} from 'constants/action-types.js';\nimport {SET_PASSWORD_MODAL_CALLBACK} from 'constants/action-types.js';\n\nimport {SET_SHOW_SHARE_SEQUENCE_MODAL} from 'constants/action-types.js';\n\nimport {HIDE_ALL_EFFECTS} from 'constants/action-types.js';\n\nimport {SET_EFFECT_COLLAPSED} from 'constants/action-types.js';\n\nimport {SET_CONTEXTUAL_HELP} from 'constants/action-types.js';\n\nimport {SET_SELECTED_LFO} from 'constants/action-types.js';\nimport {SET_SELECTED_ENVELOPE} from 'constants/action-types.js';\nimport {SET_SIDEBAR_COLLAPSED} from 'constants/action-types.js';\n\nimport {SET_MIX_EVENTS} from 'constants/action-types.js';\n\nimport {SET_SHOW_GROUPS} from 'constants/action-types.js';\n\nimport {SET_CURRENT_SUB_SEQUENCE} from 'constants/action-types.js';\nimport {SET_SUB_SEQUENCES} from 'constants/action-types.js';\n\nimport {SET_ALL_TRACK_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {SET_ALL_LFO_LOCKS} from 'constants/action-types.js';\nimport {SET_ALL_ENVELOPE_LOCKS} from 'constants/action-types.js';\n\nimport {SET_MIX_VIEW_MODE} from 'constants/action-types.js';\nimport {SET_SUB_SEQUENCE_FADE} from 'constants/action-types.js';\n\nimport {SET_SAMPLE_SLICES} from 'constants/action-types.js';\n\nimport {SET_SELECTED_ARRANGEMENT_EVENTS} from 'constants/action-types.js';\n\nimport {SET_SHOW_DATE_SAMPLED} from 'constants/action-types.js';\nimport {SET_DATE_SAMPLED} from 'constants/action-types.js';\n\nimport {SET_EFFECT_PARAMETER_VALUES} from 'constants/action-types.js';\n\nimport {SET_TRACK_PANNING} from 'constants/action-types.js';\nimport {SET_GROUP_PANNING} from 'constants/action-types.js';\nimport {SET_SENDS_PANNING} from 'constants/action-types.js';\n\nimport {SET_SELECTED_RECORD} from 'constants/action-types.js';\nimport {SET_2D_SELECTION} from 'constants/action-types.js';\nimport {SET_SIMILAR_SOUNDS_TO_FIND} from 'constants/action-types.js';\nimport {SET_SHOW_SAMPLES_2D} from 'constants/action-types.js';\nimport {SET_LAST_NOTE_PLAYED} from 'constants/action-types.js';\nimport {SET_SIDEBAR_VIEW_MODE} from 'constants/action-types.js';\nimport {SET_DISCOGS_SELECTED} from 'constants/action-types.js';\nimport {SET_SELECTED_FOLDER} from 'constants/action-types.js';\nimport {SET_SELECTED_PRESET} from 'constants/action-types.js';\nimport {SET_HAS_CHANGES_TO_FOLDERS} from 'constants/action-types.js';\n\nimport {SET_CURSOR_STEP} from 'constants/action-types.js';\nimport {SET_CURSOR_TRACK} from 'constants/action-types.js';\nimport {SET_CURSOR_SHOW} from 'constants/action-types.js';\nimport {SET_FOLDER_DRAGGING} from 'constants/action-types.js';\nimport {SET_PRESET_DRAGGING} from 'constants/action-types.js';\nimport {SET_SAMPLE_DRAGGING} from 'constants/action-types.js';\nimport {SET_EFFECTS_CHAIN_TO_SHOW} from 'constants/action-types.js';\nimport {SET_EFFECTS_CHAINS_TO_SHOW} from 'constants/action-types.js';\nimport {SET_SUB_SEQUENCE_MUTED} from 'constants/action-types.js';\nimport {SET_TRACK_FROZEN} from 'constants/action-types.js';\nimport {SET_TRACK_TO_FREEZE} from 'constants/action-types.js';\nimport {SET_FROZEN_TRACK_PLAYING} from 'constants/action-types.js';\nimport {SET_FROZEN_TRACKS} from 'constants/action-types.js';\nimport {SET_FROZEN_TRACKS_PLAYING} from 'constants/action-types.js';\nimport {SET_SELECTED_ONSETS} from 'constants/action-types.js';\n\nimport {SET_SINGLE_STEP_TO_DRAG} from 'constants/action-types.js';\nimport {SET_STEP_NUMBER_DRAGGED_TO} from 'constants/action-types.js';\nimport {SET_SEARCH_RESULTS_START} from 'constants/action-types.js';\nimport {SET_SHOW_STEP_OPTIONS} from 'constants/action-types.js';\nimport {SET_MASTER_STEP_TOGGLES} from 'constants/action-types.js';\nimport {SET_PARAMETERS_TO_RECORD} from 'constants/action-types.js';\nimport {SET_ONSET_THRESHOLD} from 'constants/action-types.js';\nimport {SET_SHOW_ONSETS} from 'constants/action-types.js';\n\nimport {SET_SELECTED_GUILD} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_DRAG_OFFSET} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_NOTES} from 'constants/action-types.js';\n\nimport {SET_PENDING_TRANSACTIONS} from 'constants/action-types.js';\nimport {SET_COMMAND_INPUT} from 'constants/action-types.js';\nimport {SET_COMMAND_PREFIX} from 'constants/action-types.js';\nimport {SET_VI_MODE} from 'constants/action-types.js';\nimport {SET_TRACK_WARP} from 'constants/action-types.js';\nimport {SET_SUB_SEQUENCE_WARPS} from 'constants/action-types.js';\n\nimport {SET_ARRANGEMENT_SELECTION} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_MOUSE_X} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_AUTOMATION_TO_SHOW} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_LOOPING} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_SELECTED_ROWS} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_LOOP_SELECTED} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_ROW_SELECTIONS} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_ZOOM} from 'constants/action-types.js';\n\nimport {SET_SELECTED_SEQUENCE} from 'constants/action-types.js';\nimport {SET_EXPLORE_MIXER_EFFECT} from 'constants/action-types.js';\nimport {SET_EXPLORE_EQ_EFFECT} from 'constants/action-types.js';\nimport {SET_SELECTED_SEND_EFFECT} from 'constants/action-types.js';\nimport {SET_INSTRUMENT_TYPE_DRAGGING} from 'constants/action-types.js';\n\nimport {SET_TRACK_IS_LOADING} from 'constants/action-types.js';\n\nimport {SET_PIANO_ROLL_CURSOR} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_X_SCALE} from 'constants/action-types.js';\nimport {SET_TOTAL_ARRANGEMENT_LENGTH} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_BOTTOM_HEIGHT} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_BOTTOM_MODE} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_BOTTOM_RESIZING} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_PATTERN_DRAGGING} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_PATTERN_START_STEP} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_CURSOR_STEP} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_PATTERN_RESIZING} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_BROWSER_MODE} from 'constants/action-types.js';\nimport {SET_SAMPLE_TO_EXPLORE} from 'constants/action-types.js';\nimport {SET_EFFECT_RACK_NODE_POSITION} from 'constants/action-types.js';\nimport {SET_ANNOTATION_DRAGGING} from 'constants/action-types.js';\n\nimport {SET_TRACK_AUTOMATION_DEVICE} from 'constants/action-types.js';\nimport {SET_TRACK_AUTOMATION_SUB_DEVICE} from 'constants/action-types.js';\nimport {SET_TRACK_AUTOMATION_RACK_DEVICE} from 'constants/action-types.js';\nimport {SET_TRACK_AUTOMATION_PARAMETER} from 'constants/action-types.js';\nimport {SET_SHOW_AUTOMATION} from 'constants/action-types.js';\nimport {SET_PARAMETER_AUTOMATIONS} from 'constants/action-types.js';\n\nimport {SET_ACTIONS_REMAINING} from 'constants/action-types.js';\nimport {SET_TIME_REMAINING} from 'constants/action-types.js';\n\nimport {SET_SHOW_PIANO_ROLL} from 'constants/action-types.js';\nimport {SET_SELECTED_RACK_SUB_TRACK} from 'constants/action-types.js';\nimport {DELETE_AUTOMATIONS_FOR_PARAMETERS} from 'constants/action-types.js';\nimport {SET_AUTOMATION_GUIDE_POINT} from 'constants/action-types.js';\nimport {SET_AUTOMATION_POINT_DRAGGING} from 'constants/action-types.js';\nimport {SET_AUTOMATION_POINT_HAS_MOVED} from 'constants/action-types.js';\nimport {SET_AUTOMATION_POINT_HOVERED} from 'constants/action-types.js';\nimport {SET_TRACK_TO_CONVERT} from 'constants/action-types.js';\nimport {SET_AUTOMATION_POINTS_SELECTED} from 'constants/action-types.js';\nimport {SET_AUTOMATION_SELECTION} from 'constants/action-types.js';\n\nimport {SET_EXPLORE_PERSON_SELECTED} from 'constants/action-types.js';\nimport {SET_EXPLORE_ALL_SEQUENCES}from 'constants/action-types.js';\n\nimport {DELETE_AUTOMATIONS_FOR_ENGINE}from 'constants/action-types.js';\nimport {SET_RECORDING_EXPLORE_MIX} from 'constants/action-types.js';\nimport {SET_WORKS_LOADED} from 'constants/action-types.js';\nimport {SET_WORK_TRANSPOSE} from 'constants/action-types.js';\nimport {SET_WORK_VOLUME} from 'constants/action-types.js';\nimport {SET_EXPLORE_MIX_LOADED} from 'constants/action-types.js';\n\nimport {SET_IS_MACRO_MAPPING} from 'constants/action-types.js';\nimport {SET_PARAMETER_TO_MAP} from 'constants/action-types.js';\n\nimport {SET_MIX_COLOR_VALUE} from 'constants/action-types.js';\nimport {SET_MIX_HAS_EDITS} from 'constants/action-types.js';\n\nimport {SET_SCRIPT_VARIABLES} from 'constants/action-types.js';\n\nimport {SET_EXPLORE_OPTION} from 'constants/action-types.js';\n\nimport {SET_ANNOTATIONS_VIEW} from 'constants/action-types.js';\nimport {SET_EXPLORE_TOAST} from 'constants/action-types.js';\n\nimport {SET_PARAMETER_SLIDER_DOWN} from 'constants/action-types.js';\nimport {MOVE_ENGINE_AUTOMATIONS} from 'constants/action-types.js';\nimport {SET_SEQUENCE_LOADING_PROGRESS} from 'constants/action-types.js';\n\nimport {SET_TRACK_BROWSED_SAMPLES} from 'constants/action-types.js';\nimport {SET_TRACK_BROWSED_PRESETS} from 'constants/action-types.js';\nimport {SET_BOTTOM_TOOLBAR_OFFSET} from 'constants/action-types.js';\nimport {SET_TRACK_UPDATES} from 'constants/action-types.js';\nimport {SET_IS_TRANSCRIBING} from 'constants/action-types.js';\nimport {SET_SAMPLE_TOOLTIP} from 'constants/action-types.js';\nimport {SET_SELECTED_FREEZE} from 'constants/action-types.js';\nimport {SET_TRACK_LENGTH_MODE} from 'constants/action-types.js';\nimport {SET_TRACK_LENGTH_CHOICE} from 'constants/action-types.js';\nimport {SET_FREEZE_DRAGGING} from 'constants/action-types.js';\nimport {SET_FREEZE_COLUMN_SAMPLES} from 'constants/action-types.js';\nimport {SET_UPLOADING_FILE} from 'constants/action-types.js';\nimport {SET_GROUP_COLLAPSED} from 'constants/action-types.js';\nimport {SET_SELECTED_MIX_EFFECT} from 'constants/action-types.js';\nimport {SET_SAMPLES_DRAGGING} from 'constants/action-types.js';\nimport {SET_DISPLAY_RESOLUTION} from 'constants/action-types.js';\nimport {SET_OFFLINE_ENGINE} from 'constants/action-types.js';\nimport {SET_CURRENT_EXPORT_INFO} from 'constants/action-types.js';\nimport {SET_MIX_TRACK_DRAGGING} from 'constants/action-types.js';\nimport {SET_GROUP_TRACKS} from 'constants/action-types.js';\nimport {SET_LOADING_TEXT} from 'constants/action-types.js';\nimport {SET_TRACK_ENVELOPES} from 'constants/action-types.js';\nimport {SET_COPIED_NODES_FOR_RACK} from 'constants/action-types.js';\nimport {SET_LAST_MIDI_CC_PLAYED} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_MOUSE_DOWN_X} from 'constants/action-types.js';\n\nimport {SET_TRACKER_PARAMETER_TO_EDIT} from 'constants/action-types.js';\nimport {SET_TRACKS_TO_HIDE} from 'constants/action-types.js';\nimport {SET_SELECTED_PALETTE} from 'constants/action-types.js';\nimport {SET_SEQUENCED_PALETTE} from 'constants/action-types.js';\nimport {SET_PROJECT_DRAGGING} from 'constants/action-types.js';\nimport {SET_EXPLORE_UNPUBLISHED} from 'constants/action-types.js';\nimport {SET_QUICK_ADD_SEARCH_TEXT} from 'constants/action-types.js';\nimport {SET_SHOW_TRACK_FREEZE_HISTORY} from 'constants/action-types.js';\nimport {SET_SELECTED_MIDI_TRACK} from 'constants/action-types.js';\nimport {SET_SELECTED_TRACK_SLICE} from 'constants/action-types.js';\nimport {SET_CIRKLON_PARAMETER_SELECTED} from 'constants/action-types.js';\nimport {SET_CIRKLON_MODE} from 'constants/action-types.js';\nimport {SET_NOTES_DOWN} from 'constants/action-types.js';\nimport {SET_SCENES} from 'constants/action-types.js';\nimport {SET_CURRENT_SCENE} from 'constants/action-types.js';\nimport {SET_SHOW_SETTINGS} from 'constants/action-types.js';\nimport {SET_WALLPAPER} from 'constants/action-types.js';\nimport {SET_ANIMATE_WALLPAPER} from 'constants/action-types.js';\nimport {SET_EXPANDED_PROJECT} from 'constants/action-types.js';\nimport {SET_ACCUMULATOR_PARAMETER_SELECTED} from 'constants/action-types.js';\nimport {SET_PLANE_MAPPING} from 'constants/action-types.js';\nimport {SET_TRACK_PRESET_SAVING} from 'constants/action-types.js';\nimport {SET_SAMPLE_TAG_DRAGGING} from 'constants/action-types.js';\nimport {SET_PARAMETER_MIX_AUTOMATIONS} from 'constants/action-types.js';\nimport {SET_SHOW_ARRANGEMENT_TRACKS} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_PATTERN_SELECTED} from 'constants/action-types.js';\nimport {SET_SIDEBAR_SEARCH_INPUT} from 'constants/action-types.js';\nimport {SET_SHOW_ARRANGEMENT_SEARCHER} from 'constants/action-types.js';\nimport {SET_VI_SELECT_MODE} from 'constants/action-types.js';\nimport {SET_EXPLORE_WORK} from 'constants/action-types.js';\nimport {SET_CREATING_NEW_PACK} from 'constants/action-types.js';\nimport {SET_PACK_WINDOW_POSITION} from 'constants/action-types.js';\nimport {SET_DRAGGING_PACK_WINDOW} from 'constants/action-types.js';\nimport {SET_PACK_TO_EDIT} from 'constants/action-types.js';\nimport {SET_IS_MANAGING_GUILDS} from 'constants/action-types.js';\n\nimport {NEW_STEP_GROUP} from 'constants/action-types.js';\nimport {SET_STEPS_GROUP_MODE} from 'constants/action-types.js';\nimport {SET_TRANSFORMATION_EDGE_DRAGGING} from 'constants/action-types.js';\nimport {SET_SHOW_FORMANT_EFFECT} from 'constants/action-types.js';\nimport {SET_SHOWING_FORMANTS} from 'constants/action-types.js';\nimport {SET_PULLED_EFFECTS} from 'constants/action-types.js';\nimport {SET_LOOPS_TO_FREEZE} from 'constants/action-types.js';\nimport {SET_PARAMETER_MIN_MAX} from 'constants/action-types.js';\nimport {SET_CURRENT_SOUND_IN_LIST} from 'constants/action-types.js';\nimport {SET_SHOWING_SOUND_LIST} from 'constants/action-types.js';\nimport {SET_CURRENT_TAG_IN_LIST} from 'constants/action-types.js';\nimport {SET_LINKING_EFFECTS} from 'constants/action-types.js';\nimport {SET_PACK_SELECTED} from 'constants/action-types.js';\nimport {SET_SAMPLE_EXPLORER_SELECTED} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_SLIDE} from 'constants/action-types.js';\nimport {SET_MAXIMIZE_EXPLORER} from 'constants/action-types.js';\n\nimport {SET_PADS} from 'constants/action-types.js';\nimport {SET_PAD_SLOTS} from 'constants/action-types.js';\nimport {SET_PAD_HOVERED} from 'constants/action-types.js';\nimport {SET_WAVEFORM_SHOWING} from 'constants/action-types.js';\nimport {SET_TRACK_DRAGGING} from 'constants/action-types.js';\nimport {SET_HIDE_MIXER} from 'constants/action-types.js';\nimport {SET_SOURCE_EXPLORING} from 'constants/action-types.js';\nimport {SET_YEAR_EXPLORING} from 'constants/action-types.js';\nimport {SET_PULLABLE_PART_DRAGGING} from 'constants/action-types.js';\nimport {SET_PADS_EXPAND} from 'constants/action-types.js';\n\nimport {SET_SEQUENCERS} from 'constants/action-types.js';\nimport {SET_SEQUENCER_TRACKS} from 'constants/action-types.js';\nimport {SET_PLANE_MACROS} from 'constants/action-types.js';\nimport {SET_WINDOW_POSITION} from 'constants/action-types.js';\nimport {SET_BULK_WINDOW_POSITIONS} from 'constants/action-types.js';\nimport {SET_PAD_EFFECTS} from 'constants/action-types.js';\nimport {SET_DRAWING_PAD_EDGE} from 'constants/action-types.js';\nimport {SET_MOVING_PAD_EDGE} from 'constants/action-types.js';\nimport {SET_SELECTED_PAD_EDGE} from 'constants/action-types.js';\nimport {SET_BULK_EFFECTS_COLLAPSED} from 'constants/action-types.js';\nimport {SET_SELECTED_PULLED_ELEMENTS} from 'constants/action-types.js';\nimport {SET_ALL_EFFECT_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {SET_MODULE_COLLAPSED} from 'constants/action-types.js';\nimport {SET_TRACK_MIDI_EFFECTS} from 'constants/action-types.js';\nimport {SET_EFFECT_STARRED} from 'constants/action-types.js';\nimport {SET_BULK_EFFECTS_STARRED} from 'constants/action-types.js';\nimport {SET_BULK_MODULES_COLLAPSED} from 'constants/action-types.js';\nimport {DELETE_TRACK_ID} from 'constants/action-types.js';\nimport {SET_SHOWING_CONTEXT_MENU} from 'constants/action-types.js';\nimport {SET_HIGHER_ORDER_MATRIX} from 'constants/action-types.js';\nimport {SET_MODULE_COLOR} from 'constants/action-types.js';\nimport {SET_MODULES_ROUTING} from 'constants/action-types.js';\nimport {SET_HIGHER_ORDER_STEPS_SELECTED} from 'constants/action-types.js';\nimport {SET_ORIENTATION_ROUTINGS} from 'constants/action-types.js';\nimport {SET_SHOW_HIGHER_ORDER_SEQUENCER} from 'constants/action-types.js';\nimport {SET_MODULE_SIZE} from 'constants/action-types.js';\nimport {SET_INLET_CONNECTIONS} from 'constants/action-types.js';\nimport {SET_ZOBJECTS} from 'constants/action-types.js';\nimport {SET_ZMESSAGES} from 'constants/action-types.js';\nimport {SET_BACKGROUND_COLOR} from 'constants/action-types.js';\nimport {SET_VIEWABLE_SUBPATCHES} from 'constants/action-types.js';\nimport {SET_VIEWABLE_ZOBJECTS} from 'constants/action-types.js';\nimport {SET_SELECTED_ZOBJECT} from 'constants/action-types.js';\nimport {SET_JAKI_GRID} from 'constants/action-types.js';\nimport {SET_ZOBJECT_TYPE_DRAGGING} from 'constants/action-types.js';\nimport {SET_UX_LOCKED} from 'constants/action-types.js';\nimport {SET_MINTED_TOKENS} from 'constants/action-types.js';\nimport {SET_HIC_DIALOG} from 'constants/action-types.js';\nimport {SET_ZORA_DIALOG} from 'constants/action-types.js';\nimport {SET_IS_PREPARING_NFT} from 'constants/action-types.js';\nimport {SET_FULL_SCREEN_ZOBJECT} from 'constants/action-types.js';\nimport {SET_MAIN_SCROLL_REF} from 'constants/action-types.js';\nimport {SET_VIEWPORT_POSITION} from 'constants/action-types.js';\nimport {SET_SIDEBARS_SHOWING} from 'constants/action-types.js';\nimport {SET_SHOW_PAD_SEQUENCER} from 'constants/action-types.js';\nimport {SET_SHOW_PROJECTS_MODAL} from 'constants/action-types.js';\nimport {SET_SHOW_SEARCH_WINDOW} from 'constants/action-types.js';\nimport {SET_STEP_PARAMETER_SELECTED} from 'constants/action-types.js';\nimport {SET_SHOW_TRACK_INSTRUMENT} from 'constants/action-types.js';\nimport {SET_SHOW_MODULATORS} from 'constants/action-types.js';\nimport {SET_CABLE_SEGMENTATION} from 'constants/action-types.js';\nimport {SET_CABLE_SEGMENTATIONS} from 'constants/action-types.js';\n\nimport {SET_UX_LOCK_OBJECT} from 'constants/action-types.js';\nimport {SET_UX_LOCK_OBJECTS} from 'constants/action-types.js';\nimport {SET_UX_HIDE_OBJECT} from 'constants/action-types.js';\nimport {SET_UX_HIDE_OBJECTS} from 'constants/action-types.js';\nimport {SET_ZOBJECT_INPUT_TEXT} from 'constants/action-types.js';\nimport {SET_SHOW_EDITOR_BOTTOM} from 'constants/action-types.js';\nimport {SET_MINTING_PROGRESS} from 'constants/action-types.js';\nimport {SET_NEW_ZORA_TOKEN_ID} from 'constants/action-types.js';\nimport {SET_TRANSACTION_UPON_LOGIN} from 'constants/action-types.js';\nimport {SET_KEYBOARD_CONTEXT} from 'constants/action-types.js';\nimport {SET_PAD_FX_MODE} from 'constants/action-types.js';\nimport {SET_JAKI_GRID_MODE} from 'constants/action-types.js';\nimport {SET_OBJECT_STYLING} from 'constants/action-types.js';\nimport {SET_SELECTED_PLANAR_PARAMETERS} from 'constants/action-types.js';\nimport {SET_FILTERED_PLANAR_PARAMETERS} from 'constants/action-types.js';\nimport {SET_PLANAR_MACRO_TO_SHOW} from 'constants/action-types.js';\nimport {SET_PLANAR_REGION_MODE} from 'constants/action-types.js';\nimport {SET_GROUP_PRESETS_BY_PACKS} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_LEFT_SPACE} from 'constants/action-types.js';\nimport {SET_ZOBJECT_SIZE} from 'constants/action-types.js';\nimport {SET_SECONDARY_ZOBJECT} from 'constants/action-types.js';\nimport {CLEAR_DRAG_DROP} from 'constants/action-types.js';\nimport {SET_SAMPLES_TO_SAVE} from 'constants/action-types.js';\nimport {SET_EDITOR_PADDING} from 'constants/action-types.js';\nimport {SET_EDGES_PADDING} from 'constants/action-types.js';\nimport {SET_EDGES_SIZE} from 'constants/action-types.js';\nimport {SET_LEFT_SIDEBAR_WIDTH} from 'constants/action-types.js';\nimport {SET_DOCUMENTATION_SUB_SECTION} from 'constants/action-types.js';\nimport {SET_RIGHT_SIDEBAR_OPTION} from 'constants/action-types.js';\nimport {SET_SELECTED_FM_ENVELOPE_TYPE} from 'constants/action-types.js';\nimport {SET_SELECTED_FM_OPERATOR_DETAILS} from 'constants/action-types.js';\nimport {SET_SELECTED_FM_FORMANT} from 'constants/action-types.js';\nimport {SET_SHOW_SAVE_MODAL} from 'constants/action-types.js';\nimport {SET_ZOBJECT_FLASHING} from 'constants/action-types.js';\nimport {SET_SAMPLE_DOWNLOAD_PROGRESS} from 'constants/action-types.js';\nimport {SET_PRESET_SAVED} from 'constants/action-types.js';\nimport {SET_COMPLETELY_DONE_LOADING} from 'constants/action-types.js';\nimport {SET_PLUGIN_TO_SAVE} from 'constants/action-types.js';\nimport {SET_SHOW_PLUGINS} from 'constants/action-types.js';\nimport {SET_PLUGINS_LOADED} from 'constants/action-types.js';\nimport {SET_SHOW_PLUGINS_PANE} from 'constants/action-types.js';\nimport {SET_PLUGINS_PANE_HEIGHT} from 'constants/action-types.js';\nimport {SET_ZOBJECT_BACKGROUND} from 'constants/action-types.js';\nimport {SET_PRESENTATION_MODE} from 'constants/action-types.js';\nimport {SET_PRESENTATION_WINDOW_POSITION} from 'constants/action-types.js';\nimport {SET_BULK_PRESENTATION_WINDOW_POSITIONS} from 'constants/action-types.js';\nimport {SET_SHOW_FREEZE_MODAL} from 'constants/action-types.js';\nimport {SET_ZOBJECT_TOOLTIP} from 'constants/action-types.js';\nimport {SET_ZOBJECTS_STACK} from 'constants/action-types.js';\nimport {SET_ZOBJECT_CONTEXT_MENU} from 'constants/action-types.js';\nimport {SET_ENABLE_ROLL_VIEWER} from 'constants/action-types.js';\nimport {SET_ZOBJECT_MODAL} from 'constants/action-types.js';\nimport {SET_ZOBJECT_PROGRESSBAR} from 'constants/action-types.js';\n\nexport const setResolution = resolution => ({ type: SET_RESOLUTION, payload: resolution });\nexport const setSequencerEngine = sequencerEngine => ({ type: SET_SEQUENCER_ENGINE, payload: sequencerEngine});\nexport const setViewMode = viewMode => ({ type: SET_VIEW_MODE, payload: viewMode});\nexport const setAlternateViewMode = viewMode => ({ type: SET_ALTERNATE_VIEW_MODE, payload: viewMode});\nexport const setDetailsView = trackNumber => ({ type: SET_DETAILS_VIEW, payload: trackNumber});\nexport const setDecentralized = decentralized => ({ type: SET_DECENTRALIZED, payload: decentralized});\nexport const setSelectorMode = selectorMode => ({ type: SET_SELECTOR_MODE , payload: selectorMode});\nexport const setNumberOfPatterns = (id, numberOfPatterns) => (\n    {\n        type: SET_NUMBER_PATTERNS,\n        payload: {\n            id,\n            numberOfPatterns\n        }\n    });\nexport const setCurrentPattern =\n    (sequenceId, currentPattern) =>\n    ({\n        type: SET_CURRENT_PATTERN ,\n        payload: {\n            sequenceId: sequenceId,\n            currentPattern: currentPattern}});\nexport const setCurrentStep =\n    (sequenceId, currentStep) =>\n    ({\n        type: SET_CURRENT_STEP ,\n        payload: {\n            sequenceId: sequenceId,\n            currentStep: currentStep}});\nexport const setCurrentGlobalStep =\n    (sequenceId, currentStep) =>\n    ({\n        type: SET_CURRENT_GLOBAL_STEP,\n        payload: {\n            sequenceId: sequenceId,\n            currentGlobalStep: currentStep\n        }\n    });\n\nexport const setCurrentAndGlobalSteps =\n    (sequenceId, currentStep, currentGlobalStep) =>\n    ({\n        type: SET_CURRENT_AND_GLOBAL_STEPS,\n        payload: {\n            sequenceId: sequenceId,\n            currentStep: currentStep,\n            currentGlobalStep: currentGlobalStep,\n        }\n    }\n    );\n\n// samples\n\nexport const setSample = (id, sample) => ({ type: SET_SAMPLE, payload: {sampleId: id, sample: sample}});\n\nexport const startTriggerTrack = (trackNumber, sliceNumber) => ({ type: START_TRIGGER_TRACK, payload: {trackNumber: trackNumber, sliceNumber: sliceNumber}});\nexport const stopTriggerTrack = (trackNumber, sliceNumber) => ({ type: STOP_TRIGGER_TRACK, payload: {trackNumber: trackNumber, sliceNumber: sliceNumber}});\n\nexport const setSamplePack = (samplePack) => ({ type: SET_SAMPLE_PACK , payload: samplePack});\n\n// add sample pack to your palette\nexport const addSamplePack = (samplePack) => ({ type: ADD_SAMPLE_PACK , payload: samplePack});\nexport const removeSamplePack = (samplePack) => ({ type: REMOVE_SAMPLE_PACK , payload: samplePack});\n\n\nexport const dragSample = (sample) => ({ type: DRAG_SAMPLE , payload: sample});\nexport const dragEffect = (effectNumber) => ({ type: DRAG_EFFECT , payload: effectNumber});\nexport const dragPattern = (patternNumber) => ({ type: DRAG_PATTERN, payload: patternNumber});\n\nexport const mouseDown = (m) => ({ type: MOUSE_DOWN, payload: m});\nexport const dragToggle = (toggle) => ({ type: DRAG_TOGGLE, payload: toggle});\nexport const dragStepTranspose = (transpose) => ({ type: DRAG_STEP_TRANSPOSE, payload: transpose});\nexport const setCommandDown = (c) => ({ type: COMMAND_DOWN, payload: c});\n\nexport const trackRecording = (t, r) => ({ type: TRACK_RECORDING, payload: {id: t, recording: r}});\nexport const trackPreparingToRecord = (t, r) => ({ type: TRACK_PREPARING_TO_RECORD, payload: {trackNumber: t, preparing: r}});\n\nexport const setAllTrackSteps = (t, steps, pianoSteps, fills, stepToId, stepToPosition, pianoRollDurations, patternSteps, groups) => (\n    {\n        type: SET_ALL_TRACK_STEPS,\n        payload: {\n            id: t,\n            steps: steps,\n            pianoRollSteps: pianoSteps,\n            fills: fills,\n            stepToId: stepToId,\n            stepToPosition: stepToPosition,\n            pianoRollDurations: pianoRollDurations,\n            patternSteps: patternSteps,\n            groups\n        }});\n\nexport const setTrackSteps = (t, s) => ({ type: SET_TRACK_STEPS, payload: {id: t, steps: s}});\nexport const setTrackFills = (t, s) => ({ type: SET_TRACK_FILLS, payload: {id: t, fills: s}});\nexport const setTrackPianoRollSteps = (t, s) => ({ type: SET_TRACK_PIANO_ROLL_STEPS, payload: {id: t, steps: s}});\n\nexport const setSelectedTrack = (track) => ({ type: SET_SELECTED_TRACK, payload: track});\nexport const setSelectedStep = (step) => ({ type: SET_SELECTED_STEP, payload: step});\nexport const setHoveredStep = (step) => ({ type: SET_HOVERED_STEP, payload: step});\nexport const setSelectedGroup = (group) => ({ type: SET_SELECTED_GROUP, payload: group});\n\n\nexport const setTrackVolume = (trackNumber, volume) => ({ type: SET_TRACK_VOLUME, payload:\n                                                          {id: trackNumber, volume: volume }});\nexport const setTrackMuted = (id, muted) => ({ type: SET_TRACK_MUTED, payload: {\n    id: id, muted: muted}});\n\nexport const setTrackSolo = (id, solo) => ({ type: SET_TRACK_SOLO, payload: {\n    id, solo: solo}});\n\nexport const setGroupVolume = (groupNumber, volume) => ({ type: SET_GROUP_VOLUME, payload:\n                                                          {groupNumber: groupNumber, volume: volume }});\nexport const setGroupMuted = (groupNumber, muted) => ({ type: SET_GROUP_MUTED, payload: {\n    groupNumber: groupNumber, muted: muted}});\n\nexport const setQuantized = (quantized) => ({ type: SET_QUANTIZED, payload: quantized});\nexport const setIsRecording = (isRecording) => ({ type: SET_IS_RECORDING, payload: isRecording});\nexport const setIsRecordingExpanded = (isRecordingExpanded) => ({ type: SET_IS_RECORDING_EXPANDED, payload: isRecordingExpanded});\nexport const setIsRecordingMix = (isRecordingMix) => ({ type: SET_IS_RECORDING_MIX, payload: isRecordingMix});\nexport const setIsPlaying =\n    (sequenceId, isPlaying) =>\n    ({\n        type: SET_IS_PLAYING,\n        payload: {\n            sequenceId: sequenceId,\n            isPlaying: isPlaying\n        }});\nexport const setIsPlayingMix = (isPlayingMix) => ({ type: SET_IS_PLAYING_MIX, payload: isPlayingMix});\n\nexport const setSendMuted = (sendNumber, muted) => ({ type: SET_SEND_MUTED, payload: {\n    sendNumber: sendNumber, muted: muted}});\n\nexport const setStepDragging = (step) => ({ type: SET_STEP_DRAGGING, payload: step});\nexport const setStepToCopy = (step) => ({ type: SET_STEP_TO_COPY, payload: step});\n\nexport const setSequenceName = (name) => ({ type: SET_SEQUENCE_NAME, payload: name});\n\nexport const setSelectedEffect = (effectNumber) => ({ type: SET_SELECTED_EFFECT, payload: effectNumber});\n\nexport const setEffectParameterValue = (id, value) => ({ type: SET_EFFECT_PARAMETER_VALUE, payload: {id: id, value: value}});\n\nexport const setEffectsPaneOption = (option) => ({ type: SET_EFFECTS_PANE_OPTION, payload: option});\n\nexport const setSelectedParameter = (parameter) => ({ type: SET_SELECTED_PARAMETER, payload: parameter});\nexport const setSelectedParameterFlashing = (parameter) => ({ type: SET_SELECTED_PARAMETER_FLASHING, payload: parameter});\n\nexport const setMixes = (mixes) => ({ type: SET_MIXES, payload: mixes});\nexport const setCurrentMix = (mix) => ({ type: SET_CURRENT_MIX, payload: mix});\n\nexport const setErasingAutomation = (mix) => ({ type: SET_ERASING_AUTOMATION, payload: mix});\n\nexport const setTrackSendVolume = (subSequenceId, trackNumber, sendNumber, volume) => (\n    { type: SET_TRACK_SEND_VOLUME,\n      payload: {\n          subSequenceId: subSequenceId,\n          trackNumber: trackNumber,\n          sendNumber: sendNumber,\n          volume: volume\n      }});\n\nexport const setTrackFocused = (track) => ({ type: SET_TRACK_FOCUSED, payload: track});\n\nexport const setYearSelected = (year) => ({ type: SET_YEAR_SELECTED, payload: year});\nexport const setCountriesSelected = (countries) => ({ type: SET_COUNTRIES_SELECTED, payload: countries});\nexport const setVideosSelected = (videos) => ({ type: SET_VIDEOS_SELECTED, payload: videos});\nexport const setStylesSelected = (styles) => ({ type: SET_STYLES_SELECTED, payload: styles});\nexport const setTagsSelected = (tags) => ({ type: SET_TAGS_SELECTED, payload: tags});\nexport const setChordSelected = (chord) => ({ type: SET_CHORD_SELECTED, payload: chord});\nexport const setHierarchyRoot = (root) => ({ type: SET_HIERARCHY_ROOT, payload: root});\nexport const setHierarchyTree = (tree) => ({ type: SET_HIERARCHY_TREE, payload: tree});\n\nexport const setShowYearSlider = (show) => ({ type: SET_SHOW_YEAR_SLIDER, payload: show});\nexport const setShowCountries = (show) => ({ type: SET_SHOW_COUNTRIES, payload: show});\nexport const setShowVideos  = (show) => ({ type: SET_SHOW_VIDEOS, payload: show});\nexport const setShowStyles = (show) => ({ type: SET_SHOW_STYLES, payload: show});\nexport const setShowTags = (show) => ({ type: SET_SHOW_TAGS, payload: show});\nexport const setShowChordFilter = (show) => ({ type: SET_SHOW_CHORD_FILTER, payload: show});\n\nexport const setIsDraggingDuration = (duration) => ({ type: SET_IS_DRAGGING_DURATION, payload: duration});\nexport const setStepDataDragging = (stepData) => ({ type: SET_STEP_DATA_DRAGGING, payload: stepData});\nexport const setPianoRollSelection =\n    (stepNumber, transpose, numSteps, numNotes) =>\n    ({\n        type: SET_PIANO_ROLL_SELECTION,\n        payload: {\n            stepNumber: stepNumber,\n            transpose: transpose,\n            numSteps: numSteps,\n            numNotes: numNotes,\n        }});\n\n\nexport const setSelectedPianoRollSteps =\n    (selectedSteps) =>\n    ({\n        type: SET_SELECTED_PIANO_ROLL_STEPS,\n        payload: selectedSteps\n    });\n\nexport const setSearchResultsSamples =\n    (sampleHashes) =>\n    ({\n        type: SET_SEARCH_RESULTS_SAMPLES,\n        payload: sampleHashes\n    });\n\nexport const setSelectedChordSample =\n    (obj =>\n    ({\n        type: SET_SELECTED_CHORD_SAMPLE,\n        payload: obj\n    }));\n\nexport const setStepsToCopy =\n    (steps =>\n    ({\n        type: SET_STEPS_TO_COPY,\n        payload: steps\n    }));\n\nexport const setLoadingSequence = (id, loading) => ({ type: SET_LOADING_SEQUENCE, payload: {id: id, loading: loading}});\n\nexport const setEasyPatternToCopy = (easyPattern) => ({ type: SET_EASY_PATTERN_TO_COPY, payload: easyPattern});\n\nexport const setSampleAuditioning = (sampleId) => ({ type: SET_SAMPLE_AUDITIONING, payload: sampleId});\n\nexport const setLastMidiKeyMapped = (midiKey) => ({ type: SET_LAST_MIDI_KEY_MAPPED, payload: midiKey});\nexport const setTrackIsEnabled = (subSequenceId, trackNumber, isEnabled) => (\n    {\n        type: SET_TRACK_IS_ENABLED,\n        payload: {\n            subSequenceId: subSequenceId,\n            trackNumber: trackNumber,\n            isEnabled: isEnabled\n        }\n    });\n\nexport const setSelectedSampleTag = (sampleId, tag) => ({ type: SET_SELECTED_SAMPLE_TAG, payload: {sampleId: sampleId, tag: tag}});\n\nexport const setTransposeDragging = (dragging) => ({ type: SET_TRANSPOSE_DRAGGING, payload: {transpose: dragging}});\n\nexport const setMasterVolume =\n    (sequenceId, volume) => (\n        { type: SET_MASTER_VOLUME,\n          payload: {\n              sequenceId: sequenceId,\n              volume: volume\n          }\n        });\n\nexport const setUserViewMode = (userViewMode) => ({ type: SET_USER_VIEW_MODE, payload: userViewMode});\nexport const setCurrentUserMix = (mix) => ({ type: SET_CURRENT_USER_MIX, payload: mix});\nexport const setUserHasEditsToSave = (hasEdits) => ({ type: SET_USER_HAS_EDITS_TO_SAVE, payload: hasEdits});\n\nexport const setPatternToEditColor = (pattern) => ({ type: SET_PATTERN_TO_EDIT_COLOR, payload: pattern});\nexport const setPatternColor = (pattern, color) => (\n    { type: SET_PATTERN_COLOR,\n      payload: {\n          pattern: pattern,\n          color: color}});\n\nexport const setCompactMode = (isCompact) => ({ type: SET_COMPACT_MODE, payload: isCompact});\n\nexport const setShowLFOs = (show) => ({ type: SET_SHOW_LFOS, payload: show});\nexport const setShowEnvelopes = (show) => ({ type: SET_SHOW_ENVELOPES, payload: show});\n\nexport const setTracksToResample = (tracks) => ({ type: SET_TRACKS_TO_RESAMPLE, payload: tracks});\n\nexport const setProjectAutomationMode  = (mode) => ({ type: SET_PROJECT_AUTOMATION_MODE, payload: mode});\n\nexport const newSequence = () => ({ type: NEW_SEQUENCE, payload: {}});\n\nexport const setStepsSelection = (trackNumber, stepFrom, stepTo) =>\n    ({\n        type: SET_STEPS_SELECTION ,\n        payload: {\n            trackNumber: trackNumber,\n            fromStep: stepFrom,\n            toStep: stepTo\n        }\n    });\nexport const setSelectedSteps = (trackNumber, patternNumber, steps) => ({ type: SET_SELECTED_STEPS, payload: {trackNumber: trackNumber, patternNumber: patternNumber, steps: steps}});\nexport const setStepNumberDraggingFrom = (stepNumber) => ({ type: SET_STEP_NUMBER_DRAGGING_FROM, payload: stepNumber});\n\nexport const setSequencePatternLocks = (patternLocks) => (\n    { type: SET_SEQUENCE_PATTERN_LOCKS,\n      payload: {\n          patternLocks: patternLocks,\n      }});\n\nexport const setSequencePatternLocked = (patternNumber, locked) => (\n    {\n        type: SET_SEQUENCE_PATTERN_LOCKED,\n        payload: {\n            patternNumber: patternNumber,\n            locked: locked\n        }});\n\nexport const setTrackPatternLocked = (subSequence, trackNumber, patternNumber, locked) => (\n    {\n        type: SET_TRACK_PATTERN_LOCKED,\n        payload: {\n            subSequence: subSequence,\n            trackNumber: trackNumber,\n            patternNumber: patternNumber,\n            locked: locked\n        }});\n\nexport const setTrackPatternLocks = (subSequence, trackNumber, patternLocks) => (\n    { type: SET_TRACK_PATTERN_LOCKS,\n      payload: {\n          subSequence: subSequence,\n          trackNumber: trackNumber,\n          patternLocks: patternLocks,\n      }});\n\nexport const setEffectPatternLocks = (effectId, patternLocks) => (\n    { type: SET_EFFECT_PATTERN_LOCKS,\n      payload: {\n          id: effectId,\n          patternLocks: patternLocks\n      }});\n\nexport const updateStepsForAllTracks = (updateData) => ({ type: UPDATE_STEPS_FOR_ALL_TRACKS, payload: updateData});\n\nexport const setLFOPatternLocks = (subSequence, patternLocks) =>\n    ({\n        type: SET_LFO_PATTERN_LOCKS,\n        payload: {\n            patternLocks: patternLocks,\n            subSequence: subSequence,}\n    });\n\nexport const setEnvelopePatternLocks = (subSequence, patternLocks) =>\n    ({\n        type: SET_ENVELOPE_PATTERN_LOCKS,\n        payload: {\n            patternLocks: patternLocks,\n            subSequence: subSequence\n        }\n    });\n\nexport const setPianoRollPagination = (start, end) => ({ type: SET_PIANO_ROLL_PAGINATION, payload: {start : start, end: end}});\n\nexport const setIsResampling = (isResampling) => ({ type: SET_IS_RESAMPLING, payload: isResampling});\nexport const setResampleDuration = (resampleDuration) => ({ type: SET_RESAMPLE_DURATION, payload: resampleDuration});\n\nexport const setKeyMappings = (keyMappings) => ({ type: SET_KEY_MAPPINGS, payload: keyMappings});\nexport const setPadMappings = (padMappings) => ({ type: SET_PAD_MAPPINGS, payload: padMappings});\n\nexport const setShowSequenceModal = (show) => ({ type: SET_SHOW_SEQUENCE_MODAL, payload: show});\n\nexport const setShowModsModal = (show) => ({ type: SET_SHOW_MODS_MODAL, payload: show});\n\nexport const setMultiParameterSliderValue = (id, value) => (\n    {\n        type: SET_MULTI_PARAMETER_SLIDER,\n        payload: {\n            id: id,\n            value: value\n        }\n    });\n\nexport const setSequenceRolling = (rolling) => ({ type: SET_SEQUENCE_ROLLING, payload: rolling});\n\nexport const setTrackEffectsChain = (trackNumber, effectsChain) => (\n    {\n        type: SET_TRACK_EFFECTS_CHAIN,\n        payload: {\n            trackNumber: trackNumber,\n            effectsChain: effectsChain\n        }\n    });\n\nexport const setShowSequences = (show) => ({ type: SET_SHOW_SEQUENCES, payload: show});\nexport const setShowPresets = (show) => ({ type: SET_SHOW_PRESETS, payload: show});\nexport const setShowInstruments = (show) => ({ type: SET_SHOW_INSTRUMENTS, payload: show});\n\nexport const setTrackRolling = (rolling) => ({ type: SET_TRACK_ROLLING, payload: rolling});\n\nexport const setZIndexHack = (hack) => ({ type: SET_Z_INDEX_HACK, payload: hack});\n\nexport const setLoadedTracks = (tracks) => ({ type: SET_LOADED_TRACKS, payload: tracks});\n\nexport const setBPM = (bpm) => ({ type: SET_BPM, payload: bpm});\n\nexport const setResampleMaster = (flag) => ({ type: SET_RESAMPLE_MASTER, payload: flag});\n\nexport const setYoutubeSearchTerms = (s) => ({ type: SET_YOUTUBE_SEARCH_TERMS, payload: s});\n\nexport const setAudioInputSource = (s) => ({ type: SET_AUDIO_INPUT_SOURCE, payload: s});\n\nexport const setWaveformSelection = (x) => (\n    {\n        type: SET_WAVEFORM_SELECTION,\n        payload: x\n    });\n\nexport const setWaveformSelectionEnd = (x) => (\n    {\n        type: SET_WAVEFORM_SELECTION_END,\n        payload: x\n    });\n\nexport const setMidiMapMode= (mode) => (\n    {\n        type: SET_MIDI_MAP_MODE,\n        payload: mode\n    });\n\nexport const setParameterMidiMapSelection= (parameter) => (\n    {\n        type: SET_PARAMETER_MIDI_MAP_SELECTION,\n        payload: parameter\n    });\n\nexport const setParameterMidiMapping= (parameter, midiControl) => (\n    {\n        type: SET_PARAMETER_MIDI_MAPPING,\n        payload: {\n            parameter: parameter,\n            midiControl: midiControl\n        }\n    });\n\nexport const deleteParameterMidiMapping = (parameter) => (\n    {\n        type: DELETE_PARAMETER_MIDI_MAPPING,\n        payload: parameter,\n    });\n\nexport const setActionMidiMapSelection= (action) => (\n    {\n        type: SET_ACTION_MIDI_MAP_SELECTION,\n        payload: action\n    });\n\nexport const setActionMidiMapping= (action, midiControl) => (\n    {\n        type: SET_ACTION_MIDI_MAPPING,\n        payload: {\n            action: action,\n            midiControl: midiControl\n        }\n    });\n\nexport const deleteMidiMappings = (control) => (\n    {\n        type: DELETE_MIDI_MAPPINGS,\n        payload: control,\n    });\n\n\nexport const setLatency = (latency) => (\n    {\n        type: SET_LATENCY,\n        payload: latency,\n    });\n\nexport const setSpotlightTracks = (tracks) => (\n    {\n        type: SET_SPOTLIGHT_TRACKS,\n        payload: tracks,\n    });\n\nexport const setClockType = (type) => (\n    {\n        type: SET_CLOCK_TYPE,\n        payload: type,\n    });\n\nexport const setConnectionStatus = (status) => (\n    {\n        type: SET_CONNECTION_STATUS,\n        payload: status,\n    });\n\nexport const setConnectedUserName = (userName) => (\n    {\n        type: SET_CONNECTED_USER_NAME,\n        payload: userName,\n    });\n\nexport const setClockTick = (step) => (\n    {\n        type: SET_CLOCK_TICK,\n        payload: step,\n    });\n\nexport const setPlayScheduled = (flag) => (\n    {\n        type: SET_PLAY_SCHEDULED,\n        payload: flag,\n    });\n\nexport const setAvailableUsersToSync = (users) => (\n    {\n        type: SET_AVAILABLE_USERS_TO_SYNC,\n        payload: users,\n    });\n\nexport const setSearchSortBy = (sortBy) => (\n    {\n        type: SET_SEARCH_SORT_BY,\n        payload: sortBy,\n    });\n\nexport const setMidiEffectDragging = (effect) => (\n    {\n        type: SET_MIDI_EFFECT_DRAGGING,\n        payload: effect,\n    });\n\nexport const setShowTrackEffects = (trackNumber, show) => (\n    {\n        type: SET_SHOW_TRACK_EFFECTS,\n        payload: {\n            trackNumber: trackNumber,\n            show: show\n        },\n    });\n\nexport const setShowConvolverModal = (show, sample) => (\n    {\n        type: SET_SHOW_CONVOLVER_MODAL,\n        payload: {\n            show: show,\n            convolverSample: sample\n        },\n    });\n\nexport const setShowPasswordModal = (show) => (\n    {\n        type: SET_SHOW_PASSWORD_MODAL,\n        payload: show\n    });\n\nexport const setPasswordModalCallback = (callback) => (\n    {\n        type: SET_PASSWORD_MODAL_CALLBACK,\n        payload: callback\n    });\n\nexport const setShowShareSequenceModal = (show) => (\n    {\n        type: SET_SHOW_SHARE_SEQUENCE_MODAL,\n        payload: show\n    });\n\nexport const hideAllEffects = () => (\n    {\n        type: HIDE_ALL_EFFECTS,\n        payload: {},\n    });\n\nexport const setEffectCollapsed = (id, isCollapsed) => (\n    {\n        type: SET_EFFECT_COLLAPSED,\n        payload: {\n            id: id,\n            isCollapsed: isCollapsed\n        },\n    });\n\nexport const setContextualHelp = (element, arg) => (\n    {\n        type: SET_CONTEXTUAL_HELP,\n        payload: {element, arg}\n    });\n\nexport const setSelectedLFO = (lfo) => (\n    {\n        type: SET_SELECTED_LFO,\n        payload: lfo,\n    });\n\nexport const setSelectedEnvelope = (envelope) => (\n    {\n        type: SET_SELECTED_ENVELOPE,\n        payload: envelope\n    });\n\nexport const setSidebarCollapsed = (collapsed) => (\n    {\n        type: SET_SIDEBAR_COLLAPSED,\n        payload: collapsed\n    });\n\nexport const setMixEvents = (subSequenceId, type, events) => (\n    {\n        type: SET_MIX_EVENTS,\n        payload: {\n            subSequenceId: subSequenceId,\n            type: type,\n            events: events\n        }\n    });\n\nexport const setShowGroups = (showGroups) => (\n    {\n        type: SET_SHOW_GROUPS,\n        payload: showGroups\n    });\n\nexport const setCurrentSubSequence = (sequenceId, subSequenceId) => (\n    {\n        type: SET_CURRENT_SUB_SEQUENCE,\n        payload: {\n            sequenceId: sequenceId,\n            subSequenceId: subSequenceId,\n        }\n    });\n\n\nexport const setSubSequences = (id, ids) => (\n    {\n        type: SET_SUB_SEQUENCES,\n        payload: {\n            sequenceId: id,\n            ids: ids,\n        },\n    });\n\nexport const setAllTrackPatternLocks = (locks) => (\n    {\n        type: SET_ALL_TRACK_PATTERN_LOCKS,\n        payload: locks\n    });\n\nexport const setAllLFOLocks = (locks) => (\n    {\n        type: SET_ALL_LFO_LOCKS,\n        payload: locks,\n    });\n\nexport const setAllEnvelopeLocks= (locks) => (\n    {\n        type: SET_ALL_ENVELOPE_LOCKS,\n        payload: locks\n    });\n\nexport const setMixViewMode = (mode) => (\n    {\n        type: SET_MIX_VIEW_MODE,\n        payload: mode\n    });\n\nexport const setSubSequenceFade = (id, value) => (\n    {\n        type: SET_SUB_SEQUENCE_FADE,\n        payload: {\n            subSequenceId: id,\n            value: value,\n        },\n    });\n\nexport const setSampleSlices= (id, slices) => (\n    {\n        type: SET_SAMPLE_SLICES,\n        payload: {\n            id: id,\n            slices: slices,\n        },\n    });\n\nexport const setSelectedArrangementEvents  = (events) => (\n    {\n        type: SET_SELECTED_ARRANGEMENT_EVENTS,\n        payload: events,\n    });\n\nexport const setShowDateSampled = (show) => (\n    {\n        type: SET_SHOW_DATE_SAMPLED,\n        payload: show\n    });\n\nexport const setDateSampled = (dates) => (\n    {\n        type: SET_DATE_SAMPLED,\n        payload: dates\n    });\n\nexport const setEffectParameterValues = (values) => (\n    {\n        type: SET_EFFECT_PARAMETER_VALUES,\n        payload: values\n    });\n\nexport const setTrackPanning = (trackNumber, pan) => (\n    {\n        type: SET_TRACK_PANNING,\n        payload: {\n            trackNumber: trackNumber,\n            pan: pan\n        }\n    });\n\nexport const setGroupPanning = (groupNumber, pan) => (\n    {\n        type: SET_GROUP_PANNING,\n        payload: {\n            groupNumber: groupNumber,\n            pan: pan\n        }\n    });\n\nexport const setSelectedRecord = (record) => (\n    {\n        type: SET_SELECTED_RECORD,\n        payload: record,\n    });\n\nexport const set2DSelection = (startX, startY, endX, endY) => (\n    {\n        type: SET_2D_SELECTION,\n        payload: {\n            startX: startX,\n            startY: startY,\n            endX: endX,\n            endY: endY\n        },\n    });\n\nexport const setSimilarSoundsToFind = (sampleId) => (\n    {\n        type: SET_SIMILAR_SOUNDS_TO_FIND,\n        payload: sampleId,\n    });\n\nexport const setShowSamples2D = (show) => (\n    {\n        type: SET_SHOW_SAMPLES_2D,\n        payload: show,\n    });\n\nexport const setLastNotePlayed = (lastNote) => (\n    {\n        type: SET_LAST_NOTE_PLAYED,\n        payload: lastNote,\n    });\n\nexport const setSidebarViewMode = (mode) => (\n    {\n        type: SET_SIDEBAR_VIEW_MODE,\n        payload: mode,\n    });\n\nexport const setDiscogsSelected = (selected) => (\n    {\n        type: SET_DISCOGS_SELECTED,\n        payload: selected,\n    });\n\nexport const setSelectedFolder = (selected) => (\n    {\n        type: SET_SELECTED_FOLDER,\n        payload: selected,\n    });\n\nexport const setSelectedPreset = (selected) => (\n    {\n        type: SET_SELECTED_PRESET,\n        payload: selected,\n    });\n\nexport const setHasChangesToFolders = (flag) => (\n    {\n        type: SET_HAS_CHANGES_TO_FOLDERS,\n        payload: flag,\n    });\n\nexport const setCursorTrack = (track) => (\n    {\n        type: SET_CURSOR_TRACK,\n        payload: track,\n    });\n\nexport const setCursorStep = (step) => (\n    {\n        type: SET_CURSOR_STEP,\n        payload: step,\n    });\n\nexport const setCursorShow = (show) => (\n    {\n        type: SET_CURSOR_SHOW,\n        payload: show,\n    });\n\nexport const setFolderDragging = (folder) => (\n    {\n        type: SET_FOLDER_DRAGGING,\n        payload: folder,\n    });\n\nexport const setPresetDragging = (preset) => (\n    {\n        type: SET_PRESET_DRAGGING,\n        payload: preset,\n    });\n\nexport const setSampleDragging = (sample) => (\n    {\n        type: SET_SAMPLE_DRAGGING,\n        payload: sample,\n    });\n\nexport const setEffectsChainToShow = (subSequenceId, track, chainNumber) => (\n    {\n        type: SET_EFFECTS_CHAIN_TO_SHOW,\n        payload: {\n            subSequenceId: subSequenceId,\n            trackNumber: track,\n            chainNumber: chainNumber\n        },\n    });\n\nexport const setSubSequenceMuted = (id, muted) => (\n    {\n        type: SET_SUB_SEQUENCE_MUTED,\n        payload: {\n            id: id,\n            muted: muted,\n        },\n    });\n\nexport const setTrackFrozen = (subSequenceId, trackNumber, frozen) => (\n    {\n        type: SET_TRACK_FROZEN,\n        payload: {\n            subSequenceId: subSequenceId,\n            trackNumber: trackNumber,\n            frozen: frozen,\n        },\n    });\n\nexport const setTrackToFreeze = (subSequenceId, trackNumber) => (\n    {\n        type: SET_TRACK_TO_FREEZE,\n        payload: {\n            subSequenceId: subSequenceId,\n            trackNumber: trackNumber,\n        },\n    });\n\nexport const setFrozenTrackPlaying = (subSequenceId, trackNumber, playing) => (\n    {\n        type: SET_FROZEN_TRACK_PLAYING,\n        payload: {\n            subSequenceId: subSequenceId,\n            trackNumber: trackNumber,\n            playing: playing,\n        },\n    });\n\nexport const setFrozenTracksPlaying = (subSequenceId, frozenTracksPlaying) => (\n    {\n        type: SET_FROZEN_TRACKS_PLAYING,\n        payload: {\n            subSequenceId: subSequenceId,\n            frozenTracksPlaying: frozenTracksPlaying,\n        },\n    });\n\nexport const setFrozenTracks = (subSequenceId, frozenTracks) => (\n    {\n        type: SET_FROZEN_TRACKS,\n        payload: {\n            subSequenceId: subSequenceId,\n            frozenTracks: frozenTracks,\n        },\n    });\n\nexport const setEffectsChainsToShow = (subSequenceId, effectsChains) => (\n    {\n        type: SET_EFFECTS_CHAINS_TO_SHOW,\n        payload: {\n            subSequenceId: subSequenceId,\n            effectsChains: effectsChains,\n        },\n    });\n\nexport const setSelectedOnsets = (id, selectedOnsets) => (\n    {\n        type: SET_SELECTED_ONSETS,\n        payload: {\n            id: id,\n            selectedOnsets: selectedOnsets,\n        },\n    });\n\nexport const setSingleStepToDrag = (stepData) => (\n    {\n        type: SET_SINGLE_STEP_TO_DRAG,\n        payload: stepData\n    });\n\nexport const setStepNumberDraggedTo = (stepNumber) => (\n    {\n        type: SET_STEP_NUMBER_DRAGGED_TO,\n        payload: stepNumber\n    });\n\nexport const setSearchResultsStart = (start) => (\n    {\n        type: SET_SEARCH_RESULTS_START,\n        payload: start\n    });\n\nexport const setShowStepOptions = (option, effect) => (\n    {\n        type: SET_SHOW_STEP_OPTIONS,\n        payload: {\n            option: option,\n            effect: effect,\n        }\n    });\n\nexport const setMasterStepToggles = (steps) => (\n    {\n        type: SET_MASTER_STEP_TOGGLES,\n        payload:  steps\n    });\n\nexport const setParametersToRecord = (params) => (\n    {\n        type: SET_PARAMETERS_TO_RECORD,\n        payload:  params\n    });\n\nexport const setOnsetThreshold = (threshold) => (\n    {\n        type: SET_ONSET_THRESHOLD,\n        payload: threshold\n    });\n\nexport const setShowOnsets = (show) => (\n    {\n        type: SET_SHOW_ONSETS,\n        payload: show\n    });\n\nexport const setSelectedGuild = (guild) => (\n    {\n        type: SET_SELECTED_GUILD,\n        payload: guild\n    });\n\nexport const setPianoRollDragOffset = (offset) => (\n    {\n        type: SET_PIANO_ROLL_DRAG_OFFSET,\n        payload: offset\n    });\n\nexport const setPianoRollNotes = (notes) => (\n    {\n        type: SET_PIANO_ROLL_NOTES,\n        payload: notes\n    });\n\nexport const setStepAndDataDragging = (stepNumber, stepData) => (\n    {\n        type: SET_STEP_AND_DATA_DRAGGING,\n        payload: {\n            stepNumber: stepNumber,\n            stepData: stepData\n        }\n    });\n\nexport const setShowLogin= (show) => (\n    {\n        type: SET_SHOW_LOGIN,\n        payload: show\n    });\n\nexport const setSigningUp = (signingUp) => (\n    {\n        type: SET_SIGNING_UP,\n        payload: signingUp\n    });\n\nexport const setUserToken = (userName, token) => (\n    {\n        type: SET_USER_TOKEN,\n        payload: {\n            userName,\n            token\n        }\n    });\n\nexport const setPendingTransactions = (pendingTransactions) => (\n    {\n        type: SET_PENDING_TRANSACTIONS,\n        payload: pendingTransactions\n    });\n\nexport const setCommandInput = (input) => (\n    {\n        type: SET_COMMAND_INPUT,\n        payload: input\n    });\n\nexport const setCommandPrefix = (prefix) => (\n    {\n        type: SET_COMMAND_PREFIX,\n        payload: prefix\n    });\n\nexport const setViMode = (mode) => (\n    {\n        type: SET_VI_MODE,\n        payload: mode\n    });\n\nexport const setTrackWarp = (subSequenceId, trackNumber, warp) => (\n    {\n        type: SET_TRACK_WARP,\n        payload: {\n            subSequenceId,\n            trackNumber,\n            warp,\n        }\n    });\n\nexport const setSubSequenceWarps = (subSequenceId, warps) => (\n    {\n        type: SET_SUB_SEQUENCE_WARPS,\n        payload: {\n            subSequenceId,\n            warps,\n        }\n    });\n\nexport const setArrangementSelection = (start, end) => (\n    {\n        type: SET_ARRANGEMENT_SELECTION,\n        payload: {\n            start: start,\n            end: end,\n        }\n    });\n\nexport const setArrangementMouseX= (mouseX) => (\n    {\n        type: SET_ARRANGEMENT_MOUSE_X,\n        payload: mouseX\n    });\n\nexport const setArrangementAutomationToShow = (subSequenceId, type) => (\n    {\n        type: SET_ARRANGEMENT_AUTOMATION_TO_SHOW,\n        payload: {\n            subSequenceId,\n            type\n        }\n    });\n\nexport const setArrangementLooping = (looping) => (\n    {\n        type: SET_ARRANGEMENT_LOOPING,\n        payload: looping\n    });\n\nexport const setArrangementSelectedRows = (rows) => (\n    {\n        type: SET_ARRANGEMENT_SELECTED_ROWS,\n        payload: rows\n    });\n\nexport const setArrangementLoopSelected = (selected) => (\n    {\n        type: SET_ARRANGEMENT_LOOP_SELECTED,\n        payload: selected\n    });\n\nexport const setArrangementRowSelections = (selections) => (\n    {\n        type: SET_ARRANGEMENT_ROW_SELECTIONS,\n        payload: selections\n    });\n\nexport const setArrangementZoom = (zoom) => (\n    {\n        type: SET_ARRANGEMENT_ZOOM,\n        payload: zoom\n    });\n\nexport const setSelectedSequence = (id) => (\n    {\n        type: SET_SELECTED_SEQUENCE,\n        payload: id\n    });\n\nexport const setExploreMixerEffect = (effect, toggle) => (\n    {\n        type: SET_EXPLORE_MIXER_EFFECT,\n        payload: {\n            effect,\n            toggle\n        }\n    });\n\nexport const setExploreEQEffect = (type, toggle) => (\n    {\n        type: SET_EXPLORE_EQ_EFFECT,\n        payload: {\n            type,\n            toggle\n        }\n    });\n\nexport const setSelectedSendEffect = (effect) => (\n    {\n        type: SET_SELECTED_SEND_EFFECT,\n        payload: effect\n    });\n\nexport const setInstrumentTypeDragging = (type) => (\n    {\n        type: SET_INSTRUMENT_TYPE_DRAGGING,\n        payload: type\n    });\n\nexport const setTrackIsLoading = (subSequenceId, trackNumber, isLoading) => {\n    return {\n        type: SET_TRACK_IS_LOADING,\n        payload: {\n            subSequenceId,\n            trackNumber,\n            isLoading\n        }\n    };\n}\n\nexport const setPianoRollCursor = (cursor) => (\n    {\n        type: SET_PIANO_ROLL_CURSOR,\n        payload: cursor\n    });\n\nexport const setArrangementXScale = (xScale) => (\n    {\n        type: SET_ARRANGEMENT_X_SCALE,\n        payload: xScale\n    });\n\nexport const setTotalArrangementLength = (len) => (\n    {\n        type: SET_TOTAL_ARRANGEMENT_LENGTH,\n        payload: len\n    });\n\nexport const setArrangementBottomHeight = (height) => (\n    {\n        type: SET_ARRANGEMENT_BOTTOM_HEIGHT,\n        payload: height\n    });\n\nexport const setArrangementBottomMode = (mode) => (\n    {\n        type: SET_ARRANGEMENT_BOTTOM_MODE,\n        payload: mode\n    });\n\nexport const setArrangementBottomResizing = (isResizing) => (\n    {\n        type: SET_ARRANGEMENT_BOTTOM_RESIZING,\n        payload: isResizing,\n    });\n\nexport const setArrangementPatternDragging = (patternDragging, offsetX) => (\n    {\n        type: SET_ARRANGEMENT_PATTERN_DRAGGING,\n        payload: patternDragging === undefined ? undefined :\n            {\n                patternDragging,\n                offsetX\n            }\n    });\n\nexport const setArrangementPatternStartStep = (subSequenceId, patternId, startStep) => (\n    {\n        type: SET_ARRANGEMENT_PATTERN_START_STEP,\n        payload:  {\n            subSequenceId,\n            patternId,\n            startStep\n        }\n    });\n\nexport const setArrangementCursorStep = (step) => (\n    {\n        type: SET_ARRANGEMENT_CURSOR_STEP,\n        payload: step\n    });\n\nexport const setArrangementPatternResizing = (pattern, direction) => (\n    {\n        type: SET_ARRANGEMENT_PATTERN_RESIZING,\n        payload: pattern === undefined ? undefined :\n            {\n                pattern,\n                direction\n            }\n    });\n\nexport const setArrangementBrowserMode = (mode) => (\n    {\n        type: SET_ARRANGEMENT_BROWSER_MODE,\n        payload: mode\n    });\n\nexport const setSampleToExplore = (sampleToExplore) => (\n    {\n        type: SET_SAMPLE_TO_EXPLORE,\n        payload: sampleToExplore\n    });\n\nexport const setEffectRackNodePosition = (rackId, effectId, x, y) => (\n    {\n        type: SET_EFFECT_RACK_NODE_POSITION,\n        payload: {\n            rackId,\n            effectId,\n            x,\n            y\n        },\n    });\n\nexport const setAnnotationDragging = (dragging) => (\n    {\n        type: SET_ANNOTATION_DRAGGING,\n        payload: dragging\n    });\n\nexport const setTrackAutomationDevice = (trackId, device) => (\n    {\n        type: SET_TRACK_AUTOMATION_DEVICE,\n        payload: {\n            trackId,\n            device\n        }\n    });\n\nexport const setTrackAutomationRackDevice = (trackId, device) => (\n    {\n        type: SET_TRACK_AUTOMATION_RACK_DEVICE,\n        payload: {\n            trackId,\n            device\n        }\n    });\n\nexport const setTrackAutomationSubDevice = (trackId, subDevice) => (\n    {\n        type: SET_TRACK_AUTOMATION_SUB_DEVICE,\n        payload: {\n            trackId,\n            subDevice \n        }\n    });\n\nexport const setTrackAutomationParameter = (trackId, parameter) => (\n    {\n        type: SET_TRACK_AUTOMATION_PARAMETER,\n        payload: {\n            trackId,\n            parameter\n        }\n    });\n\nexport const setShowAutomation = (show) => (\n    {\n        type: SET_SHOW_AUTOMATION,\n        payload: {\n            show,\n        }\n    });\n\nexport const setParameterAutomations = (parameter, automations, scheduler) => (\n    {\n        type: SET_PARAMETER_AUTOMATIONS,\n        payload: {\n            parameter,\n            automations,\n            scheduler\n        }\n    });\n\nexport const setActionsRemaining = (actionsRemaining) => (\n    {\n        type: SET_ACTIONS_REMAINING,\n        payload: actionsRemaining\n    });\n\nexport const setTimeRemaining = (timeRemaining) => (\n    {\n        type: SET_TIME_REMAINING,\n        payload: timeRemaining\n    });\n\nexport const setShowPianoRoll = (showPianoRoll) => (\n    {\n        type: SET_SHOW_PIANO_ROLL,\n        payload: showPianoRoll\n    });\n\nexport const setSelectedRackSubTrack  = (trackId, track) => (\n    {\n        type: SET_SELECTED_RACK_SUB_TRACK,\n        payload: {\n            trackId,\n            track\n        }\n    });\n\nexport const deleteAutomationsForParameters = (parameters) => (\n    {\n        type: DELETE_AUTOMATIONS_FOR_PARAMETERS,\n        payload: parameters\n    });\n\nexport const deleteAutomationsForEngine = (engineId) => (\n    {\n        type: DELETE_AUTOMATIONS_FOR_ENGINE,\n        payload: engineId\n    });\n\nexport const setAutomationGuidePoint = (id, guidePoint) => (\n    {\n        type: SET_AUTOMATION_GUIDE_POINT,\n        payload: {id, guidePoint}\n    });\n\nexport const setAutomationPointDragging  = (id, point) => (\n    {\n        type: SET_AUTOMATION_POINT_DRAGGING,\n        payload: {id, point},\n    });\n\nexport const setAutomationPointHasMoved  = (id, hasMoved) => (\n    {\n        type: SET_AUTOMATION_POINT_HAS_MOVED,\n        payload: {id, hasMoved},\n    });\n\nexport const setAutomationPointHovered  = (id, pt) => (\n    {\n        type: SET_AUTOMATION_POINT_HOVERED,\n        payload: {id, pt}\n    });\n\nexport const setTrackToConvert = (track) => ({\n        type: SET_TRACK_TO_CONVERT,\n        payload: track\n    });\n\nexport const setAutomationSelection = (id, selection) => ({\n    type: SET_AUTOMATION_SELECTION,\n    payload: {id, selection}\n});\n\nexport const setAutomationPointsSelected = (id, points) => ({\n    type: SET_AUTOMATION_POINTS_SELECTED,\n    payload: {id, points}\n});\n\nexport const setExplorePersonSelected = (person) => ({\n        type: SET_EXPLORE_PERSON_SELECTED,\n        payload: person\n    });\n\nexport const setExploreAllSequences = (sequences) => ({\n        type: SET_EXPLORE_ALL_SEQUENCES,\n        payload: sequences\n    });\n\nexport const setRecordingExploreMix = (isRecording) => ({\n        type: SET_RECORDING_EXPLORE_MIX,\n        payload: isRecording\n    });\n\nexport const setWorksLoaded = (worksLoaded) => ({\n    type: SET_WORKS_LOADED,\n    payload: worksLoaded\n});\n\nexport const setWorkTranspose = (sequenceId, transpose) => ({\n    type: SET_WORK_TRANSPOSE,\n    payload: {\n        sequenceId,\n        transpose\n    }\n});\n\nexport const setWorkVolume = (sequenceId, volume) => ({\n    type: SET_WORK_VOLUME,\n    payload: {\n        sequenceId,\n        volume\n    }\n});\n\nexport const setExploreMixLoaded = (mix) => ({\n    type: SET_EXPLORE_MIX_LOADED,\n    payload: mix\n});\n\nexport const setIsMacroMapping = (isMapping) => ({\n    type: SET_IS_MACRO_MAPPING,\n    payload: isMapping\n});\n\nexport const setParameterToMap = (parameter) => ({\n    type: SET_PARAMETER_TO_MAP,\n    payload: parameter\n});\n\nexport const setMixColorValue = (id, value) => ({\n    type: SET_MIX_COLOR_VALUE,\n    payload: {id, value}\n});\n\nexport const setMixHasEdits = (hasEdits) => ({\n    type: SET_MIX_HAS_EDITS,\n    payload: hasEdits\n});\n\nexport const setScriptVariables = (id, variables) => ({\n    type: SET_SCRIPT_VARIABLES,\n    payload: {\n        id, variables\n    }\n});\n\nexport const setExploreOption = (opt) => ({\n    type: SET_EXPLORE_OPTION,\n    payload: opt\n});\n\nexport const setAnnotationsView = (work) => ({\n    type: SET_ANNOTATIONS_VIEW,\n    payload: work\n});\n\nexport const setExploreToast = (toast) => ({\n    type: SET_EXPLORE_TOAST,\n    payload: toast\n});\n\nexport const setParameterSliderDown = (param) => ({\n    type: SET_PARAMETER_SLIDER_DOWN,\n    payload: param\n});\n\nexport const moveEngineAutomations = (oldId, newId) => ({\n    type: MOVE_ENGINE_AUTOMATIONS,\n    payload: {oldId, newId}\n});\n\nexport const setSequenceLoadingProgress = (sequenceId, progress) => ({\n    type: SET_SEQUENCE_LOADING_PROGRESS,\n    payload: {sequenceId, progress}\n});\n\nexport const setTrackBrowsedSamples = (trackId, samples) => ({\n    type: SET_TRACK_BROWSED_SAMPLES,\n    payload: {trackId, samples}\n});\n\nexport const setTrackBrowsedPresets = (trackId, presets) => ({\n    type: SET_TRACK_BROWSED_PRESETS,\n    payload: {trackId, presets}\n});\n\nexport const setBottomToolbarOffset = (off) => ({\n    type: SET_BOTTOM_TOOLBAR_OFFSET,\n    payload: off\n});\n\nexport const setTrackUpdates = (updates) => ({\n    type: SET_TRACK_UPDATES,\n    payload: updates\n});\n\nexport const setIsTranscribing = (isTranscribing) => ({\n    type: SET_IS_TRANSCRIBING,\n    payload: isTranscribing\n});\n\nexport const setSampleTooltip = (sampleInfo) => ({\n    type: SET_SAMPLE_TOOLTIP,\n    payload: sampleInfo\n});\n\nexport const setSelectedFreeze = (id) => ({\n    type: SET_SELECTED_FREEZE,\n    payload: id\n});\n\nexport const setTrackLengthMode = (mode) => ({\n    type: SET_TRACK_LENGTH_MODE,\n    payload: mode\n});\n\nexport const setTrackLengthChoice = (length) => ({\n    type: SET_TRACK_LENGTH_CHOICE,\n    payload: length\n});\n\nexport const setFreezeDragging = (freeze) => ({\n    type: SET_FREEZE_DRAGGING,\n    payload: freeze\n});\n\nexport const setFreezeColumnSamples = (trackId, column, samples) => ({\n    type: SET_FREEZE_COLUMN_SAMPLES,\n    payload: {\n        trackId,\n        column,\n        samples\n    }\n});\n\nexport const setUploadingFile = (f) => ({\n    type: SET_UPLOADING_FILE,\n    payload: f\n});\n\nexport const setGroupCollapsed = (subSequenceId, groupNumber, collapsed) => ({\n    type: SET_GROUP_COLLAPSED,\n    payload: {\n        subSequenceId,\n        groupNumber,\n        collapsed\n    }\n});\n\nexport const setSelectedMixEffect = (subSequenceId, trackNumber, groupNumber, effectType, effect) => ({\n    type: SET_SELECTED_MIX_EFFECT,\n    payload: {\n        subSequenceId,\n        trackNumber,\n        groupNumber,\n        effectType,\n        effect\n    }\n});\n\nexport const setSamplesDragging = (samples) => ({\n    type: SET_SAMPLES_DRAGGING,\n    payload: samples\n});\n\nexport const setDisplayResolution = (resolution) => ({\n    type: SET_DISPLAY_RESOLUTION,\n    payload: resolution\n});\n\nexport const setOfflineEngine = (offlineEngine) => ({\n    type: SET_OFFLINE_ENGINE,\n    payload: offlineEngine\n});\n\nexport const setCurrentExportInfo = (name, index, total) => ({\n    type: SET_CURRENT_EXPORT_INFO,\n    payload: name === undefined ?\n        undefined :\n        {\n            name, index, total\n        }\n});\n\nexport const setMixTrackDragging = (track) => ({\n    type: SET_MIX_TRACK_DRAGGING,\n    payload: track\n});\n\nexport const setGroupTracks = (groupId, tracks) => ({\n    type: SET_GROUP_TRACKS,\n    payload: {\n        groupId,\n        tracks\n    }\n});\n\nexport const setLoadingText = (loadingText) => ({\n    type: SET_LOADING_TEXT,\n    payload: loadingText\n});\n\nexport const setTrackEnvelopes = (id, envelopes) => ({\n    type: SET_TRACK_ENVELOPES,\n    payload:  {\n        id, envelopes \n    }\n});\n\nexport const setCopiedNodesForRack = (nodes) => ({\n    type: SET_COPIED_NODES_FOR_RACK,\n    payload: nodes\n});\n\nexport const setLastMidiCCPlayed = (midiCC) => ({\n    type: SET_LAST_MIDI_CC_PLAYED,\n    payload: midiCC\n});\n\nexport const setArrangementMouseDownX = (mouseX) => ({\n    type: SET_ARRANGEMENT_MOUSE_DOWN_X,\n    payload: mouseX\n});\n\nexport const setTrackerParameterToEdit= (parameter) => ({\n    type: SET_TRACKER_PARAMETER_TO_EDIT,\n    payload: parameter\n});\n\nexport const setTracksToHide = (tracks) => ({\n    type: SET_TRACKS_TO_HIDE,\n    payload: tracks\n});\n\nexport const setSelectedPalette = (trackId, palette) => ({\n    type: SET_SELECTED_PALETTE,\n    payload: {trackId, palette}\n});\n\nexport const setSequencedPalette = (trackId, palette) => ({\n    type: SET_SEQUENCED_PALETTE,\n    payload: {trackId, palette}\n});\n\n\nexport const setProjectDragging = (project) => ({\n    type: SET_PROJECT_DRAGGING,\n    payload: project\n});\n\nexport const setExploreUnpublished = (changed) => ({\n    type: SET_EXPLORE_UNPUBLISHED,\n    payload: changed\n});\n\nexport const setQuickAddSearchText = (text) => ({\n    type: SET_QUICK_ADD_SEARCH_TEXT,\n    payload: text\n});\n\nexport const setShowTrackFreezeHistory = (id, show) => ({\n    type: SET_SHOW_TRACK_FREEZE_HISTORY,\n    payload: {id, show}\n});\n\nexport const setSelectedMidiTrack = (track) => ({\n    type: SET_SELECTED_MIDI_TRACK,\n    payload: track\n});\n\nexport const setSelectedTrackSlice = (track, slice) => ({\n    type: SET_SELECTED_TRACK_SLICE,\n    payload: {\n        track, slice\n    }\n});\n\nexport const setCirklonParameterSelected = (track, parameter) => ({\n    type: SET_CIRKLON_PARAMETER_SELECTED,\n    payload: {\n        track,\n        parameter\n    }\n});\n\nexport const setCirklonMode = (track, mode) => ({\n    type: SET_CIRKLON_MODE,\n    payload: {\n        track,\n        mode\n    }\n});\n\nexport const setNotesDown = (notes) => ({\n    type: SET_NOTES_DOWN,\n    payload: notes\n\n});\n\nexport const setScenes = (scenes) => ({\n    type: SET_SCENES,\n    payload: scenes\n});\n\nexport const setCurrentScene = (scene) => ({\n    type: SET_CURRENT_SCENE,\n    payload: scene\n});\n\nexport const setShowSettings = (show) => ({\n    type: SET_SHOW_SETTINGS,\n    payload: show\n});\n\nexport const setWallpaper  = (wallpaper) => ({\n    type: SET_WALLPAPER,\n    payload: wallpaper\n});\n\nexport const setAnimateWallpaper  = (wallpaper) => ({\n    type: SET_ANIMATE_WALLPAPER,\n    payload: wallpaper\n});\n\nexport const setExpandedProject = (project) => ({\n    type: SET_EXPANDED_PROJECT,\n    payload: project\n});\n\nexport const setAccumulatorParameterSelected = (param) => ({\n    type: SET_ACCUMULATOR_PARAMETER_SELECTED,\n    payload: param\n});\n\nexport const setPlaneMapping = (plane) => ({\n    type: SET_PLANE_MAPPING,\n    payload: plane\n});\n\nexport const setTrackPresetSaving = (track) => ({\n    type: SET_TRACK_PRESET_SAVING,\n    payload: track\n});\n\nexport const setSampleTagDragging = (tag) => ({\n    type: SET_SAMPLE_TAG_DRAGGING,\n    payload: tag\n});\n\nexport const setParameterMixAutomations = (parameter, automations, scheduler) => ({\n    type: SET_PARAMETER_MIX_AUTOMATIONS,\n    payload: {\n        parameter,\n        automations,\n        scheduler\n    }\n});\n\nexport const setShowArrangementTracks = (subSequenceId, show) => ({\n    type: SET_SHOW_ARRANGEMENT_TRACKS,\n    payload: {\n        subSequenceId,\n        show\n    }\n});\n\nexport const setArrangementPatternSelected = (pattern) => ({\n    type: SET_ARRANGEMENT_PATTERN_SELECTED,\n    payload: pattern\n});\n\nexport const setSidebarSearchInput = (element) => ({\n    type: SET_SIDEBAR_SEARCH_INPUT,\n    payload: element\n});\n\nexport const setShowArrangementSearcher = (show) => ({\n    type: SET_SHOW_ARRANGEMENT_SEARCHER,\n    payload: show\n});\n\nexport const setExploreWork = (work) => ({\n    type: SET_EXPLORE_WORK,\n    payload: work\n});\n\nexport const setCreatingNewPack = (creating) => ({\n    type: SET_CREATING_NEW_PACK,\n    payload: creating\n});\n\nexport const setPackWindowPosition = (x,y) => ({\n    type: SET_PACK_WINDOW_POSITION,\n    payload: {x,y}\n});\n\nexport const setDraggingPackWindow = (dragging) => ({\n    type: SET_DRAGGING_PACK_WINDOW,\n    payload: dragging\n});\n\nexport const setPackToEdit = (pack) => ({\n    type: SET_PACK_TO_EDIT,\n    payload: pack\n});\n\nexport const setIsManagingGuilds = (s) => ({\n    type: SET_IS_MANAGING_GUILDS,\n    payload: s\n});\n\nexport const newStepGroup = (g) => ({\n    type: NEW_STEP_GROUP,\n    payload: g\n});\n\nexport const setStepsGroupMode = (g) => ({\n    type: SET_STEPS_GROUP_MODE,\n    payload: g\n});\n\nexport const setTransformationEdgeDragging= (tr) => ({\n    type: SET_TRANSFORMATION_EDGE_DRAGGING,\n    payload: tr\n});\n\nexport const setShowFormantEffect = (formant) => ({\n    type: SET_SHOW_FORMANT_EFFECT,\n    payload: formant\n});\n\nexport const setShowingFormants = (show) => ({\n    type: SET_SHOWING_FORMANTS,\n    payload: show\n});\n\nexport const setPulledEffects = (effects) => ({\n    type: SET_PULLED_EFFECTS,\n    payload: effects\n});\n\nexport const setLoopsToFreeze = (loops) => ({\n    type: SET_LOOPS_TO_FREEZE,\n    payload: loops\n});\n\nexport const setParameterMinMax = (bulk) => ({\n    type: SET_PARAMETER_MIN_MAX,\n    payload: bulk\n});\n\nexport const setCurrentSoundInList = (number) => ({\n    type: SET_CURRENT_SOUND_IN_LIST,\n    payload: number\n});\n\nexport const setShowingSoundList = (show) => ({\n    type: SET_SHOWING_SOUND_LIST,\n    payload: show\n});\n\nexport const setCurrentTagInList = (number) => ({\n    type: SET_CURRENT_TAG_IN_LIST,\n    payload: number\n});\n\nexport const setLinkingEffects = (effect, name) => ({\n    type: SET_LINKING_EFFECTS,\n    payload: effect ? {\n        effect,\n        name\n    } : undefined\n});\n\nexport const setPackSelected = (number) => ({\n    type: SET_PACK_SELECTED,\n    payload: number\n});\n\nexport const setSampleExplorerSelected = (f) => ({\n    type: SET_SAMPLE_EXPLORER_SELECTED,\n    payload: f\n});\n\nexport const setPianoRollSlide = (f) => ({\n    type: SET_PIANO_ROLL_SLIDE,\n    payload: f\n});\n\nexport const setMaximizeExplorer = (f) => ({\n    type: SET_MAXIMIZE_EXPLORER,\n    payload: f\n});\n\nexport const setPads = (id, pads) => ({\n    type: SET_PADS,\n    payload: {\n        id, pads\n    }\n});\n\nexport const setPadSlots = (id, slots) => ({\n    type: SET_PAD_SLOTS,\n    payload: {\n        id, slots\n    }\n});\n\nexport const setPadHovered = (f) => ({\n    type: SET_PAD_HOVERED,\n    payload: f\n});\n\nexport const setWaveformShowing = (f) => ({\n    type: SET_WAVEFORM_SHOWING,\n    payload: f\n});\n\nexport const setTrackDragging = (f) => ({\n    type: SET_TRACK_DRAGGING,\n    payload: f\n});\n\nexport const setHideMixer = (h) => ({\n    type: SET_HIDE_MIXER,\n    payload: h\n});\n\nexport const setSourceExploring = (h) => ({\n    type: SET_SOURCE_EXPLORING,\n    payload: h\n});\n\nexport const setYearExploring = (year) => ({\n    type: SET_YEAR_EXPLORING,\n    payload: year\n});\n\nexport const setPullablePartDragging = (part) => ({\n    type: SET_PULLABLE_PART_DRAGGING,\n    payload: part\n});\n\nexport const setPadsExpand = (id) => ({\n    type: SET_PADS_EXPAND,\n    payload: id\n});\n\nexport const setSequencers = (id, sequencers) => ({\n    type: SET_SEQUENCERS,\n    payload: {id, sequencers}\n});\n\nexport const setSequencerTracks = (id, tracks) => ({\n    type: SET_SEQUENCER_TRACKS,\n    payload: {id, tracks}\n});\n\nexport const setPlaneMacros = (id, macros) => ({\n    type: SET_PLANE_MACROS,\n    payload: {id, macros}\n});\n\nexport const setWindowPosition = (id, position) => ({\n    type: SET_WINDOW_POSITION,\n    payload: {id, position}\n});\n\nexport const setPresentationWindowPosition = (id, position) => ({\n    type: SET_PRESENTATION_WINDOW_POSITION,\n    payload: {id, position}\n});\n\nexport const setPadEffects = (id, effects) => ({\n    type: SET_PAD_EFFECTS,\n    payload: {id, effects}\n});\n\nexport const setDrawingPadEdge = (id, edge) => ({\n    type: SET_DRAWING_PAD_EDGE,\n    payload: {id, edge}\n});\n\nexport const setSelectedPadEdge  = (edge) => ({\n    type: SET_SELECTED_PAD_EDGE,\n    payload: edge\n});\n\nexport const setBulkEffectsCollapsed = (x) => ({\n    type: SET_BULK_EFFECTS_COLLAPSED,\n    payload: x\n});\n\nexport const setSelectedPulledElements = (x) => ({\n    type: SET_SELECTED_PULLED_ELEMENTS,\n    payload: x\n});\n\nexport const setBulkWindowPositions = (bulk) => ({\n    type: SET_BULK_WINDOW_POSITIONS,\n    payload: bulk\n});\n\nexport const setBulkPresentationWindowPositions = (bulk) => ({\n    type: SET_BULK_PRESENTATION_WINDOW_POSITIONS,\n    payload: bulk\n});\n\nexport const setAllEffectPatternLocks = (bulk) => ({\n    type: SET_ALL_EFFECT_PATTERN_LOCKS,\n    payload: bulk\n});\n\nexport const setModuleCollapsed = (id, collapsed) => ({\n    type: SET_MODULE_COLLAPSED,\n    payload: {\n        id, collapsed\n    }\n});\n\nexport const setTrackMidiEffects = (id, effects) => ({\n    type: SET_TRACK_MIDI_EFFECTS,\n    payload: {\n        id, effects\n    }\n});\n\nexport const setEffectStarred = (id, starred) => ({\n    type: SET_EFFECT_STARRED,\n    payload: {\n        id, starred\n    }\n});\n\nexport const setBulkEffectsStarred = (bulk) => ({\n    type: SET_BULK_EFFECTS_STARRED,\n    payload: bulk\n});\n\nexport const setBulkModulesCollapsed = (bulk) => ({\n    type: SET_BULK_MODULES_COLLAPSED,\n    payload: bulk\n});\n\nexport const deleteTrackId = (id) => ({\n    type: DELETE_TRACK_ID,\n    payload: id\n});\n\nexport const setShowingContextMenu = (show) => ({\n    type: SET_SHOWING_CONTEXT_MENU,\n    payload: show\n});\n\nexport const setHigherOrderMatrix = (matrix) => ({\n    type: SET_HIGHER_ORDER_MATRIX,\n    payload: matrix\n});\n\nexport const setModuleColor = (id, color) => ({\n    type: SET_MODULE_COLOR,\n    payload: {\n        id, color\n    }\n});\n\nexport const setModulesRouting = (inputModules, outputModules) => ({\n    type: SET_MODULES_ROUTING,\n    payload: {inputModules, outputModules}\n});\n\nexport const setHigherOrderStepsSelected = (steps) => ({\n    type: SET_HIGHER_ORDER_STEPS_SELECTED,\n    payload: steps\n});\n\nexport const setOrientationRoutings = (routings) => ({\n    type: SET_ORIENTATION_ROUTINGS,\n    payload: routings\n});\n\nexport const setShowHigherOrderSequencer = (show) => ({\n    type: SET_SHOW_HIGHER_ORDER_SEQUENCER,\n    payload: show\n});\n\nexport const setPlanar = (track, planar) => ({\n    type: SET_PLANAR,\n    payload: {track, planar}\n});\n\nexport const setPlanarGradientColor = (id, color) => ({\n    type: SET_PLANAR_GRADIENT_COLOR,\n    payload: {id, color}\n});\n\nexport const setPlanarOpacity = (id, opacity) => ({\n    type: SET_PLANAR_OPACITY,\n    payload: {id, opacity}\n});\n\nexport const setModuleSize = (id, size) => ({\n    type: SET_MODULE_SIZE,\n    payload: {id, size}\n});\n\nexport const setInletConnections = (id, connections) => ({\n    type: SET_INLET_CONNECTIONS,\n    payload: {id, connections}\n});\n\nexport const setZObjects = (id, objects) => ({\n    type: SET_ZOBJECTS,\n    payload: {id, objects}\n});\n\nexport const setZMessages = (id, messages) => ({\n    type: SET_ZMESSAGES,\n    payload: {id, messages}\n});\n   \nexport const setBackgroundColor = (color) => ({\n    type: SET_BACKGROUND_COLOR,\n    payload: color\n});\n\nexport const setViewableSubPatches = (subpatches) => ({\n    type: SET_VIEWABLE_SUBPATCHES,\n    payload: subpatches\n});\n\nexport const setViewableZObjects = (zobjects) => ({\n    type: SET_VIEWABLE_ZOBJECTS,\n    payload: zobjects\n});\n\nexport const setSelectedZObject = (obj) => ({\n    type: SET_SELECTED_ZOBJECT,\n    payload: obj\n});\n\nexport const setJakiGrid = (id, grid) => ({\n    type: SET_JAKI_GRID,\n    payload: {id, grid}\n});\n\nexport const setZObjectTypeDragging = (type) => ({\n    type: SET_ZOBJECT_TYPE_DRAGGING,\n    payload: type\n});\n\nexport const setUXLocked = (locked) => ({\n    type: SET_UX_LOCKED,\n    payload: locked\n});\n\nexport const setMintedTokens = (tokens) => ({\n    type: SET_MINTED_TOKENS,\n    payload: tokens\n});\n\nexport const setHicDialog = (data) => ({\n    type: SET_HIC_DIALOG,\n    payload: data\n});\n\nexport const setIsPreparingNFT = (flag) => ({\n    type: SET_IS_PREPARING_NFT,\n    payload: flag\n});\n\nexport const setFullScreenZObject = (zobject) => ({\n    type: SET_FULL_SCREEN_ZOBJECT,\n    payload: zobject\n});\n\nexport const setMainScrollRef = (ref) => ({\n    type: SET_MAIN_SCROLL_REF,\n    payload: ref\n});\n\nexport const setViewportPosition = (position) => ({\n    type: SET_VIEWPORT_POSITION,\n    payload: position\n});\n\nexport const setSidebarsShowing= (s) => ({\n    type: SET_SIDEBARS_SHOWING,\n    payload: s\n});\n\nexport const setShowPadSequencer= (s) => ({\n    type: SET_SHOW_PAD_SEQUENCER,\n    payload: s\n});\n\nexport const setShowProjectsModal= (s) => ({\n    type: SET_SHOW_PROJECTS_MODAL,\n    payload: s\n});\n\nexport const setShowSearchWindow = (s) => ({\n    type: SET_SHOW_SEARCH_WINDOW,\n    payload: s\n});\n\n\nexport const setStepParameterSelected = (s) => ({\n    type: SET_STEP_PARAMETER_SELECTED,\n    payload: s\n});\n\nexport const setShowTrackInstrument = (s) => ({\n    type: SET_SHOW_TRACK_INSTRUMENT,\n    payload: s\n});\n\nexport const setShowModulators = (s) => ({\n    type: SET_SHOW_MODULATORS,\n    payload: s\n});\n\nexport const setCableSegmentation = (id, segmentation) => ({\n    type: SET_CABLE_SEGMENTATION,\n    payload: {\n        id,\n        segmentation\n    }\n});\n\nexport const setCableSegmentations = (segmentations) => ({\n    type: SET_CABLE_SEGMENTATIONS,\n    payload: segmentations\n});\n\nexport const setUXLockObject= (id, lock) => ({\n    type: SET_UX_LOCK_OBJECT,\n    payload: {id, lock}\n});\n\nexport const setUXLockObjects = ( locks) => ({\n    type: SET_UX_LOCK_OBJECTS,\n    payload: locks\n});\n\nexport const setUXHideObject = ( id, hide) => ({\n    type: SET_UX_HIDE_OBJECT,\n    payload: {id, hide}\n});\n\nexport const setUXHideObjects = ( locks) => ({\n    type: SET_UX_HIDE_OBJECTS,\n    payload: locks\n});\n\nexport const setZoraDialog = (zora) => ({\n    type: SET_ZORA_DIALOG,\n    payload: zora\n});\n\nexport const setZObjectInputText = (txt) => ({\n    type: SET_ZOBJECT_INPUT_TEXT,\n    payload: txt\n});\n\nexport const setShowEditorBottom = (show) => ({\n    type: SET_SHOW_EDITOR_BOTTOM,\n    payload: show\n});\n\nexport const setMintingProgress = (progress) => ({\n    type: SET_MINTING_PROGRESS,\n    payload: progress\n});\n\nexport const setNewZoraTokenId  = (tokenId) => ({\n    type: SET_NEW_ZORA_TOKEN_ID,\n    payload: tokenId\n});\n\nexport const setTransactionUponLogin = (transaction) => ({\n    type: SET_TRANSACTION_UPON_LOGIN,\n    payload: transaction\n});\n\nexport const setKeyboardContext = (object) => ({\n    type: SET_KEYBOARD_CONTEXT,\n    payload: object\n});\n\nexport const setPadFXMode = (id, mode) => ({\n    type: SET_PAD_FX_MODE,\n    payload: {id, mode}\n});\n\nexport const setJakiGridMode = (mode) => ({\n    type: SET_JAKI_GRID_MODE,\n    payload: mode\n});\n\nexport const setObjectStyling = (id, styling) => ({\n    type: SET_OBJECT_STYLING,\n    payload: {\n        id, styling\n    }\n});\n\nexport const setSelectedPlanarParameters = (id, selected) => ({\n    type: SET_SELECTED_PLANAR_PARAMETERS,\n    payload: {\n        id, selected\n    }\n});\n\nexport const setFilteredPlanarParameters = (id, filtered) => ({\n    type: SET_FILTERED_PLANAR_PARAMETERS,\n    payload: {\n        id, filtered\n    }\n});\n\nexport const setPlanarMacroToShow = (id, macro) => ({\n    type: SET_PLANAR_MACRO_TO_SHOW,\n    payload: {\n        id, macro\n    }\n});\n\nexport const setPlanarRegionMode = (id, isRegionMode) => ({\n    type: SET_PLANAR_REGION_MODE,\n    payload: {\n        id, isRegionMode\n    }\n});\n\nexport const setGroupPresetsByPacks  = (groupBy) => ({\n    type: SET_GROUP_PRESETS_BY_PACKS,\n    payload: groupBy\n});\n\nexport const setPianoRolllLeftSpace = (leftSpace) => ({\n    type: SET_PIANO_ROLL_LEFT_SPACE,\n    payload: leftSpace\n});\n\nexport const setZObjectSize = (id, size) => ({\n    type: SET_ZOBJECT_SIZE,\n    payload: {id, size}\n});\n\nexport const setSecondaryZObject = (zobject) => ({\n    type: SET_SECONDARY_ZOBJECT,\n    payload: zobject\n});\n\nexport const clearDragDrop = () => ({\n    type: CLEAR_DRAG_DROP,\n    payload: {}\n});\n\nexport const setSamplesToSave = (samples) => ({\n    type: SET_SAMPLES_TO_SAVE,\n    payload: samples\n});\n\nexport const setEditorPadding = (x,y) => ({\n    type: SET_EDITOR_PADDING,\n    payload: {x,y}\n});\n\nexport const setEdgesPadding = (x,y) => ({\n    type: SET_EDGES_PADDING,\n    payload: {x,y}\n});\n\nexport const setEdgesSize = (width, height) => ({\n    type: SET_EDGES_SIZE,\n    payload: {\n        width,\n        height}\n});\n\nexport const setLeftSidebarWidth = (width) => ({\n    type: SET_LEFT_SIDEBAR_WIDTH,\n    payload: width\n        \n});\n\nexport const setMovingPadEdge = (edge) => ({\n    type: SET_MOVING_PAD_EDGE,\n    payload: edge\n});\n\nexport const setDocumentationSubSection = (sub) => ({\n    type: SET_DOCUMENTATION_SUB_SECTION,\n    payload: sub\n});\n\nexport const setRightSidebarOption = (sub) => ({\n    type: SET_RIGHT_SIDEBAR_OPTION,\n    payload: sub\n});\n\n\nexport const setSelectedFMEnvelopeType = (type) => ({\n    type: SET_SELECTED_FM_ENVELOPE_TYPE,\n    payload: type\n});\n\nexport const setSelectedFMOperatorDetails  = (type) => ({\n    type: SET_SELECTED_FM_OPERATOR_DETAILS,\n    payload: type\n});\n\nexport const setSelectedFMFormant  = (type) => ({\n    type: SET_SELECTED_FM_FORMANT,\n    payload: type\n});\n\nexport const setShowSaveModal = (show) => ({\n    type: SET_SHOW_SAVE_MODAL,\n    payload: show\n});\n\nexport const setZObjectFlashing = (id, timestamp) => ({\n    type: SET_ZOBJECT_FLASHING,\n    payload: {\n        id,\n        timestamp\n    }\n});\n\nexport const setSampleDownloadProgress = (downloaded, total) => ({\n    type: SET_SAMPLE_DOWNLOAD_PROGRESS,\n    payload: {\n        downloaded,\n        total\n    }\n});\n\nexport const setPresetSaved = (preset) => ({\n    type: SET_PRESET_SAVED,\n    payload: preset\n});\n\nexport const setCompletelyDoneLoading = (load) => ({\n    type: SET_COMPLETELY_DONE_LOADING,\n    payload: load\n});\n\nexport const setPluginToSave = (zobject) => ({\n    type: SET_PLUGIN_TO_SAVE,\n    payload: zobject\n});\n\n\nexport const setShowPlugins = (show) => ({\n    type: SET_SHOW_PLUGINS,\n    payload: show\n});\n\nexport const setPluginsLoaded = (plugins) => ({\n    type: SET_PLUGINS_LOADED,\n    payload: plugins\n});\n\nexport const setShowPluginsPane = (show) => ({\n    type: SET_SHOW_PLUGINS_PANE,\n    payload: show\n});\n\nexport const setPluginsPaneHeight = (h) => ({\n    type: SET_PLUGINS_PANE_HEIGHT,\n    payload: h\n});\n\nexport const setDroppedSamples = (h) => ({\n    type: SET_DROPPED_SAMPLES,\n    payload: h\n});\n\nexport const setShowFormantPresets= (show) => ({\n    type: SET_SHOW_FORMANT_PRESETS,\n    payload: show\n});\n\nexport const setZObjectBackground = (zobject) => ({\n    type: SET_ZOBJECT_BACKGROUND,\n    payload: zobject\n});\n\nexport const setPresentationMode = (mode) => ({\n    type: SET_PRESENTATION_MODE,\n    payload: mode\n});\n\nexport const setShowFreezeModal = (show) => ({\n    type: SET_SHOW_FREEZE_MODAL,\n    payload: show\n});\n\nexport const setTheme = (theme) => ({\n    type: SET_THEME,\n    payload: theme\n});\n\nexport const setShowThemeGrid = (show) => ({\n    type: SET_SHOW_THEME_GRID,\n    payload: show\n});\n\n\nexport const setRecentlyAddedSounds = (samples) => ({\n    type: SET_RECENTLY_ADDED_SOUNDS,\n    payload: samples\n});\n\nexport const setZObjectTooltip = (id, position, text) => ({\n    type: SET_ZOBJECT_TOOLTIP,\n    payload: {\n        id,\n        position,\n        text\n    }\n});\n\nexport const setZObjectsStack = (stack) => ({\n    type: SET_ZOBJECTS_STACK,\n    payload: stack\n});\n\nexport const setZObjectContextMenu = (id, position, zobject) => ({\n    type: SET_ZOBJECT_CONTEXT_MENU,\n    payload: {\n        id,\n        position,\n        zobject\n    }\n});\n\nexport const setObjectDragging = (object) => ({\n    type: SET_OBJECT_DRAGGING,\n    payload: object\n});\n\nexport const setEnableRollViewer = (enable) => ({\n    type: SET_ENABLE_ROLL_VIEWER,\n    payload: enable\n});\n\nexport const setZObjectModal = (modal) => ({\n    type: SET_ZOBJECT_MODAL,\n    payload: modal\n});\n\nexport const setZObjectProgressBar = (text) => ({\n    type: SET_ZOBJECT_PROGRESSBAR,\n    payload: text\n});\n\nexport const setShowPlaylistMenu = (show) => ({\n    type: SET_SHOW_PLAYLIST_MENU,\n    payload: show\n});\n\nexport const setCurrentPlaylistSong = (song) => ({\n    type: SET_CURRENT_PLAYLIST_SONG,\n    payload: song\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","export const SET_RESOLUTION = 1;\nexport const SET_SEQUENCER_ENGINE = 2;\nexport const SET_VIEW_MODE = 3;\nexport const SET_DETAILS_VIEW = 4;\nexport const SET_DECENTRALIZED = 5;\nexport const SET_SELECTOR_MODE = 6;\nexport const SET_NUMBER_PATTERNS= 7;\nexport const SET_CURRENT_PATTERN = 8;\nexport const SET_CURRENT_STEP = 9;\nexport const SET_CURRENT_GLOBAL_STEP = 10;\n\nexport const SET_SAMPLE = 11;\n\nexport const START_TRIGGER_TRACK = 12;\nexport const STOP_TRIGGER_TRACK = 13;\n\nexport const TOGGLE_TRACK = 14;\nexport const UNTOGGLE_TRACK = 15;\n\nexport const SET_SAMPLE_PACK = 16;\n\nexport const ADD_SAMPLE_PACK = 17;\nexport const REMOVE_SAMPLE_PACK = 18;\n\nexport const DRAG_SAMPLE = 19;\nexport const DRAG_EFFECT = 20;\nexport const DRAG_PATTERN = 21;\n\n// for when the user drags across steps to quickly toggle them,\n// either true (the mouse is currently clicking and dragging) or\n// false (the mouse is not clicking right now)\nexport const MOUSE_DOWN = 22;\n\n// when MOUSE_DOWN is true, this is used to tell you whether it should\n// toggle the step should toggle on or off\nexport const DRAG_TOGGLE = 23;\nexport const DRAG_STEP_TRANSPOSE = 24;\n\n// true when the \"command\" key is held down, this mode allows\n// people to drag the durations of steps\nexport const COMMAND_DOWN = 25;\n\nexport const TRACK_RECORDING = 26;\nexport const TRACK_PREPARING_TO_RECORD = 27;\n\nexport const SET_TRACK_STEPS = 28;\nexport const UPDATE_STEPS_FOR_ALL_TRACKS = 29;\nexport const SET_ALL_TRACK_STEPS = 30;\nexport const SET_TRACK_FILLS = 31;\nexport const SET_TRACK_PIANO_ROLL_STEPS = 32;\n\nexport const SET_SELECTED_TRACK = 33;\nexport const SET_SELECTED_GROUP = 34;\n\nexport const SET_TRACK_VOLUME = 35;\nexport const SET_TRACK_MUTED = 36;\nexport const SET_TRACK_SOLO = 37;\n\nexport const SET_GROUP_VOLUME = 38;\nexport const SET_GROUP_MUTED = 39;\n\nexport const SET_QUANTIZED = 40;\nexport const SET_IS_RECORDING = 41;\nexport const SET_IS_RECORDING_EXPANDED  = 42;\nexport const SET_IS_RECORDING_MIX = 43;\nexport const SET_IS_PLAYING = 44; \nexport const SET_IS_PLAYING_MIX = 45;\n\nexport const SET_SEND_MUTED = 46;\n\nexport const SET_SELECTED_STEP = 47;\nexport const SET_HOVERED_STEP = 48;\n\nexport const SET_STEP_DRAGGING = 49;\nexport const SET_STEP_TO_COPY = 50;\n\nexport const SET_SEQUENCE_NAME = 51;\n\nexport const SET_SELECTED_EFFECT = 52;\n\nexport const SET_EFFECT_PARAMETER_VALUE = 53;\n\nexport const SET_EFFECTS_PANE_OPTION = 54;\n\nexport const SET_SELECTED_PARAMETER = 55;\nexport const SET_SELECTED_PARAMETER_FLASHING = 56;\n\nexport const SET_MIXES = 57;\nexport const SET_CURRENT_MIX = 58;\n\nexport const SET_ERASING_AUTOMATION = 59;\n\nexport const SET_TRACK_SEND_VOLUME = 60;\n\nexport const SET_TRACK_FOCUSED = 61;\n\nexport const SET_YEAR_SELECTED = 62;\nexport const SET_COUNTRIES_SELECTED = 63;\nexport const SET_VIDEOS_SELECTED = 64;\nexport const SET_STYLES_SELECTED = 65;\nexport const SET_TAGS_SELECTED = 66;\nexport const SET_HIERARCHY_ROOT = 67;\nexport const SET_HIERARCHY_TREE = 68;\nexport const SET_SHOW_YEAR_SLIDER = 69;\nexport const SET_SHOW_COUNTRIES = 70;\nexport const SET_SHOW_VIDEOS = 71;\nexport const SET_SHOW_STYLES = 72;\nexport const SET_SHOW_TAGS = 73;\nexport const SET_SHOW_CHORD_FILTER = 74;\nexport const SET_CHORD_SELECTED = 75;\n\nexport const SET_IS_DRAGGING_DURATION = 76;\nexport const SET_STEP_DATA_DRAGGING = 77;\n\nexport const SET_PIANO_ROLL_SELECTION = 78;\nexport const SET_SELECTED_PIANO_ROLL_STEPS  = 79;\n\nexport const SET_SEARCH_RESULTS_SAMPLES = 80;\n\nexport const SET_SELECTED_CHORD_SAMPLE = 81;\n\nexport const SET_STEPS_TO_COPY = 82;\n\nexport const SET_LOADING_SEQUENCE = 83;\n\nexport const SET_EASY_PATTERN_TO_COPY = 84;\n\nexport const SET_SAMPLE_AUDITIONING = 85;\n\nexport const SET_LAST_MIDI_KEY_MAPPED = 86;\n\nexport const SET_TRACK_IS_ENABLED = 87;\n\nexport const SET_SELECTED_SAMPLE_TAG = 88;\n\nexport const SET_TRANSPOSE_DRAGGING = 89;\n\nexport const SET_MASTER_VOLUME = 90;\n\nexport const SET_USER_VIEW_MODE = 91;\n\nexport const SET_CURRENT_USER_MIX = 92;\n\nexport const SET_USER_HAS_EDITS_TO_SAVE = 93;\n\nexport const SET_PATTERN_TO_EDIT_COLOR = 94;\nexport const SET_PATTERN_COLOR = 95;\n\nexport const SET_COMPACT_MODE = 96;\n\nexport const SET_SHOW_LFOS = 97;\n\nexport const SET_TRACKS_TO_RESAMPLE = 98;\n\nexport const SET_PROJECT_AUTOMATION_MODE = 99;\n\nexport const NEW_SEQUENCE = 100;\n\nexport const SET_STEPS_SELECTION = 101;\nexport const SET_SELECTED_STEPS = 102;\nexport const SET_STEP_NUMBER_DRAGGING_FROM = 103;\n\nexport const SET_ALL_TRACK_PATTERN_LOCKS = 104;\nexport const SET_ALL_ENVELOPE_LOCKS = 105;\nexport const SET_ALL_LFO_LOCKS = 106;\nexport const SET_TRACK_PATTERN_LOCKED = 107;\nexport const SET_TRACK_PATTERN_LOCKS = 108;\nexport const SET_LFO_PATTERN_LOCKS = 109;\nexport const SET_ENVELOPE_PATTERN_LOCKS = 110;\nexport const SET_PIANO_ROLL_PAGINATION = 111;\n\nexport const SET_IS_RESAMPLING = 112;\n\nexport const SET_RESAMPLE_DURATION = 113;\n\nexport const SET_KEY_MAPPINGS = 114;\n\nexport const SET_SHOW_SEQUENCE_MODAL = 115;\n\nexport const SET_MULTI_PARAMETER_SLIDER = 116;\n\nexport const SET_SHOW_MODS_MODAL = 117;\n\nexport const SET_SEQUENCE_ROLLING = 118;\n\nexport const SET_TRACK_EFFECTS_CHAIN = 119;\n\nexport const SET_SHOW_SEQUENCES = 120;\nexport const SET_SHOW_PRESETS = 121;\nexport const SET_SHOW_INSTRUMENTS = 122;\n\nexport const SET_TRACK_ROLLING = 123;\n\nexport const SET_Z_INDEX_HACK = 124;\n\nexport const SET_LOADED_TRACKS = 125;\n\nexport const SET_BPM = 126;\n\nexport const SET_RESAMPLE_MASTER = 127;\n\nexport const SET_YOUTUBE_SEARCH_TERMS = 128;\n\nexport const SET_AUDIO_INPUT_SOURCE = 129;\n\nexport const SET_WAVEFORM_SELECTION = 130;\n\nexport const SET_WAVEFORM_SELECTION_END = 131;\n\nexport const SET_MIDI_MAP_MODE = 132;\nexport const SET_PARAMETER_MIDI_MAP_SELECTION = 133;\nexport const SET_PARAMETER_MIDI_MAPPING = 134;\nexport const DELETE_PARAMETER_MIDI_MAPPING = 135;\n\nexport const SET_LATENCY = 136;\n\nexport const SET_PAD_MAPPINGS = 137;\n\nexport const SET_ACTION_MIDI_MAP_SELECTION = 138;\nexport const SET_ACTION_MIDI_MAPPING = 139;\nexport const DELETE_MIDI_MAPPINGS = 140;\n\nexport const SET_SEQUENCE_PATTERN_LOCKED = 141;\nexport const SET_SEQUENCE_PATTERN_LOCKS = 142;\n\nexport const SET_SPOTLIGHT_TRACKS = 143;\n\nexport const SET_CLOCK_TYPE = 144;\n\nexport const SET_CONNECTION_STATUS = 145;\nexport const SET_CONNECTED_USER_NAME = 146;\nexport const SET_CLOCK_TICK = 147;\nexport const SET_PLAY_SCHEDULED = 148;\nexport const SET_AVAILABLE_USERS_TO_SYNC = 149;\n\nexport const SET_SEARCH_SORT_BY = 150;\n\nexport const SET_MIDI_EFFECT_DRAGGING = 151;\n\nexport const SET_SHOW_TRACK_EFFECTS = 152;\n\nexport const SET_SHOW_CONVOLVER_MODAL = 153;\n\nexport const SET_SHOW_PASSWORD_MODAL = 154;\nexport const SET_PASSWORD_MODAL_CALLBACK = 155;\n\nexport const SET_SHOW_SHARE_SEQUENCE_MODAL = 156;\n\nexport const HIDE_ALL_EFFECTS = 157;\n\nexport const SET_SHOW_ENVELOPES = 158;\n\nexport const SET_EFFECT_COLLAPSED = 159;\n\nexport const SET_CONTEXTUAL_HELP = 160;\n\nexport const SET_SELECTED_LFO = 161;\nexport const SET_SELECTED_ENVELOPE= 162;\n\nexport const SET_SIDEBAR_COLLAPSED = 163;\n\nexport const SET_MIX_EVENTS = 164;\n\nexport const SET_SHOW_GROUPS = 165;\n\nexport const SET_SUB_SEQUENCES = 166;\nexport const SET_CURRENT_SUB_SEQUENCE = 167;\n\nexport const SET_MIX_VIEW_MODE = 168;\n\nexport const SET_SUB_SEQUENCE_FADE = 169;\n\nexport const SET_SAMPLE_SLICES = 170;\n\nexport const SET_SELECTED_ARRANGEMENT_EVENTS = 171;\n\nexport const SET_SHOW_DATE_SAMPLED = 172;\nexport const SET_DATE_SAMPLED = 173;\n\nexport const SET_EFFECT_PARAMETER_VALUES = 174;\n\nexport const SET_TRACK_PANNING = 175;\nexport const SET_GROUP_PANNING = 176;\nexport const SET_SEND_PANNING = 177;\n\nexport const SET_SELECTED_RECORD = 178;\n\nexport const SET_2D_SELECTION = 179;\nexport const SET_SIMILAR_SOUNDS_TO_FIND = 180;\nexport const SET_SHOW_SAMPLES_2D = 181;\n\nexport const SET_LAST_NOTE_PLAYED = 182;\n\nexport const SET_SIDEBAR_VIEW_MODE = 183;\n\nexport const SET_DISCOGS_SELECTED = 184;\n\nexport const SET_SELECTED_FOLDER = 185;\nexport const SET_SELECTED_PRESET = 186;\nexport const SET_HAS_CHANGES_TO_FOLDERS = 187;\n\nexport const SET_CURSOR_TRACK = 188;\nexport const SET_CURSOR_STEP = 189;\nexport const SET_CURSOR_SHOW = 190;\n\nexport const SET_FOLDER_DRAGGING = 191;\nexport const SET_PRESET_DRAGGING = 192;\n\nexport const SET_SAMPLE_DRAGGING = 193;\n\nexport const SET_EFFECTS_CHAIN_TO_SHOW = 194;\nexport const SET_SUB_SEQUENCE_MUTED = 195;\n\nexport const SET_TRACK_FROZEN = 196;\nexport const SET_TRACK_TO_FREEZE = 197;\nexport const SET_FROZEN_TRACK_PLAYING = 198;\nexport const SET_FROZEN_TRACKS = 199;\nexport const SET_FROZEN_TRACKS_PLAYING = 200;\nexport const SET_EFFECTS_CHAINS_TO_SHOW = 201;\nexport const SET_SELECTED_ONSETS = 202;\nexport const SET_SINGLE_STEP_TO_DRAG = 203;\nexport const SET_STEP_NUMBER_DRAGGED_TO = 204;\n\nexport const SET_SEARCH_RESULTS_START = 205;\nexport const SET_SHOW_STEP_OPTIONS = 206;\n\nexport const SET_MASTER_STEP_TOGGLES = 207;\nexport const SET_PARAMETERS_TO_RECORD = 208;\nexport const SET_ONSET_THRESHOLD = 209;\nexport const SET_SHOW_ONSETS = 210;\n\nexport const SET_SELECTED_GUILD = 211;\nexport const SET_CURRENT_AND_GLOBAL_STEPS = 212;\n\nexport const SET_PIANO_ROLL_DRAG_OFFSET= 213;\nexport const SET_PIANO_ROLL_NOTES = 214;\nexport const SET_STEP_AND_DATA_DRAGGING = 215;\n\nexport const SET_SHOW_LOGIN= 216;\nexport const SET_SIGNING_UP= 217;\nexport const SET_USER_TOKEN = 218;\n\nexport const SET_PENDING_TRANSACTIONS = 219;\n\nexport const SET_COMMAND_INPUT = 220;\nexport const SET_COMMAND_PREFIX = 221;\nexport const SET_VI_MODE = 222;\nexport const SET_TRACK_WARP = 223;\nexport const SET_SUB_SEQUENCE_WARPS = 224;\n\nexport const SET_ARRANGEMENT_SELECTION = 225;\nexport const SET_ARRANGEMENT_MOUSE_X = 226;\nexport const SELECT_COMPOUND_EVENT = 227;\nexport const UNSELECT_COMPOUND_EVENT = 228;\n\nexport const SET_ARRANGEMENT_AUTOMATION_TO_SHOW= 229;\nexport const SET_ARRANGEMENT_LOOPING = 230;\n\nexport const SET_ALTERNATE_VIEW_MODE = 231;\nexport const SET_ARRANGEMENT_SELECTED_ROWS = 232;\nexport const SET_ARRANGEMENT_LOOP_SELECTED = 233;\nexport const SET_ARRANGEMENT_ROW_SELECTIONS = 234;\nexport const SET_ARRANGEMENT_ZOOM = 235;\n\nexport const SET_SELECTED_SEQUENCE = 236;\nexport const SET_EXPLORE_MIXER_EFFECT = 237;\nexport const SET_EXPLORE_EQ_EFFECT = 238;\nexport const SET_SELECTED_SEND_EFFECT= 239;\nexport const SET_INSTRUMENT_TYPE_DRAGGING = 240;\nexport const SET_TRACK_IS_LOADING = 241;\n\nexport const SET_PIANO_ROLL_CURSOR = 242;\nexport const SET_ARRANGEMENT_X_SCALE = 243;\nexport const SET_TOTAL_ARRANGEMENT_LENGTH = 244;\nexport const SET_ARRANGEMENT_BOTTOM_HEIGHT = 245;\nexport const SET_ARRANGEMENT_BOTTOM_MODE = 246;\nexport const SET_ARRANGEMENT_BOTTOM_RESIZING = 247;\nexport const SET_ARRANGEMENT_PATTERN_DRAGGING = 248;\nexport const SET_ARRANGEMENT_PATTERN_START_STEP = 249;\nexport const SET_ARRANGEMENT_CURSOR_STEP = 250;\nexport const SET_ARRANGEMENT_PATTERN_RESIZING = 251;\nexport const SET_ARRANGEMENT_BROWSER_MODE = 252;\nexport const SET_SAMPLE_TO_EXPLORE = 253;\nexport const SET_EFFECT_RACK_NODE_POSITION = 254;\n\nexport const SET_ANNOTATION_DRAGGING = 255;\n\nexport const SET_TRACK_AUTOMATION_DEVICE = 256;\nexport const SET_TRACK_AUTOMATION_PARAMETER = 257;\nexport const SET_SHOW_AUTOMATION = 258;\nexport const SET_TRACK_AUTOMATION_SUB_DEVICE = 259;\nexport const SET_PARAMETER_AUTOMATIONS = 260;\n\nexport const SET_ACTIONS_REMAINING = 261;\nexport const SET_TIME_REMAINING = 262;\n\nexport const SET_SHOW_PIANO_ROLL = 263;\n\nexport const SET_SELECTED_RACK_SUB_TRACK= 264;\n\nexport const DELETE_AUTOMATIONS_FOR_PARAMETERS = 265;\n\nexport const SET_TRACK_AUTOMATION_RACK_DEVICE = 266;\nexport const SET_AUTOMATION_GUIDE_POINT = 267;\nexport const SET_AUTOMATION_POINT_DRAGGING  = 268;\nexport const SET_AUTOMATION_POINT_HAS_MOVED= 269;\nexport const SET_AUTOMATION_POINT_HOVERED = 270;\n\nexport const SET_TRACK_TO_CONVERT = 271;\n\nexport const SET_AUTOMATION_SELECTION = 272;\nexport const SET_AUTOMATION_POINTS_SELECTED = 273;\n\nexport const SET_EXPLORE_PERSON_SELECTED = 274;\nexport const SET_EXPLORE_ALL_SEQUENCES = 275;\n\nexport const DELETE_AUTOMATIONS_FOR_ENGINE = 276;\n\nexport const SET_RECORDING_EXPLORE_MIX = 277;\n\nexport const SET_WORKS_LOADED = 278;\n\nexport const SET_WORK_TRANSPOSE = 279;\nexport const SET_WORK_VOLUME = 280;\n\nexport const SET_EXPLORE_MIX_LOADED = 281;\n\nexport const SET_IS_MACRO_MAPPING = 282;\n\nexport const SET_PARAMETER_TO_MAP = 283;\n\nexport const SET_MIX_COLOR_VALUE = 284;\n\nexport const SET_MIX_HAS_EDITS = 285;\nexport const SET_SCRIPT_VARIABLES = 286;\n\nexport const SET_EXPLORE_OPTION = 287;\n\nexport const SET_ANNOTATIONS_VIEW = 288;\n\nexport const SET_EXPLORE_TOAST = 289;\nexport const SET_PARAMETER_SLIDER_DOWN = 290;\n\nexport const MOVE_ENGINE_AUTOMATIONS = 291;\n\nexport const SET_SEQUENCE_LOADING_PROGRESS = 292;\n\nexport const SET_TRACK_BROWSED_SAMPLES = 293;\n\nexport const SET_BOTTOM_TOOLBAR_OFFSET = 294;\n\nexport const SET_TRACK_UPDATES = 295;\n\nexport const SET_IS_TRANSCRIBING = 296;\n\nexport const SET_SAMPLE_TOOLTIP = 297;\nexport const SET_TRACK_BROWSED_PRESETS = 298;\n\nexport const SET_SELECTED_FREEZE = 299;\n\nexport const SET_TRACK_LENGTH_MODE = 300;\nexport const SET_TRACK_LENGTH_CHOICE = 301;\nexport const SET_FREEZE_DRAGGING = 302;\nexport const SET_FREEZE_COLUMN_SAMPLES = 303;\nexport const SET_UPLOADING_FILE = 304;\nexport const SET_GROUP_COLLAPSED = 305;\n\nexport const SET_SELECTED_MIX_EFFECT = 306;\nexport const SET_SAMPLES_DRAGGING = 307;\n\nexport const SET_DISPLAY_RESOLUTION = 308;\n\nexport const SET_OFFLINE_ENGINE = 309;\n\nexport const SET_CURRENT_EXPORT_INFO = 310;\nexport const SET_MIX_TRACK_DRAGGING = 311;\nexport const SET_GROUP_TRACKS = 312;\n\nexport const SET_LOADING_TEXT = 313;\nexport const SET_TRACK_ENVELOPES = 314;\n\nexport const SET_COPIED_NODES_FOR_RACK= 315;\n\nexport const SET_LAST_MIDI_CC_PLAYED = 316;\n\nexport const SET_ARRANGEMENT_MOUSE_DOWN_X = 317;\n\nexport const SET_TRACKER_PARAMETER_TO_EDIT = 318;\n\nexport const SET_TRACKS_TO_HIDE = 319;\n\nexport const SET_SELECTED_PALETTE = 320;\n\nexport const SET_PROJECT_DRAGGING = 321;\n\nexport const SET_EXPLORE_UNPUBLISHED = 322;\nexport const SET_QUICK_ADD_SEARCH_TEXT = 323;\n\nexport const SET_SHOW_TRACK_FREEZE_HISTORY = 324;\nexport const SET_SELECTED_MIDI_TRACK = 325;\n\nexport const SET_SELECTED_TRACK_SLICE = 326;\n\nexport const SET_CIRKLON_PARAMETER_SELECTED = 327;\nexport const SET_CIRKLON_MODE = 328;\n\nexport const SET_NOTES_DOWN = 329;\nexport const SET_SEQUENCED_PALETTE = 330;\n\nexport const SET_SCENES = 331;\nexport const SET_CURRENT_SCENE = 332;\n\nexport const SET_SHOW_SETTINGS = 333;\nexport const SET_WALLPAPER = 334;\nexport const SET_ANIMATE_WALLPAPER = 335;\n\nexport const SET_EXPANDED_PROJECT = 336;\n\nexport const SET_ACCUMULATOR_PARAMETER_SELECTED= 337;\n\nexport const SET_PLANE_MAPPING = 338;\n\nexport const SET_TRACK_PRESET_SAVING = 339;\n\nexport const SET_SAMPLE_TAG_DRAGGING = 340;\n\nexport const SET_PARAMETER_MIX_AUTOMATIONS = 341;\n\nexport const SET_SHOW_ARRANGEMENT_TRACKS= 342;\n\nexport const SET_ARRANGEMENT_PATTERN_SELECTED = 343;\n\nexport const SET_SIDEBAR_SEARCH_INPUT = 344;\n\nexport const SET_SHOW_ARRANGEMENT_SEARCHER = 345;\n\nexport const SET_VI_SELECT_MODE = 346;\n\nexport const SET_EXPLORE_WORK = 347;\n\nexport const SET_CREATING_NEW_PACK = 348;\n\nexport const SET_PACK_WINDOW_POSITION = 349;\n\nexport const SET_DRAGGING_PACK_WINDOW = 350;\n\nexport const SET_PACK_TO_EDIT = 351;\n\nexport const SET_IS_MANAGING_GUILDS= 352;\n\nexport const NEW_STEP_GROUP = 353;\nexport const SET_STEPS_GROUP_MODE = 354;\n\nexport const SET_TRANSFORMATION_EDGE_DRAGGING = 355;\nexport const SET_SHOW_FORMANT_EFFECT = 356;\nexport const SET_SHOWING_FORMANTS= 357;\n\nexport const SET_PULLED_EFFECTS = 358;\n\nexport const SET_LOOPS_TO_FREEZE = 359;\nexport const SET_PARAMETER_MIN_MAX = 360;\n\nexport const SET_CURRENT_SOUND_IN_LIST = 361;\nexport const SET_SHOWING_SOUND_LIST = 362;\nexport const SET_CURRENT_TAG_IN_LIST = 363;\n\nexport const SET_LINKING_EFFECTS = 364;\nexport const SET_PACK_SELECTED = 365;\nexport const SET_SAMPLE_EXPLORER_SELECTED = 366;\n\nexport const SET_PIANO_ROLL_SLIDE = 367;\nexport const SET_MAXIMIZE_EXPLORER = 368;\n\nexport const SET_PADS = 369;\nexport const SET_PAD_SLOTS = 370;\n\nexport const SET_PAD_HOVERED = 371;\n\nexport const SET_WAVEFORM_SHOWING = 372;\nexport const SET_TRACK_DRAGGING = 373;\n\nexport const SET_HIDE_MIXER = 374;\n\nexport const SET_SOURCE_EXPLORING = 375;\nexport const SET_YEAR_EXPLORING = 376;\nexport const SET_PULLABLE_PART_DRAGGING= 377;\nexport const SET_PADS_EXPAND = 378;\n\nexport const SET_SEQUENCERS = 379;\nexport const SET_SEQUENCER_TRACKS = 379;\n\nexport const SET_PLANE_MACROS = 380;\nexport const SET_WINDOW_POSITION = 381;\nexport const SET_PAD_EFFECTS = 382;\nexport const SET_SELECTED_PAD_EDGE = 383;\nexport const SET_DRAWING_PAD_EDGE = 384;\nexport const SET_BULK_EFFECTS_COLLAPSED = 385;\nexport const SET_SELECTED_PULLED_ELEMENTS= 386;\nexport const SET_BULK_WINDOW_POSITIONS = 387;\nexport const SET_EFFECT_PATTERN_LOCKS = 388;\nexport const SET_ALL_EFFECT_PATTERN_LOCKS = 389;\nexport const SET_MODULE_COLLAPSED = 390;\nexport const SET_TRACK_MIDI_EFFECTS = 391;\nexport const SET_EFFECT_STARRED= 392;\nexport const SET_BULK_EFFECTS_STARRED= 393;\nexport const SET_BULK_MODULES_COLLAPSED = 394;\nexport const DELETE_TRACK_ID = 395;\nexport const SET_SHOWING_CONTEXT_MENU = 396;\nexport const SET_HIGHER_ORDER_MATRIX= 397;\nexport const SET_MODULE_COLOR=398;\nexport const SET_MODULES_ROUTING =399;\nexport const SET_HIGHER_ORDER_STEPS_SELECTED=400;\nexport const SET_ORIENTATION_ROUTINGS=401;\nexport const SET_SHOW_HIGHER_ORDER_SEQUENCER=402;\nexport const SET_PLANAR = 403;\n\nexport const SET_PLANAR_GRADIENT_COLOR = 404;\nexport const SET_PLANAR_OPACITY = 405;\n\nexport const SET_MODULE_SIZE = 406;\nexport const SET_INLET_CONNECTIONS = 407;\nexport const SET_ZOBJECTS = 408;\nexport const SET_ZMESSAGES = 409;\n\nexport const SET_BACKGROUND_COLOR = 410;\n\nexport const SET_VIEWABLE_SUBPATCHES = 411;\nexport const SET_SELECTED_ZOBJECT = 412;\n\nexport const SET_JAKI_GRID = 413;\n\nexport const SET_ZOBJECT_TYPE_DRAGGING= 414;\n\nexport const SET_UX_LOCKED = 415;\n\nexport const SET_MINTED_TOKENS = 416;\n\nexport const SET_HIC_DIALOG = 417;\nexport const SET_IS_PREPARING_NFT = 418;\nexport const SET_FULL_SCREEN_ZOBJECT = 419;\n\nexport const SET_MAIN_SCROLL_REF= 420;\nexport const SET_VIEWPORT_POSITION = 421;\nexport const SET_SIDEBARS_SHOWING = 422;\nexport const SET_SHOW_PAD_SEQUENCER = 423;\nexport const SET_SHOW_PROJECTS_MODAL = 424;\nexport const SET_SHOW_SEARCH_WINDOW = 425;\n\nexport const SET_STEP_PARAMETER_SELECTED = 426;\nexport const SET_SHOW_TRACK_INSTRUMENT = 427;\nexport const SET_SHOW_MODULATORS = 428;\n\nexport const SET_CABLE_SEGMENTATION = 429;\nexport const SET_CABLE_SEGMENTATIONS = 430;\n\nexport const SET_UX_LOCK_OBJECT = 431;\nexport const SET_UX_LOCK_OBJECTS = 432;\nexport const SET_UX_HIDE_OBJECT = 433;\nexport const SET_UX_HIDE_OBJECTS = 434;\nexport const SET_ZORA_DIALOG = 445;\nexport const SET_ZOBJECT_INPUT_TEXT = 446;\nexport const SET_VIEWABLE_ZOBJECTS = 447;\nexport const SET_SHOW_EDITOR_BOTTOM = 448;\n\nexport const SET_MINTING_PROGRESS = 449;\nexport const SET_NEW_ZORA_TOKEN_ID = 450;\nexport const SET_TRANSACTION_UPON_LOGIN = 451;\n\nexport const SET_KEYBOARD_CONTEXT = 452;\nexport const SET_PAD_FX_MODE = 453;\nexport const SET_JAKI_GRID_MODE = 454;\nexport const SET_OBJECT_STYLING = 455;\n\n// planar items\n\nexport const SET_SELECTED_PLANAR_PARAMETERS = 456;\nexport const SET_FILTERED_PLANAR_PARAMETERS = 457;\nexport const SET_PLANAR_MACRO_TO_SHOW = 458;\nexport const SET_PLANAR_REGION_MODE = 459;\nexport const SET_GROUP_PRESETS_BY_PACKS = 460;\nexport const SET_PIANO_ROLL_LEFT_SPACE = 461;\nexport const SET_ZOBJECT_SIZE = 462;\nexport const SET_SECONDARY_ZOBJECT = 463;\n\nexport const CLEAR_DRAG_DROP = 464;\n\nexport const SET_SAMPLES_TO_SAVE = 465;\nexport const SET_EDITOR_PADDING = 466;\nexport const SET_EDGES_PADDING = 467;\nexport const SET_EDGES_SIZE = 468;\n\nexport const SET_LEFT_SIDEBAR_WIDTH = 469;\nexport const SET_MOVING_PAD_EDGE = 470;\nexport const SET_DOCUMENTATION_SUB_SECTION = 471;\nexport const SET_RIGHT_SIDEBAR_OPTION = 472;\n\nexport const SET_SELECTED_FM_ENVELOPE_TYPE = 473;\nexport const SET_SELECTED_FM_OPERATOR_DETAILS = 474;\nexport const SET_SELECTED_FM_FORMANT = 475;\nexport const SET_SHOW_SAVE_MODAL = 476;\nexport const SET_ZOBJECT_FLASHING = 477;\nexport const SET_SAMPLE_DOWNLOAD_PROGRESS = 478;\n\nexport const SET_PRESET_SAVED = 479;\n\nexport const SET_COMPLETELY_DONE_LOADING = 480;\nexport const SET_PLUGIN_TO_SAVE = 481;\nexport const SET_SHOW_PLUGINS = 482;\nexport const SET_PLUGINS_LOADED = 483;\nexport const SET_SHOW_PLUGINS_PANE= 484;\nexport const SET_PLUGINS_PANE_HEIGHT = 485;\nexport const SET_DROPPED_SAMPLES = 486;\nexport const SET_SHOW_FORMANT_PRESETS = 487;\nexport const SET_ZOBJECT_BACKGROUND= 488;\nexport const SET_PRESENTATION_MODE = 489;\n\n\nexport const SET_PRESENTATION_WINDOW_POSITION = 490;\nexport const SET_BULK_PRESENTATION_WINDOW_POSITIONS = 491;\n\nexport const SET_SHOW_FREEZE_MODAL = 492;\nexport const SET_THEME = 493;\nexport const SET_SHOW_THEME_GRID = 494;\n\nexport const SET_RECENTLY_ADDED_SOUNDS = 495;\n\nexport const SET_ZOBJECT_TOOLTIP = 496;\n\nexport const SET_ZOBJECTS_STACK= 497;\nexport const SET_ZOBJECT_CONTEXT_MENU = 498;\n\nexport const SET_OBJECT_DRAGGING = 499;\n\nexport const SET_ENABLE_ROLL_VIEWER = 500;\n\nexport const SET_ZOBJECT_MODAL = 501;\nexport const SET_ZOBJECT_PROGRESSBAR = 502;\n\nexport const SET_SHOW_PLAYLIST_MENU= 503;\nexport const SET_CURRENT_PLAYLIST_SONG = 504;\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport Credits from \"components/credits/Credits.js\";\nimport SongTitle from './SongTitle.js';\nimport SporePlaylist from 'components/playlist/SporePlaylist.js';\nimport {connect} from 'react-redux';\nimport {isMobile} from 'react-device-detect';\nimport './caurosel.scss';\n\nconst Caurosel = ({playerChosen, setPlayerChosen, showStemPlayer, setShowStemPlayer}) => { \n    let ref = useRef();\n    let [selectedPlayer, setSelectedPlayer] = useState(undefined);\n    let [mouse, setMouse] = useState();\n    let [over, setOver] = useState();\n\n    const onMouseMove = useCallback((e) => {\n        let rect = ref.current.getBoundingClientRect();\n        let x = e.clientX - rect.left;\n        let y = e.clientY - rect.top;\n        setMouse({x,y});\n    }, [setMouse]);\n\n    const onMouseLeave = useCallback(() => {\n        setMouse(undefined);\n    }, [setMouse]);\n\n    let brect = ref.current && ref.current.getBoundingClientRect();\n\n    let className = \"caurosel\";\n    if (playerChosen) {\n        className += \" player-chosen\";\n    }\n    return (\n        <div onMouseLeave={onMouseLeave} ref={ref} onMouseMove={onMouseMove} className={className}>\n          {mouse && <div className=\"mouse-radial\" style={{left: mouse.x-500, top: mouse.y-500}}></div>}\n          <SporeOption\n            playerChosen={playerChosen}\n            brect={brect}\n            setShowStemPlayer={setShowStemPlayer}\n            showStemPlayer={showStemPlayer}\n            mouse={mouse}\n            isOver={over===1}\n            setOver={setOver}\n            setPlayerChosen={setPlayerChosen} rarity=\"Convolver\" tokenId={1}\n            thumbnail={isMobile ? \"/sp-1-thumbnail-mobile.png\" : \"/sp-1-thumbnail.png\"}/>\n          <SporeOption\n            setShowStemPlayer={setShowStemPlayer}\n            showStemPlayer={showStemPlayer}\n            brect={brect}\n            playerChosen={playerChosen}\n            mouse={mouse}\n            isOver={over===2}\n            setOver={setOver}\n            setPlayerChosen={setPlayerChosen} rarity=\"Ionic Filter\" tokenId={2}\n            thumbnail={isMobile ? \"/sp-2-thumbnail-mobile.png\" : \"/sp-2-thumbnail.png\"}/>\n          <SporeOption\n            setShowStemPlayer={setShowStemPlayer}\n            showStemPlayer={showStemPlayer}\n            brect={brect}\n            playerChosen={playerChosen}\n            mouse={mouse}\n            isOver={over===3}\n            setOver={setOver}\n            setPlayerChosen={setPlayerChosen} rarity=\"WaveFolder\" tokenId={3}\n            thumbnail={isMobile ? \"/sp-3-thumbnail-mobile.png\" : \"/sp-3-thumbnail.png\"}/>\n          <SporeOption\n            setShowStemPlayer={setShowStemPlayer}\n            showStemPlayer={showStemPlayer}\n            brect={brect}\n            playerChosen={playerChosen}\n            mouse={mouse}\n            isOver={over===4}\n            setOver={setOver}\n            setPlayerChosen={setPlayerChosen} rarity=\"Freak Shifter\" tokenId={4}\n            thumbnail={isMobile ? \"/sp-3-thumbnail-mobile.png\" : \"/sp-3-thumbnail.png\"}/>\n          <SporeOption\n            setShowStemPlayer={setShowStemPlayer}\n            showStemPlayer={showStemPlayer}\n            brect={brect}\n            playerChosen={playerChosen}\n            mouse={mouse}\n            isOver={over===4}\n            setOver={setOver}\n            setPlayerChosen={setPlayerChosen} rarity=\"Vocal Bender\" tokenId={5}\n            thumbnail={isMobile ? \"/sp-3-thumbnail-mobile.png\" : \"/sp-3-thumbnail.png\"}/>\n          <SporeOption\n            setShowStemPlayer={setShowStemPlayer}\n            showStemPlayer={showStemPlayer}\n            brect={brect}\n            playerChosen={playerChosen}\n            mouse={mouse}\n            isOver={over===4}\n            setOver={setOver}\n            setPlayerChosen={setPlayerChosen} rarity=\"Caustic Fluids\" tokenId={6}\n            thumbnail={isMobile ? \"/sp-3-thumbnail-mobile.png\" : \"/sp-3-thumbnail.png\"}/>\n          <SporeOption\n            setShowStemPlayer={setShowStemPlayer}\n            showStemPlayer={showStemPlayer}\n            brect={brect}\n            playerChosen={playerChosen}\n            mouse={mouse}\n            isOver={over===4}\n            setOver={setOver}\n            setPlayerChosen={setPlayerChosen} rarity=\"Caustic Fluids\" tokenId={7}\n            thumbnail={isMobile ? \"/sp-3-thumbnail-mobile.png\" : \"/sp-3-thumbnail.png\"}/>\n          <SporeOption\n            setShowStemPlayer={setShowStemPlayer}\n            showStemPlayer={showStemPlayer}\n            brect={brect}\n            playerChosen={playerChosen}\n            mouse={mouse}\n            isOver={over===4}\n            setOver={setOver}\n            setPlayerChosen={setPlayerChosen} rarity=\"Caustic Fluids\" tokenId={8}\n            thumbnail={isMobile ? \"/sp-3-thumbnail-mobile.png\" : \"/sp-3-thumbnail.png\"}/>\n          <SporeOption\n            setShowStemPlayer={setShowStemPlayer}\n            showStemPlayer={showStemPlayer}\n            brect={brect}\n            playerChosen={playerChosen}\n            mouse={mouse}\n            isOver={over===4}\n            setOver={setOver}\n            setPlayerChosen={setPlayerChosen} rarity=\"Caustic Fluids\" tokenId={9}\n            thumbnail={isMobile ? \"/sp-3-thumbnail-mobile.png\" : \"/sp-3-thumbnail.png\"}/>\n          <SporeOption\n            setShowStemPlayer={setShowStemPlayer}\n            showStemPlayer={showStemPlayer}\n            brect={brect}\n            playerChosen={playerChosen}\n            mouse={mouse}\n            isOver={over===4}\n            setOver={setOver}\n            setPlayerChosen={setPlayerChosen} rarity=\"Caustic Fluids\" tokenId={10}\n            thumbnail={isMobile ? \"/sp-3-thumbnail-mobile.png\" : \"/sp-3-thumbnail.png\"}/>\n        </div>);\n};\n\nconst SporeOption = ({\n    showStemPlayer,\n    setShowStemPlayer,\n    brect,\n    tokenId, playerChosen, isOver, mouse, setOver, rarity, thumbnail, setPlayerChosen\n}) => {\n    let ref= useRef();\n    let [currentSong, setCurrentSong] = useState(\"Twisting Faith\");\n\n    let rect = ref.current && ref.current.getBoundingClientRect();\n    let _x = rect && mouse && mouse.x - rect.left + brect.left;\n    let _y= rect && mouse && mouse.y - rect.top + brect.top;\n    let className = \"spore-player-option\";\n    if (playerChosen === tokenId) {\n        className += \" chosen\";\n    } else if (playerChosen) {\n        className += \" unchosen\";\n    }\n\n        const onClick = useCallback(() => {\n              if (showStemPlayer) {\n                  setShowStemPlayer(undefined);\n                  setPlayerChosen(undefined);\n                  return;\n              }\n              if (playerChosen === tokenId) {\n                  setShowStemPlayer(undefined);\n                  setPlayerChosen(undefined);\n              } else {\n                  setPlayerChosen(tokenId);\n                  setShowStemPlayer(true);\n              }\n        }, [setPlayerChosen, showStemPlayer, playerChosen, tokenId]);\n\n    return (\n        <div\n          ref={ref}\n          onMouseOver={() => setOver(tokenId)}\n          className={className}>\n          {isOver && mouse && <div className=\"mouse-radial\" style={{left: _x-500, top: _y-500}}></div>}\n          <div\n            onClick={onClick}>\n            <img src={thumbnail}/>\n            <div\n              className=\"sp-fields\">\n              <div\n                className=\"sp-name\">\n                SP-{tokenId}\n              </div>\n              <div className=\"sp-rarity\">\n                {rarity}\n              </div>\n            </div>\n          </div>\n          {showStemPlayer && <SongTitle/>}\n          {!isMobile && showStemPlayer && playerChosen === tokenId && <SporePlaylist currentSong={currentSong} setCurrentSong={setCurrentSong}/>}\n          {showStemPlayer && playerChosen === tokenId && <Credits/>}\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Caurosel);\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {isMobile} from 'react-device-detect';\nimport {connect} from 'react-redux';\nimport './jolly.scss';\nimport './heatmap.scss';\n\nconst JollyRancherPlayer = ({width, store, spore, progress, preset, setPreset}) => { \n    let ref = useRef();\n\n    useEffect(() => {\n        if (ref.current && ref.current.contentWindow) {\n            if (spore) {\n                ref.current.contentWindow.postMessage({\n                    type: \"heatmapHash\",\n                    body: spore.dataHash\n                }, \"*\");\n            }\n        }\n    }, [spore]);\n\n    useEffect(() => {\n        if (ref.current && ref.current.contentWindow) {\n            ref.current.contentWindow.postMessage({\n                type: \"sporePosition\",\n                body: progress\n            }, \"*\");\n        }\n    }, [progress]);\n\n    useEffect(() => {\n        if (ref.current && ref.current.contentWindow) {\n            ref.current.contentWindow.postMessage({\n                type: \"heatmapSize\",\n                body: [width, 90]\n            }, \"*\");\n        }\n    }, [width]);\n       \n    return (\n        <iframe\n          ref={ref}\n          sandbox=\"allow-scripts allow-same-origin\"\n          height={110}\n          width={width}\n          aria-describedby=\"spore\"\n          alt=\"spore.vision\"\n          src={\"https://zequencer.io/ipfs/QmTh6hkgEGGLpVP5XANvDToWMmLNq1VFXcS4vXnCMjrefC/\"}\n          className=\"spore-heatmap zora-mediaObject css-hnzuw7 zora-mediaObject--mediaLoaded zora-mediaObject--isFullPage\"\n          style={{borderWidth: \"0px\"}}/>\n        );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JollyRancherPlayer);\n","/*\n    This file is part of Universal Sequences.\n    Universal Sequences is free software: you can redistribute it and/or modif\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Universal Sequences is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\nconst MIN_BRIGHTNESS = 170;\nconst brightCache = {};\nconst trackCache = {};\n\nclass Colors {\n    constructor() {\n    }\n\n    transparent(color, opacity) {\n        return color.slice(0, color.length-1) + ', ' + opacity + ')';\n    }\n\n    intToRGB(i){\n        var c = (i & 0x00FFFFFF)\n            .toString(16)\n            .toUpperCase();\n        \n        return \"#\" + \"00000\".substring(0, 6 - c.length) + c;\n    }\n\n    hueShift(c, shift) {\n        let {h, s, l} = getHSLFromString(c);\n        return getHSLString({h: h + shift, s, l});\n    }\n\n    warm(warmth, start=141, s=100) {\n        let h = start;\n        let l = 50;\n        return getHSLString({h: h - warmth, s, l});\n    }\n\n    compliment(c, rotate=2) {\n        let {h, s, l} = getHSLFromString(c);\n        if (h === 0) {\n            h++;\n        }\n        h += rotate*10 % 255;\n        let x = getHSLString({h, s, l});\n        return x;\n    }\n\n    saturate(c, factor, lightFactor=1) {\n        if (!c) {\n            return undefined;\n        }\n        if (c.startsWith(\"hsl\")) {\n            let {h, s, l} = getHSLFromString(c);\n            l *= lightFactor;\n            s = Math.min(s*factor, 100);\n            c = getHSLString({h, s, l});\n            return c;\n        } else {\n            let rgb = this.getRGB(c);\n            let {h, s, l} = RGBToHSL(rgb);\n            l *= lightFactor;\n            s = Math.min(s*factor, 100);\n            c = getHSLString({h, s, l});\n            return c;\n        }\n    }\n\n    brighten(c, factor) {\n        if (c.startsWith(\"hsl\")) {\n            let hsl = getHSLFromString(c);\n            hsl = brightenHSL(hsl, factor);\n            return getHSLString(hsl);\n        }\n        let cacheResult = brightCache[(c + '.' + factor)];\n        if (cacheResult) {\n            return cacheResult;\n        }\n        let r = Math.min(255, Math.floor(parseInt(c.slice(1, 3), 16) * factor));\n        let g = Math.min(255, Math.floor(parseInt(c.slice(3, 5), 16) * factor));\n        let b = Math.min(255, Math.floor(parseInt(c.slice(5), 16) * factor));\n\n        r = r.toString(16);\n        g = g.toString(16);\n        b = b.toString(16);\n\n        if (r.length === 1) {\n            r = '0' + r;\n        }\n\n        if (g.length === 1) {\n            g = '0' + g;\n        }\n\n        if (b.length === 1) {\n            b = '0' + b;\n        }\n\n        let x = '#' + r + g + b;\n        brightCache[c + '.' + factor] = x;\n        return x;\n\n    }\n\n    getBrightness(c) {\n        let rgb = this.getRGB(c);\n\n        let color = 0.299*rgb.r + 0.587*rgb.g + 0.114*rgb.b;\n        return color;\n    }\n\n    rawHSLToHex({h,s,l}) {\n        return hslToHex(h,s,l);\n    }\n\n    hslToHex(color) {\n        let {h,s,l} = getHSLFromString(color);\n        return hslToHex(h,s,l);\n    }\n\n    getRGB(c) {\n        let r = Math.floor(parseInt(c.slice(1, 3), 16)); \n        let g = Math.floor(parseInt(c.slice(3, 5), 16));\n        let b = Math.floor(parseInt(c.slice(5), 16));\n        return {r:r, g:g, b:b};\n    }\n}\n\nfunction RGBToHSL({r,g,b}) {\n    // Make r, g, and b fractions of 1\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    // Find greatest and smallest channel values\n    let cmin = Math.min(r,g,b),\n        cmax = Math.max(r,g,b),\n        delta = cmax - cmin,\n        h = 0,\n        s = 0,\n        l = 0;\n\n    if (delta == 0)\n        h = 0;\n    // Red is max\n    else if (cmax == r)\n        h = ((g - b) / delta) % 6;\n    // Green is max\n    else if (cmax == g)\n        h = (b - r) / delta + 2;\n    // Blue is max\n    else\n        h = (r - g) / delta + 4;\n\n    h = Math.round(h * 60);\n\n    // Make negative hues positive behind 360°\n    if (h < 0)\n        h += 360;\n\n    // Calculate lightness\n    l = (cmax + cmin) / 2;\n\n    // Calculate saturation\n    s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n\n    // Multiply l and s by 100\n    s = +(s * 100).toFixed(1);\n    l = +(l * 100).toFixed(1);\n\n    return {h, s, l};\n}\n\nfunction getHSLString({h, s, l}) {\n    return \"hsl(\" + h + \",\" + s + \"%,\" + l +\"%)\";\n}\n\nfunction getHSLFromString(str) {\n    str = str.substring(4);\n    let [hPart, sPart, lPart] = str.split(\",\");\n    let index = sPart.indexOf(\"%\");\n    sPart = sPart.substring(0, index);\n    index = lPart.indexOf(\"%\");\n    lPart = lPart.substring(0, index);\n    return {\n        h: parseFloat(hPart),\n        s: parseFloat(sPart),\n        l: parseFloat(lPart),\n    };\n\n}\n\nfunction brightenHSL({h, s, l}, factor) {\n    return {\n        h,\n        s,\n        l: l* factor\n    };\n}\n\nfunction hslToHex(h, s, l) {\n  l /= 100;\n  const a = s * Math.min(l, 1 - l) / 100;\n  const f = n => {\n    const k = (n + h / 30) % 12;\n    const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    return Math.round(255 * color).toString(16).padStart(2, '0');   // convert to Hex and prefix \"0\" if needed\n  };\n  return `#${f(0)}${f(8)}${f(4)}`;\n}\n\n\n\nexport default Colors;\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport Colors from 'components/Colors.js';\nimport Tone from 'tone';\nconst colors = new Colors();\nwindow.heatRoot = 1.1;\n//window.bucketSize = 4;\nwindow.bucketSize = 1;\nwindow.saturation = 80;\n\nconst SporeHeatMap = ({heat, width=54, height=10, center=false, saturation=200, duration}) => { \n    // lets start with slider data\n    if (!heat) {\n        return '';\n    }\n\n    // first process the heat\n    let bucketSize = width === 54 ? window.bucketSize*2 : window.bucketSize;\n    let buckets = getBuckets(heat, bucketSize);\n    let max = Math.max(...Object.values(buckets))*.75;\n    let maxStep = Math.max(...Object.keys(buckets));\n    /*\n    if (duration) {\n        let oldMaxStep = maxStep;\n        maxStep = (duration/new Tone.Time('32n'))/(bucketSize);\n        console.log(\"max step=%s old max step=%s dur=%s\", maxStep, oldMaxStep, duration);\n    }\n    */\n    return (\n        <svg className=\"heatmap\" width={width} height={10}>\n          {Object.keys(buckets).map(\n              step => <rect\n                        width={width > 80 ? 4 : 1}\n                        height={center ? height* Math.min(1, Math.pow(buckets[step], window.heatRoot)/max) : height}\n                        opacity={Math.min(1, Math.pow(buckets[step], window.heatRoot)/max)}\n                        fill={colors.warm(190*Math.min(1, Math.pow(buckets[step], window.heatRoot)/max), 190,\n                                          Math.min(1, Math.pow(buckets[step], window.heatRoot)/max)*saturation)}\n                        x={width*step/maxStep}\n                        y={center ? height/2 - height* Math.min(1, Math.pow(buckets[step], window.heatRoot)/max)/2 : 0}/>)}\n        </svg>);\n};\n\nconst getBuckets = (heat, bucketSize) => {\n    let sliderData = heat.sliderChanges;\n    let modeData = heat.modeChanges;\n    let regions = sliderData.map(x => Math.round((isNaN(x[0]) ? 0 : x[0]) / bucketSize));\n    let buckets = {};\n    for (let x of regions) {\n        if (!buckets[x]) {\n            buckets[x] = 0;\n        }\n        buckets[x]+=1;\n    }\n\n    regions = modeData.map(x => Math.round((isNaN(x[0]) ? 0 : x[0]) / bucketSize));\n    let max = Math.max(...Object.values(regions));\n    for (let x of regions) {\n        if (!buckets[x]) {\n            buckets[x] = 0;\n        }\n        buckets[x]+=16;\n        let q=0;\n        for (let i=x+1; i < max; i++) {\n            if (regions.some(x => x === i)) {\n                break;\n            }\n            if (!buckets[i]) {\n                buckets[i] = 0;\n            }\n            buckets[i] += (50+q);\n            q+=8;\n        }\n    }\n    return buckets;\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SporeHeatMap);\n","import React, { Component, useCallback } from 'react';\nimport './buttons.scss';\n\nconst PlayButton = (props) => {\n    const onPlayClicked = useCallback((e) => {\n        e.target.parentNode.blur();\n        e.target.blur();\n        e.currentTarget.blur();\n        props.play();\n    }, [props.isPlaying]);\n\n    return (\n        <div\n          onClick={onPlayClicked}\n          className=\"play-btn-wrapper pushable\">\n          <div\n            className={props.isPlaying ? \"play-btn playing\" : \"play-btn \"}/>\n        </div>\n    );\n}\n\n\nexport default PlayButton;\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport JollyRancherPlayer from './JollyRancherPlayer.js';\nimport {isMobile} from 'react-device-detect';\nimport SporeHeatMap from \"components/spore/SporeHeatMap.js\";\n\nimport {useInterval} from \"components/hooks/useInterval.js\";\nimport PlayButton from \"components/buttons/PlayButton.js\";\nimport {connect} from 'react-redux';\nimport Tone from 'tone';\n\nconst AudioPlayer = ({heat, creator, audioUnit, store, spore, preset, setPreset, sporeMetadata}) => { \n\n    let WIDTH=isMobile ? 240 : 500;\n    let ref = useRef();\n    let [playing, setPlaying] = useState(false);\n    let [playTime, setPlayTime] = useState(undefined);\n    let startPoint = useRef(0);\n    let [progress, setProgress] = useState(0);\n    let [mouseSeeker, setMouseSeeker] = useState();\n\n    useEffect(() => {\n        setPlaying(false);\n        setProgress(0);\n    }, [spore]);\n\n    const onTick = useCallback(() => {\n        let diff = Tone.Master.context.currentTime - playTime;\n        if (playing) {\n            setProgress((diff + startPoint.current) / audioUnit.duration);\n        }\n    }, [playing, setProgress, playTime]);\n\n    useInterval(onTick, 40);\n\n    const onClickPlay = useCallback(() => {\n        if (playing) {\n            startPoint.current = startPoint.current + Tone.Master.context.currentTime - playTime;\n            audioUnit.stopSound();\n        } else {\n            audioUnit.playSound(startPoint.current);\n        }\n        setPlaying(!playing);\n        //setProgress(0);\n        setPlayTime(Tone.Master.context.currentTime);\n    }, [playing, setProgress, setPlaying, audioUnit, playTime]);\n\n    const mouseSeek = useCallback((e) => {\n        e.stopPropagation();\n        setMouseSeeker(undefined);\n        if (!playing) {\n            setPlaying(true);\n        }\n        let x = e.clientX - ref.current.getBoundingClientRect().left;\n        let percentage = x / WIDTH;\n        let startTime = percentage * audioUnit.duration;\n        audioUnit.playSound(startTime);\n        startPoint.current = startTime;\n        setPlayTime(Tone.Master.context.currentTime);\n        setMouseSeeker(x);\n        setTimeout(() => {\n            setMouseSeeker(undefined);\n        }, 300);\n    }, [playing, setPlaying, setPlayTime, setMouseSeeker, audioUnit]);\n\n    useEffect(() => {\n        return () => {\n            if (audioUnit) {\n                audioUnit.stopSound();\n            }\n        }\n    }, [audioUnit]);\n\n    progress = Math.min(100, progress);\n\n    return (\n        <div className=\"audio-player\">\n          {audioUnit &&\n           <PlayButton isPlaying={playing}\n                       play={onClickPlay}/>}\n          <div\n            ref={ref}\n            onClick={mouseSeek}\n            className=\"play-time-and-slider\">\n            {sporeMetadata && <JollyRancherPlayer\n                        setPreset={setPreset}\n                                width={WIDTH}\n                        preset={preset}\n                        progress={progress}\n                        store={store}\n                        spore={sporeMetadata}\n                      />}\n           <div className=\"play-time\">\n              {audioUnit && <div className=\"time\">\n              {formatTime(progress*audioUnit.duration)} / {formatTime(audioUnit.duration)}\n                            </div>}\n              {creator && <div className=\"creator\">\n                {truncate(creator)}\n                          </div>}\n            </div>\n            <div className=\"song-title-and-author\">\n              <div className=\"song-title\">\n              Psilocybin\n              </div>\n              <div className=\"song-creator\">\n                Keyon Christ\n              </div>\n            </div>\n          </div>\n        </div>);\n}\n\nexport const truncate = (creator) => {\n    return creator.slice(0, 4) + '...' + creator.slice(-4);\n};\n\nconst formatTime = (time) => {\n    if (!time) {\n        time = 0;\n    }\n    let minutes = Math.floor(time/60);\n    let seconds = Math.floor(time - minutes * 60);\n    if (seconds < 10) {\n        seconds = '0' + seconds;\n    }\n\n    return `${minutes}:${seconds}`;\n\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\n            /*\n            <div\n              onClick={mouseSeek}\n              ref={ref} className=\"play-slider\">\n              {mouseSeeker && <div style={{left: mouseSeeker}} className=\"mouse-seeker\"/>}\n              <SporeHeatMap duration={audioUnit.duration} center={true} height={8} heat={heat} width={WIDTH}/>\n            <div\n              style={{width: WIDTH * progress}}\n              className=\"play-slider-inner\">\n            </div>\n            */\n \n\n/*\n\n\n*/\nexport default connect(mapStateToProps, mapDispatchToProps)(AudioPlayer);\n","import React, { useState, useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","class EthereumEventLog {\n    // for example, SampleTagged(bytes32,bytes32) would be the event\n    // and the arguments would be EthereumTopic(\"ipfsHash\", IPFS_HASH),\n    // EthereumTopic(\"tag\", BYTES_32)\n    constructor(event, topics, ...data) {\n        this.event = event;\n        this.topics = topics;\n        this.data = data;\n    }\n}\n\nexport default EthereumEventLog;\n","class EthereumTopic {\n    constructor(name, type, size=1) {\n        this.name = name;\n        this.type = type;\n        this.size = size*64;\n    }\n\n    convertTo(x) {\n        if (x === undefined || x === null) {\n            return undefined;\n        }\n        return this.type.convertTo(x);\n    }\n   \n    convertFrom(x) {\n        if (x === undefined || x === null) {\n            return undefined;\n        }\n        return this.type.convertFrom(x);\n    }\n}\n\nexport default EthereumTopic;\n","import {IPFS_HASH} from 'decentralized/EthereumDataTypes.js';\nimport {INT_8} from 'decentralized/EthereumDataTypes.js';\nimport {INT_16} from 'decentralized/EthereumDataTypes.js';\nimport {INT_32} from 'decentralized/EthereumDataTypes.js';\nimport {UINT_256} from 'decentralized/EthereumDataTypes.js';\nimport {RIGHT_PADDED_BYTES_32} from 'decentralized/EthereumDataTypes.js';\nimport {BYTES_32, BYTES_32_LEFT} from 'decentralized/EthereumDataTypes.js';\nimport {BYTES_32_ENCRYPTED} from 'decentralized/EthereumDataTypes.js';\nimport {BYTES_32_ARRAY} from 'decentralized/EthereumDataTypes.js';\nimport {NOTE_BYTES_32} from 'decentralized/EthereumDataTypes.js';\nimport {NOTES_BYTES_32} from 'decentralized/EthereumDataTypes.js';\nimport {ADDRESS} from 'decentralized/EthereumDataTypes.js';\nimport {STRING} from 'decentralized/EthereumDataTypes.js';\n\nimport EthereumEventLog from 'decentralized/EthereumEventLog.js';\nimport EthereumTopic from 'decentralized/EthereumTopic.js';\n\nexport const SampleTagged = new EthereumEventLog(\n    'SampleTagged(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('tag', BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\n export const SampleStyle = new EthereumEventLog(\n    'SampleStyle(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('style', BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n                                                 \n export const SampleYear = new EthereumEventLog(\n    'SampleYear(bytes32,int16,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('year', INT_16),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SampleCountry = new EthereumEventLog(\n    'SampleCountry(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('country', BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SampleYoutube = new EthereumEventLog(\n    'SampledYoutube(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('videoId', RIGHT_PADDED_BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n \nexport const SequenceCreated = new EthereumEventLog(\n    'SequenceCreated(address,bytes32,string)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('ipfsHash', IPFS_HASH)],\n    new EthereumTopic('title', STRING));\n\nexport const SampleCreated = new EthereumEventLog(\n    'SampleCreated(address,bytes32,string,uint32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('guildId', INT_32)\n    ],\n    new EthereumTopic('title', STRING),\n);\n\nexport const NewNoteSequence = new EthereumEventLog(\n    'NewNoteSequence(bytes32,bytes32)',\n    [new EthereumTopic('sampleHash', IPFS_HASH),\n     new EthereumTopic('noteSequenceHash', IPFS_HASH)]);\n\nexport const NewDiscogsSample = new EthereumEventLog(\n    'NewDiscogsSample(bytes32,uint256,bytes32,uint32)',\n    [new EthereumTopic('sampleHash', IPFS_HASH),\n     new EthereumTopic('coverArtHash', IPFS_HASH),\n     new EthereumTopic('guildId', INT_32)\n    ],\n     new EthereumTopic('discogsId', UINT_256),\n);\n\nexport const NewNoteSequenceAggregation = new EthereumEventLog(\n    'NewNotesAggregation(bytes32,bytes32,bytes32,uint32,uint32,bytes32)',\n    [new EthereumTopic('sampleHash', IPFS_HASH),\n     new EthereumTopic('noteA', NOTE_BYTES_32),\n     new EthereumTopic('noteB', NOTE_BYTES_32)],\n    new EthereumTopic('startTime', INT_32),\n    new EthereumTopic('endTime', INT_32),\n    new EthereumTopic('remainingNotes', NOTES_BYTES_32));\n\nexport const SampleFavorited = new EthereumEventLog(\n    'SampleFavorited(address,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('sampleHash', IPFS_HASH)]);\n\nexport const SampleUnfavorited = new EthereumEventLog(\n    'SampleUnfavorited(address,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('sampleHash', IPFS_HASH)]);\n\nexport const SequenceEdited = new EthereumEventLog(\n    'SequenceEdited(address,bytes32,bytes32,bytes32,string)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('previousSequence', IPFS_HASH),\n     new EthereumTopic('newSequence', IPFS_HASH)],\n    new EthereumTopic('diff', IPFS_HASH),\n    new EthereumTopic('title', STRING),\n    );\n\nexport const TokenizedSequenceEdited = new EthereumEventLog(\n    'SequenceEdited(address,bytes32,bytes32,string,uint32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('previousSequence', IPFS_HASH),\n     new EthereumTopic('newSequence', IPFS_HASH)],\n    new EthereumTopic('title', STRING),\n    new EthereumTopic('bpm', INT_32),\n    );\n\n\nexport const PresetTag = new EthereumEventLog(\n    'PresetTagged(address,bytes32,bytes32,uint32)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n     new EthereumTopic('tag', BYTES_32),\n     new EthereumTopic('guildId', INT_32),\n    ],\n    new EthereumTopic('user', ADDRESS),\n);\n\nexport const NewGuild = new EthereumEventLog(\n    'NewGuild(address,uint32,string)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)],\n    new EthereumTopic('name', STRING),\n);\n\n//event NewGuildMemberRequest(address indexed, address indexed, uint256 indexed);\nexport const NewGuildMemberRequest = new EthereumEventLog(\n    'NewGuildMemberRequest(address,address,uint32)',\n    [new EthereumTopic('requester', ADDRESS),\n     new EthereumTopic('newMember', ADDRESS),\n     new EthereumTopic('guildId', INT_32)]);\n\n// event NewGuildMemberRequestAccepted(address indexed, uint256 indexed);\nexport const NewGuildMemberRequestAccepted = new EthereumEventLog(\n    'NewGuildMemberRequestAccepted(address,uint32)',\n    [new EthereumTopic('newMember', ADDRESS),\n     new EthereumTopic('guildId', INT_32)]);\n\n// event NewGuildMemberRequestRejected(address indexed, uint256 indexed);\nexport const NewGuildMemberRequestRejected = new EthereumEventLog(\n    'NewGuildMemberRequestRejected(address,uint32)',\n    [new EthereumTopic('newMember', ADDRESS),\n     new EthereumTopic('guildId', INT_32)]);\n\n// event NewGuildMemberRequestRejected(address indexed, uint256 indexed);\nexport const GuildKeyEncrypted = new EthereumEventLog(\n    'GuildKeyEncrypted(address,uint32,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32),\n     new EthereumTopic('ipfsHash',IPFS_HASH)]);\n\nexport const NewEncryptedContent = new EthereumEventLog(\n    'NewEncryptedContent(address,bytes32,bytes32,int8,bytes32,bytes32[9],bytes32[6])',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('newContent', IPFS_HASH),\n     new EthereumTopic('contentType', INT_8),\n    ],\n     new EthereumTopic('previousContent', IPFS_HASH),\n    new EthereumTopic('encryptedName', BYTES_32_ENCRYPTED),\n    new EthereumTopic('encryptedContentKey', BYTES_32_ARRAY(9), 9),\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\nexport const EncryptedContentShared = new EthereumEventLog(\n    'EncryptedContentShared(address,address,bytes32,bytes32[9],bytes32[6])',\n    [new EthereumTopic('sharedWith', ADDRESS),\n     new EthereumTopic('creator', ADDRESS),\n     new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('encryptedContentKey', BYTES_32_ARRAY(9), 9),\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\n\nexport const NewPublicKey = new EthereumEventLog(\n    'NewPublicKey(address,bytes32[6])',\n    [new EthereumTopic('user', ADDRESS),\n    ],\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\nexport const NewPreset2 = new EthereumEventLog(\n    'NewPreset(address,bytes32,uint32,bytes32,bytes32[9],bytes32[6])',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('contentHash', IPFS_HASH),\n     new EthereumTopic('guildId', INT_32)\n    ],\n    new EthereumTopic('encryptedName', BYTES_32_ENCRYPTED),\n    new EthereumTopic('encryptedContentKey', BYTES_32_ARRAY(9), 9),\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\nexport const PresetSample = new EthereumEventLog(\n    'PresetSample(bytes32,bytes32,uint32)',\n    [\n        new EthereumTopic('contentHash', IPFS_HASH),\n        new EthereumTopic('sampleHash', IPFS_HASH),\n        new EthereumTopic('guildId', INT_32)\n    ],\n    );\n\nexport const PresetInstrumentType = new EthereumEventLog(\n    'PresetInstrumentType(bytes32,bytes32,uint32)',\n    [\n        new EthereumTopic('contentHash', IPFS_HASH),\n        new EthereumTopic('instrumentType', BYTES_32_LEFT),\n        new EthereumTopic('guildId', INT_32)\n    ],\n    );\n\nexport const NewMonthlyIndex = new EthereumEventLog(\n    'NewMonthlyIndex(bytes32,uint32,uint64)',\n    [\n     new EthereumTopic('month', UINT_256),\n     new EthereumTopic('year', UINT_256)\n    ],\n     new EthereumTopic('hash', IPFS_HASH)\n    );\n\nexport const New2DMapping = new EthereumEventLog(\n    'New2DMapping(bytes32)',\n    [\n     new EthereumTopic('ipfsHash', IPFS_HASH)\n    ],\n\n    );\n\nexport const PublicMessageSent = new EthereumEventLog(\n    'PublicMessageSent(address,address,bytes32,bytes32)',\n    [\n        new EthereumTopic('fromUser', ADDRESS),\n        new EthereumTopic('toUser', ADDRESS),\n        new EthereumTopic('referenceHash', IPFS_HASH),\n    ],\n    new EthereumTopic('messageHash', IPFS_HASH),\n    );\n\nexport const SampleCopyStrike = new EthereumEventLog(\n    'SampleCopyStrike(address,bytes32,bytes32)',\n    [\n        new EthereumTopic('user', ADDRESS),\n        new EthereumTopic('sampleHash', IPFS_HASH),\n        new EthereumTopic('referenceHash', IPFS_HASH),\n    ]\n    );\n\nexport const SampleTakenDown = new EthereumEventLog(\n    'SampleTakenDown(bytes32)',\n    [\n        new EthereumTopic('sampleHash', IPFS_HASH),\n    ]\n    );\n\nexport const FoldersUpdated = new EthereumEventLog(\n    'FoldersUpdated(address,bytes32)',\n    [\n        new EthereumTopic('user', ADDRESS),\n        new EthereumTopic('foldersHash', IPFS_HASH),\n    ]\n    );\n\nexport const NewIndex = new EthereumEventLog(\n    'NewIndex(uint32,bytes32)',\n    [\n        new EthereumTopic('guildId', INT_32),\n    ],\n    new EthereumTopic('indexHash', IPFS_HASH),\n    );\n\nexport const NewGuildSequence = new EthereumEventLog(\n    'NewGuildSequence(address,bytes32,uint32,bytes32,bytes32,bytes32[9],bytes32[6])',\n    [\n        new EthereumTopic('user', ADDRESS),\n        new EthereumTopic('contentHash', IPFS_HASH),\n        new EthereumTopic('guildId', INT_32),\n    ],\n    new EthereumTopic('previousHash', IPFS_HASH),\n    new EthereumTopic('encryptedName', BYTES_32_ENCRYPTED),\n    new EthereumTopic('encryptedContentKey', BYTES_32_ARRAY(9), 9),\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\nexport const NewGuildClassification = new EthereumEventLog(\n    'NewGuildClassification(uint32,bytes32)',\n    [\n        new EthereumTopic('guildId', INT_32),\n        new EthereumTopic('contentHash', IPFS_HASH),\n    ]);;\n\n export const Transfer = new EthereumEventLog(\n    'Transfer(address,address,uint256)',\n    [\n        new EthereumTopic('fromUser', ADDRESS),\n        new EthereumTopic('toUser', ADDRESS),\n    ],\n     new EthereumTopic('amount', INT_32 ),\n );;\n\nexport const SequenceTagged= new EthereumEventLog(\n    'SequenceTagged(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('tag', BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SequenceFavorited = new EthereumEventLog(\n    'SequenceFavorited(bytes32,address,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SequenceStarred = new EthereumEventLog(\n    'SequenceStarred(bytes32,address,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SequenceUnfavorited = new EthereumEventLog(\n    'SequenceUnfavorited(bytes32,address,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\n\nexport const SequenceUnstarred = new EthereumEventLog(\n    'SequenceUnstarred(bytes32,address,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\n\nexport const NewDataType = new EthereumEventLog(\n    'NewDataType(bytes32,string)',\n    [new EthereumTopic('dataType', BYTES_32),\n    ],\n    new EthereumTopic('description', STRING));\n\nexport const NewLinkType = new EthereumEventLog(\n    'NewLinkType(bytes32,string)',\n    [new EthereumTopic('linkType', BYTES_32),\n    ],\n    new EthereumTopic('description', STRING));\n\nexport const NewAnnotationType = new EthereumEventLog(\n    'NewAnnotationType(bytes32,string)',\n    [new EthereumTopic('annotationType', BYTES_32),\n    ],\n    new EthereumTopic('description', STRING));\n\nexport const NewAnnotation = new EthereumEventLog(\n    'NewAnnotation(bytes32,bytes32,bytes32,address)',\n    [\n        new EthereumTopic('annotationType', BYTES_32),\n        new EthereumTopic('data', IPFS_HASH),\n        new EthereumTopic('address', ADDRESS),\n    ],\n    new EthereumTopic('annotationData', BYTES_32),\n);\n\nexport const NewLink = new EthereumEventLog(\n    'NewLink(bytes32,bytes32,bytes32,address)',\n    [new EthereumTopic('linkType', BYTES_32),\n     new EthereumTopic('fromData', IPFS_HASH),\n     new EthereumTopic('toData', IPFS_HASH),\n    ],\n     new EthereumTopic('address', ADDRESS),\n    );\n\nexport const NewMix= new EthereumEventLog(\n    'NewMix(address,bytes32,bytes32,string,uint32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('mixHash', IPFS_HASH),\n     new EthereumTopic('previousHash', IPFS_HASH),\n    ],\n     new EthereumTopic('title', STRING),\n     new EthereumTopic('guildId', INT_32),\n    );\n\nexport const NewEffect = new EthereumEventLog(\n    'NewEffect(address,bytes32,bytes32,string,uint32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('effectHash', IPFS_HASH),\n     new EthereumTopic('effectType', BYTES_32),\n    ],\n     new EthereumTopic('title', STRING),\n     new EthereumTopic('guildId', INT_32),\n    );\n\nexport const ReleaseInfo = new EthereumEventLog(\n    'ReleaseInfo(bytes32,uint32,string,bytes32,bytes32)',\n    [new EthereumTopic('artistName', BYTES_32),\n     new EthereumTopic('releaseId', INT_32),\n    ],\n     new EthereumTopic('releaseName', STRING),\n     new EthereumTopic('coverArtHash', IPFS_HASH),\n     new EthereumTopic('releaseType', BYTES_32),\n    );\n\nexport const SampleByArtist = new EthereumEventLog(\n    'SampleByArtist(bytes32,bytes32)',\n    [new EthereumTopic('artistName', BYTES_32),\n     new EthereumTopic('ipfsHash', IPFS_HASH),\n     ]\n    );\n\nexport const ArtistInfo = new EthereumEventLog(\n    'ArtistInfo(bytes32,bytes32,string)',\n    [new EthereumTopic('artistName', BYTES_32),\n     new EthereumTopic('linkType', BYTES_32),\n    ],\n     new EthereumTopic('link', STRING),\n    );\n\nexport const MidiCCParameter = new EthereumEventLog(\n    'MidiCCParameter(bytes32,uint32,bytes32,address)',\n    [new EthereumTopic('deviceName', BYTES_32),\n     new EthereumTopic('ccNumber', INT_32),\n     new EthereumTopic('parameterName', BYTES_32),\n    ],\n     new EthereumTopic('user', ADDRESS),\n    );\n\nexport const SampleInSequence = new EthereumEventLog(\n    'SampleInSequence(bytes32,bytes32)',\n    [new EthereumTopic('sequenceHash', IPFS_HASH),\n     new EthereumTopic('sampleHash', IPFS_HASH)\n    ]\n    );\n\nexport const ListEdited = new EthereumEventLog(\n    'ListEdited(bytes32,bytes32,address,bytes32,uint32)',\n    [new EthereumTopic('newContent', IPFS_HASH),\n     new EthereumTopic('previousContent', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n    ],\n    new EthereumTopic('title', BYTES_32),\n    new EthereumTopic('guildId', INT_32),\n    );\n\nexport const ListHighlighted = new EthereumEventLog(\n    'ListHighlighted(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('user', ADDRESS)\n    );\n\nexport const ListUnhighlighted = new EthereumEventLog(\n    'ListUnhighlighted(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('user', ADDRESS)\n    );\n\nexport const ListFavorited = new EthereumEventLog(\n    'ListFavorited(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('user', ADDRESS)\n    );\n\nexport const ListUnfavorited = new EthereumEventLog(\n    'ListUnfavorited(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('user', ADDRESS)\n    );\n\nexport const ListDeleted = new EthereumEventLog(\n    'ListDeleted(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    new EthereumTopic('user', ADDRESS)\n    ],\n    );\n\nexport const NewWallpaper = new EthereumEventLog(\n    'NewWallpaper(address,bytes32,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('wallpaperHash', IPFS_HASH),\n     new EthereumTopic('thumbnailHash', IPFS_HASH)\n    ]);\n\nexport const DefaultWallpaper = new EthereumEventLog(\n    'DefaultWallpaper(address,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('wallpaperHash', IPFS_HASH)\n    ]);\n\nexport const NewPack = new EthereumEventLog(\n    'NewPack(address,bytes32,bytes32,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('packHash', IPFS_HASH),\n     new EthereumTopic('previousHash', IPFS_HASH)\n    ],\n     new EthereumTopic('title', BYTES_32)\n);\n\nexport const PackHasContent = new EthereumEventLog(\n    'PackHasContent(bytes32,bytes32)',\n    [new EthereumTopic('packHash', IPFS_HASH),\n     new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n);\n\nexport const UserLeftGuild = new EthereumEventLog(\n    'UserLeftGuild(uint256,address)',[\n     new EthereumTopic('guildId', INT_32),\n    ],\n    new EthereumTopic('user', ADDRESS),\n);\n\nexport const NewScript = new EthereumEventLog(\n    'NewScript(address,bytes32,bytes32,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('scriptHash', IPFS_HASH),\n     new EthereumTopic('scriptType', BYTES_32)\n    ],\n     new EthereumTopic('title', BYTES_32)\n);\n\nexport const NewCreatorProject = new EthereumEventLog(\n    'NewCreatorProject(address,uint256,bytes32,uint256,string)',\n    [\n        new EthereumTopic('creator', ADDRESS),\n        new EthereumTopic('projectId', UINT_256),\n        new EthereumTopic('contentHash', IPFS_HASH)\n    ],\n    new EthereumTopic('maxInvocations', UINT_256),\n    new EthereumTopic('title', STRING)\n);\n\nexport const NewTokenSeed = new EthereumEventLog(\n    'NewTokenSeed(uint256,uint256,bytes32)',\n    [\n        new EthereumTopic('projectId', UINT_256),\n        new EthereumTopic('tokenId', UINT_256)\n    ],\n    new EthereumTopic('seedHash', BYTES_32)\n);\n\nexport const ZoraProject = new EthereumEventLog(\n    'ZoraProject(bytes32,uint256)',\n    [\n        new EthereumTopic('projectHash', IPFS_HASH),\n        new EthereumTopic('zoraId', UINT_256)\n    ]);\n\nexport const AccountAuthorized = new EthereumEventLog(\n    'AccountAuthorized(address,address,string,uint8,bytes32,bytes32)',\n    [\n        new EthereumTopic('zequencerAddress', ADDRESS),\n        new EthereumTopic('walletAddress', ADDRESS),\n    ],\n    new EthereumTopic('message', STRING),\n    new EthereumTopic('v', INT_8),\n    new EthereumTopic('r', BYTES_32_ENCRYPTED),\n    new EthereumTopic('s', BYTES_32_ENCRYPTED)\n);\n\nexport const PluginCreated = new EthereumEventLog(\n    'PluginCreated(uint256,address,string)',\n    [\n        new EthereumTopic(\"tokenId\", UINT_256),\n        new EthereumTopic(\"creator\", ADDRESS),\n    ],\n    new EthereumTopic(\"name\", STRING)\n);\n\nexport const NewPluginVersion = new EthereumEventLog(\n    'NewPluginVersion(uint256,uint256,bytes32,string)',\n    [\n        new EthereumTopic(\"tokenId\", UINT_256),\n        new EthereumTopic(\"versionNumber\", UINT_256),\n    ],\n    new EthereumTopic(\"pluginContentHash\", IPFS_HASH),\n    new EthereumTopic(\"pluginMetadataURI\", STRING)\n);\n\nexport const ProjectHasArrangement = new EthereumEventLog(\n    'ProjectHasArrangement(bytes32)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n);\n\nexport const ProjectBPM = new EthereumEventLog(\n    'ProjectBPM(bytes32,int16)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n    new EthereumTopic(\"bpm\", UINT_256),\n);\n\nexport const ProjectVisuals = new EthereumEventLog(\n    'ProjectVisuals(bytes32,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n    new EthereumTopic(\"thumbnailhash\", IPFS_HASH),\n);\n\nexport const ProjectUsesPreset = new EthereumEventLog(\n    'ProjectUsesPreset(bytes32,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n    new EthereumTopic(\"presetHash\", IPFS_HASH),\n);\n\nexport const ProjectPatternsCount = new EthereumEventLog(\n    'ProjectPatternsCount(bytes32,int8)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n    new EthereumTopic(\"patterns\", UINT_256),\n);\n\nexport const NewSporeCreated = new EthereumEventLog(\n    'NewSporeCreated(uint256,uint256,address,address,bytes32,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"sporeId\", UINT_256),\n    new EthereumTopic(\"tokenId\", UINT_256),\n    new EthereumTopic(\"proxy\", ADDRESS),\n    new EthereumTopic(\"creator\", ADDRESS),\n    new EthereumTopic(\"sporeHash\", IPFS_HASH),\n    new EthereumTopic(\"dataHash\", IPFS_HASH),\n);\n\nexport const NewChainCreated = new EthereumEventLog(\n    'NewChainCreated(uint256,bytes32,address,address,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"chainId\", UINT_256),\n    new EthereumTopic(\"name\", BYTES_32),\n    new EthereumTopic(\"proxy\", ADDRESS),\n    new EthereumTopic(\"creator\", ADDRESS),\n    new EthereumTopic(\"chainHash\", IPFS_HASH),\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import {SampleTagged} from 'decentralized/EthereumEvents.js';\nimport {web3, web3WSS} from './web3.js';\nimport {SampleYoutube} from 'decentralized/EthereumEvents.js';\nimport {STRING} from 'decentralized/EthereumDataTypes.js';\nconst metamaskInstalled = typeof window.web3 !== 'undefined';\n\nclass EthereumQuery {\n    constructor(address) {\n        this.address = address;\n        this.distinct = false;\n        this.selectStatements = [];\n        this.whereClauses = [];\n        this.groupBy = [];\n        this.joinClauses = [];\n        this.limitSize = undefined;\n        this.fromBlockNumber = '0x2';\n        this.toBlockNumber = undefined;\n    }\n\n    from(eventLog) {\n        this.eventLog = eventLog;\n        return this;\n    }\n\n    select(arg) {\n        this.selectStatements.push(arg);\n        return this;\n    }\n\n    // only selects distinct items in the select clause\n    distinct() {\n        this.distinct = true;\n        return this;\n    }\n\n    groupBy(col) {\n        this.groupBy.push(col);\n        return this;\n    }\n\n    where(name, value) {\n        this.whereClauses.push(new WhereClause(name, value));\n        return this;\n    }\n\n    whereIn(name, valueList) {\n        this.whereClauses.push(new WhereClause(name, undefined, valueList));\n        return this;\n    }\n\n    join(event, field) {\n        this.joinClauses.push(new JoinClause(event, field));\n    }\n\n    fromBlock(fromBlock) {\n        this.fromBlockNumber = web3.utils.toHex(fromBlock);\n        return this;\n    }\n\n    toBlock(toBlock) {\n        this.toBlockNumber = web3.utils.toHex(toBlock);\n        return this;\n    }\n\n    limit(limit) {\n        this.limitSize = limit;\n        return this;\n    }\n\n    getTopics() {\n        let topics = [web3.utils.sha3(this.eventLog.event)];\n\n        for (let i in this.eventLog.topics) {\n            let arg = this.eventLog.topics[parseInt(i)];\n            let toAdd = null;\n            for (let j in this.whereClauses) {\n                let whereClause = this.whereClauses[parseInt(j)];\n                if (whereClause.name === arg.name) {\n                    let value = whereClause.value !== undefined ?\n                        whereClause.value : whereClause.valueList[0];\n                    toAdd = arg.convertTo(value);\n                    // console.log(\"where %s = %s / %s\", whereClause.name, value, toAdd);\n                }\n              }\n            topics.push(toAdd);\n        }\n        return topics;\n    }\n\n    executeQuery() {\n        return new Promise((resolve, reject) => {\n            web3.eth.getPastLogs({\n                address: this.address,\n                topics: this.getTopics(),\n                toBlock: this.toBlockNumber,\n                fromBlock: this.fromBlockNumber}, (err, results) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        let parsedResults = [];\n                        results.reverse();\n                        let limit = Math.min(results.length, this.limitSize || results.length);\n                        for (let i=0; i < limit; i++) {\n                            parsedResults.push(this.parseResult(results[i]));\n                        }\n                        resolve(parsedResults);\n                    }\n                });\n        });\n    }\n\n    async watchQuery(callback) {\n        let blockNumber = await web3.eth.getBlockNumber();\n        let web3ToUse = metamaskInstalled ? web3 : web3WSS;\n        web3ToUse.eth.subscribe(\n            'logs',\n            {\n                address: this.address,\n                topics: this.getTopics(),\n                fromBlock: web3.utils.toHex(blockNumber),\n            },\n            (err, result) => {\n                if (err) {\n                    console.log('error watching ');\n                    console.log(err);\n                }\n                let ret = this.parseResult(result);\n                console.log('watch query got ');\n                console.log(ret);\n                callback(ret);\n            });\n    }\n\n    parseResult(data) {\n        if (data === undefined || data === null) {\n            return undefined;\n        }\n        let resultSet = {};\n\n        for (let j in this.selectStatements) {\n            let select = this.selectStatements[parseInt(j)];\n            for (let i in this.eventLog.topics) {\n                let field = data.topics[1 + parseInt(i)];\n                let arg = this.eventLog.topics[parseInt(i)];\n                if (arg.name === select) {\n                    // convert field\n                    resultSet[select] = arg.type.convertFrom(field);\n                }\n            }\n            \n            let dataIndexSoFar = 0;\n            for (let fieldIndex in this.eventLog.data) {\n                fieldIndex = parseInt(fieldIndex);\n                let fieldData = this.eventLog.data[fieldIndex];\n                \n                if (fieldData !== undefined) {\n                    if (select == fieldData.name) {\n                        // the data field in ethereum event logs is basically a huge hex string\n                        // divided into 64-length pieces, for each data point.\n                        // Also, it starts with 0x, so we must skip the first 2 characters when\n                        // slicing out the desired data\n                        let d = data.data.slice(2 + dataIndexSoFar, 2 + dataIndexSoFar + fieldData.size);\n                        d = '0x' + d;\n                        \n                        if (fieldData.type == STRING ) {\n                            d = '0x' + data.data.slice(130 + 64*fieldIndex);\n                        } \n                        resultSet[select] = fieldData.convertFrom(d);\n                    }\n                }\n                dataIndexSoFar += fieldData.size;\n                \n            }\n        }\n        \n        resultSet.blockNumber = data.blockNumber;\n        return resultSet;\n    }\n\n    getCopy() {\n        let query = new EthereumQuery(this.address);\n        query.eventLog = this.eventLog;\n        query.selectStatements = [... this.selectStatements];\n        query.joinClauses = [... this.joinClauses];\n        query.groupBy = [... this.groupBy];\n        query.fromBlockNumber = this.fromBlockNumber;\n        query.toBlockNumber = this.toBlockNumber;\n        query.limitSize = this.limitSize;\n        return query;\n    }\n\n    getJson() {\n        return {\n            address: this.address,\n            eventLog: this.eventLog.event,\n            selectStatements: [... this.selectStatements],\n            whereClauses: [... this.whereClauses],\n            joinClauses: [... this.joinClauses],\n            groupBy: [... this.groupBy],\n            fromBlockNumber: web3.utils.hexToNumber(this.fromBlockNumber),\n            toBlockNumber: this.toBlockNumber === undefined ? undefined : web3.utils.hexToNumber(this.toBlockNumber),\n            limitSize: this.limitSize,\n            distinct: this.distinct,\n        };\n    }\n}\n\nclass WhereClause {\n    constructor(argName, argValue, valueList=[]) {\n        this.name = argName;\n        this.value = argValue;\n        this.valueList = valueList;\n    }\n}\n\nclass JoinClause {\n    constructor(event, field) {\n        this.event = event;\n        this.field = field;\n    }\n}\n\nexport default EthereumQuery;\n","import EthereumQuery from './EthereumQuery.js';\nimport {SampleCreated} from './EthereumEvents.js';\nimport BackendQueryRunner from './BackendQueryRunner.js';\n\nconst runner = new BackendQueryRunner();\n\nclass BackendQuery extends EthereumQuery {\n    constructor(address) {\n        super(address);\n    }\n\n    /*\n    async executeQuery() {\n        let queries = [];\n        for (let i in this.whereClauses) {\n            let whereClause = this.whereClauses[i];\n            let {valueList} = whereClause;\n            if (valueList.length > 0) {\n                for (let j in valueList) {\n                    let query = this.getCopy();\n                    query.whereClauses = this.whereClauses.filter(\n                        x =>\n                            x.value !== undefined);\n                    query.where(whereClause.name, valueList[j]);\n                    console.log('making of copy = ', this.getJson(), query.getJson());\n                    queries.push(query);\n                }\n            } \n        }\n\n        if (queries.length === 0) {\n            return super.executeQuery();\n        }\n        console.log('queries = ', queries);\n\n        let results  = [];\n        for (let i in queries) {\n            results = [... results, ... await queries[i].executeQuery(true)];;\n        }\n        return results;\n    }\n    */\n\n    executeQuery(useBackend=true) { \n        return new Promise((resolve, reject) => {\n            if (window.isNFT) {\n                // thenn we dont have a query\n                return resolve([]);\n            }\n            runner.submit(this.getJson())\n                .then(resolve);\n        });\n    }\n}\n\nexport default BackendQuery;\n","/**\n * Blocking query\n */\nconst MAX_QUERIES = 4;\nconst SLEEP_TIME = 20;\n\nclass BackendQueryRunner {\n    constructor() {\n        this.runningQueries = new Set();\n    }\n\n    submit(queryJson) {\n        return new Promise(async (resolve, reject) => {\n            while (this.runningQueries.size >= MAX_QUERIES) {\n                await this.sleep(SLEEP_TIME);\n            }\n\n            this.runningQueries.add(queryJson);\n\n            let url = \"/search\";\n            if (window.spores) {\n                url = \"https://zequencer.io\" + url;\n            }\n            fetch(url , {\n                method: 'POST',\n                body: JSON.stringify(queryJson),\n                \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                }\n            })\n                .then(resp => resp.json())\n                .then(resp => {\n                    this.removeQuery(queryJson);\n                    resolve(resp || []);\n                })\n                .catch(err => {\n                    console.log(err);\n                    this.removeQuery(queryJson);\n                });\n        });\n    }\n\n    removeQuery(queryJson) {\n        this.runningQueries.delete(queryJson);\n    }\n\n    sleep(time) {\n        return new Promise((resolve, reject) => {\n            setTimeout(resolve, time);\n        });\n    }\n}\n\nexport default BackendQueryRunner;\n","export default class SporeContract {\n    constructor() {\n        this.abi = [\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"sporeHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"dataHash\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"message\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"v\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"r\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"s\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"newSpore\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"NewSporeCreated\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"message\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"v\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"r\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"s\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"verifyString\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"signer\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"pure\",\n\t\t\"type\": \"function\"\n\t}\n        ];\n\n        \n        this.contractAddress = '0x335355fc5F5Fd3fC1b307d8468275f402C8B6dB2';\n    }\n\n    getContract(web3) {\n        return new web3.eth.Contract(this.abi, this.contractAddress);\n    }\n}\n\t\n\n","/*\n    This file is part of Universal Sequencer.\n    Universal Sequencer is free software: you can redistribute it and/or modif\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Universal Sequencer is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport Tone from 'tone';\nimport ipfsClient from 'decentralized/Ipfs.js';\nvar bufferToArrayBuffer = require('buffer-to-arraybuffer');\n\nclass AudioUnit {\n    constructor(context=Tone.Master.context) {\n        this.duration = 0;\n        this.source = undefined;\n        this.buffer = undefined;\n        this.playbackRate = 1;\n        this.looping = false;\n        this.playSound.bind(this);\n        this.context = context;\n        this.seek.bind(this);\n        this.stopSound.bind(this);\n    }\n\n    dispose() {\n        if (this.source !== undefined) {\n            this.source.disconnect();\n        }\n        this.buffer = undefined;\n        this.source = undefined;\n    }\n\n    getContext() {\n        return this.context;\n    }\n\n    playSound(x, duration) {\n        if (x == undefined) {\n            x = 0;\n        }\n        if (this.source != undefined) {\n            this.source.stop();\n        }\n        this.source = Tone.Master.context.createBufferSource(); // creates a sound source\n        this.source.connect(Tone.Master.context.destination);       // connect the source to the context's destination (the speakers)\n        this.source.buffer = this.buffer;\n        this.source.playbackRate.value = this.playbackRate;\n        this.source.loop = false;\n        this.source.start(0, Math.max(0, x), duration);\n    }\n\n    seek(x) {\n        this.stopSound();\n        this.playSound(x);\n    }\n\n    stopSound() {\n        if (this.source != undefined) {\n            this.source.stop();\n        }\n    }\n\n    loadRawBuffer(buffer) {\n        this.buffer = buffer;\n        this.duration = buffer.duration;\n    }\n    \n    setBuffer(buffer) {\n        this.buffer = buffer;\n        this.duration = buffer.duration;\n    }\n}\n\nexport default AudioUnit;\n\n","import SporeContract from \"decentralized/contracts/SporeContract.js\";\nimport axios from 'axios';\nimport AudioUnit from 'engine/audio.js';\nimport Tone from 'tone';\nimport BackendQuery from \"decentralized/BackendQuery.js\";\nimport {NewSporeCreated} from \"decentralized/EthereumEvents.js\"\nimport ipfs from 'decentralized/Ipfs.js';\nconst bufferToArrayBuffer = require('buffer-to-arraybuffer');\n\nexport const getAllSpores = async (tokenId) => {\n\n   let query = new BackendQuery(new SporeContract().contractAddress)\n        .from(NewSporeCreated);\n    let results = await query.executeQuery();\n    for (let result of results) {\n        if (result.sporeId === 4) {\n            result.tokenId = 3;\n        }\n    }\n    if (tokenId !== undefined) {\n        results = results.filter(x => (x.tokenId === null && tokenId === 1) || x.tokenId === tokenId);\n    }\n    return results;\n};\n\nexport const getLatestSpore = async (spore, tokenId, setSporeMetadata) => {\n    let query = new BackendQuery(new SporeContract().contractAddress)\n        .from(NewSporeCreated);\n\n    if (spore) {\n        query.where(\"sporeId\", spore.sporeId);\n    }\n\n    let results = await query.executeQuery();\n    console.log(\"RESULTS=\", results, spore, query);\n    for (let result of results) {\n        if (result.sporeId === 4) {\n            result.tokenId = 3;\n        }\n    }\n    if (tokenId !== undefined) {\n        results = results.filter(x => (x.tokenId === null && tokenId === 1) || x.tokenId === tokenId);\n    }\n    if (results.length === 0) {\n        return null;\n    }\n    let latest = results[0];\n\n    setSporeMetadata(latest);\n\n    let sporeHash = latest.sporeHash;\n    let dataHash = latest.dataHash;\n\n\n    let dateA = new Date().getTime();\n    let blob = await ipfs.getSound(sporeHash, 10000000);\n    let dateB = new Date().getTime();\n    let audioBuffer = await Tone.Master.context.decodeAudioData(bufferToArrayBuffer(blob));\n    let player = new AudioUnit(Tone.Master.context);\n    player.setBuffer(audioBuffer);\n    let ret = {\n        audioUnit: player, \n        audioBuffer,\n        ... latest\n    };\n\n    if (dataHash) {\n        console.log(\"data hash=\", dataHash);\n        ret.heat = await ipfs.getJson(dataHash);\n    }\n    return ret; \n};\n\nexport const pinAll = async () => {\n    let query = new BackendQuery(new SporeContract().contractAddress)\n        .from(NewSporeCreated);\n\n    let results = await query.executeQuery();\n    for (let result of results) {\n        await saveOnPinata(result.sporeHash);\n    }\n\n};\n\nconst saveOnPinata = (hash) => {\n    return new Promise((resolve) => {\n    const url = `https://api.pinata.cloud/pinning/pinByHash`;\n    axios\n        .post(url, \n            {\n                hashToPin: hash,\n            },\n              {\n            headers: {\n                pinata_api_key: '819763bfd08f709bc8f1',\n                pinata_secret_api_key: '48cd285bcb2a634fa7d1ae033779793c655baf3faa1fc68bf235b1f15f8549a1'\n            }\n        })\n        .then(function (response) {\n            resolve();\n            //handle your response here\n        })\n        .catch(function (error) {\n            //handle error here\n        });\n    });\n};\n","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport PulseLoader from 'react-spinners/PulseLoader'\nconst WIDTH = 390;\n\nconst UnknownProgressBar = ({\n    text,\n    className=\"\",\n    width=WIDTH,\n    intervalTime=100,\n    intervalPiece=10}) => {\n    let [loadingProgress, setLoadingProgress] = useState(0);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setLoadingProgress(x => (x + intervalPiece) % 100);\n        }, intervalTime);\n        return () => clearInterval(interval);\n    }, []);\n    \n    let style = {\n        width: width * loadingProgress / 100.0\n    };\n    return (\n        <div className={\"progress-bar \" + className}>\n          <div className=\"inner-progress-bar\">\n          <div className=\"progress\" style={style}/>\n            <div className=\"loading-text\">\n              {text} ...\n            </div>\n          </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props)=> {\n    return {\n    };\n};\n\n\nexport default connect(mapStateToProps, null)(UnknownProgressBar);\n","import React, { useEffect, useRef, useCallback, useState} from 'react';\nimport AudioPlayer from './AudioPlayer.js';\nimport BackendQuery from \"decentralized/BackendQuery.js\";\nimport {connect} from 'react-redux';\nimport {getLatestSpore} from './getSpores.js';\nimport UnknownProgressBar from \"components/progressbar/UnknownProgressBar.js\";\n\nconst links = {\n    1: \"https://opensea.io/assets/0x7269c1a1b8aba1390770193771f92bd722c6a77b/1\",\n    2: \"https://opensea.io/assets/0x7269c1a1b8aba1390770193771f92bd722c6a77b/2\",\n    3: \"https://opensea.io/assets/0x7269c1a1b8aba1390770193771f92bd722c6a77b/3\",\n    4: \"https://opensea.io/assets/0x7269c1a1b8aba1390770193771f92bd722c6a77b/4\",\n};\nconst SimplePlayer = ({store, audioUnit, selected, tokenId, spore, setShowStemPlayer, setPreset, preset}) => { \n    let [playing, setPlaying] = useState(false);\n    let [latestSpore, setLatestSpore] = useState(undefined);\n    let [sporeMetadata, setSporeMetadata] = useState();\n    let left = useRef(false);\n\n    useEffect(() => {\n        if (audioUnit.current) {\n            audioUnit.current.dispose();\n            audioUnit.current = undefined;\n        }\n        setLatestSpore(undefined);\n        getLatestSpore(selected, tokenId, setSporeMetadata).then((spore) => {\n            if (left.current) {\n                spore.audioUnit.dispose();\n                return;\n            }\n            if (spore) {\n                audioUnit.current = spore.audioUnit;\n            }\n            setLatestSpore(spore);\n        });\n\n        return () => {\n        };\n    }, [setLatestSpore, tokenId, selected, setSporeMetadata]);\n\n    useEffect(() => {\n        return () =>{\n            left.current = true;\n            if (audioUnit.current) {\n                audioUnit.current.dispose();\n            }\n        }\n    }, []);\n\n\n    const goToLink = useCallback(() => {\n        window.open(links[tokenId], '_blank');\n    }, [tokenId]);\n\n    let className = \"simple-player\";\n    if (!latestSpore) {\n        className += \" hide\";\n    }\n    return (\n        <div className={className}>\n          {latestSpore === null ? <div\n                                    className=\"no-spores\">No spores have been made yet.</div> :\n           <div>\n             {!latestSpore && <UnknownProgressBar intervalTime={100} intervalPiece={3} text={selected ? \"Loading Spore #\" + selected.sporeId : \"Loading Latest Spore\"}/>}\n             {sporeMetadata &&\n              <AudioPlayer\n                store={store}\n                spore={latestSpore}\n                setPreset={setPreset}\n                sporeMetadata={sporeMetadata}\n                preset={preset}\n                saturation={80}\n                heat={latestSpore && latestSpore.heat}\n                creator={sporeMetadata.creator}\n                audioUnit={latestSpore && latestSpore.audioUnit}/>}\n           </div>}\n        {!selected && <div\n            onClick={() => setShowStemPlayer(true)}\n            className=\"pushable stem-player-button\">\n            Expand Player\n                      </div>}\n          {!selected &&\n           <div\n             onClick={() => goToLink()}\n             className=\"pushable stem-player-button view-on-opensea\">\n           {links[tokenId] ? <div>\n               OpenSea <span>↗</span>\n                             </div> : \"Soon\"}\n           </div>}\n          {selected &&\n           <div className=\"stem-player-button mint-spore\">\n             Mint Spore\n             <div className=\"spore-tooltip\">\n               to mint, you must own a spore player\n             </div>\n           </div>}\n       </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SimplePlayer);\n","class LStorage {\n    constructor() {\n    }\n\n    setItem(a,b) {\n        if (window.isNFT) {\n            return;\n        }\n        return window.localStorage.setItem(a,b);\n        \n    }\n\n    removeItem(a) {\n        if (window.isNFT) {\n            return;\n        }\n        window.localStorage.removeItem(a);\n    }\n\n    getItem(a) {\n        if (window.isNFT) {\n            return null;\n        }\n        return window.localStorage.getItem(a);\n    }\n}\n\nexport const lstorage = new LStorage();\n","import {web3} from 'decentralized/web3.js';\nimport {lstorage} from 'utils/lstorage.js';\n\nlet cache = {};\n\nexport const getBlockDate = async (blockNumber) => {\n    let storage = lstorage;\n    if (storage.getItem('blockDate.' + blockNumber)) {\n        return new Date(storage.getItem('blockDate.' + blockNumber) * 1000);\n    }\n    if (blockNumber === undefined) {\n        return undefined;\n    }\n    let block = await web3.eth.getBlock(blockNumber);\n    if (block === null) {\n        return new Date();\n    }\n    let date = new Date(block.timestamp * 1000);\n    storage.setItem('blockDate.' + blockNumber, block.timestamp);\n    return date;\n}\n\n \n","import React, { useEffect, useCallback, useState} from 'react';\nimport SporeHeatMap from './SporeHeatMap.js';\nimport {formatDate} from 'utils/formatDate.js';\nimport {truncate} from './AudioPlayer.js';\nimport {connect} from 'react-redux';\nimport ipfs from 'decentralized/Ipfs.js';\nimport {getBlockDate} from 'utils/getBlockDate.js';\n\nconst CLOSER = 60*48*60*1000;\nconst CLOSER_MIN = 60*60*1000;\nconst _formatDate = (date) => {\n    let dist = new Date().getTime() - date.getTime() \n    if (dist < CLOSER_MIN) {\n        return `${Math.round(dist / 1000 / 60 )} min. ago`;\n    } else if (dist < CLOSER) {\n        let hours = Math.round(dist / 1000 / 60 / 60);\n        if (hours === 1) {\n            return `${hours} hours ago`;\n        }\n        return `${hours} hour ago`;\n    }\n    return formatDate(date);\n};\n\nconst SporeItem = ({spore, isSelected, setSelected}) => { \n    let [date, setDate] = useState();\n    let [heat, setHeat] = useState();\n    useEffect(() => {\n        getBlockDate(spore.blockNumber).then(setDate);\n    }, [spore]);\n\n    useEffect(() => {\n        ipfs.getJson(spore.dataHash).then(\n            setHeat);\n    }, [spore]);\n\n    return (\n        <div\n          onClick={() => {\n              ipfs.cancel();\n              setSelected(spore);\n          }}\n          className={isSelected ? \"spore-item selected\" : \"spore-item\"}>\n          <div className=\"spore-id\">\n            Spore #{spore.sporeId}\n          </div>\n          <SporeHeatMap heat={heat}/>\n          {/*<div className=\"hyphen\"/>*/}\n          <div className=\"spore-creator\">\n            {truncate(spore.creator)}\n          </div>\n          <div className=\"spore-date\">\n            {date && _formatDate(date)}\n          </div>\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SporeItem);\n","export function formatDate(date) {\n    return (date.getMonth() + 1) + '/' + date.getDate();\n}\n\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport SimplePlayer from \"components/spore/SimplePlayer.js\";\nimport {useConsumeWheel} from \"components/hooks/useConsumeWheel.js\"\nimport SporeItem from './SporeItem.js';\nimport {getAllSpores} from './getSpores.js';\nimport {connect} from 'react-redux';\n\nconst SporesView = ({store, setShowStemPlayer, tokenId, audioUnit, preset, setPreset}) => { \n    let [spores, setSpores] = useState([]);\n    let ref = useRef();\n    let [selected, setSelected] = useState();\n\n    useEffect(() => {\n        getAllSpores(tokenId).then((spores) => {\n            setSpores(spores);\n        });\n    }, [setSpores, tokenId]);\n\n    // useConsumeWheel(ref);\n\n    return (\n        <div className=\"list-and-player\">\n          <div ref={ref} className=\"spores-list\">\n            {spores.length === 0 && <div className=\"no-spores-yet\">No spores have been detected on-chain.</div>}\n            {spores.map(x =>\n                <SporeItem isSelected={x === selected} setSelected={setSelected} spore={x}/>)}\n          </div>\n          {selected &&\n           <SimplePlayer\n             preset={preset}\n             setPreset={setPreset}\n             store={store} audioUnit={audioUnit} selected={selected} setShowStemPlayer={setShowStemPlayer}/>}\n          \n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SporesView);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './recording.scss';\n\nconst RecordingIndicator = (props) => { \n    let [playing, setPlaying] = useState(false);\n\n    useEffect(() => {\n        window.addEventListener(\"message\", onMessage, false);\n    }, [setPlaying]);\n\n    const onMessage = useCallback((e) => {\n        if (e.data && Array.isArray(e.data.type) && e.data.type[0] === \"sequencer.start\") {\n            setPlaying(true);\n        } else if (e.data && Array.isArray(e.data.type) && e.data.type[0] === \"sequencer.stop\") {\n            setPlaying(false);\n        }\n    }, [setPlaying]);\n\n\n    let className = \" recording-indicator\";\n    if (playing) {\n        className += \" is-recording\";\n    }\n\n    return (<div className={className}>\n            </div>\n           );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecordingIndicator);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\n\nconst Mushroom = ({materials, nodes, mushroomMat, position, scale=0.5}) => { \n    return (\n        <group name=\"mushroom 3\" position={position} rotation={[0.12, 0, 0]} scale={scale}>\n          <mesh\n            name=\"hat\"\n            geometry={nodes.hat.geometry}\n            material={mushroomMat}\n            castShadow\n            receiveShadow\n            position={[109.15, 398.99, 297.3]}\n            scale={[0.49, 1.1, 0.49]}\n          />\n          <mesh\n            name=\"feet\"\n            geometry={nodes.feet.geometry}\n            material={materials.feet}\n            castShadow\n            receiveShadow\n            position={[103.16, 165.95, 307.5]}\n            scale={[0.36, 1, 0.5]}\n          />\n      </group>);\n}\n\nexport default Mushroom;\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\n\nconst Mushroom2 = ({materials, nodes, mushroomMat, position, scale=1}) => { \n    return (\n        <group name=\"mushroom1\" position={position} rotation={[0.12, 0, 0]} scale={scale}>\n          <mesh\n            name=\"top1\"\n            geometry={nodes.top1.geometry}\n            material={mushroomMat}\n            castShadow\n            receiveShadow\n            position={[-97.07, -4.34, 14.33]}\n          />\n          <mesh\n            name=\"bottom1\"\n            geometry={nodes.bottom1.geometry}\n            material={nodes.bottom1.material}\n            castShadow\n            receiveShadow\n            position={[-97.07, -4.34, 14.33]}\n          />\n        </group>);\n}\n\nexport default Mushroom2;\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\n\nconst Mushroom3 = ({materials, nodes, mushroomMat, position, scale=1}) => { \n    return (\n        <group name=\"mushroom2\" position={position} rotation={[0.12, 0, 0]} scale={scale}>\n          <mesh\n            name=\"top2\"\n            geometry={nodes.top2.geometry}\n            material={mushroomMat}\n            castShadow\n            receiveShadow\n            position={[7.16, 13.06, 3.97]}\n          />\n          <mesh\n            name=\"bottom2\"\n            geometry={nodes.bottom2.geometry}\n            material={nodes.bottom2.material}\n            castShadow\n            receiveShadow\n            position={[7.16, 13.06, 3.97]}\n          />\n        </group>);\n}\n\nexport default Mushroom3;\n","import * as THREE from 'three'\nimport {isMobile} from 'react-device-detect';\nimport useSpline from '@splinetool/r3f-spline'\nimport { OrthographicCamera } from '@react-three/drei'\nimport React, { useRef } from 'react'\nimport Mushroom from './Mushroom.js';\nimport Mushroom2 from './Mushroom2.js';\nimport Mushroom3 from './Mushroom3.js';\n\nexport default function Scene({ ...props }) {\n  const { nodes, materials } = useSpline('https://prod.spline.design/4CF6xEKxsHbnQn4O/scene.splinecode')\n  const sceneCamera = useRef()\n\n  const textureLoader = new THREE.TextureLoader();\n  const threeTone = textureLoader.load( 'threeTone.jpg' );\n  threeTone.minFilter = THREE.NearestFilter;\n  threeTone.magFilter = THREE.NearestFilter;\n\n  const mushroomMat = new THREE.MeshToonMaterial( { color: 0x049EF4, gradientMap: threeTone });\n\n  window.addEventListener(\"message\", receiveMessage, false);\n  function receiveMessage(event) {\n    if (event.origin !== \"https://zequencer.mypinata.cloud\") {\n      return;\n    } else {\n      var message = event.data;\n\n      if (Array.isArray(message)) {\n        if (message.length == 4) {\n          mushroomMat.color.r = message[3]\n          mushroomMat.color.g = message[1]\n          mushroomMat.color.b = message[0]\n          mushroomMat.color.addScalar(0.25 * message[2])\n        }\n      }\n    }\n  }\n\n  return (\n    <>\n      <group {...props} dispose={null}>\n        <Mushroom position={[145, -100, 0]} mushroomMat={mushroomMat} nodes={nodes} materials={materials} />\n        <Mushroom3 position={[-110, -50, 0]} scale={2} mushroomMat={mushroomMat} nodes={nodes} materials={materials} />\n        <Mushroom3 position={[110, -90, 0]} scale={1.5} mushroomMat={mushroomMat} nodes={nodes} materials={materials} />\n\n        <Mushroom2 position={[100, 0, 0]} scale={1} mushroomMat={mushroomMat} nodes={nodes} materials={materials} />\n        <Mushroom3 position={[20, -25, -190]} scale={1} mushroomMat={mushroomMat} nodes={nodes} materials={materials} />\n\n        <Mushroom position={[45, 10, -190]} scale={0.1} mushroomMat={mushroomMat} nodes={nodes} materials={materials} />\n        <Mushroom2 position={[-20, 25, -290]} scale={0.7} mushroomMat={mushroomMat} nodes={nodes} materials={materials} />\n        <directionalLight\n          name=\"Directional Light\"\n          castShadow\n          intensity={1}\n          shadow-mapSize-width={1024}\n          shadow-mapSize-height={1024}\n          shadow-camera-near={1}\n          shadow-camera-far={2500}\n          shadow-camera-left={-1250}\n          shadow-camera-right={1250}\n          shadow-camera-top={1250}\n          shadow-camera-bottom={-1250}\n          position={[-461.22, 260.59, 1269.06]}\n        />\n       <OrthographicCamera\n          name=\"Personal Camera\"\n          ref={sceneCamera}\n          makeDefault={true}\n          far={100000}\n          near={-100000}\n          position={[0, 0, 1000]}\n          zoom={isMobile ? .15 : .27}\n        />\n        <hemisphereLight name=\"Default Ambient Light\" intensity={1} color=\"#eaeaea\" position={[0, 1, 0]} />\n      </group>\n    </>\n  )\n}\n","import React, {useCallback} from 'react';\nimport {connect} from 'react-redux';\nimport { EffectComposer, Bloom } from '@react-three/postprocessing'\nimport { Suspense } from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport { OrbitControls } from '@react-three/drei'\nimport Scene from './Scene'\nimport { KernelSize } from 'postprocessing'\nimport './styles.scss';\nimport {setShowPlaylistMenu} from 'actions/index.js';\n\nconst App = ({setShowPlaylistMenu, showPlaylistMenu}) => {\n    const onClick = useCallback((e) => {\n        setShowPlaylistMenu(!showPlaylistMenu);\n    }, [showPlaylistMenu]);\n\n  return (\n    <Suspense fallback={null}>\n      <div\n        onClick={onClick}\n        className='canvas-container'>\n        <Canvas\n          shadows flat linear>\n          <EffectComposer>\n            <Bloom\n              intensity={0.85}\n              kernelSize={KernelSize.LARGE}\n              luminanceThreshold={0.01}\n              luminanceSmoothing={0.5}\n            />\n          </EffectComposer>\n          <Scene />\n          <OrbitControls enableZoom={false} enableRotate={false} enablePan={false}/>\n        </Canvas>\n      </div>\n    </Suspense>\n  )\n}\nconst mapStateToProps = (state, props) => {\n  return {\n      showPlaylistMenu: state.playlist.showPlaylistMenu\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setShowPlaylistMenu: x => dispatch(setShowPlaylistMenu(x))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport SporePlaylist from \"components/playlist/SporePlaylist.js\";\nimport RecordingIndicator from 'components/buttons/RecordingIndicator.js';\nimport App from 'components/SP-2D/App.js';\nimport {connect} from 'react-redux';\n\nlet players = {\n    // LUXURY\n    /*\n    1: \"https://zequencer.mypinata.cloud/ipfs/QmU4WDJwh2Ya6jqt8hXMvWdpWmt5Afq9LrmbKbgbevY3oQ/?tokenId=1\", // SMOKE LUXURY\n    2: \"https://zequencer.mypinata.cloud/ipfs/QmP5o4XjJGikxKw1KkDCgmgmxwwCkNFKezZFPyzWPPpNax/?tokenId=2\",\n    3: \"https://zequencer.mypinata.cloud/ipfs/QmYBEvQD3GqEU8Wzd6kCCEBeRjXvVJgecP4MMn3HCmcA8U/?tokenId=3\",\n    4: \"https://zequencer.mypinata.cloud/ipfs/QmWtqt2UAj8mJaxT2gztD22gBELPNsBpsrnSvhngMMP28d/?tokenId=4\",\n    5: \"https://zequencer.mypinata.cloud/ipfs/QmSaawSKPp5E27Rw72crmLwuAk5UkoHJWMCM9eK9WekiKe/?tokenId=5\",\n    6: \"https://zequencer.mypinata.cloud/ipfs/QmRCyZfaPevNRrxbExgtykHka1Tf1UjKf5C2c6z2PoVTDZ/?tokenId=6\",\n    */\n    \"jeremih\": \"https://zequencer.mypinata.cloud/ipfs/QmeVr2geKp8Z2SX3awdp3JWy4rKNvXKfPq3mToouXhfwcy/?tokenId=666\",\n    \"doodles1\": \"https://zequencer.mypinata.cloud/ipfs/QmWzLQzUsZ2jquJ54HhckXoX9sNBrYWp13NWQDJfGY5pk1/?tokenId=666\",\n    \"doodles2\": \"https://zequencer.mypinata.cloud/ipfs/QmWryrHhY6WickEfKDBHQMv2WPwCGqKp1zwZk5kXGRHNbN/?tokenId=666\",\n    \"ragnarok\": \"https://zequencer.mypinata.cloud/ipfs/QmVquHENE1Dcyq839ajJWRuBHttvuiT5WvcLbqwoEbVvDa/?tokenId=666\",\n    // colors:\n    /*\n    1: \"https://zequencer.mypinata.cloud/ipfs/QmPV4fERYfcESR5aguCUGCwUhLPJWL45ZBvwgXoBD8xmNh/?tokenId=1\",\n    2: \"https://zequencer.mypinata.cloud/ipfs/QmPLV5GuxQuzZoD5MizDd1AzfgoDRUt7gzm8B2VfAVhqA6/?tokenId=2\",\n    3: \"https://zequencer.mypinata.cloud/ipfs/QmSY5bybSoRxkJxaenK4r3VRCci9nZqz3QvonZCWzaqWAV/?tokenId=3\",\n    4: \"https://zequencer.mypinata.cloud/ipfs/QmWtqt2UAj8mJaxT2gztD22gBELPNsBpsrnSvhngMMP28d/?tokenId=4\",\n    5: \"https://zequencer.mypinata.cloud/ipfs/QmSaawSKPp5E27Rw72crmLwuAk5UkoHJWMCM9eK9WekiKe/?tokenId=5\",\n    6: \"https://zequencer.mypinata.cloud/ipfs/QmXBLreHXuW3dj9UxtdrktVrUr64TuTSEFBNQ323CKpxHc/?tokenId=6\"\n    */\n    // SLIDER CALIBRATION\n    //1: \"https://zequencer.mypinata.cloud/ipfs/QmNciiSvquyNLpy2Uq6PSKW3k82UHb3UbSbe9tUMKa9S5L/?tokenId=1\",\n    //2: \"https://zequencer.mypinata.cloud/ipfs/QmSM8A1o2QsxjK7jdmaAZGML8FtbfJ6osMjvfSudAcGU4Z/?tokenId=2\",\n    //3: \"https://zequencer.mypinata.cloud/ipfs/QmaZki4iZPcMXehtNLMVkggUjZZ29fJZmqaZG7KVppRrdq/?tokenId=3\",\n    //RAINBOW\n    /*\n    1: \"https://zequencer.mypinata.cloud/ipfs/QmWzy4h8nXafokLDtK8aUGnZU7ikBVbNQfVZXYJxRtas2x/?tokenId=1\",\n    2: \"https://zequencer.mypinata.cloud/ipfs/QmNevpN2mqWhZzFQGHDENbLQSPJeGRv9aL2JT9bh4cBeBm/?tokenId=2\",\n    3: \"https://zequencer.mypinata.cloud/ipfs/QmbNqiGkNPgwQvZzo7CevedRhig8eD7P3PtKNCZgAutfBu/?tokenId=3\",\n    */\n    //UNIT CIRCLE\n    //1: \"https://zequencer.mypinata.cloud/ipfs/Qmdx16tRNijEMMU3U1aocBHfQRi8Lf8R2zPcPQEtBewGVP/?tokenId=1\",\n    //1: \"https://zequencer.mypinata.cloud/ipfs/QmXk1VHJLJjxsEVwHFicYgTbs1BCiWf4vFxxdgeZTNUY6q/?tokenId=1\",\n    //2: \"https://zequencer.mypinata.cloud/ipfs/QmVubUHozCNQPD9ExCnBgd3Lv7j9xoRXavJpc7apB64g55/?tokenId=2\",\n    //3: \"https://zequencer.mypinata.cloud/ipfs/QmYgH6NV9URi4mnpJVDejtbeQodiCVL2rk9in9yU63Y1tA/?tokenId=3\"\n    //1: \"https://zequencer.mypinata.cloud/ipfs/QmbfvpDvPAH9F1p2jmHDXC52a4ho4bbBeAQ8kqgp25CyUM/?tokenId=1\",\n    //1: \"https://zequencer.mypinata.cloud/ipfs/QmUcPkhq5ZpXfjKTUnwraJG1vDpWmkRYMNVp7yh2vGsD72/?tokenId=1\",\n    //1: \"https://zequencer.mypinata.cloud/ipfs/QmaTizVBjcKG6vsjLQ2qW4B4wYBFJYTsmDkEGXk7V2q8Ri/?tokenId=1\",\n    //1: \"https://zequencer.mypinata.cloud/ipfs/QmY9yhU4WsnXPf28uCQ6n5rm9SzS4QWuNjaJ5cUWp43iNp/?tokenId=1\",\n    //1: \"https://zequencer.mypinata.cloud/ipfs/QmYErgGMEmZLnnP1vAvMKQNMVTPqKJh2WiLETujZXDS2HR/?tokenId=1\",\n    //2: \"https://zequencer.mypinata.cloud/ipfs/QmVoDtvCGKnVdr7jiTBDhmetqZ6sDXM5ufXKxfsrGWB5oi/?tokenId=2\",\n    //2: \"https://zequencer.mypinata.cloud/ipfs/QmTBM3fb6fq4eDQEvAdavaJhfCAf3rfBRoPTsRk6JChFKc/?tokenId=2\",\n    //2: \"https://zequencer.mypinata.cloud/ipfs/QmRbr2iXG5z75LTBXccxF8vKfHzT34ZtrCvPhG5RLXLf57/?tokenId=2\",\n    //\"https://zequencer.mypinata.cloud/ipfs/QmeGU4SzFDPdkv38kwAqWZFSXjiwaw4yb6DaNgmRax56P2/?tokenId=2\",\n    //3: \"https://zequencer.mypinata.cloud/ipfs/QmdmGpP8EwuDweUrcyXoB1HghvuyLFCVbzKrp4YVLGoCh7/?tokenId=3\"\n    //3: \"https://zequencer.mypinata.cloud/ipfs/QmaZXaJfv41yV9SeyiyxHPGmgxbAPktpYBezY9SHMkzD2V/?tokenId=3\",\n            \n    //3: \"https://zequencer.mypinata.cloud/ipfs/QmRYo8dbhz2RsoPHATi2FL81hXoziT2R6zzxHSRhQbHn3S/?tokenId=3\"\n    //3: \"https://zequencer.mypinata.cloud/ipfs/QmbxrsWoPFFjfSgLK6AytVzBnCUwWDTR3J5ApFRh4yZzWD/?tokenId=3\"\n};\nconst StemPlayer = ({tokenId}) => { \n    let ref = useRef();\n\n    useEffect(() => {\n        var root = document.getElementsByTagName( 'html' )[0]; // '0' to assign the first (and only `HTML` tag)\n        root.setAttribute( 'class', 'bad-scroll' );\n        return () => {\n            root.setAttribute( 'class', '' );\n        };\n    }, []);\n\n    let url = tokenId <= 20 ? \"https://zequencer.mypinata.cloud/ipfs/Qmb57sHJC8Zq6AYRPy6gGzqYQpevjRAnPbkqRbJTPt1n4o/?tokenId=\" + tokenId + \"&gallery=true\" : players[tokenId];\n    //let url = tokenId <= 20 ? \"http://localhost:9090/nftviewer/QmTu96UweijKQquvTubt25jAM2SyGDm57T7pbEJT7ADZ33/?tokenId=\" + tokenId + \"&gallery=true\" : players[tokenId];\n\n    window.stemIFrame = ref;\n    return [\n        <App/>,\n        <RecordingIndicator/>,\n        <SporePlaylist/>,\n        (<iframe\n           ref={ref}\n           sandbox=\"allow-scripts allow-same-origin\"\n           //height={600}\n           //width={600}\n           height={tokenId <= 20 ? \"400\" : \"360\"}\n           width={tokenId <= 20 ? \"340\" : \"310\"}\n           aria-describedby=\"spore\"\n           alt=\"spore.vision\"\n           src={url}\n           className=\"zora-mediaObject css-hnzuw7 zora-mediaObject--mediaLoaded zora-mediaObject--isFullPage\"\n           style={{borderWidth: \"0px\"}}>\n         </iframe>)\n    ];\n}\n\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StemPlayer);\n","\nimport ipfs from 'decentralized/Ipfs.js';\nimport {isMobile} from 'react-device-detect';\nimport React, { useRef, useEffect, useCallback, useState} from 'react';\nimport PlayerHelper from './PlayerHelper.js';\nimport Credits from './Credits.js';\nimport Caurosel from './Caurosel.js';\nimport {useConsumeWheel} from \"components/hooks/useConsumeWheel.js\";\nimport SporesView from './SporesView.js';\nimport {pinAll} from './getSpores.js';\nimport {sleep} from 'utils/sleep.js';\nimport {useShader} from './sketch.js';\nimport StemPlayer from './StemPlayer.js';\nimport SimplePlayer from './SimplePlayer.js';\nimport {connect} from 'react-redux';\nimport './spore.scss';\n\nconst Spore = ({setPlayerChosen, playerChosen ,setShowStemPlayer, showStemPlayer, ...props}) => { \n    console.log('store in spore.js =', props.store);\n\n    let [preset, setPreset] = useState();\n    let [uploading, setUploading] = useState();\n\n    let tokenId = props.match && props.match.params.tokenId;\n    if (tokenId) {\n        tokenId = parseInt(tokenId);\n    }\n    let audioUnit = useRef();\n    let [showCredits, setShowCredits] = useState(undefined);\n    //let [playerChosen, setPlayerChosen] = useState(tokenId);\n    //let [showStemPlayer, setShowStemPlayer] = useState(tokenId !== undefined);\n    let [showSpores, setShowSpores] = useState(false);\n    let [s, setS] = useState(false);\n    let [sequencerEngine, setSequencerEngine] = useState();\n    let [canvasBackground, setCanvasBackground]= useState();\n    let [customVideo, setCustomVideo] = useState();\n    let ref = useRef();\n\n //   useEffect(() => {\n//        pinAll();\n  //  }, []);\n\n    useEffect(() => {\n        setShowSpores(false);\n    }, [showStemPlayer, setShowSpores]);\n\n    useEffect(() => {\n        window.addEventListener(\"mousewheel\", preventDefault, {passive: false});\n        return () => window.removeEventListener(\"mousewheel\", preventDefault);\n    }, []);\n\n    useEffect(() => {\n        if (audioUnit.current && audioUnit.current.buffer) {\n            console.log(\"DISPOSING CUZ SHOWING PLAYER\");\n            audioUnit.current.dispose();\n        }\n    }, [showStemPlayer]);\n\n    const preventDefault = (e) => e.preventDefault();\n\n    useEffect(() => {\n        document. title = \"Spores\"\n    }, []);\n\n    //useShader(ref, showStemPlayer);\n\n    let className = \"spore\";\n    if (showStemPlayer) {\n        className += \" showing-spore-player\";\n    }\n    if (showSpores) {\n        className += \" showing-spores\";\n    }\n\n    useEffect(() => {\n        console.log(\"added event\");\n        window.addEventListener(\"drop\", onDrop);\n\n        window.addEventListener(\"dragenter\", function(e) {\n            e.preventDefault();\n            e.dataTransfer.effectAllowed = \"none\";\n            e.dataTransfer.dropEffect = \"none\";\n        }, false);\n        \n        window.addEventListener(\"dragover\", function(e) {\n            e.preventDefault();\n            e.dataTransfer.effectAllowed = \"none\";\n            //e.dataTransfer.dropEffect = \"none\";\n            return false;\n        });\n    }, [setCustomVideo, setUploading]);\n\n    const onDrop = useCallback((ev) => {\n        console.log(\"on Drop called rq\");\n        ev.preventDefault();\n        ev.dataTransfer.effectAllowed = \"none\";\n        ev.dataTransfer.dropEffect = \"none\";\n        \n        if (ev.dataTransfer.items) {\n            // Use DataTransferItemList interface to access the file(s)\n            let len = ev.dataTransfer.items.length;\n            for (var i = 0; i < ev.dataTransfer.items.length; i++) {\n                // If dropped items aren't files, reject them\n                if (ev.dataTransfer.items[i].kind === 'file') {\n                    setUploading(true);\n                    uploadFile(ev.dataTransfer.items[i].getAsFile(), setCustomVideo);\n                }\n            }\n        }\n    }, [setCustomVideo, setUploading]);\n          \n    return (\n        <div\n          onDrop={onDrop}\n          ref={ref} className={className}>\n          <video\n            playsInline\n            className=\"rain-video\"\n            autoPlay\n            loop\n            src={customVideo ? customVideo : isMobile ? \"/mobile-rain.mp4\" : \"/desktop-rain.mp4\"}/>\n          {showCredits && (showStemPlayer ? <PlayerHelper clear={() => setShowCredits(undefined)}/> : <Credits setShowCredits={setShowCredits}/>)}\n          {<Caurosel showStemPlayer={showStemPlayer || showSpores}\n                     setShowStemPlayer={(x) => {\n                         setShowStemPlayer(x);\n                         setShowSpores(x);\n                     }}\n                     playerChosen={playerChosen} setPlayerChosen={setPlayerChosen}/>}\n          {(playerChosen && !showStemPlayer && showSpores) && <SporesView\n                                                                setPreset={setPreset}\n                                                                preset={preset}\n                                                                store={props.store}\n                                                                audioUnit={audioUnit}\n                                                                tokenId={playerChosen} setShowStemPlayer={setShowStemPlayer}/>}\n          {playerChosen && !showSpores && (showStemPlayer ? <StemPlayer tokenId={playerChosen}/> :\n                                           <SimplePlayer\n                                             setPreset={setPreset}\n                                             preset={preset}\n                                             store={props.store}\n                                             audioUnit={audioUnit}\n                                             tokenId={playerChosen} setShowStemPlayer={setShowStemPlayer}/>)}\n          {playerChosen && (showSpores || showStemPlayer) &&\n           <div\n             onClick={() => {\n                 setShowStemPlayer(false);\n                 setShowSpores(false);\n             }}\n             className=\"spore-button pushable stem-player-button\">\n             See Latest Spore\n             <img className=\"spore-icon one-spore\" src=\"/one-spore.svg\"/>\n           </div>}\n          {playerChosen && !showSpores && !showStemPlayer &&\n           <div\n             onClick={() => setShowSpores(true)}\n             className=\"spore-button pushable stem-player-button\">\n             See All Spores <img className=\"spore-icon\" src=\"/spores-icon-glow2.svg\"/>\n           </div>}\n          <div onClick={() => setShowCredits(true)} className=\"explainer-button\">\n            ?\n          </div>\n        </div>\n    );\n};\n\nconst uploadFile = (file, setter) => {\n    let reader = new FileReader();\n    if (!file.name.includes('.mp4')) {\n        window.alert(\"Only accepts .mp4\");\n        return;\n    }\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = async () => {\n        let raw = reader.result;\n        let hash = await ipfs.addArrayBuffer(raw);\n        let url = \"https://zequencer.io/ipfs/\" + hash;\n        setter(url);\n    };\n};\n          \nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Spore);\n","import React from 'react';\nimport * as THREE from \"three\";\nimport useSpline from '@splinetool/r3f-spline'\nimport { PerspectiveCamera, Stars, Sparkles } from '@react-three/drei'\nimport { useEffect, useRef } from 'react'\nimport { useFrame } from \"@react-three/fiber\";\n\nexport default function Scene({ scroll, ...props }) {\n  const { nodes, materials } = useSpline('https://prod.spline.design/3Ksr4pXhJtOTxLZG/scene.splinecode')\n  const camera = useRef();\n  const lerpedScroll = useRef(0);\n\n  const curve = new THREE.CatmullRomCurve3([\n    new THREE.Vector3( -2, 0, 195 ), \n    new THREE.Vector3( -2, -15, 30 ),\n    new THREE.Vector3( -2, -100, 50 )\n  ]);\n\n  useEffect(() => {\n    if(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)){\n      camera.current.fov = 60\n    }\n  })\n\n  useFrame(() => {\n    lerpedScroll.current += (scroll.current - lerpedScroll.current) * 0.04;\n    const t = lerpedScroll.current;\n    if (t < 1) {\n      camera.current.position.set(\n        curve.getPointAt(t).x,\n        curve.getPointAt(t).y,\n        curve.getPointAt(t).z\n      );\n    }\n  })\n\n  return (\n    <>\n      <color attach=\"background\" args={['#4b4d52']} />\n      <fog attach=\"fog\" args={['#4b4d52', 73.518, 187.199]} />\n      <group {...props} dispose={null}>\n      <Sparkles count={100} scale={[50,70,40]} size={20} speed={1.5} position={[-2, -75, -5]}/>\n      <Stars radius={350} depth={50} count={5000} factor={8} saturation={1} fade speed={0.5} />\n      <PerspectiveCamera\n          name=\"Personal Camera\"\n          ref={camera}\n          makeDefault={true}\n          far={100000}\n          near={5}\n          fov={45}\n          position={[0,0,200]}\n          rotation={[0.1,0,0]}\n        />\n        <mesh\n          name=\"root 4\"\n          geometry={nodes['root 4'].geometry}\n          material={nodes['root 4'].material}\n          castShadow\n          receiveShadow\n          position={[-39.88, -125.68, -61]}\n          rotation={[-0.43, 0.4, 1.3]}\n          scale={[16.18, 17.1, 20.82]}\n        />\n        <mesh\n          name=\"root 3\"\n          geometry={nodes['root 3'].geometry}\n          material={nodes['root 3'].material}\n          castShadow\n          receiveShadow\n          position={[31.88, -78.42, -53.6]}\n          rotation={[-0.24, -0.68, 0.21]}\n          scale={[28.63, 22.5, 9.4]}\n        />\n        <mesh\n          name=\"root 2\"\n          geometry={nodes['root 2'].geometry}\n          material={nodes['root 2'].material}\n          castShadow\n          receiveShadow\n          position={[-36.47, -47.67, -43.45]}\n          rotation={[0.55, 0.32, 0]}\n          scale={[11.68, 12.35, 9.4]}\n        />\n        <mesh\n          name=\"root\"\n          geometry={nodes.root.geometry}\n          material={nodes.root.material}\n          castShadow\n          receiveShadow\n          position={[-0.97, -20.37, -6.91]}\n          rotation={[Math.PI / 2, 0, 0]}\n          scale={[11.68, 9.4, 9.4]}\n        />\n        <mesh\n          name=\"cover\"\n          geometry={nodes.cover.geometry}\n          material={materials.ground}\n          castShadow\n          receiveShadow\n          position={[17.99, -14.47, 21.13]}\n          rotation={[-Math.PI / 2, 0, 0]}\n        />\n        <pointLight\n          name=\"Point Light 3\"\n          castShadow\n          intensity={15}\n          decay={7}\n          distance={100}\n          shadow-mapSize-width={256}\n          shadow-mapSize-height={256}\n          shadow-camera-near={100}\n          shadow-camera-far={2500}\n          color=\"#00fbfe\"\n          position={[28.37, -82.6, -42.87]}\n          scale={0.21}\n        />\n        <pointLight\n          name=\"Point Light 4\"\n          castShadow\n          intensity={15}\n          decay={7}\n          distance={100}\n          shadow-mapSize-width={256}\n          shadow-mapSize-height={256}\n          shadow-camera-near={100}\n          shadow-camera-far={2500}\n          color=\"#83d9fe\"\n          position={[-26, -110.71, -29.43]}\n          scale={0.21}\n        />\n        <pointLight\n          name=\"Point Light 2\"\n          castShadow\n          intensity={15}\n          decay={7}\n          distance={100}\n          shadow-mapSize-width={256}\n          shadow-mapSize-height={256}\n          shadow-camera-near={100}\n          shadow-camera-far={2500}\n          color=\"#63ebf4\"\n          position={[-33.08, -48.62, -36.51]}\n          scale={0.21}\n        />\n        <mesh\n          name=\"filler\"\n          geometry={nodes.filler.geometry}\n          material={materials.ground}\n          castShadow\n          receiveShadow\n          position={[-0.71, -14.22, -21.18]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          scale={[3.44, 2.84, 0.21]}\n        />\n        <mesh\n          name=\"underground\"\n          geometry={nodes.underground.geometry}\n          material={materials.ground}\n          castShadow\n          receiveShadow\n          position={[-0.77, -72.19, -34.95]}\n          scale={[2.06, 3.71, 1.37]}\n        />\n        <mesh\n          name=\"Rock_Moss_3\"\n          geometry={nodes.Rock_Moss_3.geometry}\n          material={nodes.Rock_Moss_3.material}\n          castShadow\n          receiveShadow\n          position={[22.34, -6.66, -17.11]}\n          rotation={[-Math.PI / 2, 0, -2.96]}\n          scale={[12.55, 19.32, 19.32]}\n        />\n        <mesh\n          name=\"Rock_Moss_1\"\n          geometry={nodes.Rock_Moss_1.geometry}\n          material={nodes.Rock_Moss_1.material}\n          castShadow\n          receiveShadow\n          position={[-39.03, -6.29, -3.84]}\n          rotation={[-Math.PI / 2, 0, -0.02]}\n          scale={34.86}\n        />\n        <mesh\n          name=\"Plant_1 6\"\n          geometry={nodes['Plant_1 6'].geometry}\n          material={nodes['Plant_1 6'].material}\n          castShadow\n          receiveShadow\n          position={[26.99, -10.43, 142.73]}\n          rotation={[-Math.PI / 2, 0, 1.53]}\n          scale={[3.27, 3.65, 3.46]}\n        />\n        <mesh\n          name=\"Plant_1 13\"\n          geometry={nodes['Plant_1 13'].geometry}\n          material={nodes['Plant_1 13'].material}\n          castShadow\n          receiveShadow\n          position={[4.22, -11.49, 58.39]}\n          rotation={[-1.58, 0.01, 2.21]}\n          scale={[8.57, 8.57, 6.3]}\n        />\n        <mesh\n          name=\"Plant_1 5\"\n          geometry={nodes['Plant_1 5'].geometry}\n          material={nodes['Plant_1 5'].material}\n          castShadow\n          receiveShadow\n          position={[-21.52, -10.43, 154.94]}\n          rotation={[-Math.PI / 2, 0, 1.53]}\n          scale={8.57}\n        />\n        <mesh\n          name=\"Plant_1 3\"\n          geometry={nodes['Plant_1 3'].geometry}\n          material={nodes['Plant_1 3'].material}\n          castShadow\n          receiveShadow\n          position={[-18.97, -10.43, 104.6]}\n          rotation={[-Math.PI / 2, 0, 0.29]}\n          scale={8.57}\n        />\n        <mesh\n          name=\"Plant_1 2\"\n          geometry={nodes['Plant_1 2'].geometry}\n          material={nodes['Plant_1 2'].material}\n          castShadow\n          receiveShadow\n          position={[-20.49, -10.43, 80.95]}\n          rotation={[-Math.PI / 2, 0, 1.38]}\n          scale={6.48}\n        />\n        <mesh\n          name=\"Plant_1 10\"\n          geometry={nodes['Plant_1 10'].geometry}\n          material={nodes['Plant_1 10'].material}\n          castShadow\n          receiveShadow\n          position={[-23.72, -10.43, 17.69]}\n          rotation={[-Math.PI / 2, 0, 2.8]}\n          scale={[3.12, 4.42, 6.02]}\n        />\n        <mesh\n          name=\"Plant_1 9\"\n          geometry={nodes['Plant_1 9'].geometry}\n          material={nodes['Plant_1 9'].material}\n          castShadow\n          receiveShadow\n          position={[-35.51, -10.43, 33.82]}\n          rotation={[-Math.PI / 2, 0, 3.58]}\n          scale={[3.12, 4.42, 7.7]}\n        />\n        <mesh\n          name=\"Plant_1 4\"\n          geometry={nodes['Plant_1 4'].geometry}\n          material={nodes['Plant_1 4'].material}\n          castShadow\n          receiveShadow\n          position={[10.43, -10.43, 88.31]}\n          rotation={[-1.36, -0.08, 2.81]}\n          scale={[3.12, 4.42, 7.7]}\n        />\n        <mesh\n          name=\"Plant_1 8\"\n          geometry={nodes['Plant_1 8'].geometry}\n          material={nodes['Plant_1 8'].material}\n          castShadow\n          receiveShadow\n          position={[-10.97, -11.75, 118.47]}\n          rotation={[-Math.PI / 2, 0, 1.97]}\n          scale={[8.57, 13.55, 4.8]}\n        />\n        <mesh\n          name=\"Plant_1 11\"\n          geometry={nodes['Plant_1 11'].geometry}\n          material={nodes['Plant_1 11'].material}\n          castShadow\n          receiveShadow\n          position={[14.22, -6.62, 2.35]}\n          rotation={[-1.45, -0.07, -0.61]}\n          scale={[12.72, 9.24, 8.26]}\n        />\n        <mesh\n          name=\"Plant_1 7\"\n          geometry={nodes['Plant_1 7'].geometry}\n          material={nodes['Plant_1 7'].material}\n          castShadow\n          receiveShadow\n          position={[-1.92, -11.75, 80.9]}\n          rotation={[-1.53, -0.09, 0.47]}\n          scale={8.57}\n        />\n        <mesh\n          name=\"Plant_1 12\"\n          geometry={nodes['Plant_1 12'].geometry}\n          material={nodes['Plant_1 12'].material}\n          castShadow\n          receiveShadow\n          position={[-19.89, -10.43, 57.32]}\n          rotation={[-1.5, 0.14, 2.69]}\n          scale={8.57}\n        />\n        <mesh\n          name=\"Plant_1\"\n          geometry={nodes.Plant_1.geometry}\n          material={nodes.Plant_1.material}\n          castShadow\n          receiveShadow\n          position={[33.26, -10.43, 71.65]}\n          rotation={[-Math.PI / 2, 0, 1.38]}\n          scale={8.57}\n        />\n        <mesh\n          name=\"Plant_4 4\"\n          geometry={nodes['Plant_4 4'].geometry}\n          material={nodes['Plant_4 4'].material}\n          castShadow\n          receiveShadow\n          position={[-0.99, -11.07, 142.88]}\n          rotation={[-Math.PI / 2, 0, 0.69]}\n          scale={4.22}\n        />\n        <mesh\n          name=\"Plant_4 2\"\n          geometry={nodes['Plant_4 2'].geometry}\n          material={nodes['Plant_4 2'].material}\n          castShadow\n          receiveShadow\n          position={[12.05, -11.07, 123.52]}\n          rotation={[-Math.PI / 2, 0, -0.75]}\n          scale={7.51}\n        />\n        <mesh\n          name=\"Plant_4 3\"\n          geometry={nodes['Plant_4 3'].geometry}\n          material={nodes['Plant_4 3'].material}\n          castShadow\n          receiveShadow\n          position={[28.36, -10.43, 111.41]}\n          rotation={[-Math.PI / 2, 0, -0.35]}\n          scale={8.34}\n        />\n        <mesh\n          name=\"Plant_4 6\"\n          geometry={nodes['Plant_4 6'].geometry}\n          material={nodes['Plant_4 6'].material}\n          castShadow\n          receiveShadow\n          position={[-16.63, -7.86, 0.12]}\n          rotation={[-1.56, -0.02, 0.11]}\n          scale={8.22}\n        />\n        <mesh\n          name=\"Plant_4 5\"\n          geometry={nodes['Plant_4 5'].geometry}\n          material={nodes['Plant_4 5'].material}\n          castShadow\n          receiveShadow\n          position={[26.04, -10.43, 40.82]}\n          rotation={[-Math.PI / 2, 0, -0.21]}\n          scale={13.08}\n        />\n        <mesh\n          name=\"Plant_4\"\n          geometry={nodes.Plant_4.geometry}\n          material={nodes.Plant_4.material}\n          castShadow\n          receiveShadow\n          position={[-28.57, -10.43, 93.01]}\n          rotation={[-1.55, 0.05, -0.35]}\n          scale={13.08}\n        />\n        <mesh\n          name=\"Plant_5 2\"\n          geometry={nodes['Plant_5 2'].geometry}\n          material={nodes['Plant_5 2'].material}\n          castShadow\n          receiveShadow\n          position={[27.86, -12.28, 132.65]}\n          rotation={[-Math.PI / 2, 0, -1.18]}\n          scale={6.95}\n        />\n        <mesh\n          name=\"Plant_5 3\"\n          geometry={nodes['Plant_5 3'].geometry}\n          material={nodes['Plant_5 3'].material}\n          castShadow\n          receiveShadow\n          position={[-21.31, -7.6, -33.41]}\n          rotation={[-Math.PI / 2, 0, -0.66]}\n          scale={10.19}\n        />\n        <mesh\n          name=\"Plant_5\"\n          geometry={nodes.Plant_5.geometry}\n          material={nodes.Plant_5.material}\n          castShadow\n          receiveShadow\n          position={[-24.42, -7.6, 44.64]}\n          rotation={[-Math.PI / 2, 0, -0.66]}\n          scale={10.19}\n        />\n        <mesh\n          name=\"PineTree_1\"\n          geometry={nodes.PineTree_1.geometry}\n          material={nodes.PineTree_1.material}\n          castShadow\n          receiveShadow\n          position={[49.88, -9.7, 94.77]}\n          rotation={[-1.52, -0.08, -0.87]}\n          scale={20}\n        />\n        <mesh\n          name=\"PineTree_2 2\"\n          geometry={nodes['PineTree_2 2'].geometry}\n          material={nodes['PineTree_2 2'].material}\n          castShadow\n          receiveShadow\n          position={[34.82, -7.81, 49.22]}\n          rotation={[-Math.PI / 2, 0.03, 0]}\n          scale={24.02}\n        />\n        <mesh\n          name=\"PineTree_2 3\"\n          geometry={nodes['PineTree_2 3'].geometry}\n          material={nodes['PineTree_2 3'].material}\n          castShadow\n          receiveShadow\n          position={[30.28, -7.81, -112.55]}\n          rotation={[-Math.PI / 2, 0, 0.32]}\n          scale={20}\n        />\n        <mesh\n          name=\"PineTree_2\"\n          geometry={nodes.PineTree_2.geometry}\n          material={nodes.PineTree_2.material}\n          castShadow\n          receiveShadow\n          position={[48.86, -7.81, 2.77]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          scale={20}\n        />\n        <mesh\n          name=\"PineTree_3 3\"\n          geometry={nodes['PineTree_3 3'].geometry}\n          material={nodes['PineTree_3 3'].material}\n          castShadow\n          receiveShadow\n          position={[66.02, -17.17, 34.76]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 5\"\n          geometry={nodes['PineTree_3 5'].geometry}\n          material={nodes['PineTree_3 5'].material}\n          castShadow\n          receiveShadow\n          position={[61.8, -7.3, -54.45]}\n          rotation={[-Math.PI / 2, 0, 1.93]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 11\"\n          geometry={nodes['PineTree_3 11'].geometry}\n          material={nodes['PineTree_3 11'].material}\n          castShadow\n          receiveShadow\n          position={[-17.75, -13.56, -104.06]}\n          rotation={[-Math.PI / 2, 0, 0.61]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 10\"\n          geometry={nodes['PineTree_3 10'].geometry}\n          material={nodes['PineTree_3 10'].material}\n          castShadow\n          receiveShadow\n          position={[-98.48, -14.56, -66.63]}\n          rotation={[-Math.PI / 2, 0, 0.61]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 8\"\n          geometry={nodes['PineTree_3 8'].geometry}\n          material={nodes['PineTree_3 8'].material}\n          castShadow\n          receiveShadow\n          position={[101.28, -14.56, 50.98]}\n          rotation={[-Math.PI / 2, 0, 0.02]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 7\"\n          geometry={nodes['PineTree_3 7'].geometry}\n          material={nodes['PineTree_3 7'].material}\n          castShadow\n          receiveShadow\n          position={[89.79, -14.56, -73.29]}\n          rotation={[-Math.PI / 2, 0, 0.02]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 6\"\n          geometry={nodes['PineTree_3 6'].geometry}\n          material={nodes['PineTree_3 6'].material}\n          castShadow\n          receiveShadow\n          position={[-99.92, -14.56, 30.17]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 4\"\n          geometry={nodes['PineTree_3 4'].geometry}\n          material={nodes['PineTree_3 4'].material}\n          castShadow\n          receiveShadow\n          position={[-51.31, -14.56, -53.36]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3 2\"\n          geometry={nodes['PineTree_3 2'].geometry}\n          material={nodes['PineTree_3 2'].material}\n          castShadow\n          receiveShadow\n          position={[-44.87, -17.17, 132.34]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_3\"\n          geometry={nodes.PineTree_3.geometry}\n          material={nodes.PineTree_3.material}\n          castShadow\n          receiveShadow\n          position={[-43.35, -7.81, 32.37]}\n          rotation={[-Math.PI / 2, 0.02, 0]}\n          scale={22.92}\n        />\n        <mesh\n          name=\"PineTree_5 2\"\n          geometry={nodes['PineTree_5 2'].geometry}\n          material={nodes['PineTree_5 2'].material}\n          castShadow\n          receiveShadow\n          position={[-42.02, -5.71, 78.2]}\n          rotation={[-1.51, 0.05, -1.64]}\n          scale={31.23}\n        />\n        <mesh\n          name=\"PineTree_5\"\n          geometry={nodes.PineTree_5.geometry}\n          material={nodes.PineTree_5.material}\n          castShadow\n          receiveShadow\n          position={[34.89, -12.34, 127.44]}\n          rotation={[-1.51, 0.05, 0]}\n          scale={20}\n        />\n        <mesh\n          name=\"WoodLog_Moss\"\n          geometry={nodes.WoodLog_Moss.geometry}\n          material={nodes.WoodLog_Moss.material}\n          castShadow\n          receiveShadow\n          position={[10.38, -6.49, -49.1]}\n          rotation={[-1.39, 0.13, 2.18]}\n          scale={13.21}\n        />\n        <mesh\n          name=\"Rock_Moss_2\"\n          geometry={nodes.Rock_Moss_2.geometry}\n          material={nodes.Rock_Moss_2.material}\n          castShadow\n          receiveShadow\n          position={[-12.74, -3.05, -66.99]}\n          rotation={[-Math.PI / 2, 0, 0]}\n          scale={29.46}\n        />\n        <mesh\n          name=\"top-ground 3\"\n          geometry={nodes['top-ground 3'].geometry}\n          material={materials.ground}\n          castShadow\n          receiveShadow\n          position={[111.79, -18.3, 10.28]}\n          rotation={[-Math.PI / 2, 0, -1.55]}\n          scale={[0.76, 0.42, 1]}\n        />\n        <mesh\n          name=\"top-ground 2\"\n          geometry={nodes['top-ground 2'].geometry}\n          material={materials.ground}\n          castShadow\n          receiveShadow\n          position={[-96.19, -18.3, -21.01]}\n          rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n          scale={[0.5, 0.22, 1]}\n        />\n        <mesh\n          name=\"top-ground\"\n          geometry={nodes['top-ground'].geometry}\n          material={materials.ground}\n          castShadow\n          receiveShadow\n          position={[-0.04, -16.13, 39.95]}\n          rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n          scale={[1, 0.58, 1]}\n        />\n        <pointLight\n          name=\"Point Light\"\n          castShadow\n          intensity={10}\n          decay={3}\n          distance={100}\n          shadow-mapSize-width={256}\n          shadow-mapSize-height={256}\n          shadow-camera-near={100}\n          shadow-camera-far={2020.207}\n          color=\"#00a6fe\"\n          position={[-2.13, 7.31, -2.95]}\n        />\n        <group name=\"mushroom\" position={[-4, -8, 0.37]} rotation={[0.12, 0, 0]} scale={0.02}>\n          <mesh\n            name=\"hat\"\n            geometry={nodes.hat.geometry}\n            material={materials.hat}\n            castShadow\n            receiveShadow\n            position={[109.15, 398.99, 297.3]}\n            scale={[0.49, 1.1, 0.49]}\n          />\n          <mesh\n            name=\"feet\"\n            geometry={nodes.feet.geometry}\n            material={materials.feet}\n            castShadow\n            receiveShadow\n            position={[103.16, 165.95, 307.5]}\n            scale={[0.36, 1, 0.5]}\n          />\n        </group>\n        <hemisphereLight name=\"Default Ambient Light\" intensity={0.25} color=\"#eaeaea\" position={[0, 1, 0]} />\n      </group>\n    </>\n  )\n}\n","import React from 'react';\nimport {useState, useEffect} from 'react';\nimport styles from \"./Landing.module.css\";\nimport Carousel from 'react-spring-3d-carousel';\nimport uuidv4 from \"uuid\";\nimport { IoLogoTwitter } from 'react-icons/io'\nimport { isMobile } from 'react-device-detect';\n\nexport default function Landing({ playerChosen, setShowStemPlayer, setPlayerChosen }) {\n    useEffect(() => {\n        if (!playerChosen) {\n        }\n    }, [playerChosen]);\n\n    const [state, setState] = useState({\n        goToSlide: 0,\n        offsetRadius: 2\n      });\n  \n      const slides = [\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-1.png\" alt=\"1\" />\n              <button\n                  onClick={() => {\n                      setPlayerChosen(1);\n                      setShowStemPlayer(1);\n                  }}\n                  className={styles.spButton + \" pushable\"}> SP-1</button>\n            </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-2.png\" alt=\"2\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(2);\n                  setShowStemPlayer(2);\n              }}\n              className={styles.spButton + \" pushable\"}> SP-2</button>\n            </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-3.png\" alt=\"3\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(3);\n                  setShowStemPlayer(3);\n              }}\n              className={styles.spButton + \" pushable\"}> SP-3</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-4.png\" alt=\"4\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(4);\n                  setShowStemPlayer(4);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-4</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-5.png\" alt=\"5\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(5);\n                  setShowStemPlayer(5);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-5</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-6.png\" alt=\"6\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(6);\n                  setShowStemPlayer(6);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-6</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-7.png\" alt=\"7\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(7);\n                  setShowStemPlayer(7);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-7</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-8.png\" alt=\"8\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(8);\n                  setShowStemPlayer(8);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-8</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-9.png\" alt=\"9\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(9);\n                  setShowStemPlayer(9);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-9</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-10.png\" alt=\"10\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(10);\n                  setShowStemPlayer(10);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-10</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-11.png\" alt=\"11\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(11);\n                  setShowStemPlayer(11);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-11</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-12.png\" alt=\"12\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(12);\n                  setShowStemPlayer(12);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-12</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-13.png\" alt=\"13\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(13);\n                  setShowStemPlayer(13);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-13</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-14.png\" alt=\"14\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(14);\n                  setShowStemPlayer(14);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-14</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-15.png\" alt=\"15\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(15);\n                  setShowStemPlayer(15);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-15</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-16.png\" alt=\"16\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(16);\n                  setShowStemPlayer(16);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-16</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-17.png\" alt=\"17\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(17);\n                  setShowStemPlayer(17);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-17</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-18.png\" alt=\"18\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(18);\n                  setShowStemPlayer(18);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-18</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-19.png\" alt=\"19\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(19);\n                  setShowStemPlayer(19);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-19</button>\n          </div>\n        },\n        {\n          key: uuidv4(),\n          content:\n          <div className={styles.caroItem}>\n            <img className={styles.noImgSelector} src=\"/sp-20.png\" alt=\"20\" />\n            <button\n              onClick={() => {\n                  setPlayerChosen(20);\n                  setShowStemPlayer(20);\n              }}\n              className={\"pushable \" + styles.spButton}> SP-20</button>\n          </div>\n        }\n      ].map((slide, index) => {\n        return { ...slide, onClick: () => setState({ goToSlide: index }) };\n      });\n  \n      const onChangeInput = (e) => {\n        setState({\n          [e.target.name]: parseInt(e.target.value, 10) || 0\n        });\n      };\n    \n      let xDown = null;\n      let yDown = null;\n    \n      const getTouches = (evt) => {\n        return (\n          evt.touches || evt.originalEvent.touches // browser API\n        ); // jQuery\n      };\n    \n      const handleTouchStart = (evt) => {\n        const firstTouch = getTouches(evt)[0];\n        xDown = firstTouch.clientX;\n        yDown = firstTouch.clientY;\n      };\n    \n      const handleTouchMove = (evt) => {\n        if (!xDown || !yDown) {\n          return;\n        }\n    \n        let xUp = evt.touches[0].clientX;\n        let yUp = evt.touches[0].clientY;\n    \n        let xDiff = xDown - xUp;\n        let yDiff = yDown - yUp;\n    \n        if (Math.abs(xDiff) > Math.abs(yDiff)) {\n          /*most significant*/\n          if (xDiff > 0) {\n            /* left swipe */\n            setState({ goToSlide: state.goToSlide + 1 });\n          } else {\n            /* right swipe */\n            setState({ goToSlide: state.goToSlide - 1 });\n          }\n        } else {\n          if (yDiff > 0) {\n            /* up swipe */\n          } else {\n            /* down swipe */\n          }\n        }\n        /* reset values */\n        xDown = null;\n        yDown = null;\n      };\n\nreturn (\n    <>\n    <div className={styles.landingContainer}>\n        <div className={styles.titleContainer}>\n            <div className={styles.title}>\n                <strong>Spore Players</strong>\n            </div>\n            <div className={styles.navBar}>\n                {/* <a href=\"/explore\" className={styles.navItem}><b>Explore</b></a>\n                <a href=\"/learn\" className={styles.navItem}><b>Learn</b></a> */}\n                <a href=\"/lore\" className={styles.navItem}><b>Lore</b></a>\n                <div className={styles.navItem} style={{marginTop: \"-2px\"}}><a href=\"https://twitter.com/SporesDAO\"><IoLogoTwitter/></a></div>\n            </div>\n        </div>\n        <div style={{marginLeft: \"15px\"}}>\n        <p className={styles.smallText}>\n            &#x2764;&#xFE0F; music NFTs\n          </p>\n        </div>\n        <div className={styles.playerCarousel} onTouchStart={handleTouchStart} onTouchMove={handleTouchMove}>\n            <Carousel slides={slides} goToSlide={state.goToSlide} offsetRadius={state.offsetRadius}/>\n        </div>\n        <section style={{marginTop: \"100px\", marginBottom: \"100px\"}}>\n            <div style={{display: \"flex\", justifyContent: \"space-evenly\", flexWrap: \"wrap\", alignContent: \"center\", flexDirection: \"column\", textAlign: \"center\"}}>\n              <div><p className={styles.shimmer}>Rarity</p></div>\n              <div><p className={styles.defPronun}>rar•i•ty | 'rer-ə-tē</p></div>\n              <div><p className={styles.defText}>Spore tech powers a new wav of rarity in music - each spore player owns a unique version of every song on the Spores platform using mutated stems.</p>\n              </div>\n            </div>\n        </section>\n        <section>\n            <div className={styles.sectionTitle} style={{marginBottom: \"10px\"}}>Spore Ecosystem Overview</div>\n            <div>\n              <img src={isMobile ? '/spore-overview-mobile.png' : '/spore-overview.png'} style={{objectFit: \"contain\", width: \"100%\"}}></img>\n            </div>\n        </section>\n        <div className={styles.poweredByContainer}>\n        <p className={styles.smallText}>\n            Powered by\n        </p>\n        <div>\n          <img\n            onClick={() => {\n                window.location.href = \"https://www.ghostwaveform.one\";\n            }\n                    }\n            src=\"/indigo-logo-black.png\" style={{height: 20}} className={styles.logo + \" pushable\"}></img>\n          <img src=\"/x.png\" id={styles.x}></img>\n          <img\n            onClick={() => {\n                window.location.href = \"https://zequencer.io\";\n            }\n                    }\n            src=\"/zeq-logo-black.png\" style={{height: 20}} className={styles.logo + \" pushable \" + styles.zeqLogo}></img>\n            </div>\n            </div>\n        <section style={{height: \"10vh\"}}></section>\n    </div>\n    </>\n)}","\nimport React from 'react';\nimport {useRef, useState, useEffect} from 'react';\nimport styles from \"./Overlay.module.css\";\n\nexport function Overlay({ playerChosen, scroll, setShowStemPlayer, setPlayerChosen }) {\n    const scrollContainer = useRef();\n    useEffect(() => {\n        if (!playerChosen && scroll.current !== 0) {\n            if (scrollContainer.current) {\n                scrollContainer.current.scrollTo(0, scrollContainer.current.scrollHeight* scroll.current);\n            }\n        }\n    }, [playerChosen]);\n\n  return (\n    <div\n      ref={scrollContainer}\n      className={styles.scrollContainer}\n      onScroll={(e) => {\n        const scroll01 =\n          e.target.scrollTop / (e.target.scrollHeight - window.innerHeight);\n        scroll.current = scroll01;\n      }}\n    >\n      <section\n        style={{ height: \"50vh\" }}\n        className={styles.sectionLeft + \" \" + styles.sectionHero}\n      >\n        <header>\n          <h1>\n            LORE\n          </h1>\n          <svg\n            width=\"15\"\n            height=\"30\"\n            viewBox=\"0 0 30 71\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <rect\n              x=\"1.5\"\n              y=\"1.5\"\n              width=\"27\"\n              height=\"45\"\n              rx=\"13.5\"\n              stroke=\"#2D3A94\"\n              stroke-opacity=\"0.6\"\n              stroke-width=\"3\"\n            />\n            <path\n              d=\"M15 12V20\"\n              stroke=\"#2D3A94\"\n              stroke-opacity=\"0.6\"\n              stroke-width=\"3\"\n              stroke-linecap=\"round\"\n            />\n            <path\n              d=\"M8 54L14.5 60.5L21 54\"\n              stroke=\"#2D3A94\"\n              stroke-opacity=\"0.6\"\n              stroke-width=\"3\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            />\n            <path\n              d=\"M8 63L14.5 69.5L21 63\"\n              stroke=\"#2D3A94\"\n              stroke-opacity=\"0.6\"\n              stroke-width=\"3\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            />\n          </svg>\n        </header>\n      </section>\n      <section style={{ height: \"180vh\" }} className={styles.sectionRight + \" \" + styles.sectionFirst}>\n        <p>\n          Do you see it?\n          <br />\n          That light in the dark?\n          <br />\n          It calls to you.\n        </p>\n      </section>\n      <section style={{ height: \"50vh\" }} className={styles.sectionLeft + \" \" + styles.sectionSecond}>\n       <p>\n          Deep underground...\n        </p>\n      </section>\n      <section style={{ height: \"150vh\" }} className={styles.sectionRight + \" \" + styles.sectionLast}>\n        <p>\n          The spores resonate.\n          <br />\n          Awakening from their slumber.\n        </p>\n        <button\n              onClick={() => {\n                window.location.href='https://spores.vision';\n              }}\n              className={\"pushable \" + styles.spButton}> Home</button>\n      </section>\n    </div>\n  );\n}\n","import React from 'react';\nimport Spore from 'components/spore/Spore.js';\nimport {useState, useEffect} from 'react';\nimport { Suspense, useRef } from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport Scene from './Scene'\nimport Landing from './Landing';\nimport { Overlay } from './Overlay';\nimport { EffectComposer, SSAO, Bloom } from \"@react-three/postprocessing\";\nimport { KernelSize } from 'postprocessing'\nimport './styles.css';\n\nexport default function App(props) {\n    console.log(props, props.match);\n\n    useEffect(() => {\n        document.title = \"Spores\";\n    }, []);\n\n    let tokenId = props.match && props.match.params.tokenId;\n    if (tokenId) {\n        tokenId = parseInt(tokenId);\n    }\n\n    console.log(\"tokenId=\", tokenId);\n    let [playerChosen, setPlayerChosen] = useState(tokenId);\n    let [showStemPlayer, setShowStemPlayer] = useState(tokenId !== undefined);\n\n    useEffect(() => {\n        if (playerChosen !== undefined) {\n            window.history.pushState('page2', 'Title', '/sp/' + playerChosen);\n        } else {\n            window.history.pushState('page2', 'Title', '/');\n        }\n    }, [playerChosen]);\n \n    const scroll = useRef(0);\n    console.log(\"store in app.js =\", props.store);\n\n    if (showStemPlayer || playerChosen) {\n        return (<Spore\n                  store={props.store}\n                  playerChosen={playerChosen}\n                  setPlayerChosen={setPlayerChosen}\n                  setShowStemPlayer={setShowStemPlayer}\n                  showStemPlayer={showStemPlayer}/>);\n    }\n    return [\n      <Landing\n      playerChosen={playerChosen}\n      setPlayerChosen={setPlayerChosen}\n      setShowStemPlayer={setShowStemPlayer}/>\n    ];\n}\n","import React, { useEffect, useCallback, useState} from 'react';\nimport App from 'components/spores-landing/App.js';\nimport {connect} from 'react-redux';\n\nconst SporeLanding = (props) => { \n    return (<App {...props}></App>);\n};\n\nexport default SporeLanding;\n","\nimport {isMobile} from 'react-device-detect';\nimport SongTitle from \"components/spore/SongTitle.js\";\nimport React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport StemPlayer from \"components/spore/StemPlayer.js\";\nimport './demo.scss';\n\nconst Demo = ({name}) => { \n    let [passed, setPassed] = useState(false);\n    let [failed, setFailed] = useState(false);\n    let [password, setPassword] = useState(\"\");\n    let className = \"spore showing-spore-player demo\";\n    if (name.includes(\"doodles\")) {\n        className += \" doodles\";\n    }\n    if (name.includes(\"ragnarok\")) {\n        className += \" ragnarok\";\n    }\n    let artist = \"Keyon Christ\";\n    let song = \"Twisting Faith\";\n\n    if (name === \"doodles1\") {\n        artist = \"Doodles\";\n        song = \"Spaceships\";\n    }\n\n    if (name === \"jeremih\") {\n        artist = \"Jeremih\";\n        song = \"Don\\'t Tell 'Em\";\n    }\n\n    const onClickPassword = useCallback((e) => {\n        if (password === \"d12efa@71e\") {\n            setPassed(true);\n        } else {\n            setFailed(true);\n        }\n    }, [password, setFailed, setPassed]);\n\n    if (!passed) {\n        className += \" password-protected\";\n        return (\n            <div className={className}>\n              <div className=\"password-box\">\n                <div className=\"password-label\">\n                  Password\n                </div>\n                <input type=\"password\"\n                  placeholder=\"Enter password here\" text={password} onChange={(e) => setPassword(e.target.value)}/>\n                {failed && <div className=\"password-failed\">The password you entered is incorrect.</div>}\n                <div onClick={onClickPassword} className=\"password-enter\">\n                  Enter\n                </div>\n              </div>\n            </div>\n        );\n    }\n    return (\n        <div className={className}>\n          {name === \"jeremih\" && \n          <video\n            playsInline\n            className=\"rain-video\"\n            autoPlay\n            loop\n            src={isMobile ? \"/mobile-rain.mp4\" : \"/desktop-rain.mp4\"}/>}\n          <div className=\"caurosel player-chosen\">\n            <div className=\"spore-player-option chosen\">\n              <SongTitle artist={artist} song={song}/>\n            </div>\n          </div>\n          <StemPlayer tokenId={name}/>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Demo);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport Spore from './Spore.js';\nimport {connect} from 'react-redux';\n\nconst SporeWrapper = (props) => { \n    let tokenId = props.match && props.match.params.tokenId;\n    if (tokenId) {\n        tokenId = parseInt(tokenId);\n    }\n    let [playerChosen, setPlayerChosen] = useState(tokenId);\n    let [showStemPlayer, setShowStemPlayer] = useState(tokenId !== undefined);\n    console.log(\"tokenId=\", tokenId, playerChosen, showStemPlayer);\n \n    return (<Spore\n              playerChosen={playerChosen}\n              setPlayerChosen={setPlayerChosen}\n              setShowStemPlayer={setShowStemPlayer}\n              showStemPlayer={showStemPlayer}/>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SporeWrapper);\n","import React from 'react';\nimport Spore from 'components/spore/Spore.js';\nimport {useState, useEffect} from 'react';\nimport { Suspense, useRef } from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport Scene from './Scene'\nimport Landing from './Landing';\nimport { Overlay } from './Overlay';\nimport { EffectComposer, SSAO, Bloom } from \"@react-three/postprocessing\";\nimport { KernelSize } from 'postprocessing'\nimport './styles.css';\n\nexport default function LoreApp(props) {\n    console.log(props, props.match);\n\n    useEffect(() => {\n        document.title = \"Spores\";\n    }, []);\n\n    let tokenId = props.match && props.match.params.tokenId;\n    if (tokenId) {\n        tokenId = parseInt(tokenId);\n    }\n\n    console.log(\"tokenId=\", tokenId);\n    let [playerChosen, setPlayerChosen] = useState(tokenId);\n    let [showStemPlayer, setShowStemPlayer] = useState(tokenId !== undefined);\n\n    useEffect(() => {\n        if (playerChosen !== undefined) {\n            window.history.pushState('page2', 'Title', '/sp/' + playerChosen);\n        } else {\n            window.history.pushState('page2', 'Title', '/');\n        }\n    }, [playerChosen]);\n \n    const scroll = useRef(0);\n    console.log(\"store in app.js =\", props.store);\n\n    if (showStemPlayer || playerChosen) {\n        return (<Spore\n                  store={props.store}\n                  playerChosen={playerChosen}\n                  setPlayerChosen={setPlayerChosen}\n                  setShowStemPlayer={setShowStemPlayer}\n                  showStemPlayer={showStemPlayer}/>);\n    }\n    return [\n        <Canvas shadows flat linear>,\n          <EffectComposer smaa>\n            <Bloom\n              intensity={1}\n              kernelSize={KernelSize.VERY_LARGE}\n              luminanceThreshold={0.01}\n              luminanceSmoothing={0.9}\n            />\n          </EffectComposer>\n          <Scene scroll={scroll} />\n        </Canvas>,\n        <Overlay\n          playerChosen={playerChosen}\n          setPlayerChosen={setPlayerChosen}\n          setShowStemPlayer={setShowStemPlayer} scroll={scroll}/>\n    ];\n}\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport LoreApp from 'components/spores-landing/LoreApp.js';\n\nconst SporeLore = (props) => { \n    return (<LoreApp {...props}></LoreApp>);\n};\n\nexport default SporeLore;\n","import React, { Suspense, Component } from 'react';\nimport { BrowserRouter, StaticRouter, withRouter, Route, Switch } from 'react-router-dom';\nimport SporeLanding from \"components/spore/SporeLanding.js\";\nimport Demo from \"components/demo/Demo.js\";\nimport SporeWrapper from \"components/spore/SporeWrapper.js\";\nimport './App.scss';\nimport SporeLore from 'components/spore/SporeLore.js';\n\nconst App = (props) => {\n    window.spores = true;\n    return (\n        <Suspense fallback={() => <div>Loading...</div>}>\n          <BrowserRouter>\n            <Switch>\n              <Route  path=\"/jeremih/\" \n                      render={(props) => <Demo name=\"jeremih\" {...props} store={props.store}/>}/>\n              <Route  path=\"/doodles1/\" \n                      render={(props) => <Demo name=\"doodles1\" {...props} store={props.store}/>}/>\n              <Route  path=\"/doodles2/\" \n                      render={(props) => <Demo name=\"doodles2\" {...props} store={props.store}/>}/>\n              <Route  path=\"/ragnarok/\" \n                      render={(props) => <Demo name=\"ragnarok\" {...props} store={props.store}/>}/>\n              <Route  path=\"/lore\" \n                      render={(props) => <SporeLore {...props} store={props.store}/>}/>\n              <Route  path=\"/sp/:tokenId\" \n                      render={(props) => <SporeLanding {...props} store={props.store}/>}/>\n              <Route  path=\"/\" \n                      render={(props) => <SporeLanding {...props} store={props.store}/>}/>\n            </Switch>\n          </BrowserRouter>\n        </Suspense>);\n};\n\nexport default App;\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n      console.log(\"UNREGISTERING\");\n    navigator.serviceWorker.ready.then(registration => {\n        console.log(\"regstieration UNREGISTERING\", registration);\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\nimport {playlistReducer} from './playlist.js';\n\nconst rootReducer = combineReducers(\n    {\n        playlist: playlistReducer\n    });\n\nexport default rootReducer;\n","import {SET_SHOW_PLAYLIST_MENU} from 'constants/action-types.js';\nimport {SET_CURRENT_PLAYLIST_SONG} from 'constants/action-types.js';\n\nexport const playlistReducer = (state = {currentSong: \"Twisting Faith\"}, action) => {\n    let newState;\n    switch (action.type) {\n    case SET_SHOW_PLAYLIST_MENU:\n        return {\n            ... state,\n            showPlaylistMenu: action.payload\n        };\n    case SET_CURRENT_PLAYLIST_SONG:\n        return {\n            ... state,\n            currentSong: action.payload\n        };\n    default:\n        return state;\n    }\n}\n \n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {unregister} from './registerServiceWorker';\nimport store from \"./store/index\";\nimport { Provider } from \"react-redux\";\nimport { setResolution } from \"./actions/index\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n      <App store={store}/>\n    </Provider>\n    , document.getElementById('root'));\n\nunregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spButtons\":\"Landing_spButtons__2lA0a\",\"spButton\":\"Landing_spButton__wkOrL\",\"logo\":\"Landing_logo__1_4MQ\",\"zeqLogo\":\"Landing_zeqLogo__1aulZ\",\"x\":\"Landing_x__5AW6k\",\"smallText\":\"Landing_smallText__3EmQL\",\"sectionLeft\":\"Landing_sectionLeft__j8wh1\",\"sectionRight\":\"Landing_sectionRight__2CAqY\",\"caroItem\":\"Landing_caroItem__1cxvv\",\"playerCarousel\":\"Landing_playerCarousel__7sZd2\",\"defText\":\"Landing_defText__i0fW6\",\"noImgSelector\":\"Landing_noImgSelector__3XSwW\",\"landingContainer\":\"Landing_landingContainer__2Lx2B\",\"titleContainer\":\"Landing_titleContainer__1JB41\",\"navItem\":\"Landing_navItem__mV48P\",\"navBar\":\"Landing_navBar__2sKob\",\"title\":\"Landing_title__32OHo\",\"sectionTitle\":\"Landing_sectionTitle__hq-ce\",\"poweredByContainer\":\"Landing_poweredByContainer__gIUyv\",\"infoImage\":\"Landing_infoImage__3MY-t\",\"defPronun\":\"Landing_defPronun__3FpRo\",\"shimmer\":\"Landing_shimmer__3BITt\"};","import Web3 from 'web3';\nimport {web3} from '../web3.js';\n\nexport const noteToAscii= {\n    'A': 'a',\n    'A#': 'A',\n    'B': 'b',\n    'C': 'c',\n    'C#': 'C',\n    'D': 'd',\n    'D#': 'D',\n    'E': 'e',\n    'F': 'f',\n    'F#': 'F',\n    'G': 'g',\n    'G#': 'G'\n};\n\nexport const noteToBytes32 = {\n    'A': web3.utils.asciiToHex('a'),\n    'A#': web3.utils.asciiToHex('A'),\n    'B': web3.utils.asciiToHex('b'),\n    'C': web3.utils.asciiToHex('c'),\n    'C#': web3.utils.asciiToHex('C'),\n    'D': web3.utils.asciiToHex('d'),\n    'D#': web3.utils.asciiToHex('D'),\n    'E': web3.utils.asciiToHex('e'),\n    'F': web3.utils.asciiToHex('f'),\n    'F#': web3.utils.asciiToHex('F'),\n    'G': web3.utils.asciiToHex('g'),\n    'G#': web3.utils.asciiToHex('G')\n};\n\nlet tmp = {};\n\nfor (let i in noteToBytes32) {\n    tmp[noteToBytes32[i]] = i;\n}\n\nexport const bytes32ToNote = tmp;\ntmp = {};\n\nfor (let i in noteToAscii) {\n    tmp[noteToAscii[i]] = i;\n}\n\n\nexport const asciiToNote = tmp;\n","import Web3 from 'web3';\n\nconst metamaskInstalled = false; // typeof window.web3 !== 'undefined';\nexport const web3 = metamaskInstalled ?\n      new Web3(window.web3.currentProvider) :\n      new Web3(new Web3.providers.HttpProvider('https://ropsten.infura.io/v3/2f3dce2af1044e88b4851c3d73c3d00c'));\nexport const web3WSS = \n    new Web3(new Web3.providers.WebsocketProvider('wss://ropsten.infura.io/ws/v3/2f3dce2af1044e88b4851c3d73c3d00c'));\n\n/*\n\nclass Contract {\n    constructor() {\n        this.methods = {};\n        this.options = {\n            address: ''\n        };\n    }\n}\n\nexport const web3 = {\n    eth: {\n        Contract: Contract,\n        net: {\n            isListening: () => true\n        }\n    },\n    utils: {\n        asciiToHex: () => 'aa',\n        padLeft: () => '',\n        padRight: () => '',\n    }\n};\n\nexport const web3WSS = web3;\n*/\n","import Web3 from 'web3';\nimport {bytes32ToNote} from './chords/NoteConstants.js';\nimport {noteToBytes32} from './chords/NoteConstants.js';\nimport {asciiToNote} from './chords/NoteConstants.js';\nimport {web3} from './web3.js';\n\nconst bs58 = require('bs58');\nconst metamaskInstalled = typeof window.web3 !== 'undefined';\nconst nullBytes32 = web3.utils.padLeft('0x0', 64);\n\nclass EthereumDataType {\n    constructor(toConversion, fromConversion) {\n        this.toConversion = toConversion;\n        this.fromConversion = fromConversion;\n    }\n\n    convertTo(jsValue) {\n        return this.toConversion(jsValue);\n    }\n\n    convertFrom(ethereumValue) {\n        if (ethereumValue === nullBytes32) {\n            return null;\n        }\n        return this.fromConversion(ethereumValue);\n    }\n}\n\nfunction ipfsHashToBytes32(ipfs_hash) {\n    var h = bs58.decode(ipfs_hash).toString('hex').replace(/^1220/, '');\n    if (h.length != 64) {\n        return null;\n    }\n    return '0x' + h;\n}\n\nfunction bytes32ToIPFSHash(hash_hex) {\n    var buf = new Buffer(hash_hex.replace(/^0x/, '1220'), 'hex')\n    return bs58.encode(buf)\n}\n\nfunction trimEmpty(str) {\n    let trimmed = \"\";\n    for (let i in str) {\n        if (str.charCodeAt(i) == 0) {\n            continue;\n        }\n        trimmed += str.charAt(i);\n    }\n    return trimmed;\n}\n\nexport const IPFS_HASH = new EthereumDataType(\n    (x) => ipfsHashToBytes32(x),\n    (x) => bytes32ToIPFSHash(x));\n\nexport const INT_8 = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.numberToHex(x), 64),\n    (x) => web3.utils.hexToNumber(x));\n\nexport const INT_16 = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.numberToHex(x), 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\nexport const INT_32 = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.numberToHex(x), 64),\n    (x) => web3.utils.hexToNumber(x));\n\nexport const UINT_256 = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.numberToHex(parseInt(x)), 64),\n    (x) => web3.utils.hexToNumber(x));\n\nexport const BYTES_32 = new EthereumDataType(\n    (x) => web3.utils.padRight(web3.utils.fromAscii(x), 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\nexport const BYTES_32_LEFT = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.fromAscii(x), 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\n\nexport const BYTES_32_ENCRYPTED = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.toHex(x), 64),\n    (x) => stripLeadingZeroes(x.slice(2)));\n\nfunction stripLeadingZeroes(str) {\n    for (let i=0; i < str.length; i++) {\n        if (str.slice(i, i+1) !== '0') {\n            return str.slice(i);\n        }\n    }\n \n    return str;\n}\n\n\n\n\nexport const RIGHT_PADDED_BYTES_32 = new EthereumDataType(\n    (x) => web3.utils.padRight(web3.utils.toHex(x), 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\nexport const NOTES_BYTES_32 = new EthereumDataType(\n    (x) => web3.utils.padRight(x, 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)).split('').map(x => asciiToNote[x]));\n\nexport const NOTE_BYTES_32 = new EthereumDataType(\n    (x) => web3.utils.padRight(x, 64),\n    (x) => asciiToNote[trimEmpty(web3.utils.toAscii(x))]);\n\nexport const ADDRESS = new EthereumDataType(\n    (x) => web3.utils.padLeft(x, 64),\n    (x) => getAddress(x));\n\nexport const STRING = new EthereumDataType(\n    (x) => web3.utils.padLeft(x[0], 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\nexport const BYTES_32_ARRAY = (len) =>\n    new EthereumDataType(\n        (x) => x, // no need to convert to\n        (data) => data.slice(2, 2 + len * 64));\n\nfunction getAddress(x) {\n    return '0x' + x.slice(x.length - 40);\n}\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrollContainer\":\"Overlay_scrollContainer__1qCGl\",\"spButtons\":\"Overlay_spButtons__3Py-c\",\"spButton\":\"Overlay_spButton__3jJAG\",\"logo\":\"Overlay_logo__3zoYc\",\"zeqLogo\":\"Overlay_zeqLogo__1g8a0\",\"x\":\"Overlay_x__3K0dz\",\"smallText\":\"Overlay_smallText__NJCJw\",\"sectionHero\":\"Overlay_sectionHero__2TBrR\",\"sectionLeft\":\"Overlay_sectionLeft__31YKq\",\"sectionFirst\":\"Overlay_sectionFirst__3a0Ww\",\"sectionSecond\":\"Overlay_sectionSecond__101hd\",\"sectionLast\":\"Overlay_sectionLast__2alRK\",\"sectionRight\":\"Overlay_sectionRight__1Q46X\",\"caroItem\":\"Overlay_caroItem__3Y5Xv\",\"playerCarousel\":\"Overlay_playerCarousel__2JAHf\",\"selected\":\"Overlay_selected__3wQx1\",\"noImgSelector\":\"Overlay_noImgSelector__37whm\"};","import ipfsClient from 'ipfs-http-client';\n\nvar bufferToArrayBuffer = require('buffer-to-arraybuffer');\nvar xhr = new XMLHttpRequest();\nconst IPFS_ADDRESS = '/ip4/3.17.26.249/tcp/4001/ipfs/QmeQRpfSrYcAaqkhNoArDyTUwyYiru2gJp4WY1WegQGjtR';\nconst TIMEOUT = 30000;\nconst END = [85,110,105,118,101,114,115,97,108,32,83,101,113,101,117,110,99,101,115 ]\n\nconst LOCAL = 'LOCAL';\nconst UNIVERSAL = 'UNIVERSAL';\nconst INFURA = 'INFURA';\n\nwindow.httpV = 'http://www.zequencer.io:5001';\nwindow.httpsV = 'https://www.zequencer.io:5002';\nclass IpfsClient {\n    restart() {\n        // do nothing since it doesnt even matter -_-\n    }\n\n    getIPFSPrefix() {\n        if (this.connectedLocally) {\n            return 'http://localhost:5001';\n        } else if (window.location.protocol === 'http:') {\n            return window.httpV;\n        } else if (window.location.protocol === 'https:') {\n            return window.httpsV;\n        }\n    }\n\n    getHashUrl(hash) {\n        if (this.connectedLocally) {\n            return 'http://localhost:8080/ipfs/' + hash;\n        } else if (window.location.protocol === 'http:') {\n            return '/ipfs/' + hash;\n        } else {\n            return '/ipfs/' + hash;\n        }\n    }\n\n    async getPinnedHashes() {\n        let list = await this.ipfs.refs.local();\n        return list.map(x => x.ref);\n    }\n\n    constructor() {\n        this.controllers = new Set();\n        if (window.isNFT) {\n            return;\n        }\n        if (window.location.protocol === 'http:') {\n            this.backupIpfs = new ipfsClient('ipfs.infura.io', '5001', {protocol: 'https'});\n            if (window.isNFT) {\n                this.centralIpfs = this.backupIpfs;\n                this._centralIpfs = ipfsClient('www.zequencer.io', '5001', {protocol: 'http'});\n            } else {\n                this.centralIpfs = ipfsClient('www.zequencer.io', '5001', {protocol: 'http'});\n                this._centralIpfs = this.centralIpfs;\n            }\n        } else {\n            if (window.isNFT) {\n                this.centralIpfs = this.backupIpfs;\n                this._centralIpfs = ipfsClient('www.zequencer.io', '5002', {protocol: 'https'});\n            } else {\n                this.centralIpfs = ipfsClient('www.zequencer.io', '5002', {protocol: 'https'});\n                this._centralIpfs = this.centralIpfs;\n            }\n        }\n\n        this.ipfs = this.centralIpfs;\n\n        let self = this;\n        this.connectedLocally = false;\n        this.finishedTestingLocalConnection = false;\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState == 4) {\n                // Request finished; either succesful or via timeout\n                if (xhr.status == 200) {\n                    self.ipfs = ipfsClient('localhost', '5001', {protocol: 'http'})  \n                    self.connectToCentral();\n                    self.connectedLocally = true;\n                    self.finishedTestingLocalConnection = true;\n                    this.keepSwarmConnectionAlive();\n                }\n            }\n        };\n\n        if (!window.isNFT) {\n            xhr.open(\"POST\", \"http://localhost:5001/api/v0/swarm/peers\", true);\n            xhr.timeout = 4000; // Set timeout to 4 seconds (4000 milliseconds)\n            xhr.ontimeout = function () {\n                console.log('timed out connecting to local ipfs daemon');\n            };\n        }\n\n        setTimeout(() => {\n            this.finishedTestingLocalConnection = true;\n        }, 4000);\n        xhr.send(\"\");\n    }\n\n    findProvs(hash) {\n        return new Promise((resolve, reject) => {\n            this.ipfs.dht.findprovs(hash, {maxNumProviders: 1}, (err, res) => {\n                resolve(res);\n            });\n        });\n    }\n\n    connectToCentral() {\n        try {\n                this.ipfs.swarm.connect(IPFS_ADDRESS, (err, res) => {\n                })\n                    .catch(e => console.log('error'));\n            } catch (e) {\n                console.log('error connecting to ipfs');\n            }\n    }\n\n    keepSwarmConnectionAlive() {\n        try {\n            this.ipfs.swarm.connect(IPFS_ADDRESS, (err, res) => {\n            })\n                .catch(e => console.log('error'));\n        } catch (e) {\n            console.log('error connecting to ipfs');\n        }\n        setInterval(() => {\n            if (window.sequencerEngine && window.sequencerEngine.getSequenceId) {\n                let id = window.sequencerEngine.getSequenceId();\n                if (window.sequencerEngine.store.getState().sequencer.isPlaying[id]) {\n                    return;\n                }\n            }\n            try {\n                this.ipfs.swarm.connect(IPFS_ADDRESS, (err, res) => {\n                })\n                    .catch(e => console.log('error'));\n            } catch (e) {\n                console.log('error connecting to ipfs');\n            }\n        }, 60000);\n    }\n\n    isConnectedLocally() {\n        return this.connectedLocally;\n    }\n\n    addArrayBuffer(arrayBuffer, id) {\n        let self = this;\n        return this.addHelper(arrayBuffer, id);\n    }\n\n    addArrayBufferAndSaveToDB(arrayBuffer, id) {\n        return this.addBlobAndSaveToDB(new Blob([new Uint8Array(arrayBuffer)]), id);\n    }\n\n    addHelper(arrayBuffer, id=0, name) {\n        if (name === undefined) {\n            name = 'hello';\n        } \n        let self = this;\n        return new Promise((resolve, reject) => {\n            let _ipfs = this._centralIpfs || this.ipfs;\n            if (!_ipfs) {\n                if (window.location.protocol === 'http:') {\n                    _ipfs = ipfsClient('www.zequencer.io', '5001', {protocol: 'http'});\n                } else {\n                    _ipfs = ipfsClient('www.zequencer.io', '5002', {protocol: 'https'});\n                }\n            }\n            _ipfs.add({name: name, path:'hello', content: new Buffer(arrayBuffer)}, (err, ipfsHash) => {\n                console.log(\"IPFS HASH = \", ipfsHash);\n                let hash = ipfsHash[0].hash;\n                if (err) {\n                    reject(err);\n                } else {\n                    resolve(hash);\n                }\n            }); \n        });\n    }\n\n    addBuffer(buffer, location=LOCAL, noUTF) {\n        return new Promise((resolve, reject) => {\n            let ipfsObject = this.centralIpfs;\n            ipfsObject.add(\n                buffer\n                , (err, ipfsHash) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    let hash = ipfsHash[0].hash;\n                    ipfsObject.pin.add(hash);\n\n                    resolve(hash);\n                }\n            });\n        });\n    }\n\n    addJson(json, location=LOCAL, noUTF) {\n        return new Promise((resolve, reject) => {\n            console.log('adding json noUTF=', noUTF, json);\n            let _ipfs = this._centralIpfs || this.ipfs;\n            if (!_ipfs) {\n                if (window.location.protocol === 'http:') {\n                    _ipfs = ipfsClient('www.zequencer.io', '5001', {protocol: 'http'});\n                } else {\n                    _ipfs = ipfsClient('www.zequencer.io', '5002', {protocol: 'https'});\n                }\n            }\n            _ipfs.add(\n                Buffer.from(JSON.stringify(json)) \n                , (err, ipfsHash) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    let hash = ipfsHash[0].hash;\n                    _ipfs.pin.add(hash);\n                    resolve(hash);\n                }\n            });\n\n            if (location === LOCAL) {\n                // add to other IPFS nodes for redundancy\n                if (_ipfs !== this.centralIpfs) {\n                    this.addJson(json, UNIVERSAL, noUTF)\n                        .then((hash) => resolve(hash));\n                }\n                this.addJson(json, INFURA, noUTF)\n                    .then((hash) => resolve(hash));\n            }\n        });\n    }\n\n    getJson(ipfsPath, useCentral=false, timeout=10000, isBytes=false) {\n        this.restart();\n        return new Promise((resolve, reject) => {\n            if (isBytes) {\n                this.ipfs.cat(ipfsPath, function (err, file) {\n                    resolve(JSON.parse(file.toString('utf8')));\n                });\n                return;\n            }\n            let url = \"/api/v0/cat?arg=\" + ipfsPath;\n            let ipfs = useCentral ? this.centralIpfs : this.ipfs;\n            let controller = new AbortController();\n            this.controllers.add(controller);\n            let signal = controller.signal;\n            setTimeout(() => {\n                controller.abort();\n                this.controllers.delete(controller);\n                reject();\n            }, timeout);\n\n            let method = 'POST';\n            let _url = this.getIPFSPrefix() + url;\n            if (window.isNFT) {\n                method = 'GET';\n                _url = ipfsPath;\n                fetch(\n                    _url,\n                    {signal,\n                     method\n                    })\n                    .then(async (resp) => {\n                        let json = await resp.json();\n                        resolve(json);\n                    });\n                return;\n            }\n\n            if (window.isNFT) {\n                return resolve({});\n            }\n\n            let dateA = new Date().getTime();\n            fetch(_url,\n                  {\n                      signal,\n                      method\n                  })\n                .then(async (response) => {\n                    let dateB = new Date().getTime();\n                    console.log('raw request took %s ms', dateB-dateA);\n                    this.readAllChunks(response.body).then(\n                        ret => {\n                            console.log(\"read all chunks took %s ms\", new Date().getTime() - dateB);\n                            let merged = this.mergeArrays(ret, 0, false);\n                            let str = new TextDecoder().decode(merged); \n                            resolve(JSON.parse(str));\n                        });\n                });\n        });\n    }\n\n    async addBytesArray(bytesArray) {\n        let b = new Uint8Array(bytesArray.length + END.length);\n        b.set(bytesArray, 0);\n        b.set(END, bytesArray.length);\n        let hash = await this.addHelper(b.buffer);\n        this.ipfs.pin.add(hash);\n        return hash;\n    }\n\n    async pin(x) {\n        return await this.ipfs.pin.add(x);\n    }\n\n    addBlob(blob, name) {\n        this.restart();\n        return new Promise((resolve, reject) => {\n            let arrayBuffer;\n            let fileReader = new FileReader();\n            let self = this;\n            fileReader.onload = function() {\n                arrayBuffer = this.result;\n                self.addHelper(arrayBuffer, undefined, name)\n                    .then(hash => {\n                        if (this.connectedLocally) {\n                            self.ipfs.pin.add(hash);\n                        }\n                        self.centralIpfs.pin.add(hash);\n                    \n                        resolve(hash);\n                    })\n                    .catch(err => reject(err));\n            };\n            fileReader.readAsArrayBuffer(blob);\n        });\n    }\n\n    addBlobAndSaveToDB(blob, id) {\n    }\n\n    converttoarraybuffer(blob) {\n        return new Promise((resolve, reject) => {\n            let arraybuffer;\n            let filereader = new filereader();\n            let self = this;\n            filereader.onload = function() {\n                resolve(this.result);\n            };\n            filereader.readasarraybuffer(blob);\n        });\n    }\n\n    readAllChunks(readableStream) {\n        const reader = readableStream.getReader();\n        const chunks = [];\n        \n        function pump() {\n            return reader.read().then(({ value, done }) => {\n                if (done) {\n                    return chunks;\n                }\n                chunks.push(value);\n                return pump();\n            });\n        }\n        \n        return pump();\n    }\n\n    getSound(hash, timeout=TIMEOUT) {\n        return new Promise((resolve, reject) => {\n            let controller = new AbortController();\n            this.controllers.add(controller);\n            let signal = controller.signal;\n            setTimeout(() => {\n                controller.abort();\n                this.controllers.delete(controller);\n                reject();\n            }, timeout);\n\n            let method = 'GET';\n            let _url = \"https://zequencer.io/ipfs/\" + hash; //this.getIPFSPrefix() + '/api/v0/get?arg=' + hash + '&stream-channels=true';\n            if (window.spores) {\n                _url = \"https://zequencer.mypinata.cloud/ipfs/\" + hash;\n            }\n            if (window.isNFT) {\n                method = 'GET';\n                _url = hash;\n                return fetch(\n                    _url,\n                    {signal,\n                     method\n                    })\n                    .then(async (resp) => {\n                        let json = await resp.arrayBuffer();\n                        resolve(new Uint8Array(json));\n                    });\n            }\n\n            if (window.isNFT) {\n                return resolve([]);\n            }\n\n            let dateA = new Date().getTime();\n            fetch(_url,\n                  {signal,\n                   method\n                  })\n                .then(async (response) => {\n                    let dateB = new Date().getTime();\n                    console.log(\"raw response took %s ms\", dateB - dateA);\n                    let arrayBuffer = await response.arrayBuffer();\n                    let dateC = new Date().getTime();\n                    console.log(\"Array buffer tranform took %s ms\", new Date().getTime() - dateB);\n                    let processed = this.processArray(new Uint8Array(arrayBuffer));\n                    console.log(\"processing took % ms\", new Date().getTime() - dateC);\n                    resolve(processed);\n                    return;\n                    this.readAllChunks(response.body).then(\n                        ret => {\n                            let merged = this.mergeArrays(ret);\n                            resolve(merged);\n                        })\n                        .catch(err => console.log('error reading chunks'));\n                })\n                .catch(err => {\n                    console.log('aborted');\n                });\n        });\n    }\n\n    arrayToBuffer(array) {\n        var buffer = new ArrayBuffer(array.length);\n\n        array.map(function(value, i){buffer[i] = value});\n        return buffer;\n    }\n\n    cancel() {\n        console.log('cancelling = ', this.controllers);\n        Array.from(this.controllers).forEach(\n            x => x.abort());\n        // this.controllers = new Set();\n    }\n\n    processArray(array, skip=512, skipEnd=true) {\n        if (!skipEnd) {\n            return array;\n        }\n\n        let a = array; //array.slice(0, array.length - (1024));\n        let offset = this.findEnd(a, END);\n        if (offset !== -1) {\n            let x = a.slice(0, offset);\n            return x;\n        }\n        return array.slice(0, array.length - (1024));;\n    }\n\n    mergeArrays(arrays, skip=512, skipEnd=true) {\n        let size = 0;\n        for (let i in arrays) {\n            size += arrays[i].length;\n        }\n\n        let array = new Uint8Array(size - skip);\n        let count = 0;\n        for (let i in arrays) {\n            if (count === 0) {\n                array.set(arrays[i].subarray(skip), count);\n                count += arrays[i].length - skip;\n            } else {\n                array.set(arrays[i], count);\n                count += arrays[i].length;\n            }\n        }\n\n        if (!skipEnd) {\n            return array;\n        }\n\n        let a = array; //array.slice(0, array.length - (1024));\n        let offset = this.findEnd(a, END);\n        if (offset !== -1) {\n            let x = a.slice(0, offset);\n            return x;\n        }\n        return array.slice(0, array.length - (1024));;\n    }\n\n    findEnd(array, ending) {\n        let index = array.length - 1600;\n        let iter = array.slice(index).values();\n        let foundIndex = 0;\n        for (let i=index; i < array.length; i++) {\n            let value = iter.next().value;\n            if (value === ending[foundIndex]) {\n                if (foundIndex == 0) {\n                    index = i;\n                }\n                foundIndex++;\n                if (foundIndex === ending.length - 1) {\n                    return index;\n                }\n            } else {\n                foundIndex=0;\n                index=i;\n            }\n\n        }\n        return -1;\n    }\n\n    getAudioBuffer(hash, context) {\n        this.restart();\n        return new Promise((resolve, reject) => {\n            this.getSound(hash)\n                .then(blob => \n                      context.decodeAudioData(bufferToArrayBuffer(blob), function(buffer) {\n                          resolve(buffer);\n                      }, function (y, d, e) { if (e) { reject(e); }}))\n                .catch(err => {\n                    reject(err);\n                });\n        });\n    }\n}\n\nconst ipfs = new IpfsClient();\n\nexport default ipfs;\n"],"sourceRoot":""}