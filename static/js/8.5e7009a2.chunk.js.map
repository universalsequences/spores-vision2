{"version":3,"sources":["engine/mix/actions.js","components/UniversalNavigator.js","engine/mix/constants.js","engine/mix/MultiMix.js","components/user/PatternButtons.js","engine/MultiSequencerEngine.js","components/v2/SubMidiEffectsComponent.js","components/v2/SequencerScale.js","components/dropdowns/SequencerContextMenu.js","components/v2/StepSequencer.js","components/bottomBar/HiddenTracks.js","components/bottomBar/SequenceButtonsContainer.js","components/user/UserInfo.js","components/user/ColorsComponent.js","components/user/MixPlayerPane.js","components/user/TaggerComponent.js","repos/UserMix.js","components/user/SpotlightTrack.js","components/user/ConnectToUserModal.js","components/user/DirectMessageModal.js","components/user/ProfileNavigatorComponent.js","components/user/TracksComponent.js","components/user/AddTracksButton.js","components/user/UserMixesComponent.js","components/user/MixNameComponent.js","components/user/Guilds.js","components/user/LinkedMemberModal.js","components/user/LinkedMembers.js","components/user/LinksComponent.js","components/user/UserProfileDetails.js","components/PreferencesView.js","components/bottomBar/AutoCompleteSuggestions.js","components/StickyScriptComponent.js","components/v2/Sequencer.js","components/user/EthereumInstructions.js","components/user/UserComponent.js"],"names":["__webpack_require__","d","__webpack_exports__","switchToPattern","playWork","loadWork","unloadWork","changeTranspose","changeVolume","changeColor","changeBPM","_constants_js__WEBPACK_IMPORTED_MODULE_0__","sequenceId","subSequenceId","patternNumber","type","SWITCH_TO_PATTERN","work","PLAY_WORK","isTransport","LOAD_WORK","UNLOAD_WORK","transpose","CHANGE_TRANSPOSE","volume","CHANGE_VOLUME","color","CHANGE_COLOR","bpm","CHANGE_BPM","UniversalNavigator","window","location","this","props","view","_this","samplerClassName","exploreClassName","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","components_modals_LoginModal_js__WEBPACK_IMPORTED_MODULE_9__","show","showLogin","onClick","onClickLogo","onClickSequencer","onClickExplore","onClickSampler","components_toolbar_TransactionsView__WEBPACK_IMPORTED_MODULE_8__","store","components_guilds_GuildsMenu_js__WEBPACK_IMPORTED_MODULE_7__","Component","connect","state","sequencer","ROLL_ON","ROLL_OFF","superclass","_superclass","Object","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","_class2","_super","_createSuper","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__","_len","arguments","length","args","Array","_key","call","apply","concat","events","hasEdits","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__","key","get","explore","isRecordingMix","sixteenths","parseFloat","Tone","Transport","position","split","Math","floor","trackStep","value","action","scheduled","undefined","time","currentTransportTime","sequencerEngine","getSequencerEngine","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","push","play","isNothingPlaying","clearScheduledEvents","worksLoaded","_loadWork","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","console","log","some","w","newSequence","setWorkDefaults","abrupt","dispatch","setWorksLoaded","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","loadTrack","stop","_x","index","indexOf","splice","unloadTrack","switchToSubSequence","channelMixer","mixEffects","filter","setMixColorValue","setWorkTranspose","setMasterVolume","setWorkVolume","updateBpm","initialState","_this$initialState","workVolumes","workTransposes","mixColorValues","id","engine","getState","user","_this2","saveInitialValuesForMix","setInitialValuesForMix","eventIds","map","event","schedule","setTimeout","forEach","clear","set","edits","setMixHasEdits","clearMix","i","NAMES","PatternButtons","multiSequencerEngine","currentSubSequence","subSequences","chooseSubSequence","tracks","getSubSequencesComponent","patterns","p","style","currentPattern","backgroundColor","switchPattern","engineId","MultiSequencerEngine","_Users_alecresende_code_visual_sampler_sequencer_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","idToSequencerEngine","headSequencerEngine","sequencerEnginesToPlay","sequenceIdQueue","initAubio","keys","_trackStep","trackStepReal","Aubio","then","aubio","initSamplerTrack","s","sampleRateChooser","setSampleRate","samplerTrack","ticks","getTicksAtTime","transportTime","TransportTime","playing","playSequence","getSequencesPlaying","isPlaying","dispose","setIsPlaying","sequencesNotPlaying","scripting","MAX_TRACKS","shift","setLoadingSequence","ScriptableSequencerEngine","connectMixEffects","Scripting","setScripting","loadedSequenceId","loadSequence","auxEffects","ChannelStripEffects","Master","auxSend","input","loadNewSequence","isSampler","isSequenceRolling","sequence","cancel","setHeadSequencerEngine","sequencesPlaying","setIsPlayingMix","x","every","stepOneCallback","_this3","getSamplerPlaySequence","t","subSequence","_ref","react_default","MidiEffects","track","dropdownPos","setDropdownPos","useWindowClearer","selected","createPad","useCallback","createPadFromTracks","left","top","y","onMouseDown","arrangement","bottomMode","showingPiano","showPianoRoll","showSelectorMode","sidebarCollapsed","selector","sidebarViewMode","trackFocused","numTracks","selectedTrack","mix","isMapping","effects","accumulatorParameterSelected","stepsGroupMode","groups","setTransformationEdgeDragging","setSelectedSteps","setSelectedPianoRollSteps","setStepsGroupMode","scrollContainer","useRef","_useState","useState","_useState2","slicedToArray","tracksClassName","viewMode","SEQUENCER_VIEW","stretchTracks","SOUNDS","showSequences","showInstruments","showPresets","useEffect","onContextMenu","e","preventDefault","stopPropagation","clientX","clientY","dropabble","ref","dropdowns_SequencerContextMenu","LinkedParameterVisualizer","Xanadu","GroupEdges","ConditionedComponent","condition","LFOTrackComponent","envelopesTrack","lfosTrack","PulledEffects","trackNumber","TrackComponent","PadsContainer","SendsTrackComponent","v2_SubMidiEffectsComponent","colors","Colors","HiddenTrack","_ref2","getColorForTrack","borderColor","truncate","presetName","getName","tracksToHide","setTracksToHide","_tracks","sort","b","showTrack","_tracksToHide","toConsumableArray","HiddenTracks_HiddenTrack","SequenceButtonsContainer","schedulePlay","isRecording","recording","masterResampler","prepare","setResampleMaster","setQuantized","quantized","resolution","displayResolution","trackRolling","loadingSequence","isNumber","setState","timestretchTimeout","clearTimeout","soundIds","soundId","sampler","samplers","tempoSynced","syncTempo","swing","updateSwing","togglePatternLock","playClassName","playScheduled","isLoading","onMouseOver","setContextualHelp","PLAY_BUTTON","onMouseLeave","RECORD_BUTTON","record","isRecordingExpanded","ROLL_BUTTON","onClickRollingMode","QUANTIZE_BUTTON","toggleQuantize","bpmParameter","EffectParameterSlider","name","contextualHelp","BPM_SLIDER","parameter","root","step","min","isParameter","max","LockButton","BPM_LOCK","patternLocked","toggleLock","getSequenceId","isCommandDown","keyboard","sequenceName","patternLocks","clock","commandPrefix","commands","isResampling","resampleMaster","setViewMode","element","setIsRecording","setTrackRolling","rolling","setCommandPrefix","prefix","setIsRecordingExpanded","setCommandInput","flag","UserInfo","classCallCheck","userName","editingName","nameValue","own","regenerator_default","t1","userId","ethereum","getUser","t2","sent","t0","isEditing","chooseUserName","users","setUserName","onUserNameUpdated","doesUserOwnPage","reactstrap_es","onChange","target","onKeyUp","onKeyPress","placeholder","addonType","size","onClickName","profilePicture","MixPlayerPane","bind","assertThisInitialized","j","PlayButton","react_bootstrap_slider_default","change","onChangeBPM","orientation","reversed","children","currentMix","loadedTracks","TaggerComponent","text","sequenceMetadata","tagSequence","onInputType","onTag","UserMix","json","includeId","SpotlightTrack","showComments","showTagger","numNotes","loadDate","loadUser","loadNumNotes","notes","getNotes","_callee2","_context2","getUserName","_callee3","block","date","_args3","_context3","web3","eth","getBlock","blockNumber","Date","timestamp","toLocaleString","isPlayable","onClickDelete","v","onEditSequence","SPOTLIGHT","MIXES","isLoaded","setDraggingSpotlightTrack","draggingSpotlightTrack","moveKey","setSpotlightTracks","userMix","fromJson","values","setCurrentUserMix","getJson","setUserHasEditsToSave","brighten","getColorForHash","onDragStart","onDragOver","onDrop","draggable","masterVolume","onChangeVolume","onClickTrackName","getSequenceName","PulseLoader_default","sizeUnit","loading","onClickEdit","onClickTag","onClickComment","CommentsComponent","onHide","user_TaggerComponent","masterVolumes","ConnectToUserModal","guilds","selectedGuild","ownUserName","fetchUserName","fetchGuilds","getGuildsForUser","label","guildId","option","requestToAddMember","connectWithUser","hide","preset","Modal","dialogClassName","Header","closeButton","Title","Body","dist_default","options","getGuildsOptions","o","onSelectGuild","getSelectedGuild","Footer","variant","DirectMessageModal","commentText","messaging","sendMessage","onMessage","ProfileNavigatorComponent","showConnectModal","showMessageModal","user_DirectMessageModal","user_ConnectToUserModal","setUserViewMode","LINKS","hasEditsToSave","onClickSave","onClickDirectMessage","src","onClickConnect","TracksComponent","user_SpotlightTrack","onDeleteTrack","AddTracksButton","userLoaded","onClickAddTrack","UserMixesComponent","onClickDeleteMix","mixes","onClickMix","MixNameComponent","addEditedMix","chooseMixName","onNewMix","onBackToMixes","Guilds","confirm","leaveGuild","onClickGuild","guild","Guilds_Guild","renameGuild","Guild","_super2","LinkedMemberModal","setGuildName","member","guildName","LinkedMembers","members","selectedMember","fetchMembers","open","user_LinkedMemberModal","onHideModal","getLinkedMembers","LinkedMembers_LinkedMember","onClickMember","LinkedMember","LinksComponent","user_LinkedMembers","user_Guilds","NewMemberRequests","UserProfileDetails","newMix","spotlightTracks","loaded","Set","has","add","setLoadedTracks","from","delete","_this4","sequencerEngineEditing","user_LinksComponent","user_MixNameComponent","user_AddTracksButton","user_UserMixesComponent","user_TracksComponent","getTracks","user_MixPlayerPane","saveAsMix","filterLoadedTracks","getAllTracks","hideSequences","mode","PreferencesView","midiEngine","clockSync","stopListening","setLatency","startListening","loadAvailableDevices","updateChannelCount","stereoConnected","isMulti","switchOutputs","stream","deviceId","audioInputManager","newInputSource","_React$createElement","SubPageHeader","headerText","onClickBack","getInputs","PreferencesView_MidiInput","syncChanged","getOutputs","output","PreferencesView_MidiOutput","SampleRateChooser","AudioInputChooser","defaultClassName","onChooseAudio","PreferencesView_MultiChannelButton","isMultiChannelOutput","isMultiChannelRecording","numberOfChannels","isMultiChannel","onLatencyChanged","latency","defineProperty","ClockOptions","MidiInput","isInputSynced","unsyncInput","syncInput","isInputTracked","untrackInput","trackInput","setInputMode","KEYBOARD","PADS","synced","tracked","getInputMode","onClickTracked","onClickSynced","onClickKeys","onClickPads","MidiOutput","_this5","_super3","syncOutput","isOutputTracked","untrackOutput","trackOutput","_this6","systemOutput","onClickSync","MultiChannelButton","_this9","_super5","decentralized","_this10","setDecentralized","AutoCompleteSuggestions","suggestions","StickyScriptComponent","focused","scriptingFocused","command","info","onFlashInfo","nextProps","focus","runScript","update","running","blur","upHistory","downHistory","autoComplete","terms","results","tags","longestCommonPrefix","_getParameters","effectName","parameters","matchingEffects","matchingMidiEffects","matchingLiveEffects","lastParameter","_autoComplete2","completedParameters","startsWith","slice","searcher","freeTextSearch","TAG","join","getLongestCommonPrefix","searchForTags","getParameters","includes","autoCompleteParameter","nameToEffect","n","toLowerCase","nameToMidiEffect","nameToLiveEffect","tagsToSearch","tagToSearch","tagsFound","longestPrefix","selectedTags","getTopTags","getCommonPrefix","onSetInput","scriptClassName","bottomBar_AutoCompleteSuggestions","handleChange","onKeyDown","setInput","setShowPianoRoll","ContextualHelpComponent","isTrackFocused","wallpaper","animateWallpaper","creatingNewPack","packs","packToEdit","fullScreenZObject","zobject","setSequencerEngine","setArrangementBottomHeight","height","setArrangementBottomResizing","resizing","setSamplesDragging","setSampleDragging","sample","setWallpaper","setAnimateWallpaper","setSampleTagDragging","setPresetDragging","setPackWindowPosition","setPulledEffects","setEffectDragging","fx","dragEffect","setMidiEffectDragging","setPullablePartDragging","setTrackDragging","_useSequencer","useSequencer","_useSequencer2","ethereumSearcher","_useState3","_useState4","setScriptingInput","_useKeyListener","useKeyListener","scrollAreaClass","ARRANGEMENT_VIEW","sequencerClassName","PIANO_ROLL","innerHeight","WAVEFORM","_isNFT","MIX_VIEW","onMouseMove","isBottomResizing","bottomHeight","pageY","bottomOffset","draggingWindow","pageX","onMouseUp","_sequencerEngine$stat","instruments","presets","pullablePartDragging","trackDragging","sampleDragging","samplesDragging","sampleTagDragging","hasDragging","clearAllDragging","asyncToGenerator","_sequencerEngine$stat2","part","pulledEffects","_iterator","_step","pad","_track","_iterator2","_step2","effectDragging","effect","_pulledEffects","objectSpread","removeTrack","_createForOfIteratorHelper","pads","done","containsSample","f","finish","addSound","Sample","load","searchForSounds","presetDragging","loadPreset","midiEffectDragging","isNFT","item","lstorage","getItem","backgroundImage","ipfs","getHashUrl","isMobile","NFTViewer","zObject","NewPackWindow","SequencerToolbar","Modals","Mix","ArrangementView","PREFERENCES_VIEW","components_PreferencesView","midi","StepSequencer","SidebarComponent","SimpleSequencerBottomToolbar","components_StickyScriptComponent","showScriptingView","EthereumInstructions","href","UserComponent","navigator","platform","setContext","AudioContext","sampleRate","MID_SAMPLE_RATE","LOW_SAMPLE_RATE","match","params","profile","hasEthereum","loadedUser","userNameNotFound","isPermissionedUser","context","latencyHint","loadProfile","crypto","m","setProfile","deleteTrack","_callee4","_context4","delegateYield","_loop","Promise","resolve","reject","getSequence","t3","convertSequence","_x3","_x4","all","title","editedMix","replacedMix","mixToDelete","indexToDelete","_callee5","_context5","_callee6","_context6","isUserNameAvailable","getUserId","getProfile","loadMixes","loadSpotlightTracks","userProfileDetails","user_UserProfileDetails","addTrack","v2_Sequencer","onGoBack","PasswordModal","user_UserInfo","user_ProfileNavigatorComponent","user_EthereumInstructions","isPlayingMix"],"mappings":"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","file":"static/js/8.5e7009a2.chunk.js","sourcesContent":["import {\n    SWITCH_TO_PATTERN,\n    PLAY_WORK,\n    LOAD_WORK,\n    UNLOAD_WORK,\n    CHANGE_TRANSPOSE,\n    CHANGE_VOLUME,\n    CHANGE_BPM,\n    CHANGE_COLOR,\n    ROLL_ON,\n    ROLL_OFF\n} from './constants.js';\n\nexport const switchToPattern =\n    (sequenceId, subSequenceId, patternNumber) => ({\n        type: SWITCH_TO_PATTERN,\n        sequenceId,\n        subSequenceId,\n        patternNumber\n    });\n\nexport const playWork =\n    (work) => ({\n        type: PLAY_WORK,\n        work,\n        isTransport: true\n    });\n\nexport const loadWork =\n    (work) => ({\n        type: LOAD_WORK,\n        work\n    });\n\nexport const unloadWork =\n    (work) => ({\n        type: UNLOAD_WORK,\n        work\n    });\n\nexport const changeTranspose =\n    (sequenceId, transpose) => ({\n        type: CHANGE_TRANSPOSE,\n        sequenceId,\n        transpose\n    });\n\nexport const changeVolume  =\n    (sequenceId, volume) => ({\n        type: CHANGE_VOLUME,\n        sequenceId,\n        volume\n    });\n\nexport const changeColor=\n    (sequenceId, color) => ({\n        type: CHANGE_COLOR,\n        sequenceId,\n        color\n    });\n\nexport const changeBPM =\n    (bpm) => ({\n        type: CHANGE_BPM,\n        bpm\n    });\n\nexport const rollOn =\n    (resolution) => ({\n        type: ROLL_ON,\n        resolution\n    });\n\nexport const rollOff =\n    () => ({\n        type: ROLL_OFF\n    });\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport GuildsMenu from 'components/guilds/GuildsMenu.js';\nimport TransactionsView from 'components/toolbar/TransactionsView';\nimport LoginModal from 'components/modals/LoginModal.js';\nimport '../navigator.scss';\n\nclass UniversalNavigator extends Component {\n    onClickSequencer() {\n        window.location = '/create/';\n    }\n\n    onClickSampler() {\n        if (this.props.view !== 'DISCOVER') {\n            window.location = '/discover/';\n        }\n    }\n\n    onClickExplore() {\n        if (this.props.view !== 'EXPLORE') {\n            window.location = '/explore/';\n        }\n    }\n\n    onClickLogo() {\n        window.location = '/';\n    }\n\n    render() {\n        let view = this.props.view || '';\n        let samplerClassName = view === 'DISCOVER' ? 'navigator-button selected' : 'navigator-button';\n        let exploreClassName = view === 'EXPLORE' ? 'navigator-button selected' : 'navigator-button';\n        return (\n            <div className=\"navigator\">\n              <LoginModal show={this.props.showLogin}/>\n              <div onClick={()=>this.onClickLogo()} className={\"universal-sequences-logo \" + view}>\n                ZEQUENCER\n              </div>\n              <div onClick={() => this.onClickSequencer()} className=\"navigator-button\">\n                CREATE\n              </div>\n              <div onClick={() => this.onClickExplore()} className={exploreClassName}>\n                EXPLORE\n              </div>\n              <div onClick={() => this.onClickSampler()} className={samplerClassName}>\n                SAMPLE \n              </div>\n              <div className=\"guilds-menu-container\">\n                <TransactionsView store={this.props.store}/>\n                <GuildsMenu store={this.props.store}/>\n              </div>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        showLogin: state.sequencer.showLogin,\n    }\n};\n\nexport default connect(mapStateToProps, null)(UniversalNavigator);\n","export const SWITCH_TO_PATTERN = 1;\nexport const PLAY_WORK = 2;\nexport const LOAD_WORK = 3;\nexport const UNLOAD_WORK = 4;\nexport const CHANGE_TRANSPOSE = 5;\nexport const CHANGE_VOLUME = 6;\nexport const CHANGE_BPM = 7;\nexport const CHANGE_COLOR = 8;\nexport const ROLL_ON = 9;\nexport const ROLL_OFF = 10;\n","import {\n    SWITCH_TO_PATTERN,\n    PLAY_WORK,\n    LOAD_WORK,\n    UNLOAD_WORK,\n    CHANGE_TRANSPOSE,\n    CHANGE_VOLUME,\n    CHANGE_BPM,\n    CHANGE_COLOR,\n    ROLL_ON,\n    ROLL_OFF,\n} from './constants.js';\n\nimport Tone from 'tone';\nimport {\n    setWorksLoaded,\n    setWorkTranspose,\n    setMixColorValue,\n    setMixHasEdits,\n    setWorkVolume,\n} from 'actions/index.js';\n\n// mixin for recording mixes in explore page.\n// gets mixed in with MultiSequencerEngine\n\nexport default superclass => class extends superclass  {\n    events = [];\n    hasEdits = false;\n\n    get isRecordingMix() {\n        return this.state.explore.isRecordingMix;\n    }\n\n    get currentTransportTime() {\n        let sixteenths = parseFloat(Tone.Transport.position.split(\":\")[2]);\n        let remainder = sixteenths - Math.floor(sixteenths);\n        return \"0:0:\" + (remainder + (this.trackStep / 2));\n    }\n\n    dispatch(action, scheduled=false) {\n        let time = this.currentTransportTime; \n        let sequencerEngine =\n            action.sequenceId && this.getSequencerEngine(action.sequenceId);\n\n        switch (action.type) {\n        case SWITCH_TO_PATTERN:\n            this.switchToPattern(\n                sequencerEngine,\n                action.subSequenceId,\n                action.patternNumber\n            );\n            break;\n        case PLAY_WORK:\n            this.playWork(action.work);\n            break;\n        case LOAD_WORK:\n            this.loadWork(action.work);\n            break;\n        case UNLOAD_WORK:\n            this.unloadWork(action.work);\n            break;\n        case CHANGE_TRANSPOSE:\n            this.changeTranspose(sequencerEngine, action.transpose);\n            break;\n        case CHANGE_VOLUME:\n            this.changeVolume(sequencerEngine, action.volume);\n            break;\n        case CHANGE_COLOR:\n            this.changeColor(sequencerEngine, action.color);\n            break;\n        case CHANGE_BPM:\n            this.changeBPM(action.bpm);\n            break;\n        }\n\n        if (!scheduled && this.isRecordingMix) {\n            action = {\n                ... action,\n                time: time\n            };\n            this.events.push(action);\n            this.hasEdits = true;\n        }\n    }\n\n    playWork(work) {\n        this.play(work);\n\n        if (this.isNothingPlaying()) {\n            // then we must clear\n            this.clearScheduledEvents();\n        }\n    }\n\n    get worksLoaded() {\n        return this.state.explore.worksLoaded;\n    }\n\n    async loadWork(work) {\n        console.log('MultiMix.loadWork =', work);\n        // first check if work is loaded already\n        if (this.worksLoaded.some(\n            w => w.newSequence === work.newSequence)) {\n            let sequencerEngine = this.getSequencerEngine(work.newSequence);\n            this.setWorkDefaults(sequencerEngine);\n            return;\n        }\n\n        // if not then load it\n        this.store.dispatch(\n            setWorksLoaded([... this.worksLoaded, work]));\n\n        await this.loadTrack(work.newSequence);\n    }\n\n    unloadWork(work) {\n        // first check that we havent already unloaded\n        if (!this.worksLoaded.some(\n            w => w.newSequence === work.newSequence)) {\n            return;\n        }\n        let worksLoaded = [... this.worksLoaded];\n        let index = worksLoaded.indexOf(work);\n        worksLoaded.splice(index, 1);\n        this.store.dispatch(\n            setWorksLoaded(worksLoaded));\n        this.unloadTrack(work.newSequence);\n    }\n\n    switchToPattern(sequencerEngine, subSequenceId, patternNumber) {\n        if (!sequencerEngine) {\n            return;\n        }\n        sequencerEngine.switchToSubSequence(subSequenceId);\n        sequencerEngine.switchToPattern(patternNumber);\n    }\n\n    changeColor(sequencerEngine, color) {\n        if (!sequencerEngine) {\n            return;\n        }\n        sequencerEngine.channelMixer.mixEffects.filter = color;\n        this.store.dispatch(\n            setMixColorValue(\n                sequencerEngine.sequenceId,\n                color));\n    }\n\n    changeTranspose(sequencerEngine, transpose) {\n        if (!sequencerEngine) {\n            return;\n        }\n        sequencerEngine.transpose = transpose;\n        this.store.dispatch(\n            setWorkTranspose(\n                sequencerEngine.sequenceId,\n                transpose));\n    }\n\n    changeVolume(sequencerEngine, volume) {\n        if (!sequencerEngine) {\n            return;\n        }\n        sequencerEngine.setMasterVolume(volume, 0.05);\n        this.store.dispatch(\n            setWorkVolume(\n                sequencerEngine.sequenceId,\n                volume));\n    }\n\n    changeBPM(bpm) {\n        this.updateBpm(bpm);\n    }\n\n    setInitialValuesForMix() {\n        if (this.initialState) {\n            let {\n                workVolumes,\n                worksLoaded,\n                workTransposes,\n                mixColorValues,\n                bpm\n            } = this.initialState;\n\n            if (bpm) {\n                this.changeBPM(bpm);\n            }\n            \n            for (let id in workVolumes) {\n                let engine = this.getSequencerEngine(id);\n                if (engine) {\n                    this.changeVolume(\n                        engine,\n                        workVolumes[id]);\n                }\n            }\n            for (let id in workTransposes) {\n                let engine = this.getSequencerEngine(id);\n                if (engine) {\n                    this.changeTranspose(\n                        engine,\n                        workTransposes[id]);\n                }\n            }\n            for (let id in worksLoaded) {\n                this.loadWork(worksLoaded[id]);\n            }\n            for (let id in mixColorValues) {\n                let engine = this.getSequencerEngine(id);\n                if (engine) {\n                    this.changeColor(\n                        engine,\n                        mixColorValues[id]);\n                }\n            }\n        }\n    }\n\n    saveInitialValuesForMix() {\n        let state = this.store.getState();\n        this.initialState = {\n            worksLoaded: [... state.explore.worksLoaded],\n            workTransposes: {... state.explore.workTransposes},\n            workVolumes: {... state.explore.workVolumes},\n            bpm: state.user.bpm,\n            mixColorValues: {... state.explore.mixColorValues}\n        };\n    }\n\n    playMix(play) {\n        if (play) {\n            if (this.isRecordingMix) {\n                this.saveInitialValuesForMix();\n            } else {\n                this.setInitialValuesForMix();\n            }\n\n            this.eventIds = this.events.map(\n                event =>\n                    Tone.Transport.schedule((time) => {\n                        if (event.type === PLAY_WORK) {\n                            time = 0;\n                        }\n                        setTimeout(() => {\n                            this.dispatch(event, true);\n                        }, time);\n                    }, event.time));\n            this.play();\n        } else {\n            this.clearScheduledEvents();\n            this.stop();\n        }\n\n    }\n\n    clearScheduledEvents() {\n        if (this.eventIds) {\n            this.eventIds.forEach(id => Tone.Transport.clear(id));\n            this.eventIds = [];\n        }\n    }\n\n    setWorkDefaults(work) {\n        this.changeTranspose(work, 0);\n        this.changeVolume(work, 0);\n    }\n\n    set hasEdits(edits) {\n        this.store.dispatch(\n            setMixHasEdits(edits));\n    }\n\n    unloadAll() {\n        this.clearMix();\n        this.stop();\n        this.hasEdits = false;\n        \n        let worksLoaded = [... this.worksLoaded];\n        for (let i in worksLoaded) {\n            this.unloadWork(worksLoaded[i]);\n        }\n    }\n}\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport {switchToPattern} from 'engine/mix/actions.js';\nconst NAMES = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\n\nclass PatternButtons extends Component {\n    switchPattern(i) {\n        let {sequencerEngine} = this.props;\n        sequencerEngine.multiSequencerEngine.dispatch(\n            switchToPattern(\n                sequencerEngine.sequenceId,\n                sequencerEngine.currentSubSequence.id,\n                i));\n    }\n\n    chooseSubSequence(id) {\n        this.props.sequencerEngine.switchToSubSequence(id);\n    }\n\n    getSubSequencesComponent() {\n        let subSequences = this.props.subSequences || [];\n        return (<div className=\"sub-sequence-buttons\">\n                {subSequences.map(\n                  (id, i) =>\n                      <div\n                            key={NAMES[i]}\n                            onClick={() => this.chooseSubSequence(id)}\n                            className={id === this.props.currentSubSequence ?\n                                      \"sub-sequence selected\" : \"sub-sequence\"}>\n                        {NAMES[i]}</div>)}\n                </div>\n               );\n    }\n\n    render() {\n        if (this.props.sequencerEngine.tracks[0] === undefined) {\n            return this.getSubSequencesComponent();\n        }\n        return (\n            <div>\n              <div className=\"pattern-buttons\">\n                {this.props.sequencerEngine.tracks[0].patterns.map(\n                    (p, i) =>\n                        <div\n                          style={\n                              this.props.color &&\n                                  this.props.currentPattern === i ? {backgroundColor: this.props.color} : {}\n                          }\n                              onClick={() => this.switchPattern(i)}\n                              className={this.props.currentPattern === i ? \"current pattern-button\" : \"pattern-button\"}>\n                          {i + 1}</div>)}\n            </div>\n                {this.getSubSequencesComponent()}\n           </div>\n        );\n    }\n}\nconst mapStateToProps = (state, props) => {\n    let sequenceId = props.sequencerEngine.engineId;\n    let subSequenceId = props.sequencerEngine.currentSubSequence.id;\n    let currentPattern = state.sequencer.currentPattern[subSequenceId] || 0;\n    return {\n        currentPattern: currentPattern,\n        subSequenceId: subSequenceId,\n        subSequences: state.sequencer.subSequences[sequenceId],\n        currentSubSequence: state.sequencer.currentSubSequence[sequenceId],\n    };\n};\n \nexport default connect(mapStateToProps, null)(PatternButtons);\n","import {setIsPlaying, setLoadingSequence, setIsPlayingMix} from 'actions/index.js';\nimport ChannelStripEffects from './channel/ChannelStripEffects.js';\nimport MultiMix from './mix/MultiMix.js';\nimport Tone from 'tone';\nimport sampleRateChooser from './SampleRateChooser.js';\nimport ScriptableSequencerEngine from 'engine/ScriptableSequencer.js';\nimport Scripting from 'scripting/Scripting.js';\n\nconst MAX_TRACKS = 8;\n\nclass MultiSequencerEngine {\n    constructor(store) {\n        this.store = store;\n\n        // map of sequenceId => sequencer engines synced together\n        this.idToSequencerEngine = {};\n\n        // the sequencer engine that triggers other sequencer\n        // engines to play on step 0.\n        this.headSequencerEngine = undefined;\n\n        this.sequencerEnginesToPlay = [];\n\n        this.sequenceIdQueue = [];\n\n        window.sequencerEngine = this;\n\n        this.initAubio();\n    }\n\n    getHead() {\n        return this.idToSequencerEngine[Object.keys(\n            this.idToSequencerEngine)[0]];\n    }\n\n    get state() {\n        return this.store.getState();\n    }\n\n    get trackStep() {\n        let trackStep = 0;\n        for (let id in this.idToSequencerEngine) {\n            let _trackStep = this.idToSequencerEngine[id].trackStepReal;\n            if (_trackStep > trackStep) {\n                return _trackStep;\n            }\n        }\n        return trackStep;\n    }\n\n    initAubio() {\n        window.Aubio().then((aubio) => {\n            this.aubio = aubio;\n            this.initSamplerTrack();\n        });\n    }\n \n    set sampleRate(s) {\n        sampleRateChooser.setSampleRate(s);\n    }\n\n    stop() {\n        for (let id in this.idToSequencerEngine) {\n            this.idToSequencerEngine[id].stop();\n        }\n        Tone.Transport.stop();\n    }\n\n    updateBpm(bpm) {\n        for (let id in this.idToSequencerEngine) {\n            this.idToSequencerEngine[id].updateBpm(bpm);\n        }\n    }\n\n    getSequencerEngine(id) {\n        if (id === undefined) {\n            return this.idToSequencerEngine[Object.keys(this.idToSequencerEngine)[0]];\n        }\n        if (id === -1 || id === '-1') {\n            return this.samplerTrack;\n        }\n        return this.idToSequencerEngine[id];\n    }\n\n    // in order to schedule multipl sequencer engines, synced together\n    // we have the first sequencer engine (called the headSequencerEngine),\n    // call this function at step 0/step 15. We then schedule a play\n    // for any sequener engines that are set to play, using the time\n    // passed to this function (i.e. when that step 0/15 will be)\n    stepOneCallback(time) {\n        this.sequencerEnginesToPlay.forEach(s => {\n            let ticks = Tone.Transport.getTicksAtTime(time);\n            let transportTime = new Tone.TransportTime(ticks, 'i');\n            s.play(transportTime);\n        });\n        this.sequencerEnginesToPlay = [];\n    }\n\n    getSamplerPlaySequence() {\n        this.samplerTrack.trackStep = 0;\n        this.samplerTrack.playing = true;\n        return this.samplerTrack.playSequence;\n    }\n\n    isNothingPlaying() {\n        return this.getSequencesPlaying().length === 0;\n    }\n\n    getSequencesPlaying(playing=true) {\n        let isPlaying = this.store.getState().sequencer.isPlaying;\n        return Object.keys(this.idToSequencerEngine).filter(\n            id => {\n                if (playing === false && isPlaying[id] === undefined) {\n                    return true;\n                } else {\n                    return isPlaying[id] === playing;\n                }\n            });\n    }\n\n    unloadTrack(sequenceId, dispose=true) {\n        let sequencerEngine = this.idToSequencerEngine[sequenceId];\n        if (sequencerEngine.playing) {\n            // i.e. stop the playing sequence\n            sequencerEngine.stop();\n        }\n        delete this.idToSequencerEngine[sequenceId];\n\n        let i = this.sequenceIdQueue.indexOf(sequenceId);\n        if (i > -1) {\n            this.sequenceIdQueue.splice(i, 1);\n        }\n        this.store.dispatch(setIsPlaying(sequenceId, undefined));\n        if (dispose) {\n            setTimeout(() => {\n                sequencerEngine.dispose();\n            }, 500);\n        }\n    }\n\n    async loadTrack(id) {\n        let sequencesNotPlaying = this.getSequencesPlaying(false);\n        if (this.sequenceIdQueue.length > (MAX_TRACKS - 1)) {\n            if (sequencesNotPlaying.length > 0) {\n                this.unloadTrack(sequencesNotPlaying[0]);\n            } else {\n                let sequenceId = this.sequenceIdQueue.shift();\n                this.unloadTrack(sequenceId);\n            }\n        }\n\n        this.store.dispatch(setLoadingSequence(id, true));\n        let sequencerEngine = new ScriptableSequencerEngine(\n            this.store, true, undefined, this.aubio);\n\n        sequencerEngine.channelMixer.connectMixEffects();\n        let scripting = new Scripting(sequencerEngine, true);\n        sequencerEngine.setScripting(scripting);\n        sequencerEngine.multiSequencerEngine = this;\n        sequencerEngine.loadedSequenceId = id;\n        sequencerEngine.setMasterVolume(1);\n        this.sequenceIdQueue.push(id);\n        this.idToSequencerEngine[id] = sequencerEngine;\n        this.store.dispatch(setIsPlaying(id, false));\n        await sequencerEngine.loadSequence(id);\n        /*\n        sequencerEngine.channelMixer.mixEffects.auxSend.connect(\n            this.auxEffects.input);\n            */\n    }\n\n    initSamplerTrack() {\n        if (!this.auxEffects) {\n            this.auxEffects = new ChannelStripEffects(\n                Tone.Master, this);\n        }\n        let sequencerEngine = new ScriptableSequencerEngine(\n            this.store, true, undefined, this.aubio);\n        sequencerEngine.channelMixer.connectMixEffects();\n        let scripting = new Scripting(sequencerEngine, true);\n        sequencerEngine.setScripting(scripting);\n        sequencerEngine.channelMixer.mixEffects.auxSend.connect(\n            this.auxEffects.input);\n        sequencerEngine.setMasterVolume(0);\n        sequencerEngine.loadNewSequence();\n\n        this.samplerTrack = sequencerEngine;\n        this.samplerTrack.isSampler = true;\n        this.samplerTrack.loadedSequenceId = -1;\n        this.changeVolume(this.samplerTrack, 0);\n    }\n\n    sequenceRolling() {\n        for (let id in this.idToSequencerEngine) {\n            let e = this.idToSequencerEngine[id];\n            if (e.isSequenceRolling) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    // plays a sequence (if none are playing), if one is already playing\n    // then it queues it up to be played on the next bar.\n    play(sequence) {\n        let sequencerEngine = this.getSequencerEngine(sequence && sequence.id);\n        if (sequencerEngine !== undefined) {\n           if (sequencerEngine.playing && this.getSequencesPlaying(true).length === 1) {\n               this.samplerTrack.playing = false;\n               this.samplerTrack.playSequence.stop();\n               this.samplerTrack.playSequence.cancel();\n               this.samplerTrack.loadNewSequence();\n           }\n            if (sequence && sequence.playing) {\n                this.setHeadSequencerEngine(undefined);\n            } \n            let sequencesPlaying = this.getSequencesPlaying(true);\n            if (this.getSequencesPlaying(true).length == 0 || sequencerEngine.playing) {\n                this.store.dispatch(setIsPlayingMix(true));\n                if (!sequencerEngine.playing && sequencesPlaying.length == 0) {\n                    this.setHeadSequencerEngine(sequencerEngine);\n                }\n                sequencerEngine.play();\n            } else {\n                this.sequencerEnginesToPlay.push(sequencerEngine);\n            }\n\n            sequencesPlaying = sequencesPlaying.map(x => this.idToSequencerEngine[x])\n                .filter(s => s !== sequencerEngine);\n            if (sequencesPlaying.length > 0 &&\n                sequencesPlaying.every(s => s.stepOneCallback === undefined)) {\n                this.setHeadSequencerEngine(sequencesPlaying[0]);\n            }\n        }\n   }\n\n    setHeadSequencerEngine(engine) {\n        if (engine === undefined && this.headSequencerEngine !== undefined) {\n            this.headSequencerEngine.stepOneCallback = undefined;\n            this.headSequencerEngine.getSamplerPlaySequence = undefined;\n            return;\n        }\n        this.headSequencerEngine = engine;\n        this.headSequencerEngine.stepOneCallback = (t) => this.stepOneCallback(t);\n        this.headSequencerEngine.getSamplerPlaySequence = (t) => this.getSamplerPlaySequence(t);\n    }\n}\n\nexport default MultiSequencerEngine;\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport MidiEffects from \"components/mix/mix2/MidiEffects.js\";\n\nconst SubMidiEffectsComponent = ({sequencerEngine, subSequence}) => { \n    return (\n        <div className=\"sends midi track\">\n          <div className=\"track-container\">\n            <div className=\"track-header\">\n              <div className=\"track-name-view\">\n                Midi FX\n              </div>\n            </div>\n            <div className=\"sends-container\">\n              <MidiEffects sequencerEngine={sequencerEngine} track={subSequence}/>\n            </div>\n          </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n      subSequence: props.sequencerEngine.currentSubSequence\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubMidiEffectsComponent);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\n\nconst SequencerScale = (props) => { \n    return (\n        <div className=\"sequencer-scale\">\n          Scale:\n        </div>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SequencerScale);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {useWindowClearer} from \"components/sidebar/useWindowClearer.js\";\nimport {connect} from 'react-redux';\n\nconst SequencerContextMenu = ({sequencerEngine, dropdownPos, setDropdownPos}) => { \n    useWindowClearer({clear: () => setDropdownPos(undefined), selected: dropdownPos});\n\n    const createPad = useCallback(() => {\n        sequencerEngine.createPad();\n    }, [createPad]);\n\n    const createPadFromTracks = useCallback(() => {\n        sequencerEngine.createPad(sequencerEngine.tracks);\n    }, [createPad]);\n\n    if (!dropdownPos) { return []; }\n\n    if (!dropdownPos) { return []; }\n    return (\n        <div style={{left: dropdownPos.x, top: dropdownPos.y}} className=\"sequencer-context-menu context-menu\">\n          <div\n            onMouseDown={createPad}\n            className=\"menu-item\">\n            Create Pad\n          </div>\n          <div\n            onMouseDown={createPadFromTracks}\n            className=\"menu-item\">\n            Create Pad From Tracks\n          </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SequencerContextMenu);\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport Xanadu from 'components/xanadu/Xanadu.js';\nimport PulledEffects from 'components/pulled/PulledEffects.js';\nimport PadsContainer from '../pads/PadsContainer.js';\nimport {\n    setTransformationEdgeDragging,\n    } from 'actions/index.js';\nimport SubMidiEffectsComponent from './SubMidiEffectsComponent.js';\nimport GroupEdges from \"components/groups/GroupEdges.js\";\nimport SequencerScale from './SequencerScale.js';\nimport SequencerContextMenu from \"components/dropdowns/SequencerContextMenu.js\";\nimport LinkedParameterVisualizer from 'components/parameters/LinkedParameterVisualizer.js';\nimport {MODE_TO_HEIGHT, WAVEFORM, PIANO_ROLL, INFO} from 'constants/arrangement-modes.js';\nimport SendsTrackComponent from 'components/track/SendsTrackComponent.js';\nimport Mix from 'components/mix/Mix.js';\nimport ConditionedComponent from 'components/ConditionedComponent.js';\nimport LFOTrackComponent from 'components/lfo/LFOTrackComponent.js';\nimport TrackComponent from './TrackComponent.js';\nimport {\n    setSelectedPianoRollSteps,\n    setStepsGroupMode,\n    setShowPianoRoll} from 'actions/index.js';\nimport {\n    MIX_VIEW,\n    ARRANGEMENT_VIEW\n} from 'constants/view-modes.js';\nimport {SEQUENCER_VIEW} from 'constants/view-modes.js';\nimport KeyListener from '../KeyListener.js';\nimport {connect} from 'react-redux';\nimport {useKeyListener} from './useKeyListener.js';\nimport {\n    SOUNDS,\n    SEQUENCES,\n    PRESETS,\n    INSTRUMENTS,\n    NOTES} from 'constants/sidebar-view-modes.js';\n\nconst StepSequencer = (props) => { \n    const scrollContainer = useRef(undefined);\n    let {sequencerEngine} = props;\n    let [dropdownPos, setDropdownPos] = useState(undefined);\n    let tracksClassName = props.viewMode !== SEQUENCER_VIEW ? \"full-view\" :\n        props.trackFocused !== undefined ? \"tracks-container focused\" :\n        props.stretchTracks ? \"tracks-container showing-selector\" :\n        \"tracks-container\";\n\n    if (props.isMapping || props.stepsGroupMode) {\n        tracksClassName += \" mapping\";\n    }\n    \n    if (!props.sidebarCollapsed &&\n        (props.showSelectorMode ||\n         props.sidebarViewMode !== SOUNDS)) {\n        tracksClassName += ' showing-selector';\n    }\n\n    let stretchTracks = \n        props.showSequences ||\n        props.showInstruments ||\n        props.showSelectorMode ||\n        props.showPresets;\n    \n    let tracks = sequencerEngine.tracks || [];\n    if (props.showingPiano) {\n        tracks  = sequencerEngine.tracks[props.selectedTrack];\n        if (tracks) {\n            tracks = [tracks];\n        } else {\n            tracks = [];\n        }\n    }\n    useEffect(() => {\n        // sub sequence changed so clear group-mode and any selected steps\n        props.setSelectedSteps(undefined);\n        props.setStepsGroupMode(false);\n    }, [sequencerEngine.currentSubSequence]);\n\n    const onContextMenu = useCallback((e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setDropdownPos({x: e.clientX, y: e.clientY});\n    }, [setDropdownPos]);\n\n    return (\n        <div\n          dropabble=\"true\"\n          id=\"#start\"\n          onContextMenu={onContextMenu}\n          ref={scrollContainer}\n          className={tracksClassName}>\n          <SequencerContextMenu\n            sequencerEngine={sequencerEngine}\n            setDropdownPos={setDropdownPos}\n            dropdownPos={dropdownPos}/>\n          <LinkedParameterVisualizer scrollContainer={scrollContainer}/>\n          <Xanadu sequencerEngine={sequencerEngine}/>\n          <GroupEdges scrollContainer={scrollContainer} sequencerEngine={sequencerEngine}/>\n          <ConditionedComponent\n            condition={!props.showingPiano && tracks.length > 0}>\n            <LFOTrackComponent\n              scrollContainer={scrollContainer}\n              sequencerEngine={sequencerEngine}\n              envelopesTrack={sequencerEngine.envelopesTrack}\n              lfosTrack={props.sequencerEngine.lfosTrack}/>\n          </ConditionedComponent>\n          <PulledEffects sequencerEngine={props.sequencerEngine}/>\n          {tracks\n           .filter(\n               track =>\n                   props.trackFocused === undefined ||\n                   props.trackFocused === track.trackNumber)\n           .map(\n               (track, i) =>\n                   <TrackComponent\n                     key={track.id}\n                     scrollContainer={scrollContainer}\n                     track={track}/>\n           )}\n          \n          <PadsContainer\n            scrollContainer={scrollContainer}\n            sequencerEngine={sequencerEngine}/>\n                     \n        {!props.showingPiano && tracks.length > 0 ?\n         <div className=\"sub-sequence-control\">\n           <SendsTrackComponent scrollContainer={scrollContainer} sequencerEngine={sequencerEngine}/>\n           <SubMidiEffectsComponent scrollContainer={scrollContainer} sequencerEngine={sequencerEngine}/>\n         </div>\n             : ''}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state, props) => {\n    let bottomMode = state.arrangement.bottomMode;\n    let showingPiano = state.sequencer.showPianoRoll; // && bottomMode === PIANO_ROLL;\n    return {\n        showSelectorMode: state.sequencer.showSelectorMode,\n        sidebarCollapsed: state.selector.sidebarCollapsed,\n        sidebarViewMode: state.sequencer.sidebarViewMode,\n        trackFocused: state.sequencer.trackFocused,\n        tracks: props.sequencerEngine.tracks,\n        numTracks: props.sequencerEngine.tracks &&\n            props.sequencerEngine.tracks.length,\n        showingPiano, \n        selectedTrack: showingPiano && state.mix.selectedTrack,\n        isMapping: state.effects.accumulatorParameterSelected,\n        stepsGroupMode: state.groups.stepsGroupMode,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setTransformationEdgeDragging: (x) => dispatch(setTransformationEdgeDragging(x)),\n      setSelectedSteps: (x) => dispatch(setSelectedPianoRollSteps(x)),\n      setStepsGroupMode: (x) => dispatch(setStepsGroupMode(x))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StepSequencer);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {truncate} from 'utils/truncate.js';\nimport Colors from 'components/Colors.js';\nimport {connect} from 'react-redux';\nimport {\n    setTracksToHide\n} from \"actions/index.js\";\n\nconst colors = new Colors();\nconst NAME_LENGTH = 24;\n\nconst HiddenTracks = ({tracksToHide, sequencerEngine, setTracksToHide}) => { \n    let _tracks = tracksToHide.filter(\n        x => sequencerEngine.tracks.indexOf(x) > -1);\n\n    _tracks.sort((a, b) => a.trackNumber - b.trackNumber);\n\n    const showTrack = useCallback((track) => {\n        let _tracksToHide = [... tracksToHide];\n        let i = _tracksToHide.indexOf(track);\n        if (i > -1) {\n            _tracksToHide.splice(i, 1);\n            setTracksToHide(_tracksToHide);\n        }\n    }, [tracksToHide]);\n\n    return (\n        <div className=\"hidden-tracks\">\n          {_tracks.map(x => <HiddenTrack onClick={() => showTrack(x)} track={x}/>)}\n        </div>\n    );\n};\n\nconst HiddenTrack = ({track, onClick}) => {\n    let color = colors.getColorForTrack(track);\n    return (\n        <div\n          onClick={onClick}\n          style={{color: color, borderColor: color}} className=\"hidden-track\">\n          {track.trackNumber + 1}. {truncate(track.presetName || track.getName(), NAME_LENGTH)}\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n      tracksToHide: state.tracks.tracksToHide,\n      currentSubSequence: props.sequencerEngine.currentSubSequence\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n        setTracksToHide: (tracks) => dispatch(setTracksToHide(tracks)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HiddenTracks);\n","import React, { Component } from 'react';\nimport HiddenTracks from './HiddenTracks.js';\nimport {setResampleMaster} from 'actions/index.js';\nimport LockButton from 'components/LockButton.js';\nimport EffectParameterSlider from 'effects/EffectParameterSlider.js';\nimport {PLAY_BUTTON, RECORD_BUTTON, ROLL_BUTTON, QUANTIZE_BUTTON,\n        BPM_SLIDER,\n        SWING_SLIDER,\n        BPM_LOCK} from 'constants/contextual-help.js';\nimport { connect } from \"react-redux\";\nimport {setCommandInput} from 'actions/index.js';\nimport {setViewMode} from 'actions/index.js';\nimport {setIsRecording} from 'actions/index.js';\nimport {setContextualHelp} from 'actions/index.js';\nimport {setIsRecordingExpanded} from 'actions/index.js';\nimport {setCommandPrefix} from 'actions/index.js';\nimport {setQuantized} from 'actions/index.js';\nimport {setTrackRolling} from 'actions/index.js';\nimport {SCRIPTING_VIEW} from 'constants/view-modes.js';\nimport {isNumber} from 'utils/IsNumber.js';\n\nclass SequenceButtonsContainer extends Component {\n\n    // playthiss or stops the sequencer\n    play() {\n        this.props.sequencerEngine.schedulePlay();\n    }\n\n    record() {\n        let isRecording = !this.props.isRecording;\n        this.props.sequencerEngine.recording(isRecording);\n    }\n\n    resample() {\n        this.props.sequencerEngine.masterResampler.prepare();\n        this.props.setResampleMaster(true);\n    }\n\n    toggleQuantize() {\n        this.props.setQuantized(!this.props.quantized);\n    }\n\n    onClickRollingMode() {\n        this.props.sequencerEngine.resolution = this.props.displayResolution;\n        this.props.sequencerEngine.trackRolling = !this.props.trackRolling;\n    }\n\n    get isLoading() {\n        return Object.keys(this.props.loadingSequence).some(\n            (s) => this.props.loadingSequence[s] === true);\n    }\n\n    updateBpm(bpm) {\n        if (isNumber(bpm)) {\n            bpm = parseFloat(bpm);\n            this.props.sequencerEngine.updateBpm(bpm);\n            this.setState(this.state);\n\n            if (this.timestretchTimeout !== undefined) {\n                clearTimeout(this.timestretchTimeout);\n            }\n            this.timestretchTimeout = setTimeout(() => {\n                this.props.sequencerEngine.tracks.map(\n                    (track) => track.soundIds.map(\n                        (soundId) => {\n                            let sampler = track.samplers[soundId];\n                            if (sampler.tempoSynced) {\n                                sampler.syncTempo(bpm);\n                            }\n                        }));\n                this.timestretchTimeout = undefined;\n            }, 150);\n        }\n    }\n\n    // called when user updates swing\n    updateSwing(swing) {\n        if (isNumber(swing)) {\n            this.props.sequencerEngine.updateSwing(swing);\n            this.setState(this.state);\n        }\n    }\n\n    toggleLock() {\n        this.props.sequencerEngine.togglePatternLock();\n    }\n\n\n    render() {\n        let playClassName = \"play-button \";\n        if (this.props.playScheduled) {\n            playClassName += \" flashit\";\n        }\n\n\tlet className = \"sequencer-buttons-container\";\n\tif (this.isLoading) {\n\t    className += \" loading\";\n\t}\n\t\n        return (\n\t\t<div className={className}>\n\t\t<div\n            onMouseOver={() => this.props.setContextualHelp(PLAY_BUTTON)}\n                onMouseLeave={() => this.props.setContextualHelp(undefined)}\n                onClick={() => this.play()} className=\"action-buttons\">\n                <span className={playClassName}>{this.props.isPlaying? 'STOP' : 'PLAY'}</span>\n              </div>\n              <div\n                onMouseOver={() => this.props.setContextualHelp(RECORD_BUTTON)}\n                onMouseLeave={() => this.props.setContextualHelp(undefined)}\n                className=\"action-buttons\" onClick={() => this.record()}>\n                <span className={this.props.isRecording ? 'recording record-button' : 'record-button'}>{this.props.isRecordingExpanded ? 'RECORDING +' : this.props.isRecording ? 'RECORDING' : 'RECORD'}</span>\n              </div>\n              <div\n                onMouseOver={() => this.props.setContextualHelp(ROLL_BUTTON)}\n                onMouseLeave={() => this.props.setContextualHelp(undefined)}\n                className=\"action-buttons\" onClick={() => this.onClickRollingMode()}>\n                <span className={this.props.trackRolling ? \"infinity-mode infinity-button\" : \"infinity-button\"}>ROLL</span>\n              </div>\n              <div\n                onMouseOver={() => this.props.setContextualHelp(QUANTIZE_BUTTON)}\n                onMouseLeave={() => this.props.setContextualHelp(undefined)}\n                className=\"action-buttons\" onClick={() => this.toggleQuantize()}>\n                <span className={this.props.quantized ? \"infinity-mode infinity-button\" : \"infinity-button\"}>\n                  {this.props.quantized ? 'QUANTIZED' : 'UNQUANTIZED'}\n                </span>\n              </div>\n              {this.props.sequencerEngine.bpmParameter ?\n                  <div className='bpm-container'>\n                        <EffectParameterSlider\n                              name=\"BPM\"\n                              contextualHelp={BPM_SLIDER}\n                              parameter={this.props.sequencerEngine.bpmParameter}\n                              root={1}\n                              step={1}\n                              min={1}\n                              isParameter={true}\n                              max={250}\n                              />\n                  </div> : ''}\n                  <LockButton\n                    contextualHelp={BPM_LOCK}\n                    patternLocked={this.props.patternLocked}\n                    toggleLock={() => this.toggleLock()}/>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setViewMode: viewMode => dispatch(setViewMode(viewMode)),\n        setQuantized: quantized => dispatch(setQuantized(quantized)),\n        setContextualHelp: element => dispatch(setContextualHelp(element)),\n        setIsRecording: recording => dispatch(setIsRecording(recording)),\n        setTrackRolling: rolling => dispatch(setTrackRolling(rolling)),\n        setCommandPrefix: prefix => dispatch(setCommandPrefix(prefix)),\n        setIsRecordingExpanded: recording => dispatch(setIsRecordingExpanded(recording)),\n        setCommandInput: input => dispatch(setCommandInput(input)),\n        setResampleMaster: (flag) => dispatch(setResampleMaster(flag)),\n    }\n};\n\nconst mapStateToProps = (state, props) => {\n    let id = props.sequencerEngine.getSequenceId();\n    return {\n        viewMode: state.sequencer.viewMode,\n        quantized: state.sequencer.quantized,\n        isRecording: state.sequencer.isRecording,\n        isRecordingExpanded: state.sequencer.isRecordingExpanded,\n        isPlaying: state.sequencer.isPlaying[id] || false,\n        isCommandDown: state.keyboard.isCommandDown,\n        sequenceName: state.sequencer.sequenceName,\n        loadingSequence: state.sequencer.loadingSequence,\n        trackRolling: state.sequencer.trackRolling,\n        patternLocked: state.sequencer.patternLocks[props.sequencerEngine.currentPattern] || false,\n        playScheduled: state.clock.playScheduled,\n        commandPrefix: state.commands.commandPrefix,\n        displayResolution: state.sequencer.displayResolution,\n        isResampling: state.tracks.isResampling || state.sequencer.resampleMaster,\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SequenceButtonsContainer);\n\n","import React, { Component } from 'react';\nimport { Button, InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\n\nclass UserInfo extends Component {\n    constructor(props) {\n        super(props);\n\n        console.log('userName = ' + props.userName);\n        this.state = {\n            editingName : false,\n            nameValue: this.props.userName || '',\n        };\n    }\n\n    async doesUserOwnPage() {\n        let own = this.props.userId === await this.props.ethereum.getUser() ||\n            this.props.userId === undefined;\n        console.log('does user own page = ' + own);\n        return own;\n    }\n\n    onClickName() {\n        console.log('onClickName');\n        if (this.props.isEditing) {\n            this.setState({editingName: true});\n        }\n    }\n\n    onKeyPress(e) {\n        if (e.key === 'Enter') {\n            // update the damn thing\n            this.chooseUserName();\n        }\n    }\n\n    chooseUserName() {\n        this.props.ethereum.users.setUserName(this.state.nameValue);\n        this.setState({\n            editingName: false,\n        });\n\n        if (this.state.nameValue !== '') {\n            this.props.onUserNameUpdated(this.state.nameValue);\n        }\n    }\n\n    isEditing() {\n        return this.props.userName === undefined ||\n            this.state.editingName;\n    }\n\n    render() {\n        let userName = '';\n        if (this.isEditing() && this.doesUserOwnPage()) {\n            userName = (\n                <InputGroup className=\"tag-sound-input\">\n                  <Input\n                    onChange={(event) => {\n                        this.state.nameValue = event.target.value;\n                        this.setState(this.state);\n                    }}\n                    value={this.state.nameValue}\n                    onKeyUp={(e) => this.onKeyPress(e)}\n                    placeholder=\"Choose a user name\" className=\"tag-sound-input-box\"/>\n                  <InputGroupAddon addonType=\"append\">\n                    <Button size=\"sm\" onClick={() => this.chooseUserName()} color=\"secondary\">Done</Button>\n                  </InputGroupAddon>\n                </InputGroup>\n            );\n        } else  {\n            userName = (\n                <span\n                  onClick={() => this.onClickName()}\n                  className=\"user-name\">\n                  {this.props.userName}\n                </span>);\n            }\n\n        return (\n            <div className=\"user-info\">\n              <div className=\"user-profile-picture-container\">\n                {this.props.profilePicture === undefined ? <div className=\"user-no-profile-picture\"></div> : ''}\n              </div>\n              <div className=\"user-main-info-container\">\n                <div className=\"user-info-part-container\">\n                  {userName}\n                </div>\n                <div className=\"user-info-part-container\">\n                  <span className=\"user-location\">\n                    World Galaxy\n                  </span>\n                </div>\n              </div>\n            </div>\n        );\n    }\n}\n\nexport default UserInfo;\n","import React, { Component } from 'react';\n\nclass ColorsComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            color: '#ff7657',\n            playerColor: '#e09a8a',\n            backgroundColor: '#ffffff',\n            secondaryBackgroundColor: '#ecf2ff',\n        };\n\n        this.onChangeMain = this.onChangeMain.bind(this);\n        this.onChangePlayerColor = this.onChangePlayerColor.bind(this);\n        this.onChangeBackground = this.onChangeBackground.bind(this);\n        this.onChangeSecondaryBackground = this.onChangeSecondaryBackground.bind(this);\n    }\n\n    onChangePlayerColor(e) {\n        let color = e.target.value;\n        this.setState({\n            playerColor: color\n        });\n\n        document.documentElement.style\n            .setProperty('--analogous-color', color);\n    }\n\n    onChangeMain(e) {\n        let color = e.target.value;\n        this.setState({\n            color: color\n        });\n\n        document.documentElement.style\n            .setProperty('--color-2', color);\n        document.documentElement.style\n            .setProperty('--color-1', color);\n        document.documentElement.style\n            .setProperty('--color-3', color);\n\n        document.documentElement.style\n            .setProperty('--logo-background-color', color);\n\n    }\n\n    onChangeBackground(e) {\n        let color = e.target.value;\n        this.setState({\n            backgroundColor: color\n        });\n\n        document.documentElement.style\n            .setProperty('--background-color', color);\n    }\n\n    onChangeSecondaryBackground(e) {\n        let color = e.target.value;\n        this.setState({\n            secondaryBackgroundColor: color\n        });\n\n        const navigator = document.querySelector('.navigator');\n        navigator.style.setProperty('--negative-space', color);\n\n        const profileContainer = document.querySelector('.profile-container');\n        profileContainer.style.setProperty('--negative-space', color);\n    }\n\n    render() {\n        return (\n            <div>\n              <div>\n                Main:\n                <input type=\"color\" value={this.state.color} onChange={this.onChangeMain}/>\n              </div>\n              <div>\n                Player:\n                <input type=\"color\" value={this.state.playerColor} onChange={this.onChangePlayerColor}/>\n              </div>\n              <div>\n                Background:\n                <input type=\"color\" value={this.state.backgroundColor} onChange={this.onChangeBackground}/>\n              </div>\n              <div>\n                Secondary:\n                <input type=\"color\" value={this.state.secondaryBackgroundColor} onChange={this.onChangeSecondaryBackground}/>\n              </div>\n            </div>\n        );\n    }\n}\n\nexport default ColorsComponent;\n","import React, { Component } from 'react';\nimport ConditionedComponent from 'components/ConditionedComponent.js';\nimport Tone from 'tone';\nimport PlayButton from 'components/user/PlayButton.js';\nimport { connect } from \"react-redux\";\nimport ReactBootstrapSlider from 'react-bootstrap-slider';\n\nclass MixPlayerPane extends Component {\n    constructor(props) {\n        super(props);\n\n        this.play = this.play.bind(this);\n    }\n\n    play() {\n        if (this.isPlaying()) {\n            for (let i in this.props.isPlaying) {\n                if (this.props.isPlaying[i]) {\n                    for (let j in this.props.tracks) {\n                        if (this.props.tracks[j].id === i) {\n                            this.props.multiSequencerEngine.play(this.props.tracks[j]);\n                        }\n                    }\n                }\n            }\n        } else {\n            this.props.multiSequencerEngine.play(this.props.tracks[0]);\n        }\n    }\n\n    isPlaying() {\n        let count = Object.keys(this.props.isPlaying).filter(\n            id => this.props.isPlaying[id]).length;\n        return count > 0;\n    }\n\n    onChangeBPM(bpm) {\n        this.props.multiSequencerEngine.updateBpm(bpm);\n    }\n\n    render() {\n        if (this.props.tracks.length === 0) {\n            return (\n                <div></div>\n            );\n        }\n        return (\n            <div className=\"mix-player-pane\">\n              <div className=\"mix-controls-container\">\n\n                <PlayButton play={this.play} isPlaying={this.isPlaying()}/>\n                <div className=\"bpm-container\">\n                  <div className=\"bpm-label\">\n                    BPM: {this.props.bpm}\n                  </div>\n                  <div className=\"clear-fix\"/>\n                  <div className=\"spotlight-fader\">\n                    <ReactBootstrapSlider\n                      value={this.props.bpm}\n                      change={(e) => this.onChangeBPM(e.target.value)}\n                      step={1}\n                      className=\"spotlight-fader\"\n                      max={250}\n                      min={1}\n                      orientation=\"horizontal\"\n                      reversed={false}/>\n                  </div>\n                </div>\n              </div>\n              <div>\n                {this.props.children}\n              </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        isPlaying: state.sequencer.isPlaying,\n        viewMode: state.user.viewMode,\n        currentMix: state.user.currentMix,\n        loadedTracks: state.user.loadedTracks,\n        bpm: state.user.bpm,\n    };\n};\n\nexport default connect(mapStateToProps, undefined)(MixPlayerPane);\n","import React, { Component } from 'react';\nimport {  Button, InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\nimport sequenceMetadata from 'decentralized/sequences/SequenceMetadata.js';\n\nclass TaggerComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            text: '',\n        }\n    }\n\n    onInputType(text) {\n        this.setState({text: text});\n    }\n\n    async onTag() {\n        await sequenceMetadata.tagSequence(this.props.sequence.id, this.state.text);\n        this.setState({text: ''});\n    }\n\n    render() {\n        return (\n            <div className=\"track-tagger\">\n              <InputGroup>\n                <Input\n                  onChange={(event) => this.onInputType(event.target.value)}\n                  value={this.state.text}\n                  placeholder={'Type tag'} className=\"sequence-tag-input\"/>\n                  <InputGroupAddon addonType=\"append\">\n                    <Button onClick={() => this.onTag()} color=\"secondary\">Tag</Button>\n                  </InputGroupAddon>\n              </InputGroup>\n            </div>\n        );\n    }\n}\n\nexport default TaggerComponent;\n","var id = 0;\nclass UserMix {\n    constructor() {\n        this.id = id++;\n        this.name = undefined;\n        this.tracks = [];\n        this.bpm = undefined;\n    }\n\n    deleteTrack(sequence) {\n        let id = this.tracks.indexOf(sequence);\n        this.tracks.splice(id, 1);\n    }\n\n    fromJson(json) {\n        if (json === undefined) {\n            return undefined;\n        }\n\n        if ('name' in json) {\n            this.name = json.name;\n        }\n\n        if ('tracks' in json) {\n            this.tracks = json.tracks;\n        }\n\n        if ('bpm' in json) {\n            this.bpm = json.bpm;\n        }\n\n        if ('id' in json) {\n            this.id = json.id;\n        }\n\n        return this;\n    }\n\n    getJson(includeId=true) {\n        let json = {\n            name: this.name,\n            tracks: this.tracks,\n            bpm: this.bpm,\n        };\n\n        if (includeId) {\n            json.id = this.id;\n        }\n\n        return json;\n    }\n}\n\nexport default UserMix;\n","import React, { Component } from 'react';\nimport {getNotes} from './getNotes.js';\nimport ConditionedComponent from 'components/ConditionedComponent.js';\nimport { connect } from \"react-redux\";\nimport {moveKey} from 'utils/objectMover.js';\nimport CommentsComponent from './CommentsComponent.js';\nimport TaggerComponent from './TaggerComponent.js';\nimport UserMix from 'repos/UserMix.js';\nimport ReactBootstrapSlider from 'react-bootstrap-slider';\nimport {setSpotlightTracks, setUserHasEditsToSave, setCurrentUserMix} from 'actions/index.js';\nimport PlayButton from 'components/user/PlayButton.js';\nimport PatternButtons from 'components/user/PatternButtons.js';\nimport PulseLoader from 'react-spinners/PulseLoader'\nimport {SPOTLIGHT, MIXES} from 'constants/user-view-modes.js';\nimport { Button, InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\nimport Colors from 'components/Colors.js';\nconst colors = new Colors();\n\n/**\n * A playable track component representing a sequence\n */\nclass SpotlightTrack extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sequence: this.props.sequence,\n            userName: undefined,\n            showComments: false,\n            showTagger: false,\n            numNotes: undefined\n        };\n        this.loadDate();\n        this.loadUser();\n        this.loadNumNotes();\n    }\n\n    async loadNumNotes() {\n        let notes = await getNotes(this.props.sequence.id, false);\n        if (notes === undefined) {\n            return;\n        }\n\n        this.setState({\n            numNotes: notes.length\n        });\n    }\n\n    async loadUser() {\n        let user = await this.props.ethereum.users.getUserName(this.props.sequence.user);\n        this.setState({userName: user});\n    }\n    \n    async loadDate(sequence=this.props.sequence) {\n        let block = await this.props.ethereum.web3.eth.getBlock(sequence.blockNumber);\n        let date = new Date(block.timestamp * 1000).toLocaleString();\n\n        this.setState({date: date});\n    }\n\n    onClickDelete() {\n        if (this.props.isPlayable) {\n            this.props.unloadTrack();\n            return;\n        }\n        if (this.props.sequencerEngine !== undefined) {\n            this.props.sequencerEngine.dispose();\n        }\n        this.props.onClickDelete();\n    }\n\n    onClickTrackName() {\n        if (this.props.isPlayable) {\n            return;\n        }\n\n        if (this.props.sequencerEngine !== undefined) {\n            this.props.unloadTrack();\n        } else {\n            this.props.loadTrack();\n        }\n    }\n\n    onChangeVolume(v) {\n        this.props.sequencerEngine.setMasterVolume(v);\n        this.setState(this.state);\n    }\n\n    isLoaded() {\n        if (!this.props.isPlayable) {\n            return false;\n        }\n        return this.props.loadingSequence !== undefined &&\n            !this.props.loadingSequence[this.state.sequence.id] &&\n            this.props.sequencerEngine !== undefined;\n    }\n\n    onClickEdit() {\n        this.props.onEditSequence(this.props.sequencerEngine);\n    }\n\n    onClickComment() {\n        this.setState({showComments: true});\n    }\n\n    onClickTag() {\n        this.setState({showTagger: true});\n    }\n\n    getSequenceName() {\n        return this.state.sequence ? this.state.sequence.name : '';\n    }\n\n    onDragOver(e) {\n        e.preventDefault();\n    }\n\n    onDragStart(e) {\n        if ((this.props.viewMode !== SPOTLIGHT && this.props.viewMode !== MIXES) ||\n            this.isLoaded()) {\n            e.preventDefault();\n            return;\n        }\n        this.props.setDraggingSpotlightTrack(this.props.sequence);\n    }\n\n    onDrop(e) {\n        if ((this.props.viewMode !== SPOTLIGHT && this.props.viewMode !== MIXES)\n            || this.isLoaded()) {\n            e.preventDefault();\n            return;\n        }\n        let tracks = [... this.props.tracks];\n        let i = tracks.map(x => x.id).indexOf(\n            this.props.draggingSpotlightTrack.id);\n        if (i < 0) {\n            return;\n        }\n        tracks = moveKey(i, this.props.i, tracks);\n\n        // either its the spotlight or the mixes view\n        if (this.props.viewMode === SPOTLIGHT) {\n            // set the spotlight tracks \n            this.props.setSpotlightTracks(Object.keys(tracks).map(x => tracks[x]));\n        } else {\n            // set the current user mix tracks \n            let userMix = new UserMix().fromJson(this.props.currentMix);\n            userMix.tracks = Object.values(tracks);\n            this.props.setCurrentUserMix(userMix.getJson());\n        }\n        this.props.setUserHasEditsToSave(true);\n    }\n\n    render() {\n        let isLoading = this.props.sequencerEngine === undefined ? false :\n            this.props.loadingSequence === undefined ? true :\n            this.props.loadingSequence[this.state.sequence.id];\n        let style = {\n        };\n\n        if (this.props.isEditing) {\n            style['backgroundColor'] = colors.brighten(\n                colors.getColorForHash(this.props.sequence.id), 1);\n        }\n\n        return (\n            <div\n              onDragStart={(e) => this.onDragStart(e)}\n              onDragOver={(e) => this.onDragOver(e)}\n              onDrop={(e)=>this.onDrop(e)}                   \n              draggable\n              style={style}\n              className={this.isLoaded() ? \"loaded spotlight-track\" : \"spotlight-track\"}>\n              {this.props.isEditing || this.isLoaded() ? \n                <div onClick={() => this.onClickDelete()} className=\"delete-button\">x</div> : ''}\n              <div className=\"volume-pane\">\n                {this.isLoaded () ?\n                    <ReactBootstrapSlider\n                          value={this.props.masterVolume}\n                          change={(e) => this.onChangeVolume(e.target.value)}\n                          step={0.1}\n                          className=\"spotlight-fader\"\n                          max={6}\n                          min={-40}\n                          orientation=\"vertical\"\n                          reversed={true}\n                      />  : ''}\n              </div>\n              <div className=\"track-pane\">\n                <div onClick={() => this.onClickTrackName()} className=\"track-name\">\n                  {this.getSequenceName()}\n                </div>\n                {this.isLoaded() ?\n                    <PlayButton play={this.props.play} isPlaying={this.props.isPlaying} sequencerEngine={this.props.sequencerEngine}/>\n                    : ''}\n                <div className=\"clear-fix\"/>\n                <div className=\"date-and-name\">\n                  <div className=\"track-user-name\">{this.state.userName}</div>\n                  <div className=\"track-date\">\n                    {this.state.date ? this.state.date : ''}\n                  </div>\n                </div>\n                <PulseLoader\n                  sizeUnit={\"px\"}\n                  size={10}\n                  color={'#42f4f1'}\n                  loading={isLoading}\n                  />\n                {this.isLoaded() ?\n                    <PatternButtons\n                      currentPattern={this.props.currentPattern}\n                      sequencerEngine={this.props.sequencerEngine}/> : ''}\n             </div>\n             <ConditionedComponent condition={this.isLoaded() && !this.state.showComments}>\n               <div onClick={() => this.onClickEdit()} className=\"edit-button red-button common-button\">\n                 Edit \n               </div>\n               <div onClick={() => this.onClickTag()} className=\"edit-button green-button common-button\">\n                 Tag\n               </div>\n               <div onClick={() => this.onClickComment()} className=\"edit-button green-button common-button\">\n                 {this.state.numNotes ? this.state.numNotes + ' Notes' : 'Notes'}\n               </div>\n             </ConditionedComponent>\n             <div className=\"clear-fix\"></div>\n             <ConditionedComponent condition={this.state.showComments}>\n               <CommentsComponent\n                 onHide={() => this.setState({showComments: false})}\n                 userId={this.props.userId}\n                 sequence={this.props.sequence}/>\n             </ConditionedComponent>\n             <ConditionedComponent condition={this.state.showTagger}>\n               <TaggerComponent\n                 onHide={() => this.setState({showComments: false})}\n                 sequence={this.props.sequence}/>\n             </ConditionedComponent>\n           </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        masterVolume: state.sequencer.masterVolumes[props.sequence.id],\n        currentMix: state.user.currentMix,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setSpotlightTracks: (tracks) => dispatch(setSpotlightTracks(tracks)),\n        setUserHasEditsToSave: (flag) => dispatch(setUserHasEditsToSave(flag)),\n        setCurrentUserMix: (mix) => dispatch(setCurrentUserMix(mix)),\n    }\n};\n \n \nexport default connect(mapStateToProps, mapDispatchToProps)(SpotlightTrack);\n","import Modal from 'react-bootstrap/Modal';\nimport { Button } from 'reactstrap';\nimport ConditionedComponent from 'components/ConditionedComponent.js';\nimport React, { Component } from 'react';\nimport { Badge} from 'reactstrap';\nimport Dropdown from 'react-dropdown'\n\nclass ConnectToUserModal extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            guilds: [],\n            selectedGuild: undefined,\n            ownUserName: ''\n\n        }\n\n        this.fetchUserName();\n        this.fetchGuilds();\n    }\n\n\n    async fetchUserName() {\n        let userName = await this.props.ethereum.users.getUserName(this.state.userId);\n        this.setState({ownUserName: userName});\n    }\n\n    async fetchGuilds() {\n        let guilds = await this.props.guilds.getGuildsForUser();\n        this.setState({guilds: guilds});\n    }\n\n    getGuildsOptions() {\n        let options = this.state.guilds\n            .map(x => ({label: x.name, value: x.guildId}));\n\n        return options;\n    }\n\n    onSelectGuild(option) {\n        this.setState({selectedGuild: option});\n    }\n\n    getSelectedGuild() {\n        return this.state.selectedGuild;\n    }\n\n    connectWithUser() {\n        if (this.state.selectedGuild !== undefined) {\n            this.props.guilds.requestToAddMember(this.state.selectedGuild.value, this.props.userId);\n        } else {\n            this.props.guilds.connectWithUser(this.props.userId);\n        }\n        this.props.hide();\n    }\n\n    render() {\n        let name = this.props.preset !== undefined ? this.props.preset.name : '';\n        return (\n            <Modal dialogClassName=\"preset-modal\" show={this.props.show} onHide={this.props.hide}>\n              <Modal.Header closeButton>\n                <Modal.Title>Connect with {this.props.userName}</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <ConditionedComponent condition={this.state.guilds.length > 0}>\n                <Dropdown\n                  className=''\n                  options={this.getGuildsOptions()}\n                  onChange={(o) => this.onSelectGuild(o)}\n                  value={this.getSelectedGuild()}\n                  placeholder=\"Choose guild to connect via\" />\n                </ConditionedComponent>\n                Send a request to link up to your {this.state.ownUserName} account.\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"secondary\" onClick={() => this.connectWithUser()}>\n                  Ok\n            </Button>\n                <Button variant=\"primary\" onClick={this.props.hide}>\n                  Cancel \n            </Button>\n                </Modal.Footer>\n                </Modal>\n        );\n   }\n}\n\nexport default ConnectToUserModal;\n","import Modal from 'react-bootstrap/Modal';\nimport ConditionedComponent from 'components/ConditionedComponent.js';\nimport React, { Component } from 'react';\nimport { Badge} from 'reactstrap';\nimport { Button, InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\nimport Dropdown from 'react-dropdown'\nimport ethereum from 'decentralized/ethereum.js';\n\nclass DirectMessageModal extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            commentText: '',\n        }\n    }\n\n\n    async onMessage() {\n        await ethereum.messaging.sendMessage(\n            undefined, undefined, undefined, this.state.commentText);\n\n        this.props.hide();\n    }\n\n    render() {\n        return (\n            <Modal dialogClassName=\"preset-modal\" show={this.props.show} onHide={this.props.hide}>\n              <Modal.Header closeButton>\n                <Modal.Title>Message {this.props.userName}</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                  <InputGroup className=\"tag-sound-input\">\n                  <Input\n                    onChange={(event) => {\n                        this.state.commentText = event.target.value;\n                        this.setState(this.state);\n                    }}\n                    type=\"textarea\"\n                    value={this.state.commentText}\n                    placeholder=\"Write a note\" className=\"comment-input-box\"/>\n                  <InputGroupAddon addonType=\"append\">\n                    <Button size=\"sm\" onClick={() => this.onMessage()} color=\"secondary\">Send</Button>\n                  </InputGroupAddon>\n                </InputGroup>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={() => this.onMessage()}>\n                  Done \n                </Button>\n                <Button variant=\"primary\" onClick={this.props.hide}>\n                  Cancel \n                </Button>\n                </Modal.Footer>\n                </Modal>\n        );\n   }\n}\n\nexport default DirectMessageModal;\n","import React, { Component } from 'react';\nimport ConditionedComponent from 'components/ConditionedComponent.js';\nimport { connect } from \"react-redux\";\nimport {setUserViewMode} from 'actions/index.js';\nimport {SPOTLIGHT, MIXES, LINKS, COLORS} from 'constants/user-view-modes.js';\nimport ConnectToUserModal from './ConnectToUserModal.js';\nimport DirectMessageModal from './DirectMessageModal.js';\n\nclass ProfileNavigatorComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showConnectModal: false,\n            showMessageModal: false,\n        };\n    }\n\n    onClickDirectMessage() {\n        this.setState({showMessageModal: true});\n    }\n\n    onClickConnect() {\n        this.setState({showConnectModal: true});\n    }\n\n    onClickMessage() {\n\n    }\n\n    render() {\n        return (\n            <div className=\"profile-navigator\">\n              <DirectMessageModal\n                userName={this.props.userName}\n                userId={this.props.userId}\n                hide={() => this.setState({showMessageModal: false})}\n                show={this.state.showMessageModal}/>\n              <ConnectToUserModal\n                userName={this.props.userName}\n                ethereum={this.props.ethereum}\n                guilds={this.props.guilds}\n                userId={this.props.userId}\n                hide={() => this.setState({showConnectModal: false})}\n                show={this.state.showConnectModal}/>\n              <div\n                onClick={() => this.props.setUserViewMode(SPOTLIGHT)}\n                className={this.props.viewMode === SPOTLIGHT ? \"selected navigator-option\" : \"navigator-option\"}>\n                Spotlight\n              </div>\n              <div\n                onClick={() => this.props.setUserViewMode(MIXES)}\n                className={this.props.viewMode === MIXES ? \"selected navigator-option\" : \"navigator-option\"}>\n                Mixes\n              </div>\n              <ConditionedComponent condition={this.props.isEditing}>\n                <div\n                  onClick={() => this.props.setUserViewMode(LINKS)}\n                  className={this.props.viewMode === LINKS ? \"selected navigator-option\" : \"navigator-option\"}>\n                  Links \n                </div>\n              </ConditionedComponent>\n              <ConditionedComponent condition={this.props.hasEditsToSave && this.props.isEditing}>\n                <div\n                  onClick={this.props.onClickSave}\n                  className=\"navigator-option save-option\">\n                  SAVE\n                </div>\n              </ConditionedComponent>\n              <ConditionedComponent condition={true}>\n                <div className=\"left-buttons\">\n                  <div>\n                    <img\n                      onClick={() => this.onClickDirectMessage()}\n                      className=\"direct-message-button\" src=\"/direct-message.png\"/>\n                  </div>\n                  <div\n                    onClick={() => this.onClickConnect()}\n                    className=\"common-button pink-button connect-button\">CONNECT</div>\n                </div>\n              </ConditionedComponent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n        viewMode: state.user.viewMode,\n        hasEditsToSave: state.user.hasEditsToSave,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setUserViewMode: (viewMode) => dispatch(setUserViewMode(viewMode)),\n    };\n};\n\n \nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileNavigatorComponent);\n","import React, { Component } from 'react';\nimport SpotlightTrack from 'components/user/SpotlightTrack.js';\nimport { connect } from \"react-redux\";\nimport {setIsPlaying} from \"actions/index.js\";\n\n// responsible for showing tracks\nclass TracksComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            draggingSpotlightTrack: undefined\n        };\n              \n    }\n\n    play(sequence) {\n        this.props.multiSequencerEngine.play(sequence);\n    }\n\n    unloadTrack(sequenceId) {\n        this.props.unloadTrack(sequenceId);\n    }\n    \n    loadTrack(id) {\n        this.props.loadTrack(id);\n    }\n\n    getSequencerEngine(id) {\n        return this.props.multiSequencerEngine.getSequencerEngine(id);\n    }\n\n    setDraggingSpotlightTrack(track) {\n        this.setState({\n            draggingSpotlightTrack: track\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"user-tracks\">\n              {this.props.tracks.map(\n                  (sequence, i) => \n                      <SpotlightTrack\n                            isPlayable={this.props.isPlayable}\n                            play={() => this.play(sequence)}\n                            i={i}\n                            viewMode={this.props.viewMode}\n                            tracks={this.props.tracks}\n                            isEditing={this.props.isEditing}\n                            ethereum={this.props.ethereum}\n                            setDraggingSpotlightTrack={(track) => this.setDraggingSpotlightTrack(track)}\n                            draggingSpotlightTrack={this.state.draggingSpotlightTrack}\n                            isPlaying={this.props.isPlaying[sequence.id]}\n                            unloadTrack={() => this.unloadTrack(sequence.id)}\n                            loadTrack={() => this.loadTrack(sequence.id)}\n                            key={'sequence-' + sequence.id}\n                            onEditSequence={this.props.onEditSequence}\n                            sequencerEngine={this.getSequencerEngine(sequence.id)}\n                            userId={this.props.userId}\n                            onClickDelete={() => this.props.onDeleteTrack(sequence)}\n                            loadingSequence={this.props.loadingSequence}\n                            store={this.props.store}\n                            sequence={sequence}/>)}\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state, props) => {\n    return {\n        isPlaying: state.sequencer.isPlaying,\n        loadingSequence: state.sequencer.loadingSequence,\n        loadedTracks: state.user.loadedTracks,\n        viewMode: state.user.viewMode,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setIsPlaying: (id, x) => dispatch(setIsPlaying(id, x)),\n    };\n};\n\n \nexport default connect(mapStateToProps, mapDispatchToProps)(TracksComponent);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport {SPOTLIGHT} from 'constants/user-view-modes.js';\n\nclass AddTracksButton extends Component {\n    render() {\n        let text = this.props.viewMode === SPOTLIGHT ?\n            'ADD TRACKS TO SPOTLIGHT' :\n            'ADD TRACKS TO MIX';\n        if (this.props.isEditing && this.props.userLoaded) {\n            return (\n                <div onClick={() => this.props.onClickAddTrack()} className='add-spotlight-track'>\n                  {text}\n                </div>);\n        } else {\n            console.log('did not show the add tracks button because isEditing = ' + this.props.isEditing + ' and userLoaded=' + this.props.userLoaded);\n            return (<div></div>);\n        }\n    }\n}\n\nexport default AddTracksButton;\n","import React, { Component } from 'react';\nimport ConditionedComponent from 'components/ConditionedComponent.js';\nimport { connect } from \"react-redux\";\nimport {setCurrentUserMix} from 'actions/index.js';\n\nclass UserMixesComponent extends Component {\n    onClickMix(mix) {\n        this.props.setCurrentUserMix(mix.getJson());\n    }\n\n    onClickDeleteMix(e, mix) {\n        e.stopPropagation();\n        this.props.onClickDeleteMix(mix);\n    }\n\n    render() {\n        return (\n            <div>\n              {this.props.mixes.map(\n                  mix =>\n                      <div\n                            onClick={() => this.onClickMix(mix)}\n                            className=\"user-mix\">\n                            {mix.name}\n                            <ConditionedComponent condition={this.props.isEditing}>\n                                  <div onClick={(e) => this.onClickDeleteMix(e, mix)} className=\"delete-button\">x</div>\n                            </ConditionedComponent>\n                      </div>)}\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUserMix: (currentMix) => dispatch(setCurrentUserMix(currentMix)),\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(UserMixesComponent);\n","import React, { Component } from 'react';\nimport {setCurrentUserMix, setUserHasEditsToSave} from 'actions/index.js';\nimport ConditionedComponent from 'components/ConditionedComponent.js';\nimport UserMix from 'repos/UserMix.js';\nimport { connect } from \"react-redux\";\nimport { Button, InputGroup, InputGroupAddon, InputGroupText, Input } from 'reactstrap';\n\nclass MixNameComponent extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nameValue: '',\n            editingName: false,\n        };\n    }\n\n    onNewMix() {\n        let json = new UserMix().getJson();\n        this.props.setCurrentUserMix(json);\n        this.props.addEditedMix(new UserMix().fromJson(json));\n        this.props.setUserHasEditsToSave(true);\n        this.setState({nameValue: ''});\n    }\n\n    onKeyPress(e) {\n        if (e.key === 'Enter') {\n            this.chooseMixName();\n        }\n    }\n\n    chooseMixName() {\n        if (!this.props.isEditing) {\n            return;\n        }\n        let mix = new UserMix().fromJson(this.props.currentMix);\n        mix.name = this.state.nameValue;\n        this.props.setCurrentUserMix(mix.getJson());\n        this.props.setUserHasEditsToSave(true);\n        this.setState({editingName: false});\n    }\n\n    getName() {\n        return this.props.currentMix === undefined ?\n            undefined :\n            new UserMix().fromJson(this.props.currentMix).name;\n    }\n\n    onBackToMixes() {\n        this.props.addEditedMix(new UserMix().fromJson(this.props.currentMix));\n        this.props.setCurrentUserMix(undefined);\n    }\n\n    onClickName() {\n        if (this.props.isEditing) {\n            this.setState({editingName: true, nameValue: this.getName()});\n        }\n    }\n\n    render() {\n        if (this.props.currentMix === undefined && this.props.isEditing) {\n            return (\n                <div onClick={() => this.onNewMix()} className=\"new-mix-button\">\n                  NEW MIX\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"mix-name-container\">\n              <ConditionedComponent condition={this.props.isEditing && (this.state.editingName || this.getName() === undefined)}>\n                <InputGroup className=\"tag-sound-input mix-name-container\">\n                  <Input\n                    onChange={(event) => {this.state.nameValue = event.target.value; this.setState(this.state);}}\n                    value={this.state.nameValue}\n                    onKeyUp={(e) => this.onKeyPress(e)}\n                    placeholder=\"Choose a mix name\" className=\"tag-sound-input-box\"/>\n                  <InputGroupAddon addonType=\"append\">\n                    <Button size=\"sm\" onClick={() => this.chooseMixName()} color=\"secondary\">Done</Button>\n                  </InputGroupAddon>\n                </InputGroup>\n              </ConditionedComponent>\n              <ConditionedComponent condition={!this.state.editingName && this.getName() !== undefined}>\n                <div className=\"mix-name-and-back\">\n                  <div\n                    onClick={() => this.onClickName()}\n                    className=\"mix-name\">\n                    {this.getName()}\n                  </div>\n                  <div\n                    onClick={() => this.onBackToMixes()}\n                    className=\"back-to-mixes\">\n                    BACK \n                  </div>\n \n                </div>\n             </ConditionedComponent>\n              <div className=\"clear-fix\"></div>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setCurrentUserMix: mix => dispatch(setCurrentUserMix(mix)),\n        setUserHasEditsToSave: t => dispatch(setUserHasEditsToSave(t)),\n    };\n};\nconst mapStateToProps = (state, props) => {\n    return {\n        currentMix: state.user.currentMix,\n    };\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MixNameComponent);\n","import React, { Component } from 'react';\nimport ConditionedComponent from 'components/ConditionedComponent.js';\n\nclass Guilds extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            guilds: [],\n        };\n\n        this.fetchGuilds();\n    }\n\n    async fetchGuilds() {\n        let guilds = await this.props.ethereum.guilds.getGuildsForUser();\n        this.setState({guilds: guilds});\n    }\n\n    leaveGuild() {\n        if (!window.confirm(\"Are you sure you want to leave this guild?\")) {\n            return;\n        }\n        this.props.ethereum.guilds.leaveGuild(this.props.selectedGuild);\n        let guilds = [... this.state.guilds];\n        let index = guilds.indexOf(this.props.selectedGuild);\n        guilds.splice(index, 1);\n        this.setState({guilds: guilds});\n        this.props.onClickGuild(this.props.selectedGuild);\n    }\n\n    renameGuild() {\n    }\n\n    render() {\n        if (this.state.guilds.length === 0) {\n            return (\n                <div></div>\n            );\n        }\n\n        return (\n            <div className=\"guilds\">\n              <div className=\"linked-count\">\n                And <span className=\"linked-count-number\">\n                  {this.state.guilds.length}</span> guilds</div>\n              {this.state.guilds.map(\n                  guild =>\n                      <Guild\n                        selected={guild.guildId === this.props.selectedGuild}\n                        onClickGuild={() => this.props.onClickGuild(guild.guildId)}\n                        guild={guild}/>)}\n                <ConditionedComponent condition={this.props.selectedGuild}>\n                <div className=\"guild-action-buttons\">\n                <div\n                  onClick={() => this.leaveGuild()}\n                  className=\"guild-action-button common-button pink-button\">Leave Guild</div>\n                <div\n                  onClick={() => this.renameGuild()}\n                  className=\"guild-action-button common-button pink-button\">Rename Guild</div>\n                </div>\n                </ConditionedComponent>\n            </div>\n        );\n    }\n}\n\nclass Guild extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        let className = this.props.selected ? \"guild selected\" : \"guild\";\n        return (\n            <div\n              onClick={this.props.onClickGuild}\n              className={className}>\n              <div className=\"linked-user-name\">\n                {this.props.guild.name === '' ? this.props.guild.guildId :\n                this.props.guild.name}</div>\n            </div>\n        );\n    }\n}\n\nexport default Guilds;\n","import Modal from 'react-bootstrap/Modal';\nimport { Button } from 'reactstrap';\nimport ConditionedComponent from 'components/ConditionedComponent.js';\nimport React, { Component } from 'react';\nimport { Badge} from 'reactstrap';\nimport Dropdown from 'react-dropdown'\nimport {  Input } from 'reactstrap';\n\nclass LinkedMemberModal extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nameValue: '',\n        }\n    }\n\n    onInputType(value) {\n        this.setState({nameValue: value});\n    }\n\n    setGuildName() {\n        this.props.ethereum.guilds.setGuildName(this.props.member.guildId, this.state.nameValue);\n        this.props.hide();\n    }\n\n    render() {\n        if (this.props.member === undefined) {\n            console.log('returning nothing');\n            return (\n                <div></div>\n            );\n        }\n        let userName = this.props.member ? this.props.member.userName : '';\n        let guildName = this.props.member ? this.props.member.guildName : undefined;\n        return (\n            <Modal dialogClassName=\"preset-modal\" show={this.props.member !== undefined} onHide={this.props.hide}>\n              <Modal.Header closeButton>\n                <Modal.Title>{userName}</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <ConditionedComponent condition={guildName===''}>\n                  Name the guild between you and {userName}\n                <Input\n                  value={this.state.nameValue}\n                  onChange={(event) => this.onInputType(event.target.value)}\n                  placeholder=\"Type name for guild\"\n                  className=\"tag-input\"/>\n                </ConditionedComponent>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={() => this.setGuildName()}>\n                  Ok\n                </Button>\n                <Button variant=\"primary\" onClick={this.props.hide}>\n                  Cancel \n                </Button>\n                </Modal.Footer>\n                </Modal>\n        );\n   }\n}\n\nexport default LinkedMemberModal;\n","import React, { Component } from 'react';\nimport ConditionedComponent from 'components/ConditionedComponent.js';\nimport LinkedMemberModal from './LinkedMemberModal.js';\n\nclass LinkedMembers extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            members: [],\n            selectedMember: undefined,\n        };\n\n        this.fetchMembers();\n    }\n\n    async fetchMembers() {\n    }\n\n    onClickMember(member) {\n        if (member.guildName === '') {\n            this.setState({selectedMember: member});\n        } else {\n            window.open('/user/' + member.userName, '_blank');\n        }\n    }\n\n    onHideModal() {\n        console.log('on hide');\n        this.setState({selectedMember: undefined});\n    }\n\n    getLinkedMembers() {\n        if (this.props.selectedGuild === undefined) {\n            return this.state.members;\n        }\n        return this.state.members.filter(\n            x => x.guildId ===  this.props.selectedGuild);\n    }\n\n    render() {\n        return (\n            <div className=\"linked-members\">\n              <LinkedMemberModal\n                ethereum={this.props.ethereum}\n                hide={() => this.onHideModal()} member={this.state.selectedMember}/>\n              <div className=\"linked-count\">You are connected to <span className=\"linked-count-number\"> {this.state.members.length} </span> artists</div>\n              {this.getLinkedMembers().map(\n                  member =>\n                      <LinkedMember\n                            onClickMember={() => this.onClickMember(member)}\n                        member={member}/>)}\n            </div>\n        );\n    }\n}\n\nclass LinkedMember extends Component {\n    render() {\n        return (\n            <div\n              onClick={this.props.onClickMember}\n              className=\"linked-member\">\n              <div className=\"linked-user-name\">{this.props.member.userName} </div>\n              <ConditionedComponent condition={this.props.member.guildName !== ''}>\n                <div className=\"guild-name\">{this.props.member.guildName}</div>\n              </ConditionedComponent>\n            </div>\n        );\n    }\n}\n\nexport default LinkedMembers;\n","import React, { Component } from 'react';\nimport ConditionedComponent from 'components/ConditionedComponent.js';\nimport Guilds from './Guilds.js';\nimport LinkedMembers from './LinkedMembers.js';\nimport NewMemberRequests from 'components/guilds/NewMemberRequests.js';\n\nclass LinksComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedGuild: undefined\n        };\n    }\n\n    onClickGuild(guildId) {\n        if (guildId === this.state.selectedGuild) {\n            this.setState({selectedGuild: undefined});\n        } else {\n            this.setState({selectedGuild: guildId});\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"links-view\">\n              <LinkedMembers\n                selectedGuild={this.state.selectedGuild}\n                ethereum={this.props.ethereum}/>\n              <Guilds\n                selectedGuild={this.state.selectedGuild}\n                onClickGuild={(guild) => this.onClickGuild(guild)}\n                ethereum={this.props.ethereum}/>\n              <NewMemberRequests ethereum={this.props.ethereum}/>\n           </div>\n        );\n    }\n}\n\nexport default LinksComponent;\n","import React, { Component } from 'react';\nimport ConditionedComponent from 'components/ConditionedComponent.js';\nimport ColorsComponent from './ColorsComponent.js';\nimport { connect } from \"react-redux\";\nimport {setViewMode, setLoadedTracks, setCurrentUserMix, setUserHasEditsToSave} from 'actions/index.js';\nimport MixPlayerPane from './MixPlayerPane.js';\nimport Tone from 'tone';\nimport SpotlightTrack from 'components/user/SpotlightTrack.js';\nimport ScriptableSequencerEngine from 'engine/ScriptableSequencer.js';\nimport Scripting from 'scripting/Scripting.js';\nimport ProfileNavigatorComponent from './ProfileNavigatorComponent.js';\nimport TracksComponent from './TracksComponent.js';\nimport AddTracksButton from './AddTracksButton.js';\nimport UserMix from 'repos/UserMix.js';\nimport UserMixesComponent from './UserMixesComponent.js';\nimport MixNameComponent from './MixNameComponent.js';\nimport LinksComponent from './LinksComponent.js';\nimport {SPOTLIGHT, MIXES, LINKS, COLORS} from 'constants/user-view-modes.js';\n\nclass UserProfileDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showSequences: false,\n            newMix: false,\n        };\n\n        this.loadTrack = this.loadTrack.bind(this);\n        this.unloadTrack = this.unloadTrack.bind(this);\n    }\n\n    onClickAddTrack() {\n        this.setState({showSequences: true});\n    }\n\n    hideSequences() {\n        this.setState({showSequences: false});\n    }\n\n    getOrderedTracks() {\n        if (this.props.viewMode == MIXES) {\n            if (this.props.currentMix === undefined) {\n                return [];\n            }\n            return new UserMix().fromJson(this.props.currentMix).tracks;\n        }\n\n        // if view mode is spotlight show the spotlight tracks\n        // if view mode is mix then show the current mix's tracks\n        return this.props.spotlightTracks.filter(\n            (t) => this.props.multiSequencerEngine.getSequencerEngine(t.id) !== undefined)\n            .concat(\n                this.props.spotlightTracks.filter(\n                    (t) => !this.props.multiSequencerEngine.getSequencerEngine(t.id)));\n    }\n\n    getTracks() {\n        if (this.props.viewMode == MIXES) {\n            if (this.props.currentMix === undefined) {\n                return [];\n            }\n            return new UserMix().fromJson(this.props.currentMix).tracks;\n        }\n\n        return this.props.spotlightTracks;\n    }\n\n    getAllTracks() {\n        let tracks = {};\n\n        for (let i in this.props.spotlightTracks) {\n            tracks[this.props.spotlightTracks[i].id] =\n                this.props.spotlightTracks[i];\n        }\n\n        for (let i in this.props.mixes) {\n            let mix = this.props.mixes[i];\n            for (let j in mix.tracks) {\n                tracks[mix.tracks[j].id] = mix.tracks[j];\n            }\n        }\n\n        return Object.values(tracks);\n    }\n\n    filterLoadedTracks(tracks, loaded) {\n        if (loaded) {\n            let loadedTracks = new Set(this.props.loadedTracks);\n            return tracks.filter(\n                track => loadedTracks.has(track.id));\n        }\n\n        return tracks.filter(\n            track => \n                !this.props.multiSequencerEngine.getSequencerEngine(track.id)\n            );\n    }\n\n    loadTrack(id) {\n        this.props.multiSequencerEngine.loadTrack(id);\n        let loadedTracks = new Set(this.props.loadedTracks);\n        loadedTracks.add(id);\n        this.props.setLoadedTracks(Array.from(loadedTracks));\n    }\n\n    unloadTrack(id) {\n        this.props.multiSequencerEngine.unloadTrack(id);\n        let loadedTracks = new Set(this.props.loadedTracks);\n        loadedTracks.delete(id);\n        this.props.setLoadedTracks(Array.from(loadedTracks));\n    }\n\n    saveAsMix(tracks) {\n        let mix = new UserMix();\n        mix.tracks = tracks;\n        this.props.setCurrentUserMix(mix.getJson());\n        this.props.addEditedMix(mix);\n        this.props.setUserHasEditsToSave(true);\n        this.props.setViewMode(MIXES);\n    }\n\n    render() {\n        if (this.props.sequencerEngineEditing !== undefined) {\n            return (<div></div>);\n        }\n\n        if (this.props.viewMode === LINKS) {\n            return (\n                <LinksComponent\n                  ethereum={this.props.ethereum}\n                  userId={this.props.userId}/>\n            );\n        }\n\n        return (\n            <div className=\"profile-details\">\n              <div className=\"left-pane\">\n              <ConditionedComponent condition={this.props.viewMode == MIXES}>\n                <MixNameComponent\n                  isEditing={this.props.isEditing}\n                  addEditedMix={this.props.addEditedMix}\n                  currentMix={this.props.currentMix}/>\n              </ConditionedComponent>\n              <div className=\"spotlight-pane\">\n                <ConditionedComponent condition={!this.state.showSequences && (this.props.viewMode === SPOTLIGHT || this.props.currentMix !== undefined)}>\n                  <AddTracksButton\n                    viewMode={this.props.viewMode}\n                    userLoaded={this.props.userLoaded}\n                    isEditing={this.props.isEditing}\n                    onClickAddTrack={() => this.onClickAddTrack()}/>\n                </ConditionedComponent>\n                <ConditionedComponent condition={this.props.currentMix === undefined && this.props.viewMode == MIXES}>\n                  <UserMixesComponent isEditing={this.props.isEditing} onClickDeleteMix={this.props.onClickDeleteMix} mixes={this.props.mixes}/>\n                </ConditionedComponent>\n               </div>\n              <div className=\"clear-fix\"/>\n                <TracksComponent\n                  multiSequencerEngine={this.props.multiSequencerEngine}\n                  loadTrack={this.loadTrack}\n                  unloadTrack={this.unloadTrack}\n                  tracks={this.getTracks()}\n                  isEditing={this.props.isEditing}\n                  ethereum={this.props.ethereum}\n                  onEditSequence={this.props.onEditSequence}\n                  onDeleteTrack={this.props.onDeleteTrack}\n                  store={this.props.store}/>\n              </div>\n              <div>\n                <MixPlayerPane\n                  isEditing={this.props.isEditing}\n                  saveAsMix={(tracks) => this.saveAsMix(tracks)}\n                  multiSequencerEngine={this.props.multiSequencerEngine}\n                  tracks={this.filterLoadedTracks(this.getAllTracks(), true)}\n                  >\n                  <TracksComponent\n                    isPlayable={true}\n                    multiSequencerEngine={this.props.multiSequencerEngine}\n                    userId={this.props.userId}\n                    tracks={this.filterLoadedTracks(this.getAllTracks(), true)}\n                    loadTrack={this.loadTrack}\n                    unloadTrack={this.unloadTrack}\n                    isEditing={this.props.isEditing}\n                    ethereum={this.props.ethereum}\n                    onEditSequence={this.props.onEditSequence}\n                    onDeleteTrack={this.props.onDeleteTrack}\n                    store={this.props.store}/>\n                </MixPlayerPane>\n              <ConditionedComponent condition={this.state.showSequences}>\n                <div className=\"sequences-chooser-wrapper\">\n                  <div onClick={() => this.hideSequences()} className=\"add-spotlight-track\">\n                    HIDE\n                  </div>\n                </div>\n              </ConditionedComponent>\n              </div>\n             </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setLoadedTracks: (tracks) => dispatch(setLoadedTracks(tracks)),\n        setCurrentUserMix: (mix) => dispatch(setCurrentUserMix(mix)),\n        setUserHasEditsToSave: (flag) => dispatch(setUserHasEditsToSave(flag)),\n        setViewMode: (mode) => dispatch(setViewMode(mode))\n    };\n};\n\nexport default connect(undefined, mapDispatchToProps)(UserProfileDetails);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport SequencerToolbar from 'components/toolbar/SequencerToolbar.js';\nimport AudioInputChooser from 'components/AudioInputChooser.js';\nimport SampleRateChooser from './preferences/SampleRateChooser.js';\nimport ClockOptions from './ClockOptions.js';\nimport SubPageHeader from 'components/SubPageHeader.js';\nimport {setViewMode} from 'actions/index.js';\nimport {setDecentralized} from 'actions/index.js';\nimport {setLatency} from 'actions/index.js';\nimport {SEQUENCER_VIEW} from 'constants/view-modes.js';\nimport {isNumber} from 'utils/IsNumber.js';\nimport {KEYBOARD, PADS} from 'midi/constants.js';\nimport {NONE, MASTER, SLAVE} from 'constants/clock-types.js';\nimport Dropdown from 'react-dropdown'\nimport '../Preferences.css';\n\nclass PreferencesView extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n        console.log(props.midiEngine);\n    }\n\n    componentWillUnmount() {\n        this.props.sequencerEngine.clockSync.stopListening();\n    }\n\n    onLatencyChanged(e) {\n        if (isNumber(e)) {\n            this.props.setLatency(e);\n        }\n    \n    }\n\n    async componentDidMount() {\n        console.log('preferences component did mount');\n        this.props.sequencerEngine.clockSync.startListening();\n        await this.props.midiEngine.loadAvailableDevices();\n        this.props.sequencerEngine.channelMixer.updateChannelCount();\n        this.setState(this.state);\n    }\n\n    syncChanged() {\n        this.setState(this.state);\n    }\n\n    isMultiChannelRecording() {\n        return !this.props.channelMixer.stereoConnected;\n    }\n\n    switchOutputs(isMulti) {\n        this.props.channelMixer.switchOutputs(isMulti);\n        this.setState(this.state);\n    }\n\n    onChooseAudio(stream, deviceId) {\n        this.props.sequencerEngine.audioInputManager.newInputSource(stream, deviceId);\n        this.setState(this.state);\n    }\n\n    render() {\n        return (\n            <div className=\"preferences-view\">\n              <SubPageHeader headerText=\"Preferences\" onClickBack={() => this.props.setViewMode(SEQUENCER_VIEW)}/>\n                <div className=\"preferences-flex\">\n                  <div className=\"midi-preferences panel\">\n                    <div className=\"midi-preferences-subsection\">\n                    <div className=\"sub-header\">MIDI</div>\n                    <div className=\"inputs-heading\">INPUTS</div>\n                    {this.props.midiEngine.getInputs().map(\n                        input =>\n                        <MidiInput syncChanged={() => this.syncChanged()} input={input} midiEngine={this.props.midiEngine}/>)}\n                    </div>\n                    <div className=\"midi-preferences-subsection\">\n                <div className=\"outputs-heading\">OUTPUTS</div>\n                {this.props.midiEngine.getOutputs().map(\n                    output =>\n                        <MidiOutput output={output} midiEngine={this.props.midiEngine}/>)}\n            </div>\n            </div>\n                <div className=\"audio-preferences panel\">\n                <div className=\"sub-header\">AUDIO</div>\n                  <SampleRateChooser\n                    sequencerEngine={this.props.sequencerEngine}\n                  />\n                <AudioInputChooser\n            deviceId={this.props.sequencerEngine.audioInputManager.deviceId}\n            defaultClassName=\"preferences-audio-chooser\" onChooseAudio={(stream, deviceId) => this.onChooseAudio(stream, deviceId)}/>\n                <MultiChannelButton\n            isMultiChannelOutput={this.isMultiChannelRecording()}\n            numberOfChannels={this.props.channelMixer.numberOfChannels()}\n            onClick={(isMultiChannel) => this.switchOutputs(isMultiChannel)} />\n                <div className=\"latency-container\">\n                <div>Latency (ms)</div>\n                       <input                  \n                         className=\"chord-input\"\n                         onChange={e => this.onLatencyChanged(e.target.value)}\n                         value={this.props.latency}\n                         placeholder=\"Latency\" className='tags-input' type=\"text\"/>\n                </div>\n                <ClockOptions sequencerEngine={this.props.sequencerEngine}/>\n               </div>\n                </div>\n                </div>\n        );\n    }\n}\n\nclass MidiInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    onClickSynced() {\n        if (!this.props.midiEngine.isInputSynced(this.props.input)) {\n            this.props.midiEngine.syncInput(this.props.input);\n        } else {\n            console.log('unsyncing ' + this.props.input);\n            this.props.midiEngine.unsyncInput(this.props.input);\n        }\n        \n        this.props.syncChanged();\n        this.setState(this.state);\n    }\n\n    onClickTracked() {\n        if (!this.props.midiEngine.isInputTracked(this.props.input)) {\n            this.props.midiEngine.trackInput(this.props.input);\n        } else {\n            this.props.midiEngine.untrackInput(this.props.input);\n        }\n        this.setState(this.state);\n    }\n\n    onClickKeys() {\n        this.props.midiEngine.setInputMode(this.props.input, KEYBOARD);\n        this.setState(this.state);\n    }\n\n    onClickPads() {\n        this.props.midiEngine.setInputMode(this.props.input, PADS);\n        this.setState(this.state);\n    }\n\n    render() {\n        let synced = this.props.midiEngine.isInputSynced(this.props.input);\n        let tracked = this.props.midiEngine.isInputTracked(this.props.input);\n        let mode = this.props.midiEngine.getInputMode(this.props.input.name);\n        console.log('tracked = ' + tracked);\n        return (\n            <div className=\"midi-input\">\n              <div className=\"midi-name\">{this.props.input.name}</div>\n              <div className=\"midi-options\">\n              <div\n                onClick={() => this.onClickTracked()}\n                className={tracked ? \"midi-option enabled\" : \"midi-option\"}>\n                TRACK\n              </div>\n              <div\n                onClick={() => this.onClickSynced()}\n                className={synced ? \"midi-option enabled\" : \"midi-option\"}>\n                SYNC\n              </div>\n              <div\n                onClick={() => this.onClickKeys()}\n                className={mode === KEYBOARD ? \"midi-option enabled\" : \"midi-option\"}>\n                KEYS\n              </div>\n               <div\n                onClick={() => this.onClickPads()}\n                className={mode == PADS ? \"midi-option enabled\" : \"midi-option\"}>\n                 PADS \n              </div>\n              </div>\n \n            </div>\n        );\n    }\n}\n\nclass MidiOutput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    onClickSync() {\n        console.log('onClickSync called with props otput = ');\n        console.log(this.props.output);\n        this.props.midiEngine.syncOutput(this.props.output);\n        this.setState(this.state);\n    }\n\n    onClickTracked() {\n        if (!this.props.midiEngine.isOutputTracked(this.props.output)) {\n            this.props.midiEngine.trackOutput(this.props.output);\n        } else {\n            this.props.midiEngine.untrackOutput(this.props.output);\n        }\n        this.setState(this.state);\n    }\n\n    render() {\n        let tracked = this.props.midiEngine.isOutputTracked(this.props.output);\n        let synced = this.props.midiEngine.systemOutput === this.props.output;\n        return (\n            <div className=\"midi-output\">\n              <div className=\"midi-name\">{this.props.output.name}</div>\n              <div className=\"midi-options\">\n              <div\n                onClick={() => this.onClickTracked()}\n                className={tracked ? \"midi-option enabled\" : \"midi-option\"}>\n                TRACK\n              </div>\n              <div\n                onClick={() => this.onClickSync()}\n                className={synced ? \"midi-option enabled\" : \"midi-option\"}>SYNC</div>\n              </div>\n            </div>\n        );\n    }\n}\n\nclass DecentralizedButton extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    onClick() {\n        this.props.onClick(!this.props.decentralized);\n        this.setState(this.state);\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.onClick()} className=\"decentralized-option\">\n              {this.props.decentralized ? 'DECENTRALIZED' : 'CENTRALIZED'}\n            </div>\n        );\n    }\n}\n\nclass MultiChannelButton extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    onClick() {\n        this.props.onClick(!this.props.decentralized);\n        this.setState(this.state);\n    }\n\n    render() {\n        return (\n            <div onClick={() => this.props.onClick(!this.props.isMultiChannelOutput)} className=\"audio-outputs-option\">\n              {this.props.isMultiChannelOutput ? 'MULTI CHANNEL OUTPUT ' : 'SINGLE OUTPUT '}\n                ({this.props.numberOfChannels} channels)\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setViewMode: viewMode => dispatch(setViewMode(viewMode)),\n        setDecentralized: decentralized => dispatch(setDecentralized(decentralized)),\n        setLatency: latency => dispatch(setLatency(latency)),\n    }\n};\n\nconst mapStateToProps = state => {\n    return {\n        decentralized: state.sequencer.decentralized,\n        latency: state.sequencer.latency,\n    };\n};\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PreferencesView);\n","import React, { Component } from 'react';\n\nclass AutoCompleteSuggestions extends Component {\n    render() {\n        return (\n            <div className=\"auto-complete-suggestions\">\n              {this.props.suggestions.map(\n                  s => <div className=\"suggestion\">{s}</div>)}\n            </div>\n        );\n    }\n}\n\nexport default AutoCompleteSuggestions;\n","import {isNumber} from 'utils/IsNumber.js';\nimport React, { Component } from 'react';\nimport {getParameters, autoCompleteParameter} from 'scripting/commands/effects.js';\nimport ReactBootstrapSlider from 'react-bootstrap-slider';\nimport {TAG} from 'constants/field-types.js';\nimport SequenceButtonsContainer from './bottomBar/SequenceButtonsContainer.js';\nimport AutoCompleteSuggestions from './bottomBar/AutoCompleteSuggestions.js';\nimport {nameToEffect} from 'effects/EffectsList.js';\nimport {nameToMidiEffect} from 'effects/midi/getMidiEffect.js';\nimport {nameToLiveEffect} from 'effects/live/getLiveEffect.js';\nimport ContextualHelpComponent from 'components/sidebar/ContextualHelpComponent.js';\nimport ConditionedComponent from 'components/ConditionedComponent.js';\nimport { Input} from 'reactstrap';\nimport { connect } from \"react-redux\";\nimport {setCommandInput} from 'actions/index.js';\nimport {setViewMode} from 'actions/index.js';\nimport {setIsRecording} from 'actions/index.js';\nimport {setShowPianoRoll} from 'actions/index.js';\nimport {setContextualHelp} from 'actions/index.js';\nimport {setIsRecordingExpanded} from 'actions/index.js';\nimport {setCommandPrefix} from 'actions/index.js';\nimport {setQuantized} from 'actions/index.js';\nimport {setTrackRolling} from 'actions/index.js';\nimport {SCRIPTING_VIEW} from 'constants/view-modes.js';\n\nimport \"../Script.scss\";\n\nclass StickyScriptComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            focused: props.scriptingFocused,\n            command: '',\n            info: '',\n            suggestions: [],\n        };\n\n        this.sequencerEngine = this.props.sequencerEngine;\n\n        props.scripting.onFlashInfo = (info) => this.onFlashInfo(info);\n    }\n\n    shouldComponentUpdate(nextProps) {\n        if (this.state.focused != nextProps.scriptingFocused &&\n            nextProps.scriptingFocused) {\n            this.input.focus();\n        } \n        \n        this.state.focused = nextProps.scriptingFocused;\n        return true;\n    }\n\n    onFlashInfo(info) {\n        this.setState({info: info});\n        setTimeout(() => {\n            this.setState({info: ''}); \n        }, 2000);\n    }\n\n    handleChange(e) {\n        if (e.target.value === '') {\n            this.setState({suggestions: []});\n        }\n        this.setState({command: e.target.value});\n    }\n\n    onKeyPress(e) {\n        if (e.key === 'Enter') {\n            if (this.props.scripting.runScript(this.state.command)) {\n                this.props.update();\n                this.setState({running: true});\n                setTimeout(() => {\n                    this.setState({running: false});\n                    this.setState({command: '', suggestions: []});\n                    this.input.blur();\n                }, 100);\n                this.props.setCommandPrefix(undefined);\n            }\n        } else if (e.key === 'ArrowUp') {\n            this.setState({command: this.props.scripting.upHistory()});\n        } else if (e.key === 'ArrowDown') {\n            this.setState({command: this.props.scripting.downHistory()});\n        } else if (e.key === 'Tab') {\n            e.preventDefault();\n            this.autoComplete();\n            return false;\n        }\n    }\n\n    async autoComplete() {\n        console.log('auto complete called');\n        if (this.state.command.startsWith('/')) {\n            let text = this.state.command.slice(1);\n            let terms = this.terms;\n            text = terms[terms.length - 1];\n            if (text === undefined) {\n                return;\n            }\n\n            if (terms.length === 1) {\n                let results = await this.props.sequencerEngine.searcher\n                    .freeTextSearch(text);\n                let tags = results[TAG].map(t => t.value);\n                if (tags.length === 1) {\n                    terms[terms.length - 1] = tags[0];\n                    this.setState({suggestions: [], command: '/' + terms.join('+')});\n                } else {\n                    let longestCommonPrefix = this.getLongestCommonPrefix(tags);\n                    this.setState({\n                        suggestions: tags,\n                    });\n                    if (longestCommonPrefix) {\n                        this.setState({\n                            command: '/' + longestCommonPrefix\n                        });\n                    }\n                }\n            } else if (terms.length > 1) {\n                this.searchForTags(terms);\n            }\n        } else if (this.state.command.startsWith('+')) {\n            let {effectName, parameters} = getParameters(this.state.command.slice(1));\n            if (!this.state.command.includes('[')) {\n                let matchingEffects = Object.keys(nameToEffect)\n                    .filter(n => n.toLowerCase().startsWith(effectName.toLowerCase()));\n                let matchingMidiEffects = Object.keys(nameToMidiEffect)\n                    .filter(n => n.toLowerCase().startsWith(effectName.toLowerCase()));\n                let matchingLiveEffects = Object.keys(nameToLiveEffect)\n                    .filter(n => n.toLowerCase().startsWith(effectName.toLowerCase()));\n                matchingEffects = [... matchingEffects, ...matchingMidiEffects, ...matchingLiveEffects];\n                if (matchingEffects.length === 1) {\n                    this.setState({\n                        command: '+' + matchingEffects[0]\n                    });\n                } else if (matchingEffects.length > 1) {\n                    this.setState({\n                        suggestions: matchingEffects\n                    });\n                }\n            } else {\n                let lastParameter = parameters.length === 0 ? '' :\n                    parameters[parameters.length - 1].value === '' ?\n                    parameters[parameters.length - 1].parameter :\n                    '';\n\n                let autoComplete = autoCompleteParameter(\n                    this.props.sequencerEngine,\n                    effectName,\n                    lastParameter);\n\n                if (autoComplete.length === 1) {\n                    let command = '+' + effectName + '[';\n                    let completedParameters = parameters.slice(\n                        0,\n                        parameters.length - 1);\n                    command += completedParameters.map(\n                        x =>\n                            x.parameter + '=' + x.value).join(' ');\n                    if (completedParameters.length > 0) {\n                        command += ' ';\n                    }\n                    command += autoComplete[0];\n                    this.setState({\n                        suggestions: [],\n                        command: command,\n                    });\n                    // add the auto completed result\n                } else {\n                    this.setState({\n                        suggestions: autoComplete,\n                    });\n                }\n            }\n        }\n    }\n\n    // if you search 808+ and hit \"tab\", then auto-complete should\n    // show all tags that are relevant to 808's. And if there\n    // is only one suggestion, simply choose that\n    async searchForTags(tags) {\n        let tagsToSearch = tags.slice(0, tags.length - 1);\n        let tagToSearch = tags[tags.length - 1];\n        let searcher = this.props.sequencerEngine.searcher;\n        searcher.selectedTags = tagsToSearch;\n        let tagsFound = await searcher.getTopTags();\n        searcher.selectedTags = [];\n\n        tagsFound = tagsFound\n            .map(x => x.value)\n            .filter(x => x\n                    .toLowerCase()\n                    .includes(tagToSearch.toLowerCase()));\n\n        if (tagsFound.length === 1) {\n            this.setState({\n                command: '/' + tagsToSearch.join('+') + '+' + tagsFound[0],\n                suggestions: [],\n            });\n            return;\n        }\n\n        this.setState({\n            suggestions: tagsFound,\n        });\n\n        if (tagsToSearch === '') {\n            return;\n        }\n        let longestPrefix = this.getLongestCommonPrefix(tagsFound);\n        if (longestPrefix) {\n            this.setState({\n                command: '/' + tagsToSearch.join('+') + '+' + longestPrefix\n            });\n        }\n    }\n\n    getLongestCommonPrefix(tags) {\n        let longestPrefix = undefined;\n        for (let i in tags) {\n            if (longestPrefix === undefined) {\n                longestPrefix = tags[i];\n            } else {\n                longestPrefix = this.getCommonPrefix(tags[i], longestPrefix);\n                if (longestPrefix === undefined) {\n                    return undefined;\n                }\n            }\n        }\n\n        return longestPrefix;\n    }\n\n    getCommonPrefix(a, b) {\n        let prefix = '';\n        for (let i=0; i < Math.min(a.length, b.length); i++) {\n            if (a[i] === b[i]) {\n                prefix += a[i];\n            } else {\n                break;\n            }\n        }\n\n        return prefix === '' ? undefined : prefix;\n    }\n\n    get terms() {\n        return this.state.command.slice(1).split('+');\n    }\n\n    setInput(input) {\n        if (this.input === undefined) {\n            this.input = input;\n            this.props.onSetInput(input);\n            this.props.setCommandInput(input);\n        }\n    }\n\n    render() {\n        let scriptClassName = \"script-input\";\n        if (this.state.running) {\n            scriptClassName += ' running';\n        }\n\n        return (\n            <div>\n              <div className=\"bottom-toolbar\">\n                <div className=\"bottom-toolbar-left\">\n                  <ConditionedComponent condition={this.state.suggestions.length > 0}>\n                    <AutoCompleteSuggestions suggestions={this.state.suggestions}/>\n                  </ConditionedComponent>\n                  <ConditionedComponent condition={this.state.suggestions.length === 0}>\n                    <SequenceButtonsContainer sequencerEngine={this.props.sequencerEngine}/>\n                  </ConditionedComponent>\n                  <div className=\"clear-fix\"/>\n                  <div className=\"bar\"/>\n                  <div className=\"script-container\">\n                    <div className=\"command-label\">\n                      <ConditionedComponent condition={this.props.commandPrefix !== undefined}>\n                        {this.props.commandPrefix}\n                      </ConditionedComponent>\n                      <ConditionedComponent condition={this.props.commandPrefix === undefined}>\n                        &gt;\n                      </ConditionedComponent>\n                      </div>\n                    <div className=\"command-container\">\n                      {this.state.info !== '' ? <div className=\"error-message\">{this.state.info} </div>: \n                          <input\n                                value={this.state.command} onChange={(e) => this.handleChange(e)} \n                                onKeyDown={(e) => this.onKeyPress(e)}\n                                ref={(input) => { this.setInput(input)  }} \n                                className={scriptClassName} type=\"text\"></input>\n                          }\n                    </div> \n                    <div className=\"sequence-name-container\">\n                      {this.props.sequenceName !== undefined ? this.props.sequenceName : ''}\n                    </div>\n                    <div\n                      onClick={() => this.props.setShowPianoRoll(true)}\n                      className=\"collapse-toggle bottom-shower\">\n                      <div className=\"arrow-left\"></div>\n                    </div>\n                  </div>\n                </div>\n                <ContextualHelpComponent sequencerEngine={this.props.sequencerEngine}/>\n              </div>\n            </div>\n        );\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        setViewMode: viewMode => dispatch(setViewMode(viewMode)),\n        setShowPianoRoll: show => dispatch(setShowPianoRoll(show)),\n        setQuantized: quantized => dispatch(setQuantized(quantized)),\n        setContextualHelp: element => dispatch(setContextualHelp(element)),\n        setIsRecording: recording => dispatch(setIsRecording(recording)),\n        setTrackRolling: rolling => dispatch(setTrackRolling(rolling)),\n        setCommandPrefix: prefix => dispatch(setCommandPrefix(prefix)),\n        setIsRecordingExpanded: recording => dispatch(setIsRecordingExpanded(recording)),\n        setCommandInput: input => dispatch(setCommandInput(input)),\n    }\n};\nconst mapStateToProps = (state, props) => {\n    let id = state.sequencer.sequencerEngine.getSequenceId();\n    return {\n        sequencerEngine: state.sequencer.sequencerEngine,\n        viewMode: state.sequencer.viewMode,\n        quantized: state.sequencer.quantized,\n        isRecording: state.sequencer.isRecording,\n        isRecordingExpanded: state.sequencer.isRecordingExpanded,\n        isPlaying: state.sequencer.isPlaying[id] || false,\n        isCommandDown: state.keyboard.isCommandDown,\n        sequenceName: state.sequencer.sequenceName,\n        trackRolling: state.sequencer.trackRolling,\n        patternLocked: state.sequencer.patternLocks[props.sequencerEngine.currentPattern] || false,\n        playScheduled: state.clock.playScheduled,\n        commandPrefix: state.commands.commandPrefix,\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StickyScriptComponent);\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport NFTViewer from \"components/nft/NFTViewer.js\";\nimport {lstorage} from 'utils/lstorage.js';\nimport NewPackWindow from \"components/packs/NewPackWindow.js\";\nimport {PIANO_ROLL, WAVEFORM, INFO, MODE_TO_HEIGHT} from 'constants/arrangement-modes.js';\nimport {\n    setViewMode,\n    setWallpaper,\n    setAnimateWallpaper,\n    setPackWindowPosition,\n    dragEffect,\n    setMidiEffectDragging,\n    setPullablePartDragging,\n    setPulledEffects,\n} from 'actions/index.js';\nimport ipfs from 'decentralized/Ipfs.js';\nimport {isMobile} from 'react-device-detect';\nimport Sample from 'repos/Sample.js';\nimport {useKeyListener} from './useKeyListener.js';\nimport Modals from './Modals.js';\nimport Mix from 'components/mix/Mix.js';\nimport ArrangmentView from 'components/arrangement/ArrangementView.js';\nimport PreferencesView from 'components/PreferencesView.js';\nimport SimpleSequencerBottomToolbar from '../installation/SimpleSequencerBottomToolbar.js';\nimport SidebarComponent from \"components/sidebar/SidebarComponent.js\";\nimport StepSequencer from './StepSequencer.js';\nimport {\n    setSequencerEngine,\n    setSampleDragging,\n    setSampleTagDragging,\n    setPresetDragging,\n    setTrackDragging,\n    setSamplesDragging\n} from 'actions/index.js';\nimport {connect} from 'react-redux';\nimport {useSequencer} from './useSequencer.js';\nimport StickyScriptComponent from 'components/StickyScriptComponent.js';\nimport {\n    ARRANGEMENT_VIEW ,\n    MIX_VIEW,\n    MULTI_DETAILS_VIEW,\n    PREFERENCES_VIEW ,\n    SCRIPTING_VIEW,\n    SEQUENCER_VIEW } from \"constants/view-modes.js\";\nimport {\n    setArrangementBottomHeight,\n    setArrangementBottomResizing} from 'actions/index.js';\nimport SequencerToolbar from 'components/toolbar/SequencerToolbar.js';\nimport 'react-dropdown/style.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport BootstrapSlider from 'bootstrap-slider/dist/css/bootstrap-slider.min.css';\nimport '../../Installation.scss';\nimport '../../Sequences.css';\nimport '../../DrumMachineImportMode.css';\nimport '../../Groups.scss';\nimport '../../animation.css';\nimport '../../Preferences.css';\nimport '../../colors.scss';\nimport '../../Common.css';\nimport '../../NFT.scss';\n\nconst Sequencer = (props) => { \n    let [ethereumCache, sequencerEngine, ethereumSearcher] = useSequencer(props);\n    let [scriptingFocused, setScriptingFocused] = useState(false);\n    let [scriptingInput, setScriptingInput] = useState(undefined);\n    let [keyListener] = useKeyListener({sequencerEngine: sequencerEngine});\n\n    let scrollAreaClass = props.viewMode === ARRANGEMENT_VIEW ? 'scroll-area arrange' : 'scroll-area';\n    let sequencerClassName = props.isTrackFocused ? \"sequencer-container focused\": \"sequencer-container\";\n    if (props.showPianoRoll && props.viewMode !== ARRANGEMENT_VIEW) {\n        sequencerClassName += \" show-piano-roll\";\n    }\n\n    useEffect(() => {\n        if (props.showPianoRoll) {\n            if (props.bottomMode===PIANO_ROLL) {\n                props.setArrangementBottomHeight(window.innerHeight - 40);\n            } else  if (props.bottomMode===WAVEFORM) {\n                props.setArrangementBottomHeight(350);\n            }\n        }\n    }, [props.bottomMode, props.showPianoRoll]);\n\n    useEffect(() => {\n        if (window._isNFT) {\n            props.setViewMode(MIX_VIEW);\n        }\n    }, [sequencerEngine]);\n\n    const onMouseMove = useCallback((e) => {\n        let state = sequencerEngine.state;\n        if (state.arrangement.isBottomResizing && props.bottomMode !== PIANO_ROLL) {\n            let bottomHeight = window.innerHeight - e.pageY + state.arrangement.bottomOffset;\n            if (props.viewMode === ARRANGEMENT_VIEW) {\n                bottomHeight += 25;\n            }\n            props.setArrangementBottomHeight(bottomHeight);\n        }\n        if (state.packs.draggingWindow) {\n            props.setPackWindowPosition(\n                e.pageX - state.packs.draggingWindow.x,\n                e.pageY - state.packs.draggingWindow.y);\n        }\n    }, [sequencerEngine, props.viewMode, props.showPianoRoll, props.bottomMode]);\n\n    const hasDragging = () => {\n        let {instruments, tracks, effects, presets, selector, sequencer} = sequencerEngine.state;\n        return instruments.pullablePartDragging ||\n            tracks.trackDragging || \n            selector.sampleDragging ||\n            selector.samplesDragging ||\n            selector.sampleTagDragging;\n    };\n\n    const onMouseUp = useCallback((e) => {\n        let state = props.store.getState();\n        if (state.arrangement.isBottomResizing) {\n            props.setArrangementBottomResizing(false);\n        }\n        if (hasDragging()) {\n            clearAllDragging();\n        }\n    }, [sequencerEngine]);\n\n    const clearAllDragging = () => {\n        props.setSampleDragging(undefined);\n        props.setPullablePartDragging(undefined);\n        props.setSamplesDragging(undefined);\n        props.setSampleTagDragging(undefined);\n        props.setPresetDragging(undefined);\n        props.setMidiEffectDragging(undefined);\n        props.setEffectDragging(undefined);\n        props.setTrackDragging(undefined);\n    };\n\n    const onDrop = useCallback(async (e) => {\n        let {instruments, tracks, effects, presets, selector, sequencer} = sequencerEngine.state;\n\n        if (instruments.pullablePartDragging) {\n            let part = {...instruments.pullablePartDragging};\n            part.x = e.pageX - 5;\n            part.y = e.pageY - 100;\n            let pulledEffects = [...effects.pulledEffects, part];\n            props.setPulledEffects(pulledEffects);\n            clearAllDragging();\n            return;\n        }\n\n        if (tracks.trackDragging) {\n            let track = tracks.trackDragging;\n            if (track.sequencer) {\n                track.sequencer.removeTrack(track);\n                clearAllDragging();\n                return;\n            } else if (track.pad) {\n                track.pad.removeTrack(track);\n                clearAllDragging();\n                return;\n            }\n        }\n\n        if (selector.sampleDragging !== undefined) {\n            for (let pad of sequencerEngine.currentSubSequence.pads) {\n                let track = pad.containsSample(selector.sampleDragging);\n                if (track) {\n                    pad.removeTrack(track);\n                    clearAllDragging();\n                    return;\n                }\n            }\n            let sampleDragging = selector.sampleDragging;\n            sequencerEngine.addSound(sampleDragging, undefined);\n            clearAllDragging();\n        } else if (selector.samplesDragging) {\n            let i=0;\n            for (let id of selector.samplesDragging) {\n                if (i > 4) {\n                    break;\n                }\n                let sample = id;\n                if (typeof id === \"string\") {\n                    sample = new Sample(id);\n                    await sample.load();\n                }\n                sequencerEngine.addSound(sample);\n                i++;\n            }\n            clearAllDragging();\n        } else if (selector.sampleTagDragging) {\n            sequencerEngine.searchForSounds([selector.sampleTagDragging]);\n            clearAllDragging();\n        }\n\n        if (presets.presetDragging) {\n            sequencerEngine.loadPreset(presets.presetDragging, true);\n            clearAllDragging();\n        }\n\n        let effectDragging = sequencer.effectDragging ||\n            effects.midiEffectDragging;\n        if (effectDragging && Object.keys(effectDragging).length > 1) {\n\n            let {effect} = effectDragging;\n            effect.x = e.pageX - 5;\n            effect.y = e.pageY - 100;\n            let pulledEffects = [...effects.pulledEffects, effect];\n            props.setPulledEffects(pulledEffects);\n            // in this case we need to move the effect to the outside of the\n            // track so that it is seen always\n            clearAllDragging();\n        }\n     \n    }, [sequencerEngine, props.sampleDragging]);\n\n    useEffect(() => {\n        if (window.isNFT) {\n            return false;\n        }\n        let item = lstorage.getItem(\"wallpaper\");\n        if (item) {\n            props.setWallpaper(item);\n        } else {\n            // props.setWallpaper(\"QmbEKr2mZLWazpwCLEG6BJTRdv1C8LZmxdWLEaLcxiMrMb\");\n        }\n        item  = lstorage.getItem(\"animateWallpaper\");\n        if (item !== undefined) {\n            props.setAnimateWallpaper(item === \"true\");\n        }\n    }, []);\n\n    if (!sequencerEngine) {\n        return (<div></div>);\n    }\n\n\n\n    let style = {};\n    if (props.wallpaper) {\n        style.backgroundImage = 'url(' + ipfs.getHashUrl(props.wallpaper) + ')';\n        sequencerClassName += \" has-wallpaper\";\n    } else {\n        sequencerClassName += \" no-wallpaper\";\n    }\n    if (props.animateWallpaper) {\n        sequencerClassName += \" animate\";\n    }\n\n    if (isMobile) {\n        sequencerClassName += \" mobile\";\n    }\n    sequencerClassName += \" \" + props.viewMode;\n    if (window._isNFT) {\n        sequencerClassName += \" \" + \"NFT\";\n    }\n    style.backgroundColor = props.backgroundColor;\n\n    if (props.fullScreenZObject) {\n        return <NFTViewer\n                 sequencerEngine={sequencerEngine}\n                 zObject={props.fullScreenZObject}\n               />\n    }\n    return (\n        <div\n          onDrop={onDrop}\n          onMouseMove={onMouseMove}\n          onMouseUp={onMouseUp}\n          style={style}\n          onDragOver={e => e.preventDefault()}\n          className={sequencerClassName}>\n\t  <div className={scrollAreaClass}>\n          {!(props.showPianoRoll && props.viewMode === SEQUENCER_VIEW) && !props.wallpaper ? \n             <div color=\"radial-gradient(75.29% 75.29% at 64.96% 24.36%, #F0DFA7 0.52%, #FDBDAA 18.75%, #FEA186 34.38%, #F09277 49.48%, #D27584 74.48%, #6B7B8A 100%)\" className=\"coke-machine-glow\"/>\n             : ''}\n            {props.creatingNewPack || props.packToEdit ? <NewPackWindow json={props.packToEdit}/> : ''}\n            <div>\n              <SequencerToolbar/>\n            </div>\n            <div className=\"main-area\">\n              <Modals sequencerEngine={sequencerEngine}/>\n              {props.viewMode === SEQUENCER_VIEW && !(props.showPianoRoll && props.bottomMode === PIANO_ROLL) ?\n               <StepSequencer\n                 onDrop={onDrop}\n                 isTrackFocused={props.isTrackFocused}\n                 viewMode={props.viewMode}\n                 sequencerEngine={sequencerEngine}/> :\n               props.viewMode === MIX_VIEW ?\n               <Mix sequencerEngine={sequencerEngine}/> :\n               props.viewMode === ARRANGEMENT_VIEW ? \n               <ArrangmentView\n                 sequencerEngine={sequencerEngine}/> :\n               props.viewMode === PREFERENCES_VIEW ?\n               <PreferencesView\n                 midiEngine={sequencerEngine.midi}\n                 channelMixer={sequencerEngine.channelMixer}\n                 sequencerEngine={sequencerEngine}/> :\n               ''}\n              {!(props.showPianoRoll && props.bottomMode===PIANO_ROLL) && <SidebarComponent sequencerEngine={sequencerEngine} ethereumSearcher={ethereumSearcher}/>}\n            </div>\n          </div>\n            {props.showPianoRoll && props.viewMode === SEQUENCER_VIEW ? \n             <SimpleSequencerBottomToolbar sequencerEngine={sequencerEngine}/> :\n             props.viewMode === SEQUENCER_VIEW ? \n             <StickyScriptComponent\n               sequencerEngine={sequencerEngine}\n               onSetInput={setScriptingInput}\n               update={() => []}\n               showScriptingView={() => []}\n               scripting={sequencerEngine.scripting}\n               scriptingFocused={scriptingFocused}/> : ''\n            }\n        </div>\n    );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n      viewMode: state.sequencer.viewMode,\n      isTrackFocused: state.sequencer.trackFocused !== undefined,\n      showPianoRoll: state.sequencer.showPianoRoll,\n      bottomMode: state.arrangement.bottomMode,\n      wallpaper: state.sequencer.wallpaper,\n      animateWallpaper: state.sequencer.animateWallpaper,\n      creatingNewPack: state.packs.creatingNewPack,\n      packToEdit: state.packs.packToEdit,\n      backgroundColor: state.sequencer.backgroundColor,\n      fullScreenZObject: state.zobject.fullScreenZObject\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setSequencerEngine: sequencerEngine => dispatch(setSequencerEngine(sequencerEngine)),\n      setArrangementBottomHeight: (height) =>\n            dispatch(setArrangementBottomHeight(height)),\n      setArrangementBottomResizing: (resizing) =>\n          dispatch(setArrangementBottomResizing(resizing)),\n      setSamplesDragging: (s) => dispatch(setSamplesDragging(s)),\n      setViewMode: (s) => dispatch(setViewMode(s)),\n      setSampleDragging : sample => dispatch(setSampleDragging(sample)),\n      setWallpaper: w => dispatch(setWallpaper(w)),\n      setAnimateWallpaper: w => dispatch(setAnimateWallpaper(w)),\n      setSampleTagDragging: x => dispatch(setSampleTagDragging(x)),\n      setPresetDragging : x => dispatch(setPresetDragging(x)),\n      setPackWindowPosition: (x,y) => dispatch(setPackWindowPosition(x, y)),\n      setPulledEffects: e => dispatch(setPulledEffects(e)),\n      setEffectDragging: fx => dispatch(dragEffect(fx)),\n      setMidiEffectDragging: fx => dispatch(setMidiEffectDragging(fx)),\n      setPullablePartDragging: fx => dispatch(setPullablePartDragging(fx)),\n      setTrackDragging: fx => dispatch(setTrackDragging(fx)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sequencer);\n","import React, { Component } from 'react';\n\nclass EthereumInstructions extends Component {\n    render() {\n        return (\n                    <div className=\"ethereum-instructions\">\n                      <div className=\"ethereum-action\">\n                        1. You need the Metamask Chrome-plugin to connect Universal Sequences with Ethereum. Install it <a href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"> here </a>. Unless you have it installed, but are not logged in. If so click on the metamask and type your password.\n                      </div>\n                      <div className=\"ethereum-action\">\n                        2. Watch the first minute of this <a href=\"https://www.youtube.com/watch?v=6Gf_kRE4MJU\"> video </a> to learn how to set up a new account. All sounds you sample and tracks you create will be tied to the account you have logged on in Metamask.\n                      </div>\n                      <div className=\"ethereum-action\">\n                        3. Switch to the \"Ropsten\" test network on Metamask\n                      </div>\n                      <div className=\"ethereum-action\">\n                        <img src=\"/metamask-ropsten.png\"/>\n                      </div>\n                      <div className=\"ethereum-action\">\n                        4. Get free test Ether from this <a href=\"https://faucet.metamask.io/\"> website </a> and clicking the \"request 1 ether from faucet\" button.\n                      </div>\n                      <div className=\"ethereum-action\">\n                        5. Reload this page and choose a user name. When you choose your name, Metamask will pop-up asking you to confirm a transaction, costing some (free) Ether. It's test money (i.e. not worth anything) so go ahead and click \"Confirm\".\n                      </div>\n                      <div className=\"ethereum-action\">\n                        6. Go to the <a href=\"/sequencer/\"> sequencer </a> page and make a track. When you hit save, a Metamask pop-up will ask you to confirm that transaction. Whenever we save stuff (whether new sounds or tracks), you will need to confirm the transaction and cough up free test Ether.\n                      </div>\n                      <div className=\"ethereum-action\">\n                        7. Finally, have fun.\n                      </div>\n                    </div>\n        );\n    }\n}\n\nexport default EthereumInstructions;\n","import React, { Component } from 'react';\nimport UserInfo from 'components/user/UserInfo.js';\nimport Tone from 'tone';\nimport ConditionedComponent from 'components/ConditionedComponent.js';\nimport PasswordModal from 'components/modals/PasswordModal.js';\nimport UniversalNavigator from 'components/UniversalNavigator.js';\nimport UserProfileDetails from 'components/user/UserProfileDetails.js';\nimport ProfileNavigatorComponent  from './ProfileNavigatorComponent.js';\nimport { connect } from \"react-redux\";\nimport ethereum from 'decentralized/ethereum.js';\nimport Sequencer from 'components/v2/Sequencer.js';\nimport {setIsPlayingMix} from 'actions/index.js';\nimport {setLoadingSequence} from 'actions/index.js';\nimport {setUserHasEditsToSave} from 'actions/index.js';\nimport {setCurrentUserMix} from 'actions/index.js';\nimport {setSpotlightTracks} from 'actions/index.js';\nimport MultiSequencerEngine from 'engine/MultiSequencerEngine';\nimport UserMix from 'repos/UserMix.js';\nimport EthereumInstructions from 'components/user/EthereumInstructions.js';\nimport 'User.scss';\nimport {MIXES} from 'constants/user-view-modes.js';\nimport {LOW_SAMPLE_RATE, MID_SAMPLE_RATE} from 'constants/sample-rates.js';\n\nclass UserComponent extends Component {\n    constructor(props) {\n        super(props);\n\n        if (navigator.platform === 'MacIntel') {\n            Tone.setContext(new AudioContext({sampleRate: MID_SAMPLE_RATE}));\n        } else {\n            Tone.setContext(new AudioContext({sampleRate: LOW_SAMPLE_RATE}));\n        }\n\n        var userName = props.match.params.userId != undefined ? \n            props.match.params.userId :\n            undefined;\n\n        this.state = {\n            mixes: [],\n            profile: undefined,\n            userName: userName,\n            hasEthereum: true,\n            loadedUser: false,\n            userId: undefined,\n            userNameNotFound: false,\n            sequencerEngineEditing: undefined,\n            spotlightTracks: [],\n            isPermissionedUser: userName === undefined,\n        };\n\n        Tone.context.latencyHint = 'balanced';\n\n        this.props.setIsPlayingMix(true);\n        this.loadProfile();\n\n        this.multiSequencerEngine = new MultiSequencerEngine(this.props.store);\n        ethereum.crypto.store = this.props.store;\n        this.onClickSave = this.onClickSave.bind(this);\n    }\n\n    onClickSave() {\n        let spotlightTracks = this.props.spotlightTracks.map(s => s.id);\n        let profile = this.props.profile;\n        if (profile === undefined) {\n            profile = {mixes: []};\n        }\n        profile.spotlightTracks = spotlightTracks;\n        if (this.props.currentMix !== undefined) {\n            this.addEditedMix(new UserMix().fromJson(this.props.currentMix));\n        }\n        profile.mixes = this.state.mixes.map(m => m.getJson(false));\n        ethereum.users.setProfile(profile);\n        this.props.setUserHasEditsToSave(false);\n    }\n\n    deleteTrack(sequence) {\n        let sequencerEngine = this.multiSequencerEngine.getSequencerEngine(sequence.id);\n        if (sequencerEngine !== undefined) { \n            if (sequencerEngine.playing) {\n                sequencerEngine.stop();\n            }\n            setTimeout(() => {\n                this.multiSequencerEngine.unloadTrack(sequence.id);\n            }, 5000);\n        }\n\n        if (this.props.viewMode === MIXES) {\n            let mix = new UserMix().fromJson(this.props.currentMix);\n            mix.deleteTrack(sequence);\n            this.props.setCurrentUserMix(mix.getJson());\n            this.props.setUserHasEditsToSave(true);\n        } else {\n            let spotlightTracks = [... this.props.spotlightTracks];\n            let id = spotlightTracks.indexOf(sequence);\n            spotlightTracks.splice(id, 1);\n            this.props.setSpotlightTracks(spotlightTracks);\n            this.props.setUserHasEditsToSave(true);\n        }\n    }\n\n    async loadMixes(profile) {\n        if (profile === undefined || profile.mixes === undefined) {\n            return;\n        }\n\n        let mixes = profile.mixes.map(m => new UserMix().fromJson(m));\n        this.setState({\n            mixes: mixes\n        });\n    }\n\n    async loadSpotlightTracks(profile) {\n        if (profile === undefined) {\n            this.props.setSpotlightTracks([]);\n        } else {\n            let tracks = profile.spotlightTracks;\n            console.log('loading spotlight tracks profile.tracks = ');\n            console.log(tracks);\n            let loadedTracks = [];\n            for (let i in tracks) {\n                loadedTracks.push(new Promise(async (resolve, reject) => {\n                    resolve(this.convertSequence(await ethereum.getSequence(tracks[i])));\n                }));\n            }\n            this.props.setSpotlightTracks(await Promise.all(loadedTracks));\n        }\n    }\n\n    convertSequence(sequence) {\n        return {...sequence, name: sequence.title, id: sequence.newSequence};\n    }\n\n    addTrack(sequence) {\n        console.log('add track = ');\n        console.log(sequence);\n        if (this.props.viewMode === MIXES) {\n            let mix = new UserMix().fromJson(this.props.currentMix);\n            mix.tracks.push(sequence);\n            this.props.setCurrentUserMix(mix.getJson());\n            this.props.setUserHasEditsToSave(true);\n        } else {\n            this.props.setUserHasEditsToSave(true);\n            this.props.setSpotlightTracks(this.props.spotlightTracks.concat([sequence]));\n        }\n    }\n\n    addEditedMix(editedMix) {\n        let mixes = [];\n        let replacedMix = false;\n        for (let i in this.state.mixes) {\n            let mix = this.state.mixes[i];\n            if (mix.id === editedMix.id) {\n                mixes.push(editedMix);\n                replacedMix = true;\n            } else {\n                mixes.push(mix);\n            }\n        }\n\n        if (!replacedMix) {\n            mixes.push(editedMix);\n        }\n\n        this.setState({mixes: mixes});\n    }\n\n    onClickDeleteMix(mixToDelete) {\n        let indexToDelete = undefined;\n        for (let i in this.state.mixes) {\n            if (this.state.mixes[i].id === mixToDelete.id) {\n                indexToDelete = i;\n                break;\n            }\n        }\n\n        if (indexToDelete !== undefined) {\n            let mixes = [... this.state.mixes];\n            mixes.splice(indexToDelete, 1);\n            this.setState({mixes: mixes});\n            this.props.setUserHasEditsToSave(true);\n        }\n    }\n\n    async doesUserOwnPage() {\n        let own = this.state.userId === await ethereum.getUser() ||\n            this.state.userId === undefined;\n        return own;\n    }\n\n    async loadProfile() {\n        try {\n            if (this.state.userName !== undefined) {\n                let isAvailable = await ethereum.users.isUserNameAvailable(this.state.userName);\n                if (!isAvailable) {\n                    this.state.userId = await ethereum.users.getUserId(this.state.userName);\n                } else {\n                    this.setState({userNameNotFound: true, userLoaded: true});\n                    return;\n                }\n            } \n            let profile = await ethereum.users.getProfile(this.state.userId);\n\n            this.setState({profile: profile, userLoaded: true});\n            this.loadMixes(profile);\n            this.loadSpotlightTracks(profile);\n        } catch (err) {\n            if (err == 'no user name') {\n            } else if (err === 'no profile') {\n                this.setState({userLoaded: true});\n            } else if (err === 'no ethereum') {\n                // give instructions for setting up metamask\n                this.setState({hasEthereum: false});\n            }\n        }\n\n        try {\n            let userName = await ethereum.users.getUserName(this.state.userId);\n            this.setState({userName: userName});\n        } catch (err) {\n            console.log(\"error loading username \" + err);\n        }\n    }\n\n    onEditSequence(engine) {\n        this.setState({sequencerEngineEditing: engine});\n    }\n\n    onGoBack() {\n        this.setState({sequencerEngineEditing: undefined});\n    }\n\n    render() {\n        if (this.state.userNameNotFound) {\n            return (\n                <div className=\"\">\n                  User name not found\n                </div>\n            );\n        }\n        \n        let userProfileDetails = (\n            <UserProfileDetails\n              userLoaded={this.state.userLoaded}\n              userId={this.state.userId}\n              onClickDeleteMix={(mix) => this.onClickDeleteMix(mix)}\n              mixes={this.state.mixes}\n              currentMix={this.props.currentMix}\n              onClickSave={() => this.onClickSave()}\n              spotlightTracks={this.props.spotlightTracks}\n              sequencerEngineEditing={this.state.sequencerEngineEditing}\n              multiSequencerEngine={this.multiSequencerEngine}\n              setIsPlayingMix={(x) => this.props.setIsPlayingMix(x)}\n              isEditing={this.state.userId === undefined}\n              ethereum={ethereum}\n              addEditedMix={(mix) => this.addEditedMix(mix)}\n              onDeleteTrack={(s) => this.deleteTrack(s)}\n              viewMode={this.props.viewMode}\n              addTrack={(t) => this.addTrack(t)}\n              setLoadingSequence={this.props.setLoadingSequence}\n              onEditSequence={(sequencerEngine) => this.onEditSequence(sequencerEngine)}\n              loadedTracks={this.props.loadedTracks}\n              isPlaying={this.props.isPlaying}\n              store={this.props.store}\n              profile={this.state.profile}/>);\n\n        if (this.state.sequencerEngineEditing) {\n            return (\n                <div>\n                <Sequencer\n                  onGoBack={() => this.onGoBack()}\n                  store={this.props.store}\n                  sequencerEngine={this.state.sequencerEngineEditing}/>\n\n                  {userProfileDetails}\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"user-page\">\n             <UniversalNavigator/>\n             <PasswordModal crypto={ethereum.crypto} show={true}/>\n             <ConditionedComponent condition={this.state.hasEthereum}>\n                <div className=\"profile-container\">\n                  <div className=\"banner\">\n                    <UserInfo\n                      onUserNameUpdated={(userName) => this.setState({userName: userName})}\n                      userId={this.state.userId}\n                      isEditing={this.state.userId === undefined}\n                      ethereum={ethereum}\n                      userName={this.state.userName}\n                      profilePicture={this.state.profilePicture}\n                      profile={this.state.profile}/>\n                  </div>\n                  <ProfileNavigatorComponent\n                    ethereum={ethereum}\n                    guilds={ethereum.guilds}\n                    userName={this.state.userName}\n                    userId={this.state.userId}\n                    isEditing={this.state.userId === undefined}\n                    onClickSave={this.onClickSave}/>\n                  {userProfileDetails}\n                </div>\n              </ConditionedComponent>\n              <ConditionedComponent condition={!this.state.hasEthereum}>\n                <div className=\"profile-container\">\n                  <div className=\"profile-details\">\n                    <EthereumInstructions/>\n                 </div>\n                </div>\n              </ConditionedComponent>\n              </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setIsPlayingMix: isPlayingMix => dispatch(setIsPlayingMix(isPlayingMix)),\n        setLoadingSequence: (id, sequence) => dispatch(setLoadingSequence(id, sequence)),\n        setUserHasEditsToSave: (hasEdits) => dispatch(setUserHasEditsToSave(hasEdits)),\n        setCurrentUserMix: (currentMix) => dispatch(setCurrentUserMix(currentMix)),\n        setSpotlightTracks: (tracks) => dispatch(setSpotlightTracks(tracks)),\n    };\n};\n\nconst mapStateToProps = state => {\n    return {\n        viewMode: state.user.viewMode,\n        currentMix: state.user.currentMix,\n        loadedTracks: state.user.loadedTracks,\n        isPlaying: state.sequencer.isPlaying,\n        spotlightTracks: state.user.spotlightTracks\n    };\n};\n \nexport default connect(mapStateToProps, mapDispatchToProps)(UserComponent);\n"],"sourceRoot":""}