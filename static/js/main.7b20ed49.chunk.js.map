{"version":3,"sources":["components/video/regular-shader/fragment.js","components/video/regular-shader/vhs.js","components/video/regular-shader/filter.js","components/video/useVideoSize.js","components/video/useVideoShader.js","components/video/VideoContentShader.js","components/video/blurred-shader/vertex.js","components/buttons/PlayButton.js","components/player/Playbar.js","components/video/PlaybarContainer.js","components/video/message-constants.js","components/video/useVideoController.js","components/video/message-parser.js","utils/sleep.js","components/player/SimpleControls.js","components/waveform/SongWaveform.js","components/hooks/useSporesMessageHandler.js","decentralized/EthereumEventLog.js","decentralized/EthereumTopic.js","decentralized/EthereumEvents.js","decentralized/EthereumQuery.js","decentralized/BackendQuery.js","decentralized/BackendQueryRunner.js","spores/samples.js","components/samples/SampleInfo.js","constants/collections.js","actions/index.js","constants/action-types.js","components/hooks/useTokensOnSale.js","components/buy/test.js","components/hooks/useBuy.js","components/buy/FinalizePurchase.js","components/buy/BuyPlayerFlow.js","components/nft-jacker/BuyUnsold.js","spores/sign.js","spores/newSpore.js","engine/audio.js","utils/mp3.js","utils/decode.js","components/hooks/useAudioPlayer.js","components/spore/JollyRancherPlayer.js","components/heatmap-player/HeatmapPlayer.js","components/hooks/useInterval.js","jacker/jack.js","components/hooks/useTokenMetadata.js","utils/getJackFromToken.js","components/recording/FinishedUploading.js","components/modal/Modal.js","components/progressbar/UnknownProgressBar.js","spores/getSporeRemixes.js","components/recording/SporeRecorded.js","components/nft-jacker/ShuffleButton.js","components/hooks/useRemixListener.js","components/player/SporeEmbed.js","components/hooks/useSporeListener.js","components/video/VideoJacker.js","components/video/control.js","components/drops/Gen3Info.js","components/ens/ENSName.js","components/Colors.js","components/spore/SporeHeatMap.js","components/spore/AudioPlayer.js","components/nft-jacker/ShareButton.js","components/remix/RemixPlayer.js","components/remix/RemixList.js","spores/getSporeHashIcon.js","components/drops/Glossary.js","components/drops/Drop.js","components/drops/NextGen.js","components/drops/ZorbAnimation.js","components/drops/ZorbOption.js","utils/zorbs.js","components/drops/ZorbSelector.js","components/drops/Zpore.js","components/lock/TimeRemaining.js","spores/chillRX.js","utils/getGateway.js","jacker/save.js","components/nft-jacker/HistoryItemSource.js","utils/shuffle.js","components/nft-jacker/History.js","components/hooks/useJacker.js","jacker/artist.js","components/hooks/useLatestJacks.js","components/nft-jacker/EchoSearchBox.js","components/nft-jacker/BuyThisSkin.js","components/metadata/TokenMetadata.js","constants/cheat-codes.js","components/hooks/useTokenLock.js","decentralized/contracts/SporesPlaylistContract.js","components/lock/LockedNotification.js","spores/playlist.js","components/chart/PlaylistInfo.js","components/chart/JuicePlaylists.js","components/hooks/usePlaylists.js","components/chart/Chart.js","components/hooks/useScroll.js","components/spore/VisualLinks.js","components/spore/docs.js","components/spore/HelperLines.js","components/spore/PlayerHelper.js","components/nft-jacker/Info.js","components/nft-jacker/JackerPlayer.js","jacker/stem-splitter.js","components/nft-jacker/Navigation.js","components/nft-jacker/NFTJacker.js","flags/flags.js","components/hooks/useCoverArtColors.js","components/drops/Thugger.js","components/drops/InMySoul.js","App.js","registerServiceWorker.js","reducers/index.js","reducers/playlist.js","reducers/spore.js","store/index.js","index.js","decentralized/chords/NoteConstants.js","decentralized/web3.js","utils/ipfs.js","decentralized/EthereumDataTypes.js","decentralized/Ipfs.js"],"names":["fragmentShader","concat","useVideoSize","videoRef","_useState","useState","_useState2","Object","slicedToArray","height","setHeight","_useState3","_useState4","width","setWidth","useEffect","current","addEventListener","onLoad","removeEventListener","useCallback","offsetHeight","offsetWidth","useVideoShader","_ref","canvasRef","ref","_ref$resolution","resolution","vertexShader","uniforms","renderer","useRef","scene","camera","shaderUniforms","init","animate","THREE","setPixelRatio","setSize","domElement","appendChild","geometry","objectSpread","video","value","material","mesh","add","requestAnimationFrame","render","VideoContentShader","started","_useVideoSize","className","isMobile","react_default","a","createElement","style","PlayButton","props","onPlayClicked","e","stopPropagation","target","parentNode","blur","currentTarget","play","isPlaying","onClick","onMouseDown","onTouchStart","borderColor","color","Playbar","playerRef","scrubRef","setWaveform","progress","setProgress","_useState5","_useState6","setPlaying","_useState7","_useState8","setStarted","_useState9","_useState10","scrubbing","setScrubbing","_useState11","undefined","_useState12","scrub","setScrub","window","finishScrub","onMouseMove","onMessage","x","data","type","body","parseFloat","playing","parseInt","contentWindow","postMessage","touches","rect","getBoundingClientRect","percent","clientX","left","Math","max","min","format","duration","hrs","mins","secs","ret","connect","state","dispatch","top","Playbar_Playbar","abs","TYPE_TO_NAME","space-slider-value","filter-slider-value","juice-slider-value","space-effect-levels","gate-strength","song-bpm","playback-bpm","is-rolling","rolling-rate","useVideoController","baseBPM","lastTime","nextTick","lastVideoTime","gateTimer","coolDownStartTime","isCoolingDown","Date","getTime","startCoolDown","time","blurDirection","blurring","playRate","isRolling","rollRate","filterSliderValue","spaceSliderValue","spaceEffectLevels","ticks","gateStrength","setIsPlaying","setInterval","blurLoop","fastForward","rate","playbackRate","nextTime","currentTime","rewind","name","parseMessage","pause","sec","drift","isDrifting","fastSeek","bpm","sleep","Promise","resolve","reject","setTimeout","console","log","buttons_PlayButton","RATIO","SongWaveform","memo","waveform","_ref$isWaveformRainbo","isWaveformRainbow","_ref$width","parts","i","length","pow","p","y","HEIGHT","r","g","b","push","map","part","fill","useSporesMessageHandler","callback","EthereumEventLog","event","topics","classCallCheck","this","_len","arguments","Array","_key","EthereumTopic","size","convertTo","convertFrom","SampleTagged","IPFS_HASH","BYTES_32","INT_32","SampleCreated","INT_16","RIGHT_PADDED_BYTES_32","ADDRESS","STRING","NewUnofficialSporeCreated","UINT_256","NOTE_BYTES_32","NOTES_BYTES_32","INT_8","BYTES_32_ENCRYPTED","BYTES_32_ARRAY","BYTES_32_LEFT","NewSporesPlaylist","metamaskInstalled","web3","EthereumQuery","address","distinct","selectStatements","whereClauses","groupBy","joinClauses","limitSize","fromBlockNumber","toBlockNumber","eventLog","arg","col","WhereClause","valueList","field","JoinClause","fromBlock","utils","toHex","toBlock","limit","sha3","toAdd","j","whereClause","_this","eth","getPastLogs","getTopics","err","results","parsedResults","reverse","parseResult","_callee","blockNumber","_this2","regenerator_default","wrap","_context","prev","next","getBlockNumber","sent","web3WSS","subscribe","result","stop","resultSet","select","dataIndexSoFar","fieldIndex","fieldData","d","slice","query","toConsumableArray","hexToNumber","argName","argValue","runner","BackendQueryRunner","runningQueries","Set","queryJson","asyncToGenerator","_regeneratorRuntime","mark","url","LOCAL_BACKEND_FLAG","location","hostname","fetch","method","JSON","stringify","headers","Accept","Content-Type","then","resp","json","removeQuery","catch","_x","_x2","apply","delete","BackendQuery","_super","call","isNFT","submit","getJson","GUILD_SAMPLES","getSampleInfo","samples_regeneratorRuntime","id","unfiltered","item","tagsQuery","tagResults","from","where","executeQuery","abrupt","SampleInfo","currentSample","setCurrentSample","sampleInfo","setSampleInfo","sampleWaveform","setSampleWaveform","goToPrevious","goToNext","title","waveform_SongWaveform","CHILL_RX_COLLECTION","setCurrentPlaylistSong","song","payload","setSoldPlayers","sold","useTokensOnSale","tokensOnSale","setTokensOnSale","getTokensOnSale","cache","loading","useTokensOnSale_regeneratorRuntime","baseURL","includes","account","_askPrice","_thumbnail","onCompletedBuy","onCancel","cart","onDone","contractAddress","balanceData","useBalance","addressOrName","useSigner","balance","formatted","finished","setFinished","error","setError","setCurrent","waitingForWallet","setWaitingForWallet","confirming","setConfirming","buy","contract","_useSigner","signer","signerRef","isError","isLoading","useBuy_regeneratorRuntime","tokenId","fillAmount","askModuleContract","ask","tx","toString","AsksV11__factory","mainnetZoraAddresses","AsksV1_1","askForNFT","ethers","parseEth","askPrice","fillAsk","t0","useBuy","thumbnail","find","number","indexOf","total","obj","completeBuy","hash","wait","playsInline","muted","autoPlay","loop","src","PulseLoader_default","sizeUnit","open","chunk_UIIB4ABT","accountStatus","showBalance","smallScreen","largeScreen","label","setBuying","setCompletedBuy","_useAccount","useAccount","_useTokensOnSale","buy_FinalizePurchase","setCart","soldPlayers","spore","upperGradInverted","_ref$soldPlayers","text","showRemaining","onCompleteSale","buying","unsold","filter","borderBottomColor","BuyPlayerFlow","href","signMessage","sign_regeneratorRuntime","msg","flatSig","flatSignature","splitSignature","newSpore","spTokenId","collectionAddress","recordingHash","dataHash","newSpore_regeneratorRuntime","message","_yield$signMessage","s","v","ipfsHashToBytes32","transactionHash","AudioUnit","require","context","Tone","Master","source","buffer","looping","playSound","bind","seek","stopSound","disconnect","createBufferSource","destination","start","mp3Recorder","_counter","decode","mp3_regeneratorRuntime","mp3Data","counter","Worker","onmessage","decodeMP3","_ref2","_callee2","_yield$decode","decoded","sampleRate","position","ctxt","_buffer","channelDataL","channelDataR","l","_context2","createBuffer","getChannelData","_x3","decodeAudioData","blob","decode_regeneratorRuntime","sliced","_r","TextDecoder","Int8Array","t1","bufferToArrayBuffer","useAudioPlayer","audioPlayer","setAudioPlayer","dispose","ipfs","getSound","useAudioPlayer_regeneratorRuntime","arrayBuffer","audioBuffer","player","setBuffer","_ref$height","loaded","sendHeatmapHash","datahash","sandbox","allowtransparency","aria-describedby","alt","borderWidth","disabled","_useAudioPlayer","spore_JollyRancherPlayer","useInterval","delay","savedCallback","clearInterval","CHAOS_COLLECTION","getMetadata","startsWith","replace","animation_url","audio_url","jack","jack_regeneratorRuntime","getTokenMetadata","_yield$getParts","release","meta","toLowerCase","getParts","getZoraAPI","metadata","re","matches","_indexOf","soundxyzPath","_baseURL","str","_indexOf2","_soundxyzPath","_ret","_json","match","split","_ref3","_callee3","_indexOf3","soundxyz","_indexOf4","_ret2","_args3","_context3","join","_x4","useTokenMetadata","useTokenMetadata_regeneratorRuntime","provider","tokens","providers","InfuraProvider","IERC721Metadata__factory","BigNumber","tokenURI","getJackFromToken","getJackFromToken_regeneratorRuntime","link","jacked","usedCheatCode","playlistLoaded","playlist","currentSong","setPendingSpores","setCurrentSong","recordedRemix","complete","loadJack","waitingOnSign","setWaitingOnSign","recording","sliderData","modeData","setTransactionHash","save","FinishedUploading_regeneratorRuntime","pending","localStorage","removeItem","getItem","parse","setItem","nextSong","loadNext","inner","heatmap_player_HeatmapPlayer","children","hide","_ref$className","_ref$intervalTime","intervalTime","_ref$intervalPiece","intervalPiece","setLoadingProgress","interval","borderRadius","margin","right","bottom","getSporeRemixes","getSporeRemixes_regeneratorRuntime","big","parsed","pend","padLeft","toHexString","isNaN","getPending","getRemixByNumber","_x5","getRemixesMap","_ref4","_callee4","collections","_iterator","_step","_context4","updatePending","_createForOfIteratorHelper","n","done","f","_step2","_iterator2","sporeHash","_step3","_pending","_iterator3","_step4","skip","_iterator4","uploadingRemix","onRemixSigningCompleted","savedToLocal","setSavedToLocal","modal_Modal","recording_FinishedUploading","progressbar_UnknownProgressBar","hideWaveform","buttonTextColor","innerControls","innerWidth","backgroundColor","useRemixListener","clear","remixId","setRecordedRemix","TEST_REMIX_UPLOAD_FLAG","setUploadingRemix","remixToPlay","setRemixToPlay","sliderChanges","modeChanges","addJson","SporeEmbed","simpleControls","zorbId","isFullScreen","_ref$songTitle","songTitle","artist","stems","setStems","_ref$url","hideControls","isSimple","_ref$color","_useRemixListener","totalRemixes","setLoaded","onReceive","useSporeListener","recording_SporeRecorded","nft_jacker_ShuffleButton","innerHeight","player_SimpleControls","samples_SampleInfo","_ref$videoURL","videoURL","_ref$playerURL","playerURL","lightweight","_useVideoController","showControls","setShowControls","togglePlayControls","video_VideoContentShader","preload","preLoad","opacity","crossorigin","video_PlaybarContainer","togglePlay","showPitch","setShowPitch","page","setPage","ENSName","_useEnsName","useEnsName","truncate","brightCache","getHSLString","h","getHSLFromString","_str$split","substring","_str$split2","hPart","sPart","lPart","index","hslToHex","k","round","padStart","colors","Colors","c","toUpperCase","shift","_getHSLFromString","warmth","rotate","_getHSLFromString2","factor","lightFactor","_getHSLFromString3","_RGBToHSL","cmin","cmax","delta","toFixed","RGBToHSL","getRGB","hsl","brightenHSL","cacheResult","floor","rgb","_getHSLFromString4","heatRoot","bucketSize","saturation","getBuckets","heat","regions","buckets","SporeHeatMap_createForOfIteratorHelper","values","q","_loop","some","_ref$center","center","_ref$saturation","maxStep","keys","step","warm","creator","formatTime","minutes","seconds","_ref$songName","songName","_ref$artist","externalURL","audioUnit","store","preset","setPreset","sporeMetadata","WIDTH","playTime","setPlayTime","startPoint","setMouseSeeker","diff","onClickPlay","mouseSeek","startTime","ens_ENSName","lowerGradInverted","buttonBgColor","showShareModal","setShowModal","isCopied","setIsCopied","shareUrl","Fragment","index_esm","fa_index_esm","cursor","navigator","clipboard","writeText","TwitterShareButton","TwitterIcon","FacebookMessengerShareButton","quote","FacebookMessengerIcon","RedditShareButton","RedditIcon","TelegramShareButton","TelegramIcon","WhatsappShareButton","separator","WhatsappIcon","EmailShareButton","subject","EmailIcon","remix","setRemix","shareLink","nft_jacker_ShareButton","sporeId","spore_AudioPlayer","RemixListItem","hashedIcon","svgToTinyDataUri","uid","c1","c1_","c2","triad","getSporeHashIcon","backgroundImage","_ref$creatorsToIgnore","creatorsToIgnore","remixData","setRemixData","noRemixes","setNoRemixes","RemixList_RemixListItem","CREATORS_TO_IGNORE","Drop","_ref$askPrice","remixes","remix_RemixPlayer","remix_RemixList","drops_Glossary","entered","setEntered","remove","setRemove","drops_Gen3Info","drops_Drop","zorbStartPosition","image","animating","setAnimating","set","property","document","documentElement","setProperty","setZorbId","zorb","setZorbStartPosition","selected","args","endPoint","networks","network","ZDKNetwork","Ethereum","chain","ZDKChain","Mainnet","zdk","ZDK","zorbs","setIsLoading","setZorbs","collectionAddresses","ownerAddresses","nodes","token","useTokenOwners","setHide","drops_ZorbOption","insertedZorb","setInsertedZorb","drops_ZorbSelector","drops_ZorbAnimation","secondsRemaining","SONG_NAMES","SONG_TO_TOKENS","1","2","3","4","5","6","7","8","9","10","getChillRXSongs","songs","coverArt","songId","tokenIds","PINATAS","mintsongs","zora","sound.xyz","zequencer","catalog","extractIPFS","getGatewayLink","externalLink","save_regeneratorRuntime","Source","textColor","setData","HistoryItemSource_Source","shuffle","array","temporaryValue","randomIndex","currentIndex","random","cachedTokens","KEYON_SONGS","History_regeneratorRuntime","_unsold","isSporeTrack","trim","len","latestJacks","loadHistory","keyonSongs","setKeyonSongs","load","history","nft_jacker_HistoryItemSource","useJacker","setLatestJacks","setShowHistory","setLink","setShowLinkInput","chillTokenId","defaultSearch","directCollectionAddress","directTokenId","_ref$updateURL","updateURL","currentLink","setCurrentLink","setSongId","setShowDesc","setCollectionAddress","jackedAudio","setJackedAudio","buyThisSkin","setBuyThisSkin","_useState13","_useState14","setTokenId","_useState15","_useState16","setCoverArt","_useState17","_useState18","setSongName","_useState19","_useState20","description","setDescription","_useState21","_useState22","showPlayer","setShowPlayer","_useState23","_useState24","setArtist","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","searchTerm","setSearchTerm","pushState","getChillTokenId","onJack","useJacker_regeneratorRuntime","isPlaylist","loadChillRX","shouldSave","external_url","toSave","ipfsHash","artwork","info","uri","attributes","EchoSearchBox","showLinkInput","setShowInfo","cheatCodeActivating","showHistory","onKeyDown","key","onFocus","placeholder","onChange","nft_jacker_BuyUnsold","showBuyThisSkin","rel","nft_jacker_BuyThisSkin","CHEAT_CODES","isValidCheatCode","code","SporesPlaylistContract","clearPlayer","showConnectWallet","setShowConnectWallet","abi","inputs","internalType","outputs","stateMutability","anonymous","indexed","Contract","getJuicePlaylists","playlist_regeneratorRuntime","metadataCID","playlist_createForOfIteratorHelper","finish","isLoaded","playlistId","setPlaylistLoaded","react_collapsible_dist_default","transitionTime","easing","trigger","JuicePlaylists","playlists","setPlaylists","usePlaylists","chart_PlaylistInfo","CHARTS_FLAG","SongInfo","_ref5","selectedTab","section","thumb","setThumb","collectionName","possibleThumbnail","_coverArt","content","numRemixes","_token","onError","_ref$history","showChart","setLoading","chartData","setChartData","setRemixes","setChillRXData","searchTermRef","lastCursorUsed","setSelectedTab","searchId","initialSize","padding","scrollPosition","scrollTo","onScroll","el","scrollTop","scrollHeight","useScroll","ceil","Chart_regeneratorRuntime","_searchTerm","display","PLAYLIST_FLAG","chart_JuicePlaylists","Chart_SongInfo","getLocation","element","bounding","bound","helperBox","helperRefs","locations","setLocations","playerEl","helperEl","playerLocation","helperLocation","points","offset","stopColor","docs","centerButton","ledButton","spButton1","spButton2","slider2","slider4","slider3","slider1","sliderHovered","doc","isArray","spore_VisualLinks","setSliderHovered","setSelected","spore_HelperLines","onTouchEnd","onMouseLeave","onMouseOver","calculateTimeLeft","year","getFullYear","difference","timeLeft","D","H","M","S","setTimeLeft","timerComponents","forEach","getKeyonBPM","JackerPlayer_regeneratorRuntime","DEFAULT_JACKER_URL","CHILL_RX_URL","locked","showLoops","loadedURL","preloaded","setPreloaded","lastLoaded","setURL","_tokens","tokensToChoose","origin","samples","drums","vocals","bass","other","visible","setVisibility","marginTop","bi_index_esm","io_index_esm","setUsedCheatCode","setSecondsRemaining","TOKEN_LOCK_FLAG","CHILLRX_FLAG","ABOUT_TO_END_FLAG","OWN_FAKE_SPORE_FLAG","showHelp","setShowHelp","_useLatestJacks","useLatestJacks_regeneratorRuntime","useLatestJacks","showInfo","showRemixes","setShowRemixes","passed","setPassed","failed","setFailed","password","setPassword","clearChart","_useTokenLock","cheatcode","setCheatCodeActivating","setLocked","isSporeOwner","setIsSporeOwner","timeElapsed","cheatOverriden","setCheatOverriden","_tokensOnSale","owner","_timeElapsed","LOCK_TIME","useTokenLock","_useJacker","isChillRX","params","_useCoverArtColors","coverGrad","setCoverGrad","setButtonTextColor","setButtonBgColor","setUpperGradInverted","setLowerGradInverted","mainColor","setMainColor","prominent","amount","group","invertedLowerColor","invert","invertedMidColor","invertedUpperColor","clearColors","useCoverArtColors","onClickPassword","background","spore_PlayerHelper","nft_jacker_Navigation","chart_Chart","nft_jacker_JackerPlayer","nft_jacker_EchoSearchBox","metadata_TokenMetadata","nft_jacker_Info","hi_index_esm","configureChains","mainnet","infuraProvider","infuraId","publicProvider","chains","connectors","getDefaultWallets","appName","wagmiClient","createClient","autoConnect","App","spores","react","fallback","wagmi_esm","client","theme","darkTheme","accentColor","accentColorForeground","BrowserRouter","Switch","Route","path","drops_InMySoul","assign","drops_Thugger","drops_Zpore","NextGen","video_VideoJacker","nft_jacker_NFTJacker","Boolean","rootReducer","combineReducers","action","showPlaylistMenu","pendingSpores","createStore","ReactDOM","es","src_App_0","getElementById","serviceWorker","ready","registration","unregister","__webpack_require__","__webpack_exports__","asciiToNote","_web3_js__WEBPACK_IMPORTED_MODULE_1__","noteToAscii","A","A#","B","C","C#","D#","E","F","F#","G","G#","noteToBytes32","asciiToHex","tmp","web3__WEBPACK_IMPORTED_MODULE_0__","web3__WEBPACK_IMPORTED_MODULE_0___default","Web3","HttpProvider","WebsocketProvider","Buffer","bs58","ipfs_hash","nullBytes32","EthereumDataType","toConversion","fromConversion","_Users_alecresende_code_spores_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","jsValue","ethereumValue","trimEmpty","trimmed","charCodeAt","charAt","hash_hex","buf","encode","bytes32ToIPFSHash","numberToHex","toAscii","padRight","fromAscii","stripLeadingZeroes","getAddress","xhr","XMLHttpRequest","IPFS_ADDRESS","END","httpV","httpsV","IpfsClient","_Users_alecresende_code_spores_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","controllers","protocol","backupIpfs","ipfsClient","centralIpfs","_centralIpfs","self","connectedLocally","finishedTestingLocalConnection","onreadystatechange","readyState","status","connectToCentral","keepSwarmConnectionAlive","timeout","ontimeout","send","list","refs","local","dht","findprovs","maxNumProviders","res","swarm","_this3","sequencerEngine","getSequenceId","getState","sequencer","addHelper","addBlobAndSaveToDB","Blob","Uint8Array","_this4","_ipfs","_this5","ipfsObject","pin","_this6","noUTF","ipfsPath","_this7","useCentral","isBytes","restart","cat","file","controller","AbortController","signal","abort","_url","getIPFSPrefix","_Users_alecresende_code_spores_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","dateA","response","dateB","readAllChunks","merged","mergeArrays","bytesArray","_callee5","_context5","_this8","fileReader","FileReader","onload","_this9","readAsArrayBuffer","filereader","readasarraybuffer","readableStream","reader","getReader","chunks","pump","read","_this11","_callee6","_context6","_callee7","dateC","processed","_context7","processArray","_x6","ArrayBuffer","findEnd","arrays","skipEnd","count","subarray","ending","iter","foundIndex","_this12"],"mappings":"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","file":"static/js/main.7b20ed49.chunk.js","sourcesContent":["import {VHS} from './vhs.js';\nimport {FILTER} from './filter.js';\n\nexport const fragmentShader = `\n\nuniform sampler2D video;\nuniform float width;\nuniform float height;\nuniform float gateStrength;\nuniform float playRate;\nuniform float isRolling;\nuniform float ticks;\nuniform float rollRate;\nuniform float blurring;\nuniform float filterSliderValue;\nuniform float spaceEffectLevels;\nuniform float spaceSliderValue;\n\nvec4 blur(float Size) {\nfloat Pi = 6.28318530718; // Pi*2\n    \n    // GAUSSIAN BLUR SETTINGS {{{\n    float Directions = 16.0; // BLUR DIRECTIONS (Default 16.0 - More is better but slower)\n    float Quality = 4.0; // BLUR QUALITY (Default 4.0 - More is better but slower)\n    //float Size = 8.0; // BLUR SIZE (Radius)\n    // GAUSSIAN BLUR SETTINGS }}}\n   \n    vec2 Radius = Size/vec2(width, height); //iResolution.xy;\n    \n    // Normalized pixel coordinates (from 0 to 1)\n    vec2 uv = gl_FragCoord.xy / vec2(width*2.0, height*2.0);\n    // Pixel colour\n    vec4 Color = texture2D(video, uv);\n    \n    // Blur calculations\n    for( float d=0.0; d<Pi; d+=Pi/Directions)\n    {\n\t\tfor(float i=1.0/Quality; i<=1.0; i+=1.0/Quality)\n        {\n\t\t\tColor += texture2D(video, uv+vec2(cos(d),sin(d))*Radius*i);\t\t\n        }\n    }\n    \n    // Output to screen\n    Color /= Quality * Directions - 15.0;\n\n    return Color*0.6;\n}\nvec4 blur9(sampler2D image, vec2 direction) {\n  vec2 uv = gl_FragCoord.xy / vec2(width*2.0, height*2.0);\n  vec2 resolution =  vec2(width, height); \n  vec4 color = vec4(0.0);\n  vec2 off1 = vec2(1.411764705882353) * direction;\n  vec2 off2 = vec2(3.2941176470588234) * direction;\n  vec2 off3 = vec2(5.176470588235294) * direction;\n  color += texture2D(image, uv) * 0.1964825501511404;\n  color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n  color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n  color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n  color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n  color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n  color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n  return color;\n}\n\n// A single iteration of Bob Jenkins' One-At-A-Time hashing algorithm.\nuint hash( uint x ) {\n    x += ( x << 10u );\n    x ^= ( x >>  6u );\n    x += ( x <<  3u );\n    x ^= ( x >> 11u );\n    x += ( x << 15u );\n    return x;\n}\n\n// Compound versions of the hashing algorithm I whipped together.\nuint hash( uvec2 v ) { return hash( v.x ^ hash(v.y)                         ); }\nuint hash( uvec3 v ) { return hash( v.x ^ hash(v.y) ^ hash(v.z)             ); }\nuint hash( uvec4 v ) { return hash( v.x ^ hash(v.y) ^ hash(v.z) ^ hash(v.w) ); }\n\n\n// Construct a float with half-open range [0:1] using low 23 bits.\n// All zeroes yields 0.0, all ones yields the next smallest representable value below 1.0.\nfloat floatConstruct( uint m ) {\n    const uint ieeeMantissa = 0x007FFFFFu; // binary32 mantissa bitmask\n    const uint ieeeOne      = 0x3F800000u; // 1.0 in IEEE binary32\n\n    m &= ieeeMantissa;                     // Keep only mantissa bits (fractional part)\n    m |= ieeeOne;                          // Add fractional part to 1.0\n\n    float  f = uintBitsToFloat( m );       // Range [1:2]\n    return f - 1.0;                        // Range [0:1]\n}\n\n\n\n// Pseudo-random value in half-open range [0:1].\nfloat rand( float x ) { return floatConstruct(hash(floatBitsToUint(x))); }\nfloat rand( vec2  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\nfloat rand( vec3  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\nfloat rand( vec4  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\n\n\n${VHS}\n\n${FILTER}\n\n\nvoid main() {\n  vec2 uv = gl_FragCoord.xy / vec2(width*2.0, height*2.0);\n  vec4 blurred = blurring > 0.0 ? blur9(video, vec2(blurring*3.0, blurring*1.0)) : vec4(0.0);\n\n/*\n  vec4 blurred = mix(\n    blur(blurring*4.0), \n    \n*/\n  vec4 sampled = texture2D(video, uv);\n  float _gate = (1.0-gateStrength);\n\n  vec4 glitched = spaceSliderValue > 0.0 || isRolling == 1.0 ? glitch() : vec4(0.0);\n  vec3 gammaColor = mix(\n    mix(\n      sampled.xyz, \n      glitched.xyz, \n      isRolling), \n   blurred.xyz, pow(blurring, 0.3));\n        \n  vec3 color = pow(gammaColor, vec3(2.0));\n  // grayscale conversion\n  float gray = dot(color, vec3(0.2126, 0.7152, 0.0722));\n  // regamma\n  float gammaGray = sqrt(gray);\n  vec4 greyImage = vec4(gammaGray, gammaGray, gammaGray, 1.0);\n  vec4 _color = \n    _gate *\n    mix(\n      greyImage, \n      mix(\n        mix(\n          sampled, \n          glitched, \n          isRolling + spaceSliderValue*(0.3+spaceEffectLevels)), \n        blurred, \n        pow(blurring, 0.3)\n      ), \n      pow(playRate, 4.0));\n  _color.w = 1.0;\n  gl_FragColor = filterSliderValue > 0.0 ? filterColor(_color) : _color;\n}\n`;\n","export const VHS = `\n\n\nvec4 glitch()\t{\n\nbool autoScan  = true;\nfloat xScanline=rollRate/64.0;\nfloat xScanline2=rollRate/32.0;\nfloat xScanlineSize=0.5;\nfloat xScanlineSize2=0.25;\nfloat yScanline = spaceSliderValue;\nfloat yScanlineAmount = spaceSliderValue + 0.05;\nfloat grainLevel = spaceSliderValue + 0.1;\nbool scanFollow = true;\nfloat analogDistort = 1.0;\nfloat bleedAmount = 1.0;\nfloat bleedDistort = 0.5;\nfloat bleedRange = 1.0;\nvec4 colorBleedL = vec4(0.8-spaceEffectLevels, 0.0, 0.4+spaceEffectLevels, 1.0);\nvec4 colorBleedC = vec4(0.0, 0.5, 0.9, 1.0);\nvec4 colorBleedR = vec4(0.8-spaceSliderValue, 0.0, 0.4+spaceEffectLevels, 1.0);\n\n\nfloat TIME = ticks / 10.0;\n   vec2 RENDERSIZE = vec2(width, height);\n   float tau = 6.283185307179586476925286766559;\n   vec2 isf_FragNormCoord = gl_FragCoord.xy / vec2(width*2.0, height*2.0);\n\tfloat\tactualXLine = (!autoScan) ? xScanline : mod(xScanline + ((1.0+sin(0.34*TIME))/2.0 + (1.0+sin(TIME))/3.0 + (1.0+cos(2.1*TIME))/3.0 + (1.0+cos(0.027*TIME))/2.0)/3.5,1.0);\n\tfloat\tactualXLineWidth = (!autoScan) ? xScanlineSize : 2.0 * xScanlineSize * ((1.0+sin(1.2*TIME))/2.0 + (1.0+cos(3.91*TIME))/3.0 + (1.0+cos(0.014*TIME))/2.0)/3.5;\n\tvec2\tloc = isf_FragNormCoord;\n\tvec4\tvhs = texture2D(video, loc);\n\tfloat\tdx = 1.0+actualXLineWidth/25.0-abs(distance(loc.y, actualXLine));\n\tfloat\tdx2 = 1.0+xScanlineSize2/10.0-abs(distance(loc.y, xScanline2));\n\tfloat\tdy = (1.0-abs(distance(loc.y, yScanline)));\n\tif (autoScan)\n\t\tdy = (1.0-abs(distance(loc.y, mod(yScanline+TIME,1.0))));\n\t\n\tdy = (dy > 0.5) ? 2.0 * dy : 2.0 * (1.0 - dy);\n\t\n\tfloat\trX = (scanFollow) ? rand(vec3(dy,actualXLine,analogDistort)) : rand(vec3(dy,bleedAmount,analogDistort));\n\tfloat\txTime = (actualXLine > 0.5) ? 2.0 * actualXLine : 2.0 * (1.0 - actualXLine);\n\t\n\tloc.x += yScanlineAmount * dy * 0.025 + analogDistort * rX/(RENDERSIZE.x/2.0);\n\t\n\tif(dx2 > 1.0 - xScanlineSize2 / 10.0)\t{\n\t\tfloat\trX2 = (dy * rand(vec3(dy,dx2,dx)) + dx2) / 4.0;\n\t\tfloat\tdistortAmount = analogDistort * (sin(rX * tau / dx2) + cos(rX * tau * 0.78 / dx2)) / 10.0;\n\t\t//loc.y = xScanline2;\n\t\tloc.x += (1.0 + distortAmount * sin(tau * (loc.x) / rX2 ) - 1.0) / 15.0;\n\t}\n\tif(dx > 1.0 - actualXLineWidth / 25.0)\n\t\tloc.y = actualXLine;\n\n\tloc.x = mod(loc.x,1.0);\n\tloc.y = mod(loc.y,1.0);\n\t\n\tvec4\tc = texture2D(video, loc);\n\tfloat\tx = (loc.x*320.0)/320.0;\n\tfloat\ty = (loc.y*240.0)/240.0;\n\tfloat\tbleed = 0.0;\n\t\n\tif (scanFollow)\n\t\tc -= rand(vec3(x, y, xTime)) * xTime / (5.0-grainLevel);\n\telse\n\t\tc -= rand(vec3(x, y, bleedAmount)) * (bleedAmount/20.0) / (5.0-grainLevel);\n\t\n\tif (bleedAmount > 0.0)\t{\n\t\ttexture2D(video, loc + vec2(0.01, 0)).r;\n\t\tbleed += texture2D(video, loc + bleedRange * vec2(0.02, 0)).r;\n\t\tbleed += texture2D(video, loc + bleedRange * vec2(0.01, 0.01)).r;\n\t\tbleed += texture2D(video, loc + bleedRange * vec2(-0.02, 0.02)).r;\n\t\tbleed += texture2D(video, loc + bleedRange * vec2(0.0, -0.03)).r;\n\t\tbleed /= 6.0;\n\t\tbleed *= bleedAmount;\n\t}\n\n\tif (bleed > 0.1){\n\t\tfloat\tbleedFreq = 1.0;\n\t\tfloat\tbleedX = 0.0;\n\t\tif (autoScan)\n\t\t\tbleedX = x + bleedDistort * (yScanlineAmount + (1.5 + cos(TIME / 13.0 + tau*(bleedDistort+(1.0-loc.y))))/2.0) * sin((TIME / 9.0 + bleedDistort) * tau + loc.y * loc.y * tau * bleedFreq) / 8.0;\n\t\telse\n\t\t\tbleedX = x + (yScanlineAmount + (1.0 + sin(tau*(bleedDistort+loc.y)))/2.0) * sin(bleedDistort * tau + loc.y * loc.y * tau * bleedFreq) / 10.0;\n\t\tvec4\tcolorBleed = (bleedX < 0.5) ? mix(colorBleedL, colorBleedC, 2.0 * bleedX) : mix(colorBleedR, colorBleedC, 2.0 - 2.0 * bleedX);\n\t\tif (scanFollow)\n\t\t\tc += bleed * max(xScanlineSize,xTime) * colorBleed;\n\t\telse\n\t\t\tc += bleed * colorBleed;\n\t}\n   return c;\n}\n\n`;\n","export const FILTER = `\nvec4 filterColor(vec4 color) {\n   vec2 uv = gl_FragCoord.xy / vec2(width*2.0, height*2.0);\n   float val = filterSliderValue;\n   vec4 sampled = texture2D(video, uv - vec2(0.1*pow(val, 2.0), 0.1*filterSliderValue));\n   sampled.g = 0.0;\n   sampled.b = 0.0;\n   float ival = 1.0-val;\n   vec4 lp = mix(color, vec4(color.x*ival, color.y*pow(ival, 3.0), color.z*pow(ival+0.1, 0.5), 1.0), smoothstep(0.5, 1.0, val));\n   return mix(mix(color, sampled, pow(val, 0.03)), lp, pow(val, 0.3));\n}\n\n`;\n","import React, {useState, useEffect, useCallback} from 'react';\nexport const useVideoSize = (videoRef) => {\n    let [height, setHeight] = useState(50);\n    let [width, setWidth] = useState(50);\n    useEffect(() => {\n        videoRef.current.addEventListener(\"loadeddata\", onLoad);\n        return () => videoRef.current.removeEventListener(\"loadeddata\", onLoad);\n    } , [setHeight, setWidth]);\n\n    const onLoad = useCallback(() => {\n        let height = videoRef.current.offsetHeight;\n        setHeight(height);\n        let width = videoRef.current.offsetWidth;\n        setWidth(width);\n    }, [setHeight, setWidth]);\n\n\n    return {width, height}\n};\n","import * as THREE from \"three\";\nimport React, { useRef, useEffect, useCallback, useState} from 'react';\n\nexport const useVideoShader = ({\n    canvasRef, \n    ref,\n    resolution=2,\n    videoRef,\n    width,\n    height,\n    vertexShader,\n    fragmentShader,\n    uniforms,\n}) => {\n    let renderer = useRef();\n    let scene = useRef();\n    let camera = useRef();\n    let shaderUniforms = useRef();\n    let gateStrength = useRef(0);\n\n    useEffect(() => {\n        init();\n        animate();\n    }, []);\n\n    const init = () => {\n\t// Initialize the WebGL renderer\n\trenderer.current = new THREE.WebGLRenderer();\n\trenderer.current.setPixelRatio(2);\n\trenderer.current.setSize(width/resolution, height/resolution);\n\n        if (canvasRef) {\n            canvasRef.current = renderer.current.domElement;\n        }\n        \n\t// Add the renderer to the sketch container\n\tref.current.appendChild(renderer.current.domElement);\n        \n\t// Initialize the scene\n\tscene.current = new THREE.Scene();\n        \n\t// Initialize the camera\n\tcamera.current = new THREE.Camera();\n        \n\t// Create the plane geometry\n        let geometry = new THREE.PlaneGeometry(2, 2);\n\n\t// Define the shader uniforms\n\tshaderUniforms.current = {\n            video: {\n                value: new THREE.VideoTexture( videoRef.current)\n            },\n            width: {\n                value: width / 2.0,\n            },\n            height: {\n                value: height / 2\n            },\n            ... uniforms.current\n\t};\n\n\t// Create the shader material\n\tvar material = new THREE.ShaderMaterial({\n\t    uniforms : shaderUniforms.current,\n\t    vertexShader,\n\t    fragmentShader\n\t});\n\n\t// Create the mesh and add it to the scene\n\tvar mesh = new THREE.Mesh(geometry, material);\n\tscene.current.add(mesh);\n    };\n\n    useEffect(() => {\n        shaderUniforms.current.width.value = width;\n        shaderUniforms.current.height.value = height;\n\trenderer.current.setSize(width/resolution, height/resolution);\n    }, [width, height, resolution]);\n\n    function animate() {\n\trequestAnimationFrame(animate);\n\trender();\n    }\n    \n    /*\n     * Renders the sketch\n     */\n    function render() {\n        if (!renderer.current.domElement) {\n            return;\n        }\n\trenderer.current.render(scene.current, camera.current);\n    }\n};\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {vertexShader} from './blurred-shader/vertex.js';\nimport {fragmentShader} from './regular-shader/fragment.js';\nimport {isMobile} from 'react-device-detect';\nimport {useVideoSize} from './useVideoSize.js';\nimport {connect} from 'react-redux';\nimport {useVideoShader} from './useVideoShader.js';\n\nconst VideoContentShader = ({canvasRef, videoRef, uniforms, started}) => { \n    let ref = useRef();\n    let {width, height} = useVideoSize(videoRef);\n    useVideoShader({\n        canvasRef,\n        uniforms,\n        resolution: 1,\n        ref,\n        videoRef,\n        fragmentShader,\n        vertexShader,\n        width,\n        height});\n    let className = \"video absolute md:h-2/3 md:w-auto md:top-1/2 md:left-1/2 md:transform md:-translate-x-1/2 md:-translate-y-1/2 w-full\";\n    if (isMobile && !started) {\n        className += \" hide\";\n    }\n    return (\n        <div style={{height, width}} ref={ref} className={className}>\n        </div>);\n};\n\nexport default VideoContentShader;\n","export const vertexShader = `\nvoid main() {\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(\n    position, \n    1.0 );\n}\n`;\n","import React, { Component, useCallback } from 'react';\nimport './buttons.scss';\n\nconst PlayButton = (props) => {\n    const onPlayClicked = useCallback((e) => {\n        e.stopPropagation();\n        e.target.parentNode.blur();\n        e.target.blur();\n        e.currentTarget.blur();\n        props.play();\n    }, [props.isPlaying]);\n\n    return (\n        <div\n          style={props.style || {}}\n          onClick={onPlayClicked}\n          onMouseDown={(e) => e.stopPropagation()}\n          onTouchStart={(e) => e.stopPropagation()}\n          className=\"play-btn-wrapper\">\n          <div\n            style={{\n                borderColor: props.isPlaying ? props.color: \"transparent transparent transparent \" + props.color,\n            }}\n            className={props.isPlaying ? \"play-btn playing\" : \"play-btn \"}/>\n        </div>\n    );\n}\n\n\nexport default PlayButton;\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './playbar.scss';\n\nexport const Playbar = ({color, playerRef}) => { \n    let ref = useRef();\n    let scrubRef = useRef();\n    let [waveform, setWaveform] = useState();\n    let [progress, setProgress] = useState(0);\n    let [playing, setPlaying] = useState(0);\n    let [started, setStarted] = useState(false);\n    let [scrubbing, setScrubbing] = useState(false);\n    let off = useRef(0);\n    let [scrub, setScrub] = useState(undefined);\n    \n\n    useEffect(() => {\n        window.addEventListener(\"mouseup\", finishScrub);\n        window.addEventListener(\"mousemove\", onMouseMove);\n        window.addEventListener(\"touchmove\", onMouseMove);\n        return () => {\n            window.removeEventListener(\"mouseup\", finishScrub);\n            window.removeEventListener(\"mousemove\", onMouseMove);\n            window.removeEventListener(\"touchmove\", onMouseMove);\n        }\n    }, [scrubbing, setScrub, setScrubbing]);\n\n    const finishScrub = useCallback(() => {\n        setScrubbing(false);\n    }, [setScrubbing]);\n\n    useEffect(() => {\n        window.addEventListener(\"message\", onMessage, false);\n        return x => window.removeEventListener(\"message\", onMessage, false);\n    }, [setProgress, setPlaying, setStarted, setWaveform]);\n\n    const onMessage = useCallback(e => {\n        if (e.data.type === \"waveform-data\") {\n            setWaveform(e.data.body);\n        }\n        if (e.data.type === \"song-player-progress\") {\n            let progress = parseFloat(e.data.body);\n            setProgress(progress);\n        }\n        if (e.data.type === \"jacker-playback-status\") {\n            let playing = parseInt(e.data.body);\n            setPlaying(playing);\n            if (playing) {\n                setStarted(true);\n            }\n        }\n    }, [started, setProgress, setPlaying, setStarted, setWaveform]);\n\n    const onPlayClicked = useCallback(() => {\n        playerRef.current.contentWindow.postMessage({\n            type: \"jacker-pause-toggle\",\n            body: true,\n        }, \"*\");\n    }, []);\n\n    const onMouseMove = useCallback((e) => {\n        if (!scrubbing) {\n            return;\n        }\n        if (e.touches) {\n            e = e.touches[0];\n        }\n\n        let rect = ref.current.getBoundingClientRect();\n        let x = e.clientX - rect.left;\n        let percent = (x / rect.width) * 100;\n        percent = Math.max(0, Math.min(100, percent));\n        setScrub(percent);\n        playerRef.current.contentWindow.postMessage({\n            type: \"jacker-seek\",\n            body: percent\n        }, \"*\");\n    }, [scrubbing, setScrub]);\n\n    let className = \"shuffle-buttons\";\n\n    if (!started) {\n        return '';\n    }\n\n    let style = {\n        borderColor: color\n    };\n\n    progress = scrubbing && scrub ? scrub : progress;\n    return (\n          <div\n            onMouseDown={(e) => {\n                setScrubbing(true);\n                onMouseMove(e);\n            }}\n            onTouchStart={(e) => {\n                setScrubbing(true);\n                onMouseMove(e);\n            }}\n            ref={ref}\n            style={style} className=\"relative h-1.5 rounded-lg w-full playbar\">\n            <div\n              style={{\n                  width: (100-progress) + \"%\",\n                  left: progress + \"%\"}} className=\"w-full h-full rounded-lg absolute playbar-remaining\"/>\n            <div\n              ref={scrubRef}\n              onMouseDown={(e) => {\n                  e.stopPropagation();\n                  setScrubbing(true);\n              }}\n              onTouchStart={(e) => {\n                  e.stopPropagation();\n                  setScrubbing(true);\n              }}\n              style={{\n                  //backgroundColor: color,\n                  left: progress + \"%\"}} className=\"rounded-xl absolute z-50 w-3 h-3 -top-0.5 bg-white hover:bg-red-500\"/>\n          </div>\n    );\n};\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {useVideoSize} from './useVideoSize.js';\nimport {isMobile} from 'react-device-detect';\nimport {Playbar} from 'components/player/Playbar.js';\nimport {connect} from 'react-redux';\nconst DURATION = 232;\n\nconst PlaybarContainer = ({videoRef, playerRef, started}) => { \n    let {width, height} = useVideoSize(videoRef);\n    let [progress, setProgress] = useState(0);\n\n    useEffect(() => {\n        window.addEventListener(\"message\", onMessage);\n        return () => window.removeEventListener(\"message\", onMessage);\n    } , [setProgress]);\n\n    const onMessage= useCallback((e) => {\n        if (e.data.type === \"song-player-progress\") {\n            let progress = parseFloat(e.data.body);\n            let x = progress/100\n            let sec = DURATION * x;\n            setProgress(sec);\n        }\n    }, [setProgress]);\n\n    return (\n        <div \n          className=\"z-50 absolute top-1/2  md:h-full md:w-4/6 md:transform md:translate-y-1/3 w-full\"\n          style={isMobile ? {top: height} : {width: width}}\n        >\n          <Playbar playerRef={playerRef}\n                   color=\"white\"/>\n          {started &&\n           <div className=\"absolute md:left-0 left-4 top-3 text-xs\">\n            {format(progress)}\n           </div>}\n          {started &&\n           <div className=\"absolute md:right-0 right-4 top-3 text-xs\">\n             -{format(Math.abs(progress-DURATION))}\n           </div>}\n        </div>\n    );\n}\n\nfunction format(duration)\n{   \n    // Hours, minutes and seconds\n    var hrs = ~~(duration / 3600);\n    var mins = ~~((duration % 3600) / 60);\n    var secs = ~~duration % 60;\n\n    // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n    var ret = \"\";\n\n    if (hrs > 0) {\n        ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\n    }\n\n    ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\n    ret += \"\" + secs;\n    return ret;\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaybarContainer);\n","// 0-1 values of each \"effect\" slider\nexport const SPACE_SLIDER_VALUE = \"space-slider-value\";\nexport const FILTER_SLIDER_VALUE = \"filter-slider-value\";\nexport const JUICE_SLIDER_VALUE = \"juice-slider-value\";\n\n// realtime signal strength of the \"space effect\"\nexport const SPACE_EFFECT_LEVELS = \"space-effect-levels\";\n\n// realtime signal strength of the \"gate effect\"\nexport const GATE_STRENGTH = \"gate-strength\";\n\n// sample-waveform is a list of \"height\" values for the waveform\n// one for each \"x-position\". allows you to draw waveform\n// in 2D\nexport const SAMPLE_WAVEFORM = \"sample-waveform\";\n\n// song-bpm is the initial bpm of the song\nexport const SONG_BPM = \"song-bpm\";\n\n// playback-bpm is the current bpm (after pitching down/up)\n// ratio of playback-bpm/song-bpm is the \"playback speed\"\nexport const PLAYBACK_BPM = \"playback-bpm\";\n\n// mapping of message type ---> uniform name\nexport const TYPE_TO_NAME = {\n    \"space-slider-value\": \"spaceSliderValue\",\n    \"filter-slider-value\": \"filterSliderValue\",\n    \"juice-slider-value\": \"juiceSliderValue\",\n    \"space-effect-levels\": \"spaceEffectLevels\",\n    \"gate-strength\": \"gateStrength\",\n    \"song-bpm\": \"songBPM\",\n    \"playback-bpm\": \"playbackBPM\",\n    \"is-rolling\": \"isRolling\",\n    \"rolling-rate\": \"rollRate\",\n};\n","import {useRef, useState, useCallback, useEffect} from 'react';\nimport {parseMessage} from './message-parser.js';\nconst DURATION = 232;\n\nconst MAX_ACCEPTABLE_DRIFT = 0.2; // 200 ms of maximum dift\nconst DRIFT_COOLDOWN_PERIOD = 3000; // 1500 mscooldown between drift corrects\nexport const useVideoController = ({ref, playerRef}) => {\n    let baseBPM = useRef();\n    let lastTime = useRef(0);\n    let nextTick = useRef(false);\n    let lastVideoTime = useRef(0);\n    let lastPlaybackRate = useRef(0);\n    let counter = useRef(0);\n    let waiting = useRef();\n    let timer = useRef(0);\n    let gateTimer = useRef(undefined);\n    let coolDownStartTime = useRef(undefined);\n\n    const isCoolingDown = () => {\n        return coolDownStartTime.current && ((new Date().getTime() - coolDownStartTime.current) <= DRIFT_COOLDOWN_PERIOD);\n    };\n\n    const startCoolDown = (time) => {\n        coolDownStartTime.current = new Date().getTime();\n    };\n\n\n    let blurDirection = useRef(.1);\n\n    let uniforms = useRef({\n        blurring: {\n            value: 0.0,\n        },\n        playRate: {\n            value: 1.0\n        },\n        isRolling: {\n            value: 0.0,\n        },\n        rollRate: {\n            value: 32.0,\n        },\n        filterSliderValue: {\n            value: 0.0\n        },\n        spaceSliderValue: {\n            value: 0.0\n        },\n        spaceEffectLevels: {\n            value: 0.0\n        },\n        ticks: {\n            value: 0\n        },\n        gateStrength: {\n            value: 0,\n        }\n    });\n    let [isPlaying, setIsPlaying] = useState(false);\n    let [started, setStarted] = useState(false);\n    \n    useEffect(() => {\n        window.addEventListener(\"message\", onMessage, false);\n    }, [setIsPlaying, setStarted]);\n\n    useEffect(() => {\n        setInterval(() => {\n            blurLoop();\n        }, 25);\n    }, []);\n    \n    const blurLoop = () => {\n        if (uniforms.current.blurring.value > 0.0) {\n            let blurring = uniforms.current.blurring.value;\n            blurring = Math.max(0, Math.min(2.0, blurring + blurDirection.current));\n            if (blurring >= 2 || blurring <= 0) {\n                if (blurDirection.current < 0) {\n                    blurDirection.current = 0.1;\n                } else {\n                    blurDirection.current = -0.00005;\n                }\n            } \n            uniforms.current.blurring.value = blurring;\n            if (blurDirection.current > 0) {\n                blurDirection.current *= 1.8;\n            } else {\n                blurDirection.current *= 1.6;\n                blurDirection.current = Math.max(-.15, blurDirection.current);\n            }\n        };\n    };\n        \n    const fastForward = useCallback(() => {\n        let rate = ref.current.playbackRate;\n        let nextTime = Math.min(DURATION, ref.current.currentTime + 10/rate);\n        let percent = 100*nextTime / DURATION;\n\n        playerRef.current.contentWindow.postMessage({\n            type: \"jacker-seek\",\n            body: percent\n        }, \"*\");\n        playerRef.current.currentTime = nextTime;\n    }, []);\n\n    const rewind = useCallback(() => {\n        let rate = ref.current.playbackRate;\n        let nextTime = Math.max(0, ref.current.currentTime - 10/rate);\n        let percent = 100*nextTime / DURATION;\n\n        playerRef.current.contentWindow.postMessage({\n            type: \"jacker-seek\",\n            body: percent\n        }, \"*\");\n        playerRef.current.currentTime = nextTime;\n    }, []);\n\n    const onMessage = useCallback((e) => {\n        if (parseMessage(e.data, uniforms)) {\n            // we already consumed them into uniforms\n            return;\n        }\n\n        if (e.data.type === \"jacker-playback-status\") {\n            setStarted(true);\n            let playing = parseInt(e.data.body);\n            if (playing) {\n                ref.current.play();\n            } else {\n                ref.current.pause();\n            }\n            setIsPlaying(playing);\n        }\n        if (e.data.type === \"song-player-progress\") {\n            uniforms.current.ticks.value++;\n\n            let progress = parseFloat(e.data.body);\n            let x = progress/100\n            let sec = DURATION * x;\n            let drift = sec - ref.current.currentTime;\n            \n            let isDrifting = (Math.abs(drift) > MAX_ACCEPTABLE_DRIFT) && !isCoolingDown();\n            let remainingCondition = sec <= lastTime.current || sec >= lastTime.current+1.0;\n            let tickTime = ref.current.currentTime - lastVideoTime.current;\n            if (tickTime < 0.1) \n                /*\n                console.warn(\"drift=%s tickTime=%s\", drift, tickTime);\n            } else {\n                console.log(\"drift=%s tickTime=%s\", drift, tickTime);\n            }\n            */\n            lastVideoTime.current = ref.current.currentTime;\n            if (Math.abs(drift) > 0.5) {\n                isDrifting = true;\n            }\n            if (isDrifting) {\n                startCoolDown();\n            }\n            if (isDrifting || sec <= lastTime.current || sec >= lastTime.current+1.0) {\n                let _drift = drift*1000;\n                if (ref.current.fastSeek &&\n                    uniforms.current.isRolling.value && uniforms.current.rollRate.value === 32) {\n                    // we want to use fast seek when 1/32th rolling\n                    ref.current.fastSeek(sec);\n                } else {\n                    ref.current.currentTime = sec;\n                }\n                nextTick.current = false;\n            }\n            lastTime.current = sec;\n            if (gateTimer.current !== undefined) {\n                gateTimer.current++;\n                if (gateTimer.current > 1) {\n                    gateTimer.current = undefined;\n                }\n            }\n\n        }\n        if (e.data.type === \"song-bpm\") {\n            let bpm = e.data.body;\n            baseBPM.current = parseFloat(bpm);\n            \n        }\n\n        if (e.data.type === \"playback-bpm\") {\n            let bpm = e.data.body;\n            if (baseBPM.current) {\n                if (uniforms.current.blurring.value == 0) {\n                    uniforms.current.blurring.value = 0.1; //(uniforms.current.blurring.value + 0.2)/2;\n                    blurDirection.current = 0.1;\n                }\n                blurDirection.current *= 0.92;\n                let playbackRate = bpm / baseBPM.current;\n                let time = ref.current.currentTime;\n                uniforms.current.playRate.value = playbackRate;\n                ref.current.playbackRate = playbackRate;\n                if (!isCoolingDown()) {\n                    startCoolDown();\n                }\n            }\n        }\n    }, [setIsPlaying, setStarted]);\n\n    return {uniforms, isPlaying, started, rewind, fastForward};\n};\n","\n\n// 0-1 values of each \"effect\" slider\nimport {TYPE_TO_NAME} from './message-constants.js';\n        \nexport const parseMessage = (e, uniforms) => {\n    let name = TYPE_TO_NAME[e.type];\n    if (name && uniforms.current[name]) {\n        uniforms.current[name].value = parseFloat(e.body);\n        return true;\n    }\n    return false;\n};\n","export const sleep = (time) => {\n    return new Promise((resolve, reject) => {\n        setTimeout(resolve, time);\n    });\n}\n","import React, { useEffect, useCallback, useState} from 'react';\nimport PlayButton from '../buttons/PlayButton.js';\nimport {connect} from 'react-redux';\n\nconst SimpleControls = ({playerRef}) => { \n    let [playing, setPlaying] = useState(false);\n    let [started, setStarted] = useState(false);\n    useEffect(() => {\n        window.addEventListener(\"message\", onMessage);\n    }, [setPlaying, setStarted]);\n\n    const play = useCallback(() => {\n        console.log('sending toggle play');\n        playerRef.current.contentWindow.postMessage({\n            type: \"toggle-play\",\n            body: true\n        }, \"*\");\n    }, []);\n\n    const onMessage = useCallback((e) => {\n        if (e.data.type === \"jacker-status\") {\n            let playing = parseInt(e.data.body);\n            setPlaying(playing);\n            setStarted(true);\n        }\n    }, [setPlaying, setStarted]);\n    if (!started) {\n        return;\n    }\n    return (<div className=\"simple-controls\">\n              <PlayButton play={play} isPlaying={playing}/>\n            </div>\n           );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SimpleControls);\n","import React, { memo, useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\n\nwindow.RATIO = .3;\nconst HEIGHT = 50;\nconst SongWaveform = memo(({progress, waveform, isWaveformRainbow=true, width=330}) => { \n\n    if (!waveform) {\n        return '';\n    }\n\n    let parts = [];\n    for (let i=0; i < waveform.length - 4; i+=4) {\n        let height = Math.pow(waveform[i], window.RATIO)*(4/window.RATIO);\n        let p = {\n            height,\n            y: HEIGHT/2 - height/2,\n            r: waveform[i+1],\n            g: waveform[i+2],\n            b: waveform[i+3]\n        };\n        parts.push(p);\n    }\n    progress /= 100;\n    return (\n        <svg\n          width={width}\n          height={HEIGHT}\n          className={!isWaveformRainbow ? \"song-waveform  monochrome\" : \"song-waveform\"}>\n          {parts.map((part, i) =>\n              <rect\n                className={progress >= i / parts.length ? \"elapsed\" : \"\"}\n                x={i*(width/parts.length)}\n                y={part.y}\n                width={2}\n                height={part.height}\n                fill={!isWaveformRainbow ? 'white' : `rgb(${part.r}, ${part.g}, ${part.b})`}/>)}\n        </svg>\n    );\n});\n\nexport default SongWaveform;\n","import React, {useCallback, useEffect} from 'react';\n\n\nexport const useSporesMessageHandler = (type, callback) => {\n    useEffect(() => {\n        window.addEventListener(\"message\", onMessage, false);\n        return () => window.removeEventListener(\"message\", onMessage, false);\n    }, [type]);\n\n    const onMessage = useCallback((e) => {\n        if (e.data.type === type) {\n            callback(e.data.body);\n        }\n    }, [type]);\n};\n","class EthereumEventLog {\n    // for example, SampleTagged(bytes32,bytes32) would be the event\n    // and the arguments would be EthereumTopic(\"ipfsHash\", IPFS_HASH),\n    // EthereumTopic(\"tag\", BYTES_32)\n    constructor(event, topics, ...data) {\n        this.event = event;\n        this.topics = topics;\n        this.data = data;\n    }\n}\n\nexport default EthereumEventLog;\n","class EthereumTopic {\n    constructor(name, type, size=1) {\n        this.name = name;\n        this.type = type;\n        this.size = size*64;\n    }\n\n    convertTo(x) {\n        if (x === undefined || x === null) {\n            return undefined;\n        }\n        return this.type.convertTo(x);\n    }\n   \n    convertFrom(x) {\n        if (x === undefined || x === null) {\n            return undefined;\n        }\n        return this.type.convertFrom(x);\n    }\n}\n\nexport default EthereumTopic;\n","import {IPFS_HASH} from 'decentralized/EthereumDataTypes.js';\nimport {INT_8} from 'decentralized/EthereumDataTypes.js';\nimport {INT_16} from 'decentralized/EthereumDataTypes.js';\nimport {INT_32} from 'decentralized/EthereumDataTypes.js';\nimport {UINT_256} from 'decentralized/EthereumDataTypes.js';\nimport {RIGHT_PADDED_BYTES_32} from 'decentralized/EthereumDataTypes.js';\nimport {BYTES_32, BYTES_32_LEFT} from 'decentralized/EthereumDataTypes.js';\nimport {BYTES_32_ENCRYPTED} from 'decentralized/EthereumDataTypes.js';\nimport {BYTES_32_ARRAY} from 'decentralized/EthereumDataTypes.js';\nimport {NOTE_BYTES_32} from 'decentralized/EthereumDataTypes.js';\nimport {NOTES_BYTES_32} from 'decentralized/EthereumDataTypes.js';\nimport {ADDRESS} from 'decentralized/EthereumDataTypes.js';\nimport {STRING} from 'decentralized/EthereumDataTypes.js';\n\nimport EthereumEventLog from 'decentralized/EthereumEventLog.js';\nimport EthereumTopic from 'decentralized/EthereumTopic.js';\n\nexport const SampleTagged = new EthereumEventLog(\n    'SampleTagged(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('tag', BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\n export const SampleStyle = new EthereumEventLog(\n    'SampleStyle(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('style', BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n                                                 \n export const SampleYear = new EthereumEventLog(\n    'SampleYear(bytes32,int16,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('year', INT_16),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SampleCountry = new EthereumEventLog(\n    'SampleCountry(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('country', BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SampleYoutube = new EthereumEventLog(\n    'SampledYoutube(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('videoId', RIGHT_PADDED_BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n \nexport const SequenceCreated = new EthereumEventLog(\n    'SequenceCreated(address,bytes32,string)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('ipfsHash', IPFS_HASH)],\n    new EthereumTopic('title', STRING));\n\nexport const SampleCreated = new EthereumEventLog(\n    'SampleCreated(address,bytes32,string,uint32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('guildId', INT_32)\n    ],\n    new EthereumTopic('title', STRING),\n);\n\nexport const NewNoteSequence = new EthereumEventLog(\n    'NewNoteSequence(bytes32,bytes32)',\n    [new EthereumTopic('sampleHash', IPFS_HASH),\n     new EthereumTopic('noteSequenceHash', IPFS_HASH)]);\n\nexport const NewDiscogsSample = new EthereumEventLog(\n    'NewDiscogsSample(bytes32,uint256,bytes32,uint32)',\n    [new EthereumTopic('sampleHash', IPFS_HASH),\n     new EthereumTopic('coverArtHash', IPFS_HASH),\n     new EthereumTopic('guildId', INT_32)\n    ],\n     new EthereumTopic('discogsId', UINT_256),\n);\n\nexport const NewNoteSequenceAggregation = new EthereumEventLog(\n    'NewNotesAggregation(bytes32,bytes32,bytes32,uint32,uint32,bytes32)',\n    [new EthereumTopic('sampleHash', IPFS_HASH),\n     new EthereumTopic('noteA', NOTE_BYTES_32),\n     new EthereumTopic('noteB', NOTE_BYTES_32)],\n    new EthereumTopic('startTime', INT_32),\n    new EthereumTopic('endTime', INT_32),\n    new EthereumTopic('remainingNotes', NOTES_BYTES_32));\n\nexport const SampleFavorited = new EthereumEventLog(\n    'SampleFavorited(address,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('sampleHash', IPFS_HASH)]);\n\nexport const SampleUnfavorited = new EthereumEventLog(\n    'SampleUnfavorited(address,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('sampleHash', IPFS_HASH)]);\n\nexport const SequenceEdited = new EthereumEventLog(\n    'SequenceEdited(address,bytes32,bytes32,bytes32,string)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('previousSequence', IPFS_HASH),\n     new EthereumTopic('newSequence', IPFS_HASH)],\n    new EthereumTopic('diff', IPFS_HASH),\n    new EthereumTopic('title', STRING),\n    );\n\nexport const TokenizedSequenceEdited = new EthereumEventLog(\n    'SequenceEdited(address,bytes32,bytes32,string,uint32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('previousSequence', IPFS_HASH),\n     new EthereumTopic('newSequence', IPFS_HASH)],\n    new EthereumTopic('title', STRING),\n    new EthereumTopic('bpm', INT_32),\n    );\n\n\nexport const PresetTag = new EthereumEventLog(\n    'PresetTagged(address,bytes32,bytes32,uint32)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n     new EthereumTopic('tag', BYTES_32),\n     new EthereumTopic('guildId', INT_32),\n    ],\n    new EthereumTopic('user', ADDRESS),\n);\n\nexport const NewGuild = new EthereumEventLog(\n    'NewGuild(address,uint32,string)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)],\n    new EthereumTopic('name', STRING),\n);\n\n//event NewGuildMemberRequest(address indexed, address indexed, uint256 indexed);\nexport const NewGuildMemberRequest = new EthereumEventLog(\n    'NewGuildMemberRequest(address,address,uint32)',\n    [new EthereumTopic('requester', ADDRESS),\n     new EthereumTopic('newMember', ADDRESS),\n     new EthereumTopic('guildId', INT_32)]);\n\n// event NewGuildMemberRequestAccepted(address indexed, uint256 indexed);\nexport const NewGuildMemberRequestAccepted = new EthereumEventLog(\n    'NewGuildMemberRequestAccepted(address,uint32)',\n    [new EthereumTopic('newMember', ADDRESS),\n     new EthereumTopic('guildId', INT_32)]);\n\n// event NewGuildMemberRequestRejected(address indexed, uint256 indexed);\nexport const NewGuildMemberRequestRejected = new EthereumEventLog(\n    'NewGuildMemberRequestRejected(address,uint32)',\n    [new EthereumTopic('newMember', ADDRESS),\n     new EthereumTopic('guildId', INT_32)]);\n\n// event NewGuildMemberRequestRejected(address indexed, uint256 indexed);\nexport const GuildKeyEncrypted = new EthereumEventLog(\n    'GuildKeyEncrypted(address,uint32,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32),\n     new EthereumTopic('ipfsHash',IPFS_HASH)]);\n\nexport const NewEncryptedContent = new EthereumEventLog(\n    'NewEncryptedContent(address,bytes32,bytes32,int8,bytes32,bytes32[9],bytes32[6])',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('newContent', IPFS_HASH),\n     new EthereumTopic('contentType', INT_8),\n    ],\n     new EthereumTopic('previousContent', IPFS_HASH),\n    new EthereumTopic('encryptedName', BYTES_32_ENCRYPTED),\n    new EthereumTopic('encryptedContentKey', BYTES_32_ARRAY(9), 9),\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\nexport const EncryptedContentShared = new EthereumEventLog(\n    'EncryptedContentShared(address,address,bytes32,bytes32[9],bytes32[6])',\n    [new EthereumTopic('sharedWith', ADDRESS),\n     new EthereumTopic('creator', ADDRESS),\n     new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('encryptedContentKey', BYTES_32_ARRAY(9), 9),\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\n\nexport const NewPublicKey = new EthereumEventLog(\n    'NewPublicKey(address,bytes32[6])',\n    [new EthereumTopic('user', ADDRESS),\n    ],\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\nexport const NewPreset2 = new EthereumEventLog(\n    'NewPreset(address,bytes32,uint32,bytes32,bytes32[9],bytes32[6])',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('contentHash', IPFS_HASH),\n     new EthereumTopic('guildId', INT_32)\n    ],\n    new EthereumTopic('encryptedName', BYTES_32_ENCRYPTED),\n    new EthereumTopic('encryptedContentKey', BYTES_32_ARRAY(9), 9),\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\nexport const PresetSample = new EthereumEventLog(\n    'PresetSample(bytes32,bytes32,uint32)',\n    [\n        new EthereumTopic('contentHash', IPFS_HASH),\n        new EthereumTopic('sampleHash', IPFS_HASH),\n        new EthereumTopic('guildId', INT_32)\n    ],\n    );\n\nexport const PresetInstrumentType = new EthereumEventLog(\n    'PresetInstrumentType(bytes32,bytes32,uint32)',\n    [\n        new EthereumTopic('contentHash', IPFS_HASH),\n        new EthereumTopic('instrumentType', BYTES_32_LEFT),\n        new EthereumTopic('guildId', INT_32)\n    ],\n    );\n\nexport const NewMonthlyIndex = new EthereumEventLog(\n    'NewMonthlyIndex(bytes32,uint32,uint64)',\n    [\n     new EthereumTopic('month', UINT_256),\n     new EthereumTopic('year', UINT_256)\n    ],\n     new EthereumTopic('hash', IPFS_HASH)\n    );\n\nexport const New2DMapping = new EthereumEventLog(\n    'New2DMapping(bytes32)',\n    [\n     new EthereumTopic('ipfsHash', IPFS_HASH)\n    ],\n\n    );\n\nexport const PublicMessageSent = new EthereumEventLog(\n    'PublicMessageSent(address,address,bytes32,bytes32)',\n    [\n        new EthereumTopic('fromUser', ADDRESS),\n        new EthereumTopic('toUser', ADDRESS),\n        new EthereumTopic('referenceHash', IPFS_HASH),\n    ],\n    new EthereumTopic('messageHash', IPFS_HASH),\n    );\n\nexport const SampleCopyStrike = new EthereumEventLog(\n    'SampleCopyStrike(address,bytes32,bytes32)',\n    [\n        new EthereumTopic('user', ADDRESS),\n        new EthereumTopic('sampleHash', IPFS_HASH),\n        new EthereumTopic('referenceHash', IPFS_HASH),\n    ]\n    );\n\nexport const SampleTakenDown = new EthereumEventLog(\n    'SampleTakenDown(bytes32)',\n    [\n        new EthereumTopic('sampleHash', IPFS_HASH),\n    ]\n    );\n\nexport const FoldersUpdated = new EthereumEventLog(\n    'FoldersUpdated(address,bytes32)',\n    [\n        new EthereumTopic('user', ADDRESS),\n        new EthereumTopic('foldersHash', IPFS_HASH),\n    ]\n    );\n\nexport const NewIndex = new EthereumEventLog(\n    'NewIndex(uint32,bytes32)',\n    [\n        new EthereumTopic('guildId', INT_32),\n    ],\n    new EthereumTopic('indexHash', IPFS_HASH),\n    );\n\nexport const NewGuildSequence = new EthereumEventLog(\n    'NewGuildSequence(address,bytes32,uint32,bytes32,bytes32,bytes32[9],bytes32[6])',\n    [\n        new EthereumTopic('user', ADDRESS),\n        new EthereumTopic('contentHash', IPFS_HASH),\n        new EthereumTopic('guildId', INT_32),\n    ],\n    new EthereumTopic('previousHash', IPFS_HASH),\n    new EthereumTopic('encryptedName', BYTES_32_ENCRYPTED),\n    new EthereumTopic('encryptedContentKey', BYTES_32_ARRAY(9), 9),\n    new EthereumTopic('publicKey', BYTES_32_ARRAY(6), 6),\n    );\n\nexport const NewGuildClassification = new EthereumEventLog(\n    'NewGuildClassification(uint32,bytes32)',\n    [\n        new EthereumTopic('guildId', INT_32),\n        new EthereumTopic('contentHash', IPFS_HASH),\n    ]);;\n\n export const Transfer = new EthereumEventLog(\n    'Transfer(address,address,uint256)',\n    [\n        new EthereumTopic('fromUser', ADDRESS),\n        new EthereumTopic('toUser', ADDRESS),\n    ],\n     new EthereumTopic('amount', INT_32 ),\n );;\n\nexport const SequenceTagged= new EthereumEventLog(\n    'SequenceTagged(bytes32,bytes32,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('tag', BYTES_32),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SequenceFavorited = new EthereumEventLog(\n    'SequenceFavorited(bytes32,address,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SequenceStarred = new EthereumEventLog(\n    'SequenceStarred(bytes32,address,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\nexport const SequenceUnfavorited = new EthereumEventLog(\n    'SequenceUnfavorited(bytes32,address,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\n\nexport const SequenceUnstarred = new EthereumEventLog(\n    'SequenceUnstarred(bytes32,address,uint32)',\n    [new EthereumTopic('ipfsHash', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('guildId', INT_32)\n    ]);\n\n\nexport const NewDataType = new EthereumEventLog(\n    'NewDataType(bytes32,string)',\n    [new EthereumTopic('dataType', BYTES_32),\n    ],\n    new EthereumTopic('description', STRING));\n\nexport const NewLinkType = new EthereumEventLog(\n    'NewLinkType(bytes32,string)',\n    [new EthereumTopic('linkType', BYTES_32),\n    ],\n    new EthereumTopic('description', STRING));\n\nexport const NewAnnotationType = new EthereumEventLog(\n    'NewAnnotationType(bytes32,string)',\n    [new EthereumTopic('annotationType', BYTES_32),\n    ],\n    new EthereumTopic('description', STRING));\n\nexport const NewAnnotation = new EthereumEventLog(\n    'NewAnnotation(bytes32,bytes32,bytes32,address)',\n    [\n        new EthereumTopic('annotationType', BYTES_32),\n        new EthereumTopic('data', IPFS_HASH),\n        new EthereumTopic('address', ADDRESS),\n    ],\n    new EthereumTopic('annotationData', BYTES_32),\n);\n\nexport const NewLink = new EthereumEventLog(\n    'NewLink(bytes32,bytes32,bytes32,address)',\n    [new EthereumTopic('linkType', BYTES_32),\n     new EthereumTopic('fromData', IPFS_HASH),\n     new EthereumTopic('toData', IPFS_HASH),\n    ],\n     new EthereumTopic('address', ADDRESS),\n    );\n\nexport const NewMix= new EthereumEventLog(\n    'NewMix(address,bytes32,bytes32,string,uint32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('mixHash', IPFS_HASH),\n     new EthereumTopic('previousHash', IPFS_HASH),\n    ],\n     new EthereumTopic('title', STRING),\n     new EthereumTopic('guildId', INT_32),\n    );\n\nexport const NewEffect = new EthereumEventLog(\n    'NewEffect(address,bytes32,bytes32,string,uint32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('effectHash', IPFS_HASH),\n     new EthereumTopic('effectType', BYTES_32),\n    ],\n     new EthereumTopic('title', STRING),\n     new EthereumTopic('guildId', INT_32),\n    );\n\nexport const ReleaseInfo = new EthereumEventLog(\n    'ReleaseInfo(bytes32,uint32,string,bytes32,bytes32)',\n    [new EthereumTopic('artistName', BYTES_32),\n     new EthereumTopic('releaseId', INT_32),\n    ],\n     new EthereumTopic('releaseName', STRING),\n     new EthereumTopic('coverArtHash', IPFS_HASH),\n     new EthereumTopic('releaseType', BYTES_32),\n    );\n\nexport const SampleByArtist = new EthereumEventLog(\n    'SampleByArtist(bytes32,bytes32)',\n    [new EthereumTopic('artistName', BYTES_32),\n     new EthereumTopic('ipfsHash', IPFS_HASH),\n     ]\n    );\n\nexport const ArtistInfo = new EthereumEventLog(\n    'ArtistInfo(bytes32,bytes32,string)',\n    [new EthereumTopic('artistName', BYTES_32),\n     new EthereumTopic('linkType', BYTES_32),\n    ],\n     new EthereumTopic('link', STRING),\n    );\n\nexport const MidiCCParameter = new EthereumEventLog(\n    'MidiCCParameter(bytes32,uint32,bytes32,address)',\n    [new EthereumTopic('deviceName', BYTES_32),\n     new EthereumTopic('ccNumber', INT_32),\n     new EthereumTopic('parameterName', BYTES_32),\n    ],\n     new EthereumTopic('user', ADDRESS),\n    );\n\nexport const SampleInSequence = new EthereumEventLog(\n    'SampleInSequence(bytes32,bytes32)',\n    [new EthereumTopic('sequenceHash', IPFS_HASH),\n     new EthereumTopic('sampleHash', IPFS_HASH)\n    ]\n    );\n\nexport const ListEdited = new EthereumEventLog(\n    'ListEdited(bytes32,bytes32,address,bytes32,uint32)',\n    [new EthereumTopic('newContent', IPFS_HASH),\n     new EthereumTopic('previousContent', IPFS_HASH),\n     new EthereumTopic('user', ADDRESS),\n    ],\n    new EthereumTopic('title', BYTES_32),\n    new EthereumTopic('guildId', INT_32),\n    );\n\nexport const ListHighlighted = new EthereumEventLog(\n    'ListHighlighted(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('user', ADDRESS)\n    );\n\nexport const ListUnhighlighted = new EthereumEventLog(\n    'ListUnhighlighted(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('user', ADDRESS)\n    );\n\nexport const ListFavorited = new EthereumEventLog(\n    'ListFavorited(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('user', ADDRESS)\n    );\n\nexport const ListUnfavorited = new EthereumEventLog(\n    'ListUnfavorited(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n    new EthereumTopic('user', ADDRESS)\n    );\n\nexport const ListDeleted = new EthereumEventLog(\n    'ListDeleted(bytes32,address)',\n    [new EthereumTopic('contentHash', IPFS_HASH),\n    new EthereumTopic('user', ADDRESS)\n    ],\n    );\n\nexport const NewWallpaper = new EthereumEventLog(\n    'NewWallpaper(address,bytes32,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('wallpaperHash', IPFS_HASH),\n     new EthereumTopic('thumbnailHash', IPFS_HASH)\n    ]);\n\nexport const DefaultWallpaper = new EthereumEventLog(\n    'DefaultWallpaper(address,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('wallpaperHash', IPFS_HASH)\n    ]);\n\nexport const NewPack = new EthereumEventLog(\n    'NewPack(address,bytes32,bytes32,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('packHash', IPFS_HASH),\n     new EthereumTopic('previousHash', IPFS_HASH)\n    ],\n     new EthereumTopic('title', BYTES_32)\n);\n\nexport const PackHasContent = new EthereumEventLog(\n    'PackHasContent(bytes32,bytes32)',\n    [new EthereumTopic('packHash', IPFS_HASH),\n     new EthereumTopic('contentHash', IPFS_HASH),\n    ],\n);\n\nexport const UserLeftGuild = new EthereumEventLog(\n    'UserLeftGuild(uint256,address)',[\n     new EthereumTopic('guildId', INT_32),\n    ],\n    new EthereumTopic('user', ADDRESS),\n);\n\nexport const NewScript = new EthereumEventLog(\n    'NewScript(address,bytes32,bytes32,bytes32)',\n    [new EthereumTopic('user', ADDRESS),\n     new EthereumTopic('scriptHash', IPFS_HASH),\n     new EthereumTopic('scriptType', BYTES_32)\n    ],\n     new EthereumTopic('title', BYTES_32)\n);\n\nexport const NewCreatorProject = new EthereumEventLog(\n    'NewCreatorProject(address,uint256,bytes32,uint256,string)',\n    [\n        new EthereumTopic('creator', ADDRESS),\n        new EthereumTopic('projectId', UINT_256),\n        new EthereumTopic('contentHash', IPFS_HASH)\n    ],\n    new EthereumTopic('maxInvocations', UINT_256),\n    new EthereumTopic('title', STRING)\n);\n\nexport const NewTokenSeed = new EthereumEventLog(\n    'NewTokenSeed(uint256,uint256,bytes32)',\n    [\n        new EthereumTopic('projectId', UINT_256),\n        new EthereumTopic('tokenId', UINT_256)\n    ],\n    new EthereumTopic('seedHash', BYTES_32)\n);\n\nexport const ZoraProject = new EthereumEventLog(\n    'ZoraProject(bytes32,uint256)',\n    [\n        new EthereumTopic('projectHash', IPFS_HASH),\n        new EthereumTopic('zoraId', UINT_256)\n    ]);\n\nexport const AccountAuthorized = new EthereumEventLog(\n    'AccountAuthorized(address,address,string,uint8,bytes32,bytes32)',\n    [\n        new EthereumTopic('zequencerAddress', ADDRESS),\n        new EthereumTopic('walletAddress', ADDRESS),\n    ],\n    new EthereumTopic('message', STRING),\n    new EthereumTopic('v', INT_8),\n    new EthereumTopic('r', BYTES_32_ENCRYPTED),\n    new EthereumTopic('s', BYTES_32_ENCRYPTED)\n);\n\nexport const PluginCreated = new EthereumEventLog(\n    'PluginCreated(uint256,address,string)',\n    [\n        new EthereumTopic(\"tokenId\", UINT_256),\n        new EthereumTopic(\"creator\", ADDRESS),\n    ],\n    new EthereumTopic(\"name\", STRING)\n);\n\nexport const NewPluginVersion = new EthereumEventLog(\n    'NewPluginVersion(uint256,uint256,bytes32,string)',\n    [\n        new EthereumTopic(\"tokenId\", UINT_256),\n        new EthereumTopic(\"versionNumber\", UINT_256),\n    ],\n    new EthereumTopic(\"pluginContentHash\", IPFS_HASH),\n    new EthereumTopic(\"pluginMetadataURI\", STRING)\n);\n\nexport const ProjectHasArrangement = new EthereumEventLog(\n    'ProjectHasArrangement(bytes32)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n);\n\nexport const ProjectBPM = new EthereumEventLog(\n    'ProjectBPM(bytes32,int16)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n    new EthereumTopic(\"bpm\", UINT_256),\n);\n\nexport const ProjectVisuals = new EthereumEventLog(\n    'ProjectVisuals(bytes32,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n    new EthereumTopic(\"thumbnailhash\", IPFS_HASH),\n);\n\nexport const ProjectUsesPreset = new EthereumEventLog(\n    'ProjectUsesPreset(bytes32,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n    new EthereumTopic(\"presetHash\", IPFS_HASH),\n);\n\nexport const ProjectPatternsCount = new EthereumEventLog(\n    'ProjectPatternsCount(bytes32,int8)',\n    [\n    ],\n    new EthereumTopic(\"projectHash\", IPFS_HASH),\n    new EthereumTopic(\"patterns\", UINT_256),\n);\n\nexport const NewSporeCreated = new EthereumEventLog(\n    'NewSporeCreated(uint256,uint256,address,address,bytes32,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"sporeId\", UINT_256),\n    new EthereumTopic(\"tokenId\", UINT_256),\n    new EthereumTopic(\"proxy\", ADDRESS),\n    new EthereumTopic(\"creator\", ADDRESS),\n    new EthereumTopic(\"sporeHash\", IPFS_HASH),\n    new EthereumTopic(\"dataHash\", IPFS_HASH),\n);\n\nexport const NewChainCreated = new EthereumEventLog(\n    'NewChainCreated(uint256,bytes32,address,address,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"chainId\", UINT_256),\n    new EthereumTopic(\"name\", BYTES_32),\n    new EthereumTopic(\"proxy\", ADDRESS),\n    new EthereumTopic(\"creator\", ADDRESS),\n    new EthereumTopic(\"chainHash\", IPFS_HASH),\n);\n\nexport const NewOfficialSporeCreated = new EthereumEventLog(\n    'NewOfficialSporeCreated(uint256,uint256,address,bytes32,bytes32,string)',\n    [\n    ],\n    new EthereumTopic(\"spTokenId\", UINT_256),\n    new EthereumTopic(\"sporeId\", UINT_256),\n    new EthereumTopic(\"creator\", ADDRESS),\n    new EthereumTopic(\"sporeHash\", IPFS_HASH),\n    new EthereumTopic(\"dataHash\", IPFS_HASH),\n    new EthereumTopic(\"songName\", STRING),\n);\n\nexport const NewUnofficialSporeCreated = new EthereumEventLog(\n    'NewUnofficialSporeCreated(uint256,uint256,address,bytes32,bytes32,address,uint256)',\n    [\n    ],\n    new EthereumTopic(\"spTokenId\", UINT_256),\n    new EthereumTopic(\"sporeId\", UINT_256),\n    new EthereumTopic(\"creator\", ADDRESS),\n    new EthereumTopic(\"sporeHash\", IPFS_HASH),\n    new EthereumTopic(\"dataHash\", IPFS_HASH),\n    new EthereumTopic(\"collectionAddress\", ADDRESS),\n    new EthereumTopic(\"tokenId\", UINT_256),\n);\n\nexport const NewSporesPlaylist = new EthereumEventLog(\n    'NewSporesPlaylist(uint256,address,string)',\n    [\n    ],\n    new EthereumTopic(\"playlistId\", UINT_256),\n    new EthereumTopic(\"creator\", ADDRESS),\n    new EthereumTopic(\"metadataCID\", STRING),\n);\n\nexport const SporesPlaylistSong = new EthereumEventLog(\n    'SporesPlaylistSong(uint256,address,uint256)',\n    [\n    ],\n    new EthereumTopic(\"playlistId\", UINT_256),\n    new EthereumTopic(\"collecttionAddress\", ADDRESS),\n    new EthereumTopic(\"tokenId\", UINT_256),\n);\n\nexport const PlaylistBurned = new EthereumEventLog(\n    'PlaylistBurned(uint256)',\n    [\n    ],\n    new EthereumTopic(\"playlistId\", UINT_256)\n);\n\nexport const SongGenre = new EthereumEventLog(\n    'SongGenre(address,uint256,string,address,string)',\n    [\n    ],\n    new EthereumTopic(\"collectionAddress\", ADDRESS),\n    new EthereumTopic(\"tokenId\", UINT_256),\n    new EthereumTopic(\"genre\", STRING),\n    new EthereumTopic(\"user\", ADDRESS),\n    new EthereumTopic(\"metadataCID\", STRING)\n);\n\nexport const NewSkin = new EthereumEventLog(\n    'NewSkin(uint256,bytes32)',\n    [\n    ],\n    new EthereumTopic(\"skinId\", UINT_256),\n    new EthereumTopic(\"imageHash\", IPFS_HASH),\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import {SampleTagged} from 'decentralized/EthereumEvents.js';\nimport {web3, web3WSS} from './web3.js';\nimport {SampleYoutube} from 'decentralized/EthereumEvents.js';\nimport {STRING} from 'decentralized/EthereumDataTypes.js';\nconst metamaskInstalled = typeof window.web3 !== 'undefined';\n\nclass EthereumQuery {\n    constructor(address) {\n        this.address = address;\n        this.distinct = false;\n        this.selectStatements = [];\n        this.whereClauses = [];\n        this.groupBy = [];\n        this.joinClauses = [];\n        this.limitSize = undefined;\n        this.fromBlockNumber = '0x2';\n        this.toBlockNumber = undefined;\n    }\n\n    from(eventLog) {\n        this.eventLog = eventLog;\n        return this;\n    }\n\n    select(arg) {\n        this.selectStatements.push(arg);\n        return this;\n    }\n\n    // only selects distinct items in the select clause\n    distinct() {\n        this.distinct = true;\n        return this;\n    }\n\n    groupBy(col) {\n        this.groupBy.push(col);\n        return this;\n    }\n\n    where(name, value) {\n        this.whereClauses.push(new WhereClause(name, value));\n        return this;\n    }\n\n    whereIn(name, valueList) {\n        this.whereClauses.push(new WhereClause(name, undefined, valueList));\n        return this;\n    }\n\n    join(event, field) {\n        this.joinClauses.push(new JoinClause(event, field));\n    }\n\n    fromBlock(fromBlock) {\n        this.fromBlockNumber = web3.utils.toHex(fromBlock);\n        return this;\n    }\n\n    toBlock(toBlock) {\n        this.toBlockNumber = web3.utils.toHex(toBlock);\n        return this;\n    }\n\n    limit(limit) {\n        this.limitSize = limit;\n        return this;\n    }\n\n    getTopics() {\n        let topics = [web3.utils.sha3(this.eventLog.event)];\n\n        for (let i in this.eventLog.topics) {\n            let arg = this.eventLog.topics[parseInt(i)];\n            let toAdd = null;\n            for (let j in this.whereClauses) {\n                let whereClause = this.whereClauses[parseInt(j)];\n                if (whereClause.name === arg.name) {\n                    let value = whereClause.value !== undefined ?\n                        whereClause.value : whereClause.valueList[0];\n                    toAdd = arg.convertTo(value);\n                    // console.log(\"where %s = %s / %s\", whereClause.name, value, toAdd);\n                }\n              }\n            topics.push(toAdd);\n        }\n        return topics;\n    }\n\n    executeQuery() {\n        return new Promise((resolve, reject) => {\n            web3.eth.getPastLogs({\n                address: this.address,\n                topics: this.getTopics(),\n                toBlock: this.toBlockNumber,\n                fromBlock: this.fromBlockNumber}, (err, results) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        let parsedResults = [];\n                        results.reverse();\n                        let limit = Math.min(results.length, this.limitSize || results.length);\n                        for (let i=0; i < limit; i++) {\n                            parsedResults.push(this.parseResult(results[i]));\n                        }\n                        resolve(parsedResults);\n                    }\n                });\n        });\n    }\n\n    async watchQuery(callback) {\n        let blockNumber = await web3.eth.getBlockNumber();\n        let web3ToUse = metamaskInstalled ? web3 : web3WSS;\n        web3ToUse.eth.subscribe(\n            'logs',\n            {\n                address: this.address,\n                topics: this.getTopics(),\n                fromBlock: web3.utils.toHex(blockNumber),\n            },\n            (err, result) => {\n                if (err) {\n                    console.log('error watching ');\n                    console.log(err);\n                }\n                let ret = this.parseResult(result);\n                console.log('watch query got ');\n                console.log(ret);\n                callback(ret);\n            });\n    }\n\n    parseResult(data) {\n        if (data === undefined || data === null) {\n            return undefined;\n        }\n        let resultSet = {};\n\n        for (let j in this.selectStatements) {\n            let select = this.selectStatements[parseInt(j)];\n            for (let i in this.eventLog.topics) {\n                let field = data.topics[1 + parseInt(i)];\n                let arg = this.eventLog.topics[parseInt(i)];\n                if (arg.name === select) {\n                    // convert field\n                    resultSet[select] = arg.type.convertFrom(field);\n                }\n            }\n            \n            let dataIndexSoFar = 0;\n            for (let fieldIndex in this.eventLog.data) {\n                fieldIndex = parseInt(fieldIndex);\n                let fieldData = this.eventLog.data[fieldIndex];\n                \n                if (fieldData !== undefined) {\n                    if (select == fieldData.name) {\n                        // the data field in ethereum event logs is basically a huge hex string\n                        // divided into 64-length pieces, for each data point.\n                        // Also, it starts with 0x, so we must skip the first 2 characters when\n                        // slicing out the desired data\n                        let d = data.data.slice(2 + dataIndexSoFar, 2 + dataIndexSoFar + fieldData.size);\n                        d = '0x' + d;\n                        \n                        if (fieldData.type == STRING ) {\n                            d = '0x' + data.data.slice(130 + 64*fieldIndex);\n                        } \n                        resultSet[select] = fieldData.convertFrom(d);\n                    }\n                }\n                dataIndexSoFar += fieldData.size;\n                \n            }\n        }\n        \n        resultSet.blockNumber = data.blockNumber;\n        return resultSet;\n    }\n\n    getCopy() {\n        let query = new EthereumQuery(this.address);\n        query.eventLog = this.eventLog;\n        query.selectStatements = [... this.selectStatements];\n        query.joinClauses = [... this.joinClauses];\n        query.groupBy = [... this.groupBy];\n        query.fromBlockNumber = this.fromBlockNumber;\n        query.toBlockNumber = this.toBlockNumber;\n        query.limitSize = this.limitSize;\n        return query;\n    }\n\n    getJson() {\n        return {\n            address: this.address,\n            eventLog: this.eventLog.event,\n            selectStatements: [... this.selectStatements],\n            whereClauses: [... this.whereClauses],\n            joinClauses: [... this.joinClauses],\n            groupBy: [... this.groupBy],\n            fromBlockNumber: web3.utils.hexToNumber(this.fromBlockNumber),\n            toBlockNumber: this.toBlockNumber === undefined ? undefined : web3.utils.hexToNumber(this.toBlockNumber),\n            limitSize: this.limitSize,\n            distinct: this.distinct,\n        };\n    }\n}\n\nclass WhereClause {\n    constructor(argName, argValue, valueList=[]) {\n        this.name = argName;\n        this.value = argValue;\n        this.valueList = valueList;\n    }\n}\n\nclass JoinClause {\n    constructor(event, field) {\n        this.event = event;\n        this.field = field;\n    }\n}\n\nexport default EthereumQuery;\n","import EthereumQuery from './EthereumQuery.js';\nimport {SampleCreated} from './EthereumEvents.js';\nimport BackendQueryRunner from './BackendQueryRunner.js';\n\nconst runner = new BackendQueryRunner();\n\nclass BackendQuery extends EthereumQuery {\n    constructor(address) {\n        super(address);\n    }\n\n    /*\n    async executeQuery() {\n        let queries = [];\n        for (let i in this.whereClauses) {\n            let whereClause = this.whereClauses[i];\n            let {valueList} = whereClause;\n            if (valueList.length > 0) {\n                for (let j in valueList) {\n                    let query = this.getCopy();\n                    query.whereClauses = this.whereClauses.filter(\n                        x =>\n                            x.value !== undefined);\n                    query.where(whereClause.name, valueList[j]);\n                    console.log('making of copy = ', this.getJson(), query.getJson());\n                    queries.push(query);\n                }\n            } \n        }\n\n        if (queries.length === 0) {\n            return super.executeQuery();\n        }\n        console.log('queries = ', queries);\n\n        let results  = [];\n        for (let i in queries) {\n            results = [... results, ... await queries[i].executeQuery(true)];;\n        }\n        return results;\n    }\n    */\n\n    executeQuery(useBackend=true) { \n        return new Promise((resolve, reject) => {\n            if (window.isNFT) {\n                // thenn we dont have a query\n                return resolve([]);\n            }\n            runner.submit(this.getJson())\n                .then(resolve);\n        });\n    }\n}\n\nexport default BackendQuery;\n","/**\n * Blocking query\n */\nconst MAX_QUERIES = 4;\nconst SLEEP_TIME = 20;\n\nclass BackendQueryRunner {\n    constructor() {\n        this.runningQueries = new Set();\n    }\n\n    submit(queryJson) {\n        return new Promise(async (resolve, reject) => {\n            while (this.runningQueries.size >= MAX_QUERIES) {\n                await this.sleep(SLEEP_TIME);\n            }\n\n            this.runningQueries.add(queryJson);\n\n            let url = \"/search\";\n            url = \"https://zequencer.io\" + url;\n            if (window.LOCAL_BACKEND_FLAG && window.location.hostname === \"localhost\") {\n                url = \"/search\";\n            }\n            fetch(url , {\n                method: 'POST',\n                body: JSON.stringify(queryJson),\n                \n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                }\n            })\n                .then(resp => resp.json())\n                .then(resp => {\n                    this.removeQuery(queryJson);\n                    resolve(resp || []);\n                })\n                .catch(err => {\n                    console.log(err);\n                    this.removeQuery(queryJson);\n                });\n        });\n    }\n\n    removeQuery(queryJson) {\n        this.runningQueries.delete(queryJson);\n    }\n\n    sleep(time) {\n        return new Promise((resolve, reject) => {\n            setTimeout(resolve, time);\n        });\n    }\n}\n\nexport default BackendQueryRunner;\n","import BackendQuery from 'decentralized/BackendQuery.js';\nimport {ethers} from 'ethers';\nimport {SampleTagged, SampleCreated} from 'decentralized/EthereumEvents.js';\nimport {web3} from 'decentralized/web3.js';\n\nconst GUILD_SAMPLES = \"0xc77d4e72dF7D0Bf96488eF543253af537fEb8737\";\n\nexport const getSampleInfo = async (id) => {\n    let query = new BackendQuery(GUILD_SAMPLES)\n        .from(SampleCreated)\n        .where(\"ipfsHash\", id);\n\n    let unfiltered = await query.executeQuery();\n\n    console.log(\"unfilteeded=\", unfiltered);\n\n    let item = unfiltered[0];\n    let tagsQuery = new BackendQuery(GUILD_SAMPLES)\n        .from(SampleTagged)\n        .where(\"ipfsHash\", id);\n\n    let tagResults = await tagsQuery.executeQuery();\n    console.log(\"TAG RESULTS=\", tagResults);\n    return {\n        ... item,\n        ... tagResults[0]\n    };\n};\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport SongWaveform from 'components/waveform/SongWaveform.js';\nimport {useSporesMessageHandler} from 'components/hooks/useSporesMessageHandler.js';\nimport {getSampleInfo} from 'spores/samples.js';\nimport './sample.scss';\n\nconst SampleInfo = ({playerRef}) => { \n    let [currentSample, setCurrentSample] = useState();\n    let [sampleInfo, setSampleInfo] = useState();\n    let [sampleWaveform, setSampleWaveform] = useState();\n\n    useSporesMessageHandler(\"sample-changed\", setCurrentSample);\n    useSporesMessageHandler(\"sample-waveform\", setSampleWaveform);\n\n    useEffect(() => {\n        if (currentSample) {\n            getSampleInfo(currentSample[0]).then(setSampleInfo);\n        }\n    }, [currentSample]);\n\n    const goToPrevious = useCallback(() => {\n        playerRef.current.contentWindow.postMessage({type: \"previous-shuffle-sample\", body: \"yo\"}, \"*\");\n    }, []);\n\n    const goToNext = useCallback(() => {\n        playerRef.current.contentWindow.postMessage({type: \"next-shuffle-sample\", body: \"yo\"}, \"*\");\n    }, []);\n\n    return (\n        <div className=\"sample-info\">\n          <div className=\"name-and-arrows\">\n            <div className=\"sample-name\">{sampleInfo && sampleInfo.title}</div>\n            <div className=\"arrows\">\n              <div\n                onClick={goToPrevious}\n                className=\"arrow-btn pushable\"/>\n              <div\n                onClick={goToNext}\n                className=\"arrow-btn flip pushable\"/>\n            </div>\n          </div>\n          {sampleWaveform && <SongWaveform width={200} waveform={sampleWaveform}/>}\n        </div>);\n};\n\nexport default SampleInfo;\n","export const CHILL_RX_COLLECTION = '0x48D22d2cADD5FfED166747Ddd26d80fff84417aB';\nexport const CHAOS_COLLECTION = \"0x8427e46826a520b1264b55f31fcb5ddfdc31e349\";\nexport const TWINS_COLLECTION = \"0x47595d0a091686ca15732edadf532dc174fe2893\";\n","import {NEW_SEQUENCE} from 'constants/action-types.js';\nimport {SET_PLAYLIST_LOADED} from 'constants/action-types.js';\nimport {SET_PENDING_SPORES} from 'constants/action-types.js';\nimport {SET_SECONDS_REMAINING} from 'constants/action-types.js';\nimport {SET_USED_CHEAT_CODE} from 'constants/action-types.js';\nimport {SET_SHOW_PLAYLIST_MENU} from 'constants/action-types.js';\nimport {SET_CURRENT_PLAYLIST_SONG} from 'constants/action-types.js';\nimport {SET_DROPPED_SAMPLES} from 'constants/action-types.js';\nimport {SET_OBJECT_DRAGGING} from 'constants/action-types.js';\nimport {SET_RECENTLY_ADDED_SOUNDS} from 'constants/action-types.js';\nimport {SET_SHOW_FORMANT_PRESETS} from 'constants/action-types.js';\nimport {SET_PLANAR} from 'constants/action-types.js';\nimport {SET_PLANAR_GRADIENT_COLOR} from 'constants/action-types.js';\nimport {SET_PLANAR_OPACITY} from 'constants/action-types.js';\nimport {SET_RESOLUTION} from 'constants/action-types.js';\nimport {SET_SEQUENCER_ENGINE} from 'constants/action-types.js';\nimport {SET_VIEW_MODE} from 'constants/action-types.js';\nimport {SET_ALTERNATE_VIEW_MODE} from 'constants/action-types.js';\nimport {SET_DETAILS_VIEW} from 'constants/action-types.js';\nimport {SET_DECENTRALIZED} from 'constants/action-types.js';\nimport {SET_SELECTOR_MODE} from 'constants/action-types.js';\nimport {SET_NUMBER_PATTERNS} from 'constants/action-types.js';\nimport {SET_CURRENT_PATTERN} from 'constants/action-types.js';\nimport {SET_CURRENT_STEP} from 'constants/action-types.js';\nimport {SET_CURRENT_AND_GLOBAL_STEPS} from 'constants/action-types.js';\nimport {SET_CURRENT_GLOBAL_STEP} from 'constants/action-types.js';\n\n// tracks\nimport {NEW_TRACK} from 'constants/action-types.js';\n\n// samples\nimport {SET_SAMPLE} from 'constants/action-types.js';\n\n// animation triggers \nimport {START_TRIGGER_TRACK} from 'constants/action-types.js';\nimport {STOP_TRIGGER_TRACK} from 'constants/action-types.js';\n\n// sample packs\nimport {SET_SAMPLE_PACK} from 'constants/action-types.js';\nimport {ADD_SAMPLE_PACK} from 'constants/action-types.js';\nimport {REMOVE_SAMPLE_PACK} from 'constants/action-types.js';\n\nimport {DRAG_SAMPLE} from 'constants/action-types.js';\nimport {DRAG_EFFECT} from 'constants/action-types.js';\nimport {DRAG_PATTERN} from 'constants/action-types.js';\n\nimport {MOUSE_DOWN} from 'constants/action-types.js';\nimport {DRAG_TOGGLE} from 'constants/action-types.js';\nimport {DRAG_STEP_TRANSPOSE} from 'constants/action-types.js';\nimport {COMMAND_DOWN} from 'constants/action-types.js';\n\nimport {TRACK_RECORDING} from 'constants/action-types.js';\nimport {TRACK_PREPARING_TO_RECORD} from 'constants/action-types.js';\n\nimport {SET_TRACK_STEPS} from 'constants/action-types.js';\nimport {SET_TRACK_FILLS} from 'constants/action-types.js';\nimport {SET_TRACK_PIANO_ROLL_STEPS} from 'constants/action-types.js';\nimport {SET_ALL_TRACK_STEPS} from 'constants/action-types.js';\n\nimport {SET_SELECTED_GROUP} from 'constants/action-types.js';\nimport {SET_SELECTED_TRACK} from 'constants/action-types.js';\nimport {SET_SELECTED_STEP} from 'constants/action-types.js';\nimport {SET_HOVERED_STEP} from 'constants/action-types.js';\n\nimport {SET_STEP_DRAGGING} from 'constants/action-types.js';\nimport {SET_STEP_DATA_DRAGGING} from 'constants/action-types.js';\nimport {SET_STEP_AND_DATA_DRAGGING} from 'constants/action-types.js';\nimport {SET_STEP_TO_COPY} from 'constants/action-types.js';\n\nimport {SET_TRACK_VOLUME} from 'constants/action-types.js';\nimport {SET_TRACK_MUTED} from 'constants/action-types.js';\nimport {SET_TRACK_SOLO} from 'constants/action-types.js';\n\nimport {SET_GROUP_VOLUME} from 'constants/action-types.js';\nimport {SET_GROUP_MUTED} from 'constants/action-types.js';\n\nimport {SET_QUANTIZED} from 'constants/action-types.js';\nimport {SET_IS_RECORDING} from 'constants/action-types.js';\nimport {SET_IS_RECORDING_EXPANDED} from 'constants/action-types.js';\nimport {SET_IS_RECORDING_MIX} from 'constants/action-types.js';\nimport {SET_IS_PLAYING} from 'constants/action-types.js';\nimport {SET_IS_PLAYING_MIX} from 'constants/action-types.js';\n\nimport {SET_SEND_MUTED} from 'constants/action-types.js';\n\nimport {SET_SELECTION} from 'constants/action-types.js';\n\nimport {SET_SEQUENCE_NAME} from 'constants/action-types.js';\n\nimport {SET_SELECTED_EFFECT} from 'constants/action-types.js';\n\nimport {SET_EFFECT_PARAMETER_VALUE} from 'constants/action-types.js';\n\nimport {SET_EFFECTS_PANE_OPTION} from 'constants/action-types.js';\n\nimport {SET_SELECTED_PARAMETER} from 'constants/action-types.js';\nimport {SET_SHOW_LOGIN} from 'constants/action-types.js';\nimport {SET_USER_TOKEN} from 'constants/action-types.js';\nimport {SET_SIGNING_UP} from 'constants/action-types.js';\n\nimport {SET_SELECTED_PARAMETER_FLASHING} from 'constants/action-types.js';\n\nimport {SET_MIXES} from 'constants/action-types.js';\nimport {SET_CURRENT_MIX} from 'constants/action-types.js';\nimport {SET_ERASING_AUTOMATION} from 'constants/action-types.js';\n\nimport {SET_TRACK_SEND_VOLUME} from 'constants/action-types.js';\n\nimport {SET_TRACK_FOCUSED} from 'constants/action-types.js';\n\nimport {SET_YEAR_SELECTED} from 'constants/action-types.js';\nimport {SET_TAGS_SELECTED} from 'constants/action-types.js';\nimport {SET_STYLES_SELECTED} from 'constants/action-types.js';\nimport {SET_COUNTRIES_SELECTED} from 'constants/action-types.js';\nimport {SET_VIDEOS_SELECTED} from 'constants/action-types.js';\nimport {SET_HIERARCHY_ROOT} from 'constants/action-types.js';\nimport {SET_HIERARCHY_TREE} from 'constants/action-types.js';\nimport {SET_SHOW_YEAR_SLIDER} from 'constants/action-types.js';\nimport {SET_SHOW_COUNTRIES} from 'constants/action-types.js';\nimport {SET_SHOW_VIDEOS} from 'constants/action-types.js';\nimport {SET_SHOW_STYLES} from 'constants/action-types.js';\nimport {SET_SHOW_TAGS} from 'constants/action-types.js';\nimport {SET_SHOW_CHORD_FILTER} from 'constants/action-types.js';\nimport {SET_CHORD_SELECTED} from 'constants/action-types.js';\n\nimport {SET_IS_DRAGGING_DURATION} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_SELECTION} from 'constants/action-types.js';\nimport {SET_SELECTED_PIANO_ROLL_STEPS} from 'constants/action-types.js';\n\nimport {SET_SEARCH_RESULTS_SAMPLES} from 'constants/action-types.js';\n\nimport {SET_SELECTED_CHORD_SAMPLE} from 'constants/action-types.js';\nimport {SET_STEPS_TO_COPY} from 'constants/action-types.js';\n\nimport {SET_LOADING_SEQUENCE} from 'constants/action-types.js';\n\nimport {SET_EASY_PATTERN_TO_COPY} from 'constants/action-types.js';\nimport {SET_SAMPLE_AUDITIONING} from 'constants/action-types.js';\n\nimport {SET_LAST_MIDI_KEY_MAPPED} from 'constants/action-types.js';\nimport {SET_TRACK_IS_ENABLED} from 'constants/action-types.js';\n\nimport {SET_SELECTED_SAMPLE_TAG} from 'constants/action-types.js';\n\nimport {SET_TRANSPOSE_DRAGGING} from 'constants/action-types.js';\n\nimport {SET_MASTER_VOLUME} from 'constants/action-types.js';\n\nimport {SET_USER_VIEW_MODE} from 'constants/action-types.js';\nimport {SET_CURRENT_USER_MIX} from 'constants/action-types.js';\nimport {SET_USER_HAS_EDITS_TO_SAVE} from 'constants/action-types.js';\n\nimport {SET_PATTERN_TO_EDIT_COLOR} from 'constants/action-types.js';\nimport {SET_PATTERN_COLOR} from 'constants/action-types.js';\n\nimport {SET_COMPACT_MODE} from 'constants/action-types.js';\nimport {SET_SHOW_LFOS} from 'constants/action-types.js';\nimport {SET_SHOW_ENVELOPES} from 'constants/action-types.js';\n\nimport {SET_TRACKS_TO_RESAMPLE} from 'constants/action-types.js';\n\nimport {SET_PROJECT_AUTOMATION_MODE} from 'constants/action-types.js';\n\nimport {SET_STEPS_SELECTION} from 'constants/action-types.js';\nimport {SET_SELECTED_STEPS} from 'constants/action-types.js';\nimport {SET_STEP_NUMBER_DRAGGING_FROM} from 'constants/action-types.js';\n\nimport {SET_SEQUENCE_PATTERN_LOCKED} from 'constants/action-types.js';\nimport {SET_SEQUENCE_PATTERN_LOCKS} from 'constants/action-types.js';\n\nimport {SET_TRACK_PATTERN_LOCKED} from 'constants/action-types.js';\nimport {SET_TRACK_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {SET_EFFECT_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {UPDATE_STEPS_FOR_ALL_TRACKS} from 'constants/action-types.js';\nimport {SET_LFO_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {SET_ENVELOPE_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_PAGINATION} from 'constants/action-types.js';\n\nimport {SET_IS_RESAMPLING} from 'constants/action-types.js';\nimport {SET_RESAMPLE_DURATION} from 'constants/action-types.js';\n\nimport {SET_KEY_MAPPINGS} from 'constants/action-types.js';\nimport {SET_PAD_MAPPINGS} from 'constants/action-types.js';\n\nimport {SET_SHOW_SEQUENCE_MODAL} from 'constants/action-types.js';\n\nimport {SET_MULTI_PARAMETER_SLIDER} from 'constants/action-types.js';\n\nimport {SET_SHOW_MODS_MODAL} from 'constants/action-types.js';\n\nimport {SET_SEQUENCE_ROLLING} from 'constants/action-types.js';\n\nimport {SET_TRACK_EFFECTS_CHAIN} from 'constants/action-types.js';\n\nimport {SET_SHOW_SEQUENCES} from 'constants/action-types.js';\nimport {SET_SHOW_PRESETS} from 'constants/action-types.js';\nimport {SET_SHOW_INSTRUMENTS} from 'constants/action-types.js';\nimport {SET_TRACK_ROLLING} from 'constants/action-types.js';\n\nimport {SET_Z_INDEX_HACK} from 'constants/action-types.js';\n\nimport {SET_LOADED_TRACKS} from 'constants/action-types.js';\nimport {SET_BPM} from 'constants/action-types.js';\nimport {SET_RESAMPLE_MASTER} from 'constants/action-types.js';\n\nimport {SET_YOUTUBE_SEARCH_TERMS} from 'constants/action-types.js';\n\nimport {SET_AUDIO_INPUT_SOURCE} from 'constants/action-types.js';\n\nimport {SET_WAVEFORM_SELECTION} from 'constants/action-types.js';\nimport {SET_WAVEFORM_SELECTION_END} from 'constants/action-types.js';\n\nimport {SET_MIDI_MAP_MODE} from 'constants/action-types.js';\nimport {SET_PARAMETER_MIDI_MAP_SELECTION} from 'constants/action-types.js';\nimport {DELETE_PARAMETER_MIDI_MAPPING} from 'constants/action-types.js';\nimport {SET_PARAMETER_MIDI_MAPPING} from 'constants/action-types.js';\n\nimport {SET_ACTION_MIDI_MAP_SELECTION} from 'constants/action-types.js';\nimport {DELETE_MIDI_MAPPINGS} from 'constants/action-types.js';\nimport {SET_ACTION_MIDI_MAPPING} from 'constants/action-types.js';\n\nimport {SET_LATENCY} from 'constants/action-types.js';\n\nimport {SET_SPOTLIGHT_TRACKS} from 'constants/action-types.js';\n\nimport {SET_CLOCK_TYPE} from 'constants/action-types.js';\nimport {SET_CLOCK_TICK} from 'constants/action-types.js';\nimport {SET_CONNECTION_STATUS} from 'constants/action-types.js';\nimport {SET_CONNECTED_USER_NAME} from 'constants/action-types.js';\nimport {SET_PLAY_SCHEDULED} from 'constants/action-types.js';\nimport {SET_AVAILABLE_USERS_TO_SYNC} from 'constants/action-types.js';\n\nimport {SET_THEME} from 'constants/action-types.js';\nimport {SET_SHOW_THEME_GRID} from 'constants/action-types.js';\n\nimport {SET_SEARCH_SORT_BY} from 'constants/action-types.js';\n\nimport {SET_MIDI_EFFECT_DRAGGING} from 'constants/action-types.js';\n\nimport {SET_SHOW_TRACK_EFFECTS} from 'constants/action-types.js';\n\nimport {SET_SHOW_CONVOLVER_MODAL} from 'constants/action-types.js';\nimport {SET_SHOW_PASSWORD_MODAL} from 'constants/action-types.js';\nimport {SET_PASSWORD_MODAL_CALLBACK} from 'constants/action-types.js';\n\nimport {SET_SHOW_SHARE_SEQUENCE_MODAL} from 'constants/action-types.js';\n\nimport {HIDE_ALL_EFFECTS} from 'constants/action-types.js';\n\nimport {SET_EFFECT_COLLAPSED} from 'constants/action-types.js';\n\nimport {SET_CONTEXTUAL_HELP} from 'constants/action-types.js';\n\nimport {SET_SELECTED_LFO} from 'constants/action-types.js';\nimport {SET_SELECTED_ENVELOPE} from 'constants/action-types.js';\nimport {SET_SIDEBAR_COLLAPSED} from 'constants/action-types.js';\n\nimport {SET_MIX_EVENTS} from 'constants/action-types.js';\n\nimport {SET_SHOW_GROUPS} from 'constants/action-types.js';\n\nimport {SET_CURRENT_SUB_SEQUENCE} from 'constants/action-types.js';\nimport {SET_SUB_SEQUENCES} from 'constants/action-types.js';\n\nimport {SET_ALL_TRACK_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {SET_ALL_LFO_LOCKS} from 'constants/action-types.js';\nimport {SET_ALL_ENVELOPE_LOCKS} from 'constants/action-types.js';\n\nimport {SET_MIX_VIEW_MODE} from 'constants/action-types.js';\nimport {SET_SUB_SEQUENCE_FADE} from 'constants/action-types.js';\n\nimport {SET_SAMPLE_SLICES} from 'constants/action-types.js';\n\nimport {SET_SELECTED_ARRANGEMENT_EVENTS} from 'constants/action-types.js';\n\nimport {SET_SHOW_DATE_SAMPLED} from 'constants/action-types.js';\nimport {SET_DATE_SAMPLED} from 'constants/action-types.js';\n\nimport {SET_EFFECT_PARAMETER_VALUES} from 'constants/action-types.js';\n\nimport {SET_TRACK_PANNING} from 'constants/action-types.js';\nimport {SET_GROUP_PANNING} from 'constants/action-types.js';\nimport {SET_SENDS_PANNING} from 'constants/action-types.js';\n\nimport {SET_SELECTED_RECORD} from 'constants/action-types.js';\nimport {SET_2D_SELECTION} from 'constants/action-types.js';\nimport {SET_SIMILAR_SOUNDS_TO_FIND} from 'constants/action-types.js';\nimport {SET_SHOW_SAMPLES_2D} from 'constants/action-types.js';\nimport {SET_LAST_NOTE_PLAYED} from 'constants/action-types.js';\nimport {SET_SIDEBAR_VIEW_MODE} from 'constants/action-types.js';\nimport {SET_DISCOGS_SELECTED} from 'constants/action-types.js';\nimport {SET_SELECTED_FOLDER} from 'constants/action-types.js';\nimport {SET_SELECTED_PRESET} from 'constants/action-types.js';\nimport {SET_HAS_CHANGES_TO_FOLDERS} from 'constants/action-types.js';\n\nimport {SET_CURSOR_STEP} from 'constants/action-types.js';\nimport {SET_CURSOR_TRACK} from 'constants/action-types.js';\nimport {SET_CURSOR_SHOW} from 'constants/action-types.js';\nimport {SET_FOLDER_DRAGGING} from 'constants/action-types.js';\nimport {SET_PRESET_DRAGGING} from 'constants/action-types.js';\nimport {SET_SAMPLE_DRAGGING} from 'constants/action-types.js';\nimport {SET_EFFECTS_CHAIN_TO_SHOW} from 'constants/action-types.js';\nimport {SET_EFFECTS_CHAINS_TO_SHOW} from 'constants/action-types.js';\nimport {SET_SUB_SEQUENCE_MUTED} from 'constants/action-types.js';\nimport {SET_TRACK_FROZEN} from 'constants/action-types.js';\nimport {SET_TRACK_TO_FREEZE} from 'constants/action-types.js';\nimport {SET_FROZEN_TRACK_PLAYING} from 'constants/action-types.js';\nimport {SET_FROZEN_TRACKS} from 'constants/action-types.js';\nimport {SET_FROZEN_TRACKS_PLAYING} from 'constants/action-types.js';\nimport {SET_SELECTED_ONSETS} from 'constants/action-types.js';\n\nimport {SET_SINGLE_STEP_TO_DRAG} from 'constants/action-types.js';\nimport {SET_STEP_NUMBER_DRAGGED_TO} from 'constants/action-types.js';\nimport {SET_SEARCH_RESULTS_START} from 'constants/action-types.js';\nimport {SET_SHOW_STEP_OPTIONS} from 'constants/action-types.js';\nimport {SET_MASTER_STEP_TOGGLES} from 'constants/action-types.js';\nimport {SET_PARAMETERS_TO_RECORD} from 'constants/action-types.js';\nimport {SET_ONSET_THRESHOLD} from 'constants/action-types.js';\nimport {SET_SHOW_ONSETS} from 'constants/action-types.js';\n\nimport {SET_SELECTED_GUILD} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_DRAG_OFFSET} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_NOTES} from 'constants/action-types.js';\n\nimport {SET_PENDING_TRANSACTIONS} from 'constants/action-types.js';\nimport {SET_COMMAND_INPUT} from 'constants/action-types.js';\nimport {SET_COMMAND_PREFIX} from 'constants/action-types.js';\nimport {SET_VI_MODE} from 'constants/action-types.js';\nimport {SET_TRACK_WARP} from 'constants/action-types.js';\nimport {SET_SUB_SEQUENCE_WARPS} from 'constants/action-types.js';\n\nimport {SET_ARRANGEMENT_SELECTION} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_MOUSE_X} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_AUTOMATION_TO_SHOW} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_LOOPING} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_SELECTED_ROWS} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_LOOP_SELECTED} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_ROW_SELECTIONS} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_ZOOM} from 'constants/action-types.js';\n\nimport {SET_SELECTED_SEQUENCE} from 'constants/action-types.js';\nimport {SET_EXPLORE_MIXER_EFFECT} from 'constants/action-types.js';\nimport {SET_EXPLORE_EQ_EFFECT} from 'constants/action-types.js';\nimport {SET_SELECTED_SEND_EFFECT} from 'constants/action-types.js';\nimport {SET_INSTRUMENT_TYPE_DRAGGING} from 'constants/action-types.js';\n\nimport {SET_TRACK_IS_LOADING} from 'constants/action-types.js';\n\nimport {SET_PIANO_ROLL_CURSOR} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_X_SCALE} from 'constants/action-types.js';\nimport {SET_TOTAL_ARRANGEMENT_LENGTH} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_BOTTOM_HEIGHT} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_BOTTOM_MODE} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_BOTTOM_RESIZING} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_PATTERN_DRAGGING} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_PATTERN_START_STEP} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_CURSOR_STEP} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_PATTERN_RESIZING} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_BROWSER_MODE} from 'constants/action-types.js';\nimport {SET_SAMPLE_TO_EXPLORE} from 'constants/action-types.js';\nimport {SET_EFFECT_RACK_NODE_POSITION} from 'constants/action-types.js';\nimport {SET_ANNOTATION_DRAGGING} from 'constants/action-types.js';\n\nimport {SET_TRACK_AUTOMATION_DEVICE} from 'constants/action-types.js';\nimport {SET_TRACK_AUTOMATION_SUB_DEVICE} from 'constants/action-types.js';\nimport {SET_TRACK_AUTOMATION_RACK_DEVICE} from 'constants/action-types.js';\nimport {SET_TRACK_AUTOMATION_PARAMETER} from 'constants/action-types.js';\nimport {SET_SHOW_AUTOMATION} from 'constants/action-types.js';\nimport {SET_PARAMETER_AUTOMATIONS} from 'constants/action-types.js';\n\nimport {SET_ACTIONS_REMAINING} from 'constants/action-types.js';\nimport {SET_TIME_REMAINING} from 'constants/action-types.js';\n\nimport {SET_SHOW_PIANO_ROLL} from 'constants/action-types.js';\nimport {SET_SELECTED_RACK_SUB_TRACK} from 'constants/action-types.js';\nimport {DELETE_AUTOMATIONS_FOR_PARAMETERS} from 'constants/action-types.js';\nimport {SET_AUTOMATION_GUIDE_POINT} from 'constants/action-types.js';\nimport {SET_AUTOMATION_POINT_DRAGGING} from 'constants/action-types.js';\nimport {SET_AUTOMATION_POINT_HAS_MOVED} from 'constants/action-types.js';\nimport {SET_AUTOMATION_POINT_HOVERED} from 'constants/action-types.js';\nimport {SET_TRACK_TO_CONVERT} from 'constants/action-types.js';\nimport {SET_AUTOMATION_POINTS_SELECTED} from 'constants/action-types.js';\nimport {SET_AUTOMATION_SELECTION} from 'constants/action-types.js';\n\nimport {SET_EXPLORE_PERSON_SELECTED} from 'constants/action-types.js';\nimport {SET_EXPLORE_ALL_SEQUENCES}from 'constants/action-types.js';\n\nimport {DELETE_AUTOMATIONS_FOR_ENGINE}from 'constants/action-types.js';\nimport {SET_RECORDING_EXPLORE_MIX} from 'constants/action-types.js';\nimport {SET_WORKS_LOADED} from 'constants/action-types.js';\nimport {SET_WORK_TRANSPOSE} from 'constants/action-types.js';\nimport {SET_WORK_VOLUME} from 'constants/action-types.js';\nimport {SET_EXPLORE_MIX_LOADED} from 'constants/action-types.js';\n\nimport {SET_IS_MACRO_MAPPING} from 'constants/action-types.js';\nimport {SET_PARAMETER_TO_MAP} from 'constants/action-types.js';\n\nimport {SET_MIX_COLOR_VALUE} from 'constants/action-types.js';\nimport {SET_MIX_HAS_EDITS} from 'constants/action-types.js';\n\nimport {SET_SCRIPT_VARIABLES} from 'constants/action-types.js';\n\nimport {SET_EXPLORE_OPTION} from 'constants/action-types.js';\n\nimport {SET_ANNOTATIONS_VIEW} from 'constants/action-types.js';\nimport {SET_EXPLORE_TOAST} from 'constants/action-types.js';\n\nimport {SET_PARAMETER_SLIDER_DOWN} from 'constants/action-types.js';\nimport {MOVE_ENGINE_AUTOMATIONS} from 'constants/action-types.js';\nimport {SET_SEQUENCE_LOADING_PROGRESS} from 'constants/action-types.js';\n\nimport {SET_TRACK_BROWSED_SAMPLES} from 'constants/action-types.js';\nimport {SET_TRACK_BROWSED_PRESETS} from 'constants/action-types.js';\nimport {SET_BOTTOM_TOOLBAR_OFFSET} from 'constants/action-types.js';\nimport {SET_TRACK_UPDATES} from 'constants/action-types.js';\nimport {SET_IS_TRANSCRIBING} from 'constants/action-types.js';\nimport {SET_SAMPLE_TOOLTIP} from 'constants/action-types.js';\nimport {SET_SELECTED_FREEZE} from 'constants/action-types.js';\nimport {SET_TRACK_LENGTH_MODE} from 'constants/action-types.js';\nimport {SET_TRACK_LENGTH_CHOICE} from 'constants/action-types.js';\nimport {SET_FREEZE_DRAGGING} from 'constants/action-types.js';\nimport {SET_FREEZE_COLUMN_SAMPLES} from 'constants/action-types.js';\nimport {SET_UPLOADING_FILE} from 'constants/action-types.js';\nimport {SET_GROUP_COLLAPSED} from 'constants/action-types.js';\nimport {SET_SELECTED_MIX_EFFECT} from 'constants/action-types.js';\nimport {SET_SAMPLES_DRAGGING} from 'constants/action-types.js';\nimport {SET_DISPLAY_RESOLUTION} from 'constants/action-types.js';\nimport {SET_OFFLINE_ENGINE} from 'constants/action-types.js';\nimport {SET_CURRENT_EXPORT_INFO} from 'constants/action-types.js';\nimport {SET_MIX_TRACK_DRAGGING} from 'constants/action-types.js';\nimport {SET_GROUP_TRACKS} from 'constants/action-types.js';\nimport {SET_LOADING_TEXT} from 'constants/action-types.js';\nimport {SET_TRACK_ENVELOPES} from 'constants/action-types.js';\nimport {SET_COPIED_NODES_FOR_RACK} from 'constants/action-types.js';\nimport {SET_LAST_MIDI_CC_PLAYED} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_MOUSE_DOWN_X} from 'constants/action-types.js';\n\nimport {SET_TRACKER_PARAMETER_TO_EDIT} from 'constants/action-types.js';\nimport {SET_TRACKS_TO_HIDE} from 'constants/action-types.js';\nimport {SET_SELECTED_PALETTE} from 'constants/action-types.js';\nimport {SET_SEQUENCED_PALETTE} from 'constants/action-types.js';\nimport {SET_PROJECT_DRAGGING} from 'constants/action-types.js';\nimport {SET_EXPLORE_UNPUBLISHED} from 'constants/action-types.js';\nimport {SET_QUICK_ADD_SEARCH_TEXT} from 'constants/action-types.js';\nimport {SET_SHOW_TRACK_FREEZE_HISTORY} from 'constants/action-types.js';\nimport {SET_SELECTED_MIDI_TRACK} from 'constants/action-types.js';\nimport {SET_SELECTED_TRACK_SLICE} from 'constants/action-types.js';\nimport {SET_CIRKLON_PARAMETER_SELECTED} from 'constants/action-types.js';\nimport {SET_CIRKLON_MODE} from 'constants/action-types.js';\nimport {SET_NOTES_DOWN} from 'constants/action-types.js';\nimport {SET_SCENES} from 'constants/action-types.js';\nimport {SET_CURRENT_SCENE} from 'constants/action-types.js';\nimport {SET_SHOW_SETTINGS} from 'constants/action-types.js';\nimport {SET_WALLPAPER} from 'constants/action-types.js';\nimport {SET_ANIMATE_WALLPAPER} from 'constants/action-types.js';\nimport {SET_EXPANDED_PROJECT} from 'constants/action-types.js';\nimport {SET_ACCUMULATOR_PARAMETER_SELECTED} from 'constants/action-types.js';\nimport {SET_PLANE_MAPPING} from 'constants/action-types.js';\nimport {SET_TRACK_PRESET_SAVING} from 'constants/action-types.js';\nimport {SET_SAMPLE_TAG_DRAGGING} from 'constants/action-types.js';\nimport {SET_PARAMETER_MIX_AUTOMATIONS} from 'constants/action-types.js';\nimport {SET_SHOW_ARRANGEMENT_TRACKS} from 'constants/action-types.js';\nimport {SET_ARRANGEMENT_PATTERN_SELECTED} from 'constants/action-types.js';\nimport {SET_SIDEBAR_SEARCH_INPUT} from 'constants/action-types.js';\nimport {SET_SHOW_ARRANGEMENT_SEARCHER} from 'constants/action-types.js';\nimport {SET_VI_SELECT_MODE} from 'constants/action-types.js';\nimport {SET_EXPLORE_WORK} from 'constants/action-types.js';\nimport {SET_CREATING_NEW_PACK} from 'constants/action-types.js';\nimport {SET_PACK_WINDOW_POSITION} from 'constants/action-types.js';\nimport {SET_DRAGGING_PACK_WINDOW} from 'constants/action-types.js';\nimport {SET_PACK_TO_EDIT} from 'constants/action-types.js';\nimport {SET_IS_MANAGING_GUILDS} from 'constants/action-types.js';\n\nimport {NEW_STEP_GROUP} from 'constants/action-types.js';\nimport {SET_STEPS_GROUP_MODE} from 'constants/action-types.js';\nimport {SET_TRANSFORMATION_EDGE_DRAGGING} from 'constants/action-types.js';\nimport {SET_SHOW_FORMANT_EFFECT} from 'constants/action-types.js';\nimport {SET_SHOWING_FORMANTS} from 'constants/action-types.js';\nimport {SET_PULLED_EFFECTS} from 'constants/action-types.js';\nimport {SET_LOOPS_TO_FREEZE} from 'constants/action-types.js';\nimport {SET_PARAMETER_MIN_MAX} from 'constants/action-types.js';\nimport {SET_CURRENT_SOUND_IN_LIST} from 'constants/action-types.js';\nimport {SET_SHOWING_SOUND_LIST} from 'constants/action-types.js';\nimport {SET_CURRENT_TAG_IN_LIST} from 'constants/action-types.js';\nimport {SET_LINKING_EFFECTS} from 'constants/action-types.js';\nimport {SET_PACK_SELECTED} from 'constants/action-types.js';\nimport {SET_SAMPLE_EXPLORER_SELECTED} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_SLIDE} from 'constants/action-types.js';\nimport {SET_MAXIMIZE_EXPLORER} from 'constants/action-types.js';\n\nimport {SET_PADS} from 'constants/action-types.js';\nimport {SET_PAD_SLOTS} from 'constants/action-types.js';\nimport {SET_PAD_HOVERED} from 'constants/action-types.js';\nimport {SET_WAVEFORM_SHOWING} from 'constants/action-types.js';\nimport {SET_TRACK_DRAGGING} from 'constants/action-types.js';\nimport {SET_HIDE_MIXER} from 'constants/action-types.js';\nimport {SET_SOURCE_EXPLORING} from 'constants/action-types.js';\nimport {SET_YEAR_EXPLORING} from 'constants/action-types.js';\nimport {SET_PULLABLE_PART_DRAGGING} from 'constants/action-types.js';\nimport {SET_PADS_EXPAND} from 'constants/action-types.js';\n\nimport {SET_SEQUENCERS} from 'constants/action-types.js';\nimport {SET_SEQUENCER_TRACKS} from 'constants/action-types.js';\nimport {SET_PLANE_MACROS} from 'constants/action-types.js';\nimport {SET_WINDOW_POSITION} from 'constants/action-types.js';\nimport {SET_BULK_WINDOW_POSITIONS} from 'constants/action-types.js';\nimport {SET_PAD_EFFECTS} from 'constants/action-types.js';\nimport {SET_DRAWING_PAD_EDGE} from 'constants/action-types.js';\nimport {SET_MOVING_PAD_EDGE} from 'constants/action-types.js';\nimport {SET_SELECTED_PAD_EDGE} from 'constants/action-types.js';\nimport {SET_BULK_EFFECTS_COLLAPSED} from 'constants/action-types.js';\nimport {SET_SELECTED_PULLED_ELEMENTS} from 'constants/action-types.js';\nimport {SET_ALL_EFFECT_PATTERN_LOCKS} from 'constants/action-types.js';\nimport {SET_MODULE_COLLAPSED} from 'constants/action-types.js';\nimport {SET_TRACK_MIDI_EFFECTS} from 'constants/action-types.js';\nimport {SET_EFFECT_STARRED} from 'constants/action-types.js';\nimport {SET_BULK_EFFECTS_STARRED} from 'constants/action-types.js';\nimport {SET_BULK_MODULES_COLLAPSED} from 'constants/action-types.js';\nimport {DELETE_TRACK_ID} from 'constants/action-types.js';\nimport {SET_SHOWING_CONTEXT_MENU} from 'constants/action-types.js';\nimport {SET_HIGHER_ORDER_MATRIX} from 'constants/action-types.js';\nimport {SET_MODULE_COLOR} from 'constants/action-types.js';\nimport {SET_MODULES_ROUTING} from 'constants/action-types.js';\nimport {SET_HIGHER_ORDER_STEPS_SELECTED} from 'constants/action-types.js';\nimport {SET_ORIENTATION_ROUTINGS} from 'constants/action-types.js';\nimport {SET_SHOW_HIGHER_ORDER_SEQUENCER} from 'constants/action-types.js';\nimport {SET_MODULE_SIZE} from 'constants/action-types.js';\nimport {SET_INLET_CONNECTIONS} from 'constants/action-types.js';\nimport {SET_ZOBJECTS} from 'constants/action-types.js';\nimport {SET_ZMESSAGES} from 'constants/action-types.js';\nimport {SET_BACKGROUND_COLOR} from 'constants/action-types.js';\nimport {SET_VIEWABLE_SUBPATCHES} from 'constants/action-types.js';\nimport {SET_VIEWABLE_ZOBJECTS} from 'constants/action-types.js';\nimport {SET_SELECTED_ZOBJECT} from 'constants/action-types.js';\nimport {SET_JAKI_GRID} from 'constants/action-types.js';\nimport {SET_ZOBJECT_TYPE_DRAGGING} from 'constants/action-types.js';\nimport {SET_UX_LOCKED} from 'constants/action-types.js';\nimport {SET_MINTED_TOKENS} from 'constants/action-types.js';\nimport {SET_HIC_DIALOG} from 'constants/action-types.js';\nimport {SET_ZORA_DIALOG} from 'constants/action-types.js';\nimport {SET_IS_PREPARING_NFT} from 'constants/action-types.js';\nimport {SET_FULL_SCREEN_ZOBJECT} from 'constants/action-types.js';\nimport {SET_MAIN_SCROLL_REF} from 'constants/action-types.js';\nimport {SET_VIEWPORT_POSITION} from 'constants/action-types.js';\nimport {SET_SIDEBARS_SHOWING} from 'constants/action-types.js';\nimport {SET_SHOW_PAD_SEQUENCER} from 'constants/action-types.js';\nimport {SET_SHOW_PROJECTS_MODAL} from 'constants/action-types.js';\nimport {SET_SHOW_SEARCH_WINDOW} from 'constants/action-types.js';\nimport {SET_STEP_PARAMETER_SELECTED} from 'constants/action-types.js';\nimport {SET_SHOW_TRACK_INSTRUMENT} from 'constants/action-types.js';\nimport {SET_SHOW_MODULATORS} from 'constants/action-types.js';\nimport {SET_CABLE_SEGMENTATION} from 'constants/action-types.js';\nimport {SET_CABLE_SEGMENTATIONS} from 'constants/action-types.js';\n\nimport {SET_UX_LOCK_OBJECT} from 'constants/action-types.js';\nimport {SET_UX_LOCK_OBJECTS} from 'constants/action-types.js';\nimport {SET_UX_HIDE_OBJECT} from 'constants/action-types.js';\nimport {SET_UX_HIDE_OBJECTS} from 'constants/action-types.js';\nimport {SET_ZOBJECT_INPUT_TEXT} from 'constants/action-types.js';\nimport {SET_SHOW_EDITOR_BOTTOM} from 'constants/action-types.js';\nimport {SET_MINTING_PROGRESS} from 'constants/action-types.js';\nimport {SET_NEW_ZORA_TOKEN_ID} from 'constants/action-types.js';\nimport {SET_TRANSACTION_UPON_LOGIN} from 'constants/action-types.js';\nimport {SET_KEYBOARD_CONTEXT} from 'constants/action-types.js';\nimport {SET_PAD_FX_MODE} from 'constants/action-types.js';\nimport {SET_JAKI_GRID_MODE} from 'constants/action-types.js';\nimport {SET_OBJECT_STYLING} from 'constants/action-types.js';\nimport {SET_SELECTED_PLANAR_PARAMETERS} from 'constants/action-types.js';\nimport {SET_FILTERED_PLANAR_PARAMETERS} from 'constants/action-types.js';\nimport {SET_PLANAR_MACRO_TO_SHOW} from 'constants/action-types.js';\nimport {SET_PLANAR_REGION_MODE} from 'constants/action-types.js';\nimport {SET_GROUP_PRESETS_BY_PACKS} from 'constants/action-types.js';\nimport {SET_PIANO_ROLL_LEFT_SPACE} from 'constants/action-types.js';\nimport {SET_ZOBJECT_SIZE} from 'constants/action-types.js';\nimport {SET_SECONDARY_ZOBJECT} from 'constants/action-types.js';\nimport {CLEAR_DRAG_DROP} from 'constants/action-types.js';\nimport {SET_SAMPLES_TO_SAVE} from 'constants/action-types.js';\nimport {SET_EDITOR_PADDING} from 'constants/action-types.js';\nimport {SET_EDGES_PADDING} from 'constants/action-types.js';\nimport {SET_EDGES_SIZE} from 'constants/action-types.js';\nimport {SET_LEFT_SIDEBAR_WIDTH} from 'constants/action-types.js';\nimport {SET_DOCUMENTATION_SUB_SECTION} from 'constants/action-types.js';\nimport {SET_RIGHT_SIDEBAR_OPTION} from 'constants/action-types.js';\nimport {SET_SELECTED_FM_ENVELOPE_TYPE} from 'constants/action-types.js';\nimport {SET_SELECTED_FM_OPERATOR_DETAILS} from 'constants/action-types.js';\nimport {SET_SELECTED_FM_FORMANT} from 'constants/action-types.js';\nimport {SET_SHOW_SAVE_MODAL} from 'constants/action-types.js';\nimport {SET_ZOBJECT_FLASHING} from 'constants/action-types.js';\nimport {SET_SAMPLE_DOWNLOAD_PROGRESS} from 'constants/action-types.js';\nimport {SET_PRESET_SAVED} from 'constants/action-types.js';\nimport {SET_COMPLETELY_DONE_LOADING} from 'constants/action-types.js';\nimport {SET_PLUGIN_TO_SAVE} from 'constants/action-types.js';\nimport {SET_SHOW_PLUGINS} from 'constants/action-types.js';\nimport {SET_PLUGINS_LOADED} from 'constants/action-types.js';\nimport {SET_SHOW_PLUGINS_PANE} from 'constants/action-types.js';\nimport {SET_PLUGINS_PANE_HEIGHT} from 'constants/action-types.js';\nimport {SET_ZOBJECT_BACKGROUND} from 'constants/action-types.js';\nimport {SET_PRESENTATION_MODE} from 'constants/action-types.js';\nimport {SET_PRESENTATION_WINDOW_POSITION} from 'constants/action-types.js';\nimport {SET_BULK_PRESENTATION_WINDOW_POSITIONS} from 'constants/action-types.js';\nimport {SET_SHOW_FREEZE_MODAL} from 'constants/action-types.js';\nimport {SET_ZOBJECT_TOOLTIP} from 'constants/action-types.js';\nimport {SET_ZOBJECTS_STACK} from 'constants/action-types.js';\nimport {SET_ZOBJECT_CONTEXT_MENU} from 'constants/action-types.js';\nimport {SET_ENABLE_ROLL_VIEWER} from 'constants/action-types.js';\nimport {SET_ZOBJECT_MODAL} from 'constants/action-types.js';\nimport {SET_ZOBJECT_PROGRESSBAR} from 'constants/action-types.js';\nimport {SET_SPORE_TOKEN_ID} from 'constants/action-types.js';\nimport {SET_SOLD_PLAYERS} from 'constants/action-types.js';\n\nexport const setResolution = resolution => ({ type: SET_RESOLUTION, payload: resolution });\nexport const setSequencerEngine = sequencerEngine => ({ type: SET_SEQUENCER_ENGINE, payload: sequencerEngine});\nexport const setViewMode = viewMode => ({ type: SET_VIEW_MODE, payload: viewMode});\nexport const setAlternateViewMode = viewMode => ({ type: SET_ALTERNATE_VIEW_MODE, payload: viewMode});\nexport const setDetailsView = trackNumber => ({ type: SET_DETAILS_VIEW, payload: trackNumber});\nexport const setDecentralized = decentralized => ({ type: SET_DECENTRALIZED, payload: decentralized});\nexport const setSelectorMode = selectorMode => ({ type: SET_SELECTOR_MODE , payload: selectorMode});\nexport const setNumberOfPatterns = (id, numberOfPatterns) => (\n    {\n        type: SET_NUMBER_PATTERNS,\n        payload: {\n            id,\n            numberOfPatterns\n        }\n    });\nexport const setCurrentPattern =\n    (sequenceId, currentPattern) =>\n    ({\n        type: SET_CURRENT_PATTERN ,\n        payload: {\n            sequenceId: sequenceId,\n            currentPattern: currentPattern}});\nexport const setCurrentStep =\n    (sequenceId, currentStep) =>\n    ({\n        type: SET_CURRENT_STEP ,\n        payload: {\n            sequenceId: sequenceId,\n            currentStep: currentStep}});\nexport const setCurrentGlobalStep =\n    (sequenceId, currentStep) =>\n    ({\n        type: SET_CURRENT_GLOBAL_STEP,\n        payload: {\n            sequenceId: sequenceId,\n            currentGlobalStep: currentStep\n        }\n    });\n\nexport const setCurrentAndGlobalSteps =\n    (sequenceId, currentStep, currentGlobalStep) =>\n    ({\n        type: SET_CURRENT_AND_GLOBAL_STEPS,\n        payload: {\n            sequenceId: sequenceId,\n            currentStep: currentStep,\n            currentGlobalStep: currentGlobalStep,\n        }\n    }\n    );\n\n// samples\n\nexport const setSample = (id, sample) => ({ type: SET_SAMPLE, payload: {sampleId: id, sample: sample}});\n\nexport const startTriggerTrack = (trackNumber, sliceNumber) => ({ type: START_TRIGGER_TRACK, payload: {trackNumber: trackNumber, sliceNumber: sliceNumber}});\nexport const stopTriggerTrack = (trackNumber, sliceNumber) => ({ type: STOP_TRIGGER_TRACK, payload: {trackNumber: trackNumber, sliceNumber: sliceNumber}});\n\nexport const setSamplePack = (samplePack) => ({ type: SET_SAMPLE_PACK , payload: samplePack});\n\n// add sample pack to your palette\nexport const addSamplePack = (samplePack) => ({ type: ADD_SAMPLE_PACK , payload: samplePack});\nexport const removeSamplePack = (samplePack) => ({ type: REMOVE_SAMPLE_PACK , payload: samplePack});\n\n\nexport const dragSample = (sample) => ({ type: DRAG_SAMPLE , payload: sample});\nexport const dragEffect = (effectNumber) => ({ type: DRAG_EFFECT , payload: effectNumber});\nexport const dragPattern = (patternNumber) => ({ type: DRAG_PATTERN, payload: patternNumber});\n\nexport const mouseDown = (m) => ({ type: MOUSE_DOWN, payload: m});\nexport const dragToggle = (toggle) => ({ type: DRAG_TOGGLE, payload: toggle});\nexport const dragStepTranspose = (transpose) => ({ type: DRAG_STEP_TRANSPOSE, payload: transpose});\nexport const setCommandDown = (c) => ({ type: COMMAND_DOWN, payload: c});\n\nexport const trackRecording = (t, r) => ({ type: TRACK_RECORDING, payload: {id: t, recording: r}});\nexport const trackPreparingToRecord = (t, r) => ({ type: TRACK_PREPARING_TO_RECORD, payload: {trackNumber: t, preparing: r}});\n\nexport const setAllTrackSteps = (t, steps, pianoSteps, fills, stepToId, stepToPosition, pianoRollDurations, patternSteps, groups) => (\n    {\n        type: SET_ALL_TRACK_STEPS,\n        payload: {\n            id: t,\n            steps: steps,\n            pianoRollSteps: pianoSteps,\n            fills: fills,\n            stepToId: stepToId,\n            stepToPosition: stepToPosition,\n            pianoRollDurations: pianoRollDurations,\n            patternSteps: patternSteps,\n            groups\n        }});\n\nexport const setTrackSteps = (t, s) => ({ type: SET_TRACK_STEPS, payload: {id: t, steps: s}});\nexport const setTrackFills = (t, s) => ({ type: SET_TRACK_FILLS, payload: {id: t, fills: s}});\nexport const setTrackPianoRollSteps = (t, s) => ({ type: SET_TRACK_PIANO_ROLL_STEPS, payload: {id: t, steps: s}});\n\nexport const setSelectedTrack = (track) => ({ type: SET_SELECTED_TRACK, payload: track});\nexport const setSelectedStep = (step) => ({ type: SET_SELECTED_STEP, payload: step});\nexport const setHoveredStep = (step) => ({ type: SET_HOVERED_STEP, payload: step});\nexport const setSelectedGroup = (group) => ({ type: SET_SELECTED_GROUP, payload: group});\n\n\nexport const setTrackVolume = (trackNumber, volume) => ({ type: SET_TRACK_VOLUME, payload:\n                                                          {id: trackNumber, volume: volume }});\nexport const setTrackMuted = (id, muted) => ({ type: SET_TRACK_MUTED, payload: {\n    id: id, muted: muted}});\n\nexport const setTrackSolo = (id, solo) => ({ type: SET_TRACK_SOLO, payload: {\n    id, solo: solo}});\n\nexport const setGroupVolume = (groupNumber, volume) => ({ type: SET_GROUP_VOLUME, payload:\n                                                          {groupNumber: groupNumber, volume: volume }});\nexport const setGroupMuted = (groupNumber, muted) => ({ type: SET_GROUP_MUTED, payload: {\n    groupNumber: groupNumber, muted: muted}});\n\nexport const setQuantized = (quantized) => ({ type: SET_QUANTIZED, payload: quantized});\nexport const setIsRecording = (isRecording) => ({ type: SET_IS_RECORDING, payload: isRecording});\nexport const setIsRecordingExpanded = (isRecordingExpanded) => ({ type: SET_IS_RECORDING_EXPANDED, payload: isRecordingExpanded});\nexport const setIsRecordingMix = (isRecordingMix) => ({ type: SET_IS_RECORDING_MIX, payload: isRecordingMix});\nexport const setIsPlaying =\n    (sequenceId, isPlaying) =>\n    ({\n        type: SET_IS_PLAYING,\n        payload: {\n            sequenceId: sequenceId,\n            isPlaying: isPlaying\n        }});\nexport const setIsPlayingMix = (isPlayingMix) => ({ type: SET_IS_PLAYING_MIX, payload: isPlayingMix});\n\nexport const setSendMuted = (sendNumber, muted) => ({ type: SET_SEND_MUTED, payload: {\n    sendNumber: sendNumber, muted: muted}});\n\nexport const setStepDragging = (step) => ({ type: SET_STEP_DRAGGING, payload: step});\nexport const setStepToCopy = (step) => ({ type: SET_STEP_TO_COPY, payload: step});\n\nexport const setSequenceName = (name) => ({ type: SET_SEQUENCE_NAME, payload: name});\n\nexport const setSelectedEffect = (effectNumber) => ({ type: SET_SELECTED_EFFECT, payload: effectNumber});\n\nexport const setEffectParameterValue = (id, value) => ({ type: SET_EFFECT_PARAMETER_VALUE, payload: {id: id, value: value}});\n\nexport const setEffectsPaneOption = (option) => ({ type: SET_EFFECTS_PANE_OPTION, payload: option});\n\nexport const setSelectedParameter = (parameter) => ({ type: SET_SELECTED_PARAMETER, payload: parameter});\nexport const setSelectedParameterFlashing = (parameter) => ({ type: SET_SELECTED_PARAMETER_FLASHING, payload: parameter});\n\nexport const setMixes = (mixes) => ({ type: SET_MIXES, payload: mixes});\nexport const setCurrentMix = (mix) => ({ type: SET_CURRENT_MIX, payload: mix});\n\nexport const setErasingAutomation = (mix) => ({ type: SET_ERASING_AUTOMATION, payload: mix});\n\nexport const setTrackSendVolume = (subSequenceId, trackNumber, sendNumber, volume) => (\n    { type: SET_TRACK_SEND_VOLUME,\n      payload: {\n          subSequenceId: subSequenceId,\n          trackNumber: trackNumber,\n          sendNumber: sendNumber,\n          volume: volume\n      }});\n\nexport const setTrackFocused = (track) => ({ type: SET_TRACK_FOCUSED, payload: track});\n\nexport const setYearSelected = (year) => ({ type: SET_YEAR_SELECTED, payload: year});\nexport const setCountriesSelected = (countries) => ({ type: SET_COUNTRIES_SELECTED, payload: countries});\nexport const setVideosSelected = (videos) => ({ type: SET_VIDEOS_SELECTED, payload: videos});\nexport const setStylesSelected = (styles) => ({ type: SET_STYLES_SELECTED, payload: styles});\nexport const setTagsSelected = (tags) => ({ type: SET_TAGS_SELECTED, payload: tags});\nexport const setChordSelected = (chord) => ({ type: SET_CHORD_SELECTED, payload: chord});\nexport const setHierarchyRoot = (root) => ({ type: SET_HIERARCHY_ROOT, payload: root});\nexport const setHierarchyTree = (tree) => ({ type: SET_HIERARCHY_TREE, payload: tree});\n\nexport const setShowYearSlider = (show) => ({ type: SET_SHOW_YEAR_SLIDER, payload: show});\nexport const setShowCountries = (show) => ({ type: SET_SHOW_COUNTRIES, payload: show});\nexport const setShowVideos  = (show) => ({ type: SET_SHOW_VIDEOS, payload: show});\nexport const setShowStyles = (show) => ({ type: SET_SHOW_STYLES, payload: show});\nexport const setShowTags = (show) => ({ type: SET_SHOW_TAGS, payload: show});\nexport const setShowChordFilter = (show) => ({ type: SET_SHOW_CHORD_FILTER, payload: show});\n\nexport const setIsDraggingDuration = (duration) => ({ type: SET_IS_DRAGGING_DURATION, payload: duration});\nexport const setStepDataDragging = (stepData) => ({ type: SET_STEP_DATA_DRAGGING, payload: stepData});\nexport const setPianoRollSelection =\n    (stepNumber, transpose, numSteps, numNotes) =>\n    ({\n        type: SET_PIANO_ROLL_SELECTION,\n        payload: {\n            stepNumber: stepNumber,\n            transpose: transpose,\n            numSteps: numSteps,\n            numNotes: numNotes,\n        }});\n\n\nexport const setSelectedPianoRollSteps =\n    (selectedSteps) =>\n    ({\n        type: SET_SELECTED_PIANO_ROLL_STEPS,\n        payload: selectedSteps\n    });\n\nexport const setSearchResultsSamples =\n    (sampleHashes) =>\n    ({\n        type: SET_SEARCH_RESULTS_SAMPLES,\n        payload: sampleHashes\n    });\n\nexport const setSelectedChordSample =\n    (obj =>\n    ({\n        type: SET_SELECTED_CHORD_SAMPLE,\n        payload: obj\n    }));\n\nexport const setStepsToCopy =\n    (steps =>\n    ({\n        type: SET_STEPS_TO_COPY,\n        payload: steps\n    }));\n\nexport const setLoadingSequence = (id, loading) => ({ type: SET_LOADING_SEQUENCE, payload: {id: id, loading: loading}});\n\nexport const setEasyPatternToCopy = (easyPattern) => ({ type: SET_EASY_PATTERN_TO_COPY, payload: easyPattern});\n\nexport const setSampleAuditioning = (sampleId) => ({ type: SET_SAMPLE_AUDITIONING, payload: sampleId});\n\nexport const setLastMidiKeyMapped = (midiKey) => ({ type: SET_LAST_MIDI_KEY_MAPPED, payload: midiKey});\nexport const setTrackIsEnabled = (subSequenceId, trackNumber, isEnabled) => (\n    {\n        type: SET_TRACK_IS_ENABLED,\n        payload: {\n            subSequenceId: subSequenceId,\n            trackNumber: trackNumber,\n            isEnabled: isEnabled\n        }\n    });\n\nexport const setSelectedSampleTag = (sampleId, tag) => ({ type: SET_SELECTED_SAMPLE_TAG, payload: {sampleId: sampleId, tag: tag}});\n\nexport const setTransposeDragging = (dragging) => ({ type: SET_TRANSPOSE_DRAGGING, payload: {transpose: dragging}});\n\nexport const setMasterVolume =\n    (sequenceId, volume) => (\n        { type: SET_MASTER_VOLUME,\n          payload: {\n              sequenceId: sequenceId,\n              volume: volume\n          }\n        });\n\nexport const setUserViewMode = (userViewMode) => ({ type: SET_USER_VIEW_MODE, payload: userViewMode});\nexport const setCurrentUserMix = (mix) => ({ type: SET_CURRENT_USER_MIX, payload: mix});\nexport const setUserHasEditsToSave = (hasEdits) => ({ type: SET_USER_HAS_EDITS_TO_SAVE, payload: hasEdits});\n\nexport const setPatternToEditColor = (pattern) => ({ type: SET_PATTERN_TO_EDIT_COLOR, payload: pattern});\nexport const setPatternColor = (pattern, color) => (\n    { type: SET_PATTERN_COLOR,\n      payload: {\n          pattern: pattern,\n          color: color}});\n\nexport const setCompactMode = (isCompact) => ({ type: SET_COMPACT_MODE, payload: isCompact});\n\nexport const setShowLFOs = (show) => ({ type: SET_SHOW_LFOS, payload: show});\nexport const setShowEnvelopes = (show) => ({ type: SET_SHOW_ENVELOPES, payload: show});\n\nexport const setTracksToResample = (tracks) => ({ type: SET_TRACKS_TO_RESAMPLE, payload: tracks});\n\nexport const setProjectAutomationMode  = (mode) => ({ type: SET_PROJECT_AUTOMATION_MODE, payload: mode});\n\nexport const newSequence = () => ({ type: NEW_SEQUENCE, payload: {}});\n\nexport const setStepsSelection = (trackNumber, stepFrom, stepTo) =>\n    ({\n        type: SET_STEPS_SELECTION ,\n        payload: {\n            trackNumber: trackNumber,\n            fromStep: stepFrom,\n            toStep: stepTo\n        }\n    });\nexport const setSelectedSteps = (trackNumber, patternNumber, steps) => ({ type: SET_SELECTED_STEPS, payload: {trackNumber: trackNumber, patternNumber: patternNumber, steps: steps}});\nexport const setStepNumberDraggingFrom = (stepNumber) => ({ type: SET_STEP_NUMBER_DRAGGING_FROM, payload: stepNumber});\n\nexport const setSequencePatternLocks = (patternLocks) => (\n    { type: SET_SEQUENCE_PATTERN_LOCKS,\n      payload: {\n          patternLocks: patternLocks,\n      }});\n\nexport const setSequencePatternLocked = (patternNumber, locked) => (\n    {\n        type: SET_SEQUENCE_PATTERN_LOCKED,\n        payload: {\n            patternNumber: patternNumber,\n            locked: locked\n        }});\n\nexport const setTrackPatternLocked = (subSequence, trackNumber, patternNumber, locked) => (\n    {\n        type: SET_TRACK_PATTERN_LOCKED,\n        payload: {\n            subSequence: subSequence,\n            trackNumber: trackNumber,\n            patternNumber: patternNumber,\n            locked: locked\n        }});\n\nexport const setTrackPatternLocks = (subSequence, trackNumber, patternLocks) => (\n    { type: SET_TRACK_PATTERN_LOCKS,\n      payload: {\n          subSequence: subSequence,\n          trackNumber: trackNumber,\n          patternLocks: patternLocks,\n      }});\n\nexport const setEffectPatternLocks = (effectId, patternLocks) => (\n    { type: SET_EFFECT_PATTERN_LOCKS,\n      payload: {\n          id: effectId,\n          patternLocks: patternLocks\n      }});\n\nexport const updateStepsForAllTracks = (updateData) => ({ type: UPDATE_STEPS_FOR_ALL_TRACKS, payload: updateData});\n\nexport const setLFOPatternLocks = (subSequence, patternLocks) =>\n    ({\n        type: SET_LFO_PATTERN_LOCKS,\n        payload: {\n            patternLocks: patternLocks,\n            subSequence: subSequence,}\n    });\n\nexport const setEnvelopePatternLocks = (subSequence, patternLocks) =>\n    ({\n        type: SET_ENVELOPE_PATTERN_LOCKS,\n        payload: {\n            patternLocks: patternLocks,\n            subSequence: subSequence\n        }\n    });\n\nexport const setPianoRollPagination = (start, end) => ({ type: SET_PIANO_ROLL_PAGINATION, payload: {start : start, end: end}});\n\nexport const setIsResampling = (isResampling) => ({ type: SET_IS_RESAMPLING, payload: isResampling});\nexport const setResampleDuration = (resampleDuration) => ({ type: SET_RESAMPLE_DURATION, payload: resampleDuration});\n\nexport const setKeyMappings = (keyMappings) => ({ type: SET_KEY_MAPPINGS, payload: keyMappings});\nexport const setPadMappings = (padMappings) => ({ type: SET_PAD_MAPPINGS, payload: padMappings});\n\nexport const setShowSequenceModal = (show) => ({ type: SET_SHOW_SEQUENCE_MODAL, payload: show});\n\nexport const setShowModsModal = (show) => ({ type: SET_SHOW_MODS_MODAL, payload: show});\n\nexport const setMultiParameterSliderValue = (id, value) => (\n    {\n        type: SET_MULTI_PARAMETER_SLIDER,\n        payload: {\n            id: id,\n            value: value\n        }\n    });\n\nexport const setSequenceRolling = (rolling) => ({ type: SET_SEQUENCE_ROLLING, payload: rolling});\n\nexport const setTrackEffectsChain = (trackNumber, effectsChain) => (\n    {\n        type: SET_TRACK_EFFECTS_CHAIN,\n        payload: {\n            trackNumber: trackNumber,\n            effectsChain: effectsChain\n        }\n    });\n\nexport const setShowSequences = (show) => ({ type: SET_SHOW_SEQUENCES, payload: show});\nexport const setShowPresets = (show) => ({ type: SET_SHOW_PRESETS, payload: show});\nexport const setShowInstruments = (show) => ({ type: SET_SHOW_INSTRUMENTS, payload: show});\n\nexport const setTrackRolling = (rolling) => ({ type: SET_TRACK_ROLLING, payload: rolling});\n\nexport const setZIndexHack = (hack) => ({ type: SET_Z_INDEX_HACK, payload: hack});\n\nexport const setLoadedTracks = (tracks) => ({ type: SET_LOADED_TRACKS, payload: tracks});\n\nexport const setBPM = (bpm) => ({ type: SET_BPM, payload: bpm});\n\nexport const setResampleMaster = (flag) => ({ type: SET_RESAMPLE_MASTER, payload: flag});\n\nexport const setYoutubeSearchTerms = (s) => ({ type: SET_YOUTUBE_SEARCH_TERMS, payload: s});\n\nexport const setAudioInputSource = (s) => ({ type: SET_AUDIO_INPUT_SOURCE, payload: s});\n\nexport const setWaveformSelection = (x) => (\n    {\n        type: SET_WAVEFORM_SELECTION,\n        payload: x\n    });\n\nexport const setWaveformSelectionEnd = (x) => (\n    {\n        type: SET_WAVEFORM_SELECTION_END,\n        payload: x\n    });\n\nexport const setMidiMapMode= (mode) => (\n    {\n        type: SET_MIDI_MAP_MODE,\n        payload: mode\n    });\n\nexport const setParameterMidiMapSelection= (parameter) => (\n    {\n        type: SET_PARAMETER_MIDI_MAP_SELECTION,\n        payload: parameter\n    });\n\nexport const setParameterMidiMapping= (parameter, midiControl) => (\n    {\n        type: SET_PARAMETER_MIDI_MAPPING,\n        payload: {\n            parameter: parameter,\n            midiControl: midiControl\n        }\n    });\n\nexport const deleteParameterMidiMapping = (parameter) => (\n    {\n        type: DELETE_PARAMETER_MIDI_MAPPING,\n        payload: parameter,\n    });\n\nexport const setActionMidiMapSelection= (action) => (\n    {\n        type: SET_ACTION_MIDI_MAP_SELECTION,\n        payload: action\n    });\n\nexport const setActionMidiMapping= (action, midiControl) => (\n    {\n        type: SET_ACTION_MIDI_MAPPING,\n        payload: {\n            action: action,\n            midiControl: midiControl\n        }\n    });\n\nexport const deleteMidiMappings = (control) => (\n    {\n        type: DELETE_MIDI_MAPPINGS,\n        payload: control,\n    });\n\n\nexport const setLatency = (latency) => (\n    {\n        type: SET_LATENCY,\n        payload: latency,\n    });\n\nexport const setSpotlightTracks = (tracks) => (\n    {\n        type: SET_SPOTLIGHT_TRACKS,\n        payload: tracks,\n    });\n\nexport const setClockType = (type) => (\n    {\n        type: SET_CLOCK_TYPE,\n        payload: type,\n    });\n\nexport const setConnectionStatus = (status) => (\n    {\n        type: SET_CONNECTION_STATUS,\n        payload: status,\n    });\n\nexport const setConnectedUserName = (userName) => (\n    {\n        type: SET_CONNECTED_USER_NAME,\n        payload: userName,\n    });\n\nexport const setClockTick = (step) => (\n    {\n        type: SET_CLOCK_TICK,\n        payload: step,\n    });\n\nexport const setPlayScheduled = (flag) => (\n    {\n        type: SET_PLAY_SCHEDULED,\n        payload: flag,\n    });\n\nexport const setAvailableUsersToSync = (users) => (\n    {\n        type: SET_AVAILABLE_USERS_TO_SYNC,\n        payload: users,\n    });\n\nexport const setSearchSortBy = (sortBy) => (\n    {\n        type: SET_SEARCH_SORT_BY,\n        payload: sortBy,\n    });\n\nexport const setMidiEffectDragging = (effect) => (\n    {\n        type: SET_MIDI_EFFECT_DRAGGING,\n        payload: effect,\n    });\n\nexport const setShowTrackEffects = (trackNumber, show) => (\n    {\n        type: SET_SHOW_TRACK_EFFECTS,\n        payload: {\n            trackNumber: trackNumber,\n            show: show\n        },\n    });\n\nexport const setShowConvolverModal = (show, sample) => (\n    {\n        type: SET_SHOW_CONVOLVER_MODAL,\n        payload: {\n            show: show,\n            convolverSample: sample\n        },\n    });\n\nexport const setShowPasswordModal = (show) => (\n    {\n        type: SET_SHOW_PASSWORD_MODAL,\n        payload: show\n    });\n\nexport const setPasswordModalCallback = (callback) => (\n    {\n        type: SET_PASSWORD_MODAL_CALLBACK,\n        payload: callback\n    });\n\nexport const setShowShareSequenceModal = (show) => (\n    {\n        type: SET_SHOW_SHARE_SEQUENCE_MODAL,\n        payload: show\n    });\n\nexport const hideAllEffects = () => (\n    {\n        type: HIDE_ALL_EFFECTS,\n        payload: {},\n    });\n\nexport const setEffectCollapsed = (id, isCollapsed) => (\n    {\n        type: SET_EFFECT_COLLAPSED,\n        payload: {\n            id: id,\n            isCollapsed: isCollapsed\n        },\n    });\n\nexport const setContextualHelp = (element, arg) => (\n    {\n        type: SET_CONTEXTUAL_HELP,\n        payload: {element, arg}\n    });\n\nexport const setSelectedLFO = (lfo) => (\n    {\n        type: SET_SELECTED_LFO,\n        payload: lfo,\n    });\n\nexport const setSelectedEnvelope = (envelope) => (\n    {\n        type: SET_SELECTED_ENVELOPE,\n        payload: envelope\n    });\n\nexport const setSidebarCollapsed = (collapsed) => (\n    {\n        type: SET_SIDEBAR_COLLAPSED,\n        payload: collapsed\n    });\n\nexport const setMixEvents = (subSequenceId, type, events) => (\n    {\n        type: SET_MIX_EVENTS,\n        payload: {\n            subSequenceId: subSequenceId,\n            type: type,\n            events: events\n        }\n    });\n\nexport const setShowGroups = (showGroups) => (\n    {\n        type: SET_SHOW_GROUPS,\n        payload: showGroups\n    });\n\nexport const setCurrentSubSequence = (sequenceId, subSequenceId) => (\n    {\n        type: SET_CURRENT_SUB_SEQUENCE,\n        payload: {\n            sequenceId: sequenceId,\n            subSequenceId: subSequenceId,\n        }\n    });\n\n\nexport const setSubSequences = (id, ids) => (\n    {\n        type: SET_SUB_SEQUENCES,\n        payload: {\n            sequenceId: id,\n            ids: ids,\n        },\n    });\n\nexport const setAllTrackPatternLocks = (locks) => (\n    {\n        type: SET_ALL_TRACK_PATTERN_LOCKS,\n        payload: locks\n    });\n\nexport const setAllLFOLocks = (locks) => (\n    {\n        type: SET_ALL_LFO_LOCKS,\n        payload: locks,\n    });\n\nexport const setAllEnvelopeLocks= (locks) => (\n    {\n        type: SET_ALL_ENVELOPE_LOCKS,\n        payload: locks\n    });\n\nexport const setMixViewMode = (mode) => (\n    {\n        type: SET_MIX_VIEW_MODE,\n        payload: mode\n    });\n\nexport const setSubSequenceFade = (id, value) => (\n    {\n        type: SET_SUB_SEQUENCE_FADE,\n        payload: {\n            subSequenceId: id,\n            value: value,\n        },\n    });\n\nexport const setSampleSlices= (id, slices) => (\n    {\n        type: SET_SAMPLE_SLICES,\n        payload: {\n            id: id,\n            slices: slices,\n        },\n    });\n\nexport const setSelectedArrangementEvents  = (events) => (\n    {\n        type: SET_SELECTED_ARRANGEMENT_EVENTS,\n        payload: events,\n    });\n\nexport const setShowDateSampled = (show) => (\n    {\n        type: SET_SHOW_DATE_SAMPLED,\n        payload: show\n    });\n\nexport const setDateSampled = (dates) => (\n    {\n        type: SET_DATE_SAMPLED,\n        payload: dates\n    });\n\nexport const setEffectParameterValues = (values) => (\n    {\n        type: SET_EFFECT_PARAMETER_VALUES,\n        payload: values\n    });\n\nexport const setTrackPanning = (trackNumber, pan) => (\n    {\n        type: SET_TRACK_PANNING,\n        payload: {\n            trackNumber: trackNumber,\n            pan: pan\n        }\n    });\n\nexport const setGroupPanning = (groupNumber, pan) => (\n    {\n        type: SET_GROUP_PANNING,\n        payload: {\n            groupNumber: groupNumber,\n            pan: pan\n        }\n    });\n\nexport const setSelectedRecord = (record) => (\n    {\n        type: SET_SELECTED_RECORD,\n        payload: record,\n    });\n\nexport const set2DSelection = (startX, startY, endX, endY) => (\n    {\n        type: SET_2D_SELECTION,\n        payload: {\n            startX: startX,\n            startY: startY,\n            endX: endX,\n            endY: endY\n        },\n    });\n\nexport const setSimilarSoundsToFind = (sampleId) => (\n    {\n        type: SET_SIMILAR_SOUNDS_TO_FIND,\n        payload: sampleId,\n    });\n\nexport const setShowSamples2D = (show) => (\n    {\n        type: SET_SHOW_SAMPLES_2D,\n        payload: show,\n    });\n\nexport const setLastNotePlayed = (lastNote) => (\n    {\n        type: SET_LAST_NOTE_PLAYED,\n        payload: lastNote,\n    });\n\nexport const setSidebarViewMode = (mode) => (\n    {\n        type: SET_SIDEBAR_VIEW_MODE,\n        payload: mode,\n    });\n\nexport const setDiscogsSelected = (selected) => (\n    {\n        type: SET_DISCOGS_SELECTED,\n        payload: selected,\n    });\n\nexport const setSelectedFolder = (selected) => (\n    {\n        type: SET_SELECTED_FOLDER,\n        payload: selected,\n    });\n\nexport const setSelectedPreset = (selected) => (\n    {\n        type: SET_SELECTED_PRESET,\n        payload: selected,\n    });\n\nexport const setHasChangesToFolders = (flag) => (\n    {\n        type: SET_HAS_CHANGES_TO_FOLDERS,\n        payload: flag,\n    });\n\nexport const setCursorTrack = (track) => (\n    {\n        type: SET_CURSOR_TRACK,\n        payload: track,\n    });\n\nexport const setCursorStep = (step) => (\n    {\n        type: SET_CURSOR_STEP,\n        payload: step,\n    });\n\nexport const setCursorShow = (show) => (\n    {\n        type: SET_CURSOR_SHOW,\n        payload: show,\n    });\n\nexport const setFolderDragging = (folder) => (\n    {\n        type: SET_FOLDER_DRAGGING,\n        payload: folder,\n    });\n\nexport const setPresetDragging = (preset) => (\n    {\n        type: SET_PRESET_DRAGGING,\n        payload: preset,\n    });\n\nexport const setSampleDragging = (sample) => (\n    {\n        type: SET_SAMPLE_DRAGGING,\n        payload: sample,\n    });\n\nexport const setEffectsChainToShow = (subSequenceId, track, chainNumber) => (\n    {\n        type: SET_EFFECTS_CHAIN_TO_SHOW,\n        payload: {\n            subSequenceId: subSequenceId,\n            trackNumber: track,\n            chainNumber: chainNumber\n        },\n    });\n\nexport const setSubSequenceMuted = (id, muted) => (\n    {\n        type: SET_SUB_SEQUENCE_MUTED,\n        payload: {\n            id: id,\n            muted: muted,\n        },\n    });\n\nexport const setTrackFrozen = (subSequenceId, trackNumber, frozen) => (\n    {\n        type: SET_TRACK_FROZEN,\n        payload: {\n            subSequenceId: subSequenceId,\n            trackNumber: trackNumber,\n            frozen: frozen,\n        },\n    });\n\nexport const setTrackToFreeze = (subSequenceId, trackNumber) => (\n    {\n        type: SET_TRACK_TO_FREEZE,\n        payload: {\n            subSequenceId: subSequenceId,\n            trackNumber: trackNumber,\n        },\n    });\n\nexport const setFrozenTrackPlaying = (subSequenceId, trackNumber, playing) => (\n    {\n        type: SET_FROZEN_TRACK_PLAYING,\n        payload: {\n            subSequenceId: subSequenceId,\n            trackNumber: trackNumber,\n            playing: playing,\n        },\n    });\n\nexport const setFrozenTracksPlaying = (subSequenceId, frozenTracksPlaying) => (\n    {\n        type: SET_FROZEN_TRACKS_PLAYING,\n        payload: {\n            subSequenceId: subSequenceId,\n            frozenTracksPlaying: frozenTracksPlaying,\n        },\n    });\n\nexport const setFrozenTracks = (subSequenceId, frozenTracks) => (\n    {\n        type: SET_FROZEN_TRACKS,\n        payload: {\n            subSequenceId: subSequenceId,\n            frozenTracks: frozenTracks,\n        },\n    });\n\nexport const setEffectsChainsToShow = (subSequenceId, effectsChains) => (\n    {\n        type: SET_EFFECTS_CHAINS_TO_SHOW,\n        payload: {\n            subSequenceId: subSequenceId,\n            effectsChains: effectsChains,\n        },\n    });\n\nexport const setSelectedOnsets = (id, selectedOnsets) => (\n    {\n        type: SET_SELECTED_ONSETS,\n        payload: {\n            id: id,\n            selectedOnsets: selectedOnsets,\n        },\n    });\n\nexport const setSingleStepToDrag = (stepData) => (\n    {\n        type: SET_SINGLE_STEP_TO_DRAG,\n        payload: stepData\n    });\n\nexport const setStepNumberDraggedTo = (stepNumber) => (\n    {\n        type: SET_STEP_NUMBER_DRAGGED_TO,\n        payload: stepNumber\n    });\n\nexport const setSearchResultsStart = (start) => (\n    {\n        type: SET_SEARCH_RESULTS_START,\n        payload: start\n    });\n\nexport const setShowStepOptions = (option, effect) => (\n    {\n        type: SET_SHOW_STEP_OPTIONS,\n        payload: {\n            option: option,\n            effect: effect,\n        }\n    });\n\nexport const setMasterStepToggles = (steps) => (\n    {\n        type: SET_MASTER_STEP_TOGGLES,\n        payload:  steps\n    });\n\nexport const setParametersToRecord = (params) => (\n    {\n        type: SET_PARAMETERS_TO_RECORD,\n        payload:  params\n    });\n\nexport const setOnsetThreshold = (threshold) => (\n    {\n        type: SET_ONSET_THRESHOLD,\n        payload: threshold\n    });\n\nexport const setShowOnsets = (show) => (\n    {\n        type: SET_SHOW_ONSETS,\n        payload: show\n    });\n\nexport const setSelectedGuild = (guild) => (\n    {\n        type: SET_SELECTED_GUILD,\n        payload: guild\n    });\n\nexport const setPianoRollDragOffset = (offset) => (\n    {\n        type: SET_PIANO_ROLL_DRAG_OFFSET,\n        payload: offset\n    });\n\nexport const setPianoRollNotes = (notes) => (\n    {\n        type: SET_PIANO_ROLL_NOTES,\n        payload: notes\n    });\n\nexport const setStepAndDataDragging = (stepNumber, stepData) => (\n    {\n        type: SET_STEP_AND_DATA_DRAGGING,\n        payload: {\n            stepNumber: stepNumber,\n            stepData: stepData\n        }\n    });\n\nexport const setShowLogin= (show) => (\n    {\n        type: SET_SHOW_LOGIN,\n        payload: show\n    });\n\nexport const setSigningUp = (signingUp) => (\n    {\n        type: SET_SIGNING_UP,\n        payload: signingUp\n    });\n\nexport const setUserToken = (userName, token) => (\n    {\n        type: SET_USER_TOKEN,\n        payload: {\n            userName,\n            token\n        }\n    });\n\nexport const setPendingTransactions = (pendingTransactions) => (\n    {\n        type: SET_PENDING_TRANSACTIONS,\n        payload: pendingTransactions\n    });\n\nexport const setCommandInput = (input) => (\n    {\n        type: SET_COMMAND_INPUT,\n        payload: input\n    });\n\nexport const setCommandPrefix = (prefix) => (\n    {\n        type: SET_COMMAND_PREFIX,\n        payload: prefix\n    });\n\nexport const setViMode = (mode) => (\n    {\n        type: SET_VI_MODE,\n        payload: mode\n    });\n\nexport const setTrackWarp = (subSequenceId, trackNumber, warp) => (\n    {\n        type: SET_TRACK_WARP,\n        payload: {\n            subSequenceId,\n            trackNumber,\n            warp,\n        }\n    });\n\nexport const setSubSequenceWarps = (subSequenceId, warps) => (\n    {\n        type: SET_SUB_SEQUENCE_WARPS,\n        payload: {\n            subSequenceId,\n            warps,\n        }\n    });\n\nexport const setArrangementSelection = (start, end) => (\n    {\n        type: SET_ARRANGEMENT_SELECTION,\n        payload: {\n            start: start,\n            end: end,\n        }\n    });\n\nexport const setArrangementMouseX= (mouseX) => (\n    {\n        type: SET_ARRANGEMENT_MOUSE_X,\n        payload: mouseX\n    });\n\nexport const setArrangementAutomationToShow = (subSequenceId, type) => (\n    {\n        type: SET_ARRANGEMENT_AUTOMATION_TO_SHOW,\n        payload: {\n            subSequenceId,\n            type\n        }\n    });\n\nexport const setArrangementLooping = (looping) => (\n    {\n        type: SET_ARRANGEMENT_LOOPING,\n        payload: looping\n    });\n\nexport const setArrangementSelectedRows = (rows) => (\n    {\n        type: SET_ARRANGEMENT_SELECTED_ROWS,\n        payload: rows\n    });\n\nexport const setArrangementLoopSelected = (selected) => (\n    {\n        type: SET_ARRANGEMENT_LOOP_SELECTED,\n        payload: selected\n    });\n\nexport const setArrangementRowSelections = (selections) => (\n    {\n        type: SET_ARRANGEMENT_ROW_SELECTIONS,\n        payload: selections\n    });\n\nexport const setArrangementZoom = (zoom) => (\n    {\n        type: SET_ARRANGEMENT_ZOOM,\n        payload: zoom\n    });\n\nexport const setSelectedSequence = (id) => (\n    {\n        type: SET_SELECTED_SEQUENCE,\n        payload: id\n    });\n\nexport const setExploreMixerEffect = (effect, toggle) => (\n    {\n        type: SET_EXPLORE_MIXER_EFFECT,\n        payload: {\n            effect,\n            toggle\n        }\n    });\n\nexport const setExploreEQEffect = (type, toggle) => (\n    {\n        type: SET_EXPLORE_EQ_EFFECT,\n        payload: {\n            type,\n            toggle\n        }\n    });\n\nexport const setSelectedSendEffect = (effect) => (\n    {\n        type: SET_SELECTED_SEND_EFFECT,\n        payload: effect\n    });\n\nexport const setInstrumentTypeDragging = (type) => (\n    {\n        type: SET_INSTRUMENT_TYPE_DRAGGING,\n        payload: type\n    });\n\nexport const setTrackIsLoading = (subSequenceId, trackNumber, isLoading) => {\n    return {\n        type: SET_TRACK_IS_LOADING,\n        payload: {\n            subSequenceId,\n            trackNumber,\n            isLoading\n        }\n    };\n}\n\nexport const setPianoRollCursor = (cursor) => (\n    {\n        type: SET_PIANO_ROLL_CURSOR,\n        payload: cursor\n    });\n\nexport const setArrangementXScale = (xScale) => (\n    {\n        type: SET_ARRANGEMENT_X_SCALE,\n        payload: xScale\n    });\n\nexport const setTotalArrangementLength = (len) => (\n    {\n        type: SET_TOTAL_ARRANGEMENT_LENGTH,\n        payload: len\n    });\n\nexport const setArrangementBottomHeight = (height) => (\n    {\n        type: SET_ARRANGEMENT_BOTTOM_HEIGHT,\n        payload: height\n    });\n\nexport const setArrangementBottomMode = (mode) => (\n    {\n        type: SET_ARRANGEMENT_BOTTOM_MODE,\n        payload: mode\n    });\n\nexport const setArrangementBottomResizing = (isResizing) => (\n    {\n        type: SET_ARRANGEMENT_BOTTOM_RESIZING,\n        payload: isResizing,\n    });\n\nexport const setArrangementPatternDragging = (patternDragging, offsetX) => (\n    {\n        type: SET_ARRANGEMENT_PATTERN_DRAGGING,\n        payload: patternDragging === undefined ? undefined :\n            {\n                patternDragging,\n                offsetX\n            }\n    });\n\nexport const setArrangementPatternStartStep = (subSequenceId, patternId, startStep) => (\n    {\n        type: SET_ARRANGEMENT_PATTERN_START_STEP,\n        payload:  {\n            subSequenceId,\n            patternId,\n            startStep\n        }\n    });\n\nexport const setArrangementCursorStep = (step) => (\n    {\n        type: SET_ARRANGEMENT_CURSOR_STEP,\n        payload: step\n    });\n\nexport const setArrangementPatternResizing = (pattern, direction) => (\n    {\n        type: SET_ARRANGEMENT_PATTERN_RESIZING,\n        payload: pattern === undefined ? undefined :\n            {\n                pattern,\n                direction\n            }\n    });\n\nexport const setArrangementBrowserMode = (mode) => (\n    {\n        type: SET_ARRANGEMENT_BROWSER_MODE,\n        payload: mode\n    });\n\nexport const setSampleToExplore = (sampleToExplore) => (\n    {\n        type: SET_SAMPLE_TO_EXPLORE,\n        payload: sampleToExplore\n    });\n\nexport const setEffectRackNodePosition = (rackId, effectId, x, y) => (\n    {\n        type: SET_EFFECT_RACK_NODE_POSITION,\n        payload: {\n            rackId,\n            effectId,\n            x,\n            y\n        },\n    });\n\nexport const setAnnotationDragging = (dragging) => (\n    {\n        type: SET_ANNOTATION_DRAGGING,\n        payload: dragging\n    });\n\nexport const setTrackAutomationDevice = (trackId, device) => (\n    {\n        type: SET_TRACK_AUTOMATION_DEVICE,\n        payload: {\n            trackId,\n            device\n        }\n    });\n\nexport const setTrackAutomationRackDevice = (trackId, device) => (\n    {\n        type: SET_TRACK_AUTOMATION_RACK_DEVICE,\n        payload: {\n            trackId,\n            device\n        }\n    });\n\nexport const setTrackAutomationSubDevice = (trackId, subDevice) => (\n    {\n        type: SET_TRACK_AUTOMATION_SUB_DEVICE,\n        payload: {\n            trackId,\n            subDevice \n        }\n    });\n\nexport const setTrackAutomationParameter = (trackId, parameter) => (\n    {\n        type: SET_TRACK_AUTOMATION_PARAMETER,\n        payload: {\n            trackId,\n            parameter\n        }\n    });\n\nexport const setShowAutomation = (show) => (\n    {\n        type: SET_SHOW_AUTOMATION,\n        payload: {\n            show,\n        }\n    });\n\nexport const setParameterAutomations = (parameter, automations, scheduler) => (\n    {\n        type: SET_PARAMETER_AUTOMATIONS,\n        payload: {\n            parameter,\n            automations,\n            scheduler\n        }\n    });\n\nexport const setActionsRemaining = (actionsRemaining) => (\n    {\n        type: SET_ACTIONS_REMAINING,\n        payload: actionsRemaining\n    });\n\nexport const setTimeRemaining = (timeRemaining) => (\n    {\n        type: SET_TIME_REMAINING,\n        payload: timeRemaining\n    });\n\nexport const setShowPianoRoll = (showPianoRoll) => (\n    {\n        type: SET_SHOW_PIANO_ROLL,\n        payload: showPianoRoll\n    });\n\nexport const setSelectedRackSubTrack  = (trackId, track) => (\n    {\n        type: SET_SELECTED_RACK_SUB_TRACK,\n        payload: {\n            trackId,\n            track\n        }\n    });\n\nexport const deleteAutomationsForParameters = (parameters) => (\n    {\n        type: DELETE_AUTOMATIONS_FOR_PARAMETERS,\n        payload: parameters\n    });\n\nexport const deleteAutomationsForEngine = (engineId) => (\n    {\n        type: DELETE_AUTOMATIONS_FOR_ENGINE,\n        payload: engineId\n    });\n\nexport const setAutomationGuidePoint = (id, guidePoint) => (\n    {\n        type: SET_AUTOMATION_GUIDE_POINT,\n        payload: {id, guidePoint}\n    });\n\nexport const setAutomationPointDragging  = (id, point) => (\n    {\n        type: SET_AUTOMATION_POINT_DRAGGING,\n        payload: {id, point},\n    });\n\nexport const setAutomationPointHasMoved  = (id, hasMoved) => (\n    {\n        type: SET_AUTOMATION_POINT_HAS_MOVED,\n        payload: {id, hasMoved},\n    });\n\nexport const setAutomationPointHovered  = (id, pt) => (\n    {\n        type: SET_AUTOMATION_POINT_HOVERED,\n        payload: {id, pt}\n    });\n\nexport const setTrackToConvert = (track) => ({\n        type: SET_TRACK_TO_CONVERT,\n        payload: track\n    });\n\nexport const setAutomationSelection = (id, selection) => ({\n    type: SET_AUTOMATION_SELECTION,\n    payload: {id, selection}\n});\n\nexport const setAutomationPointsSelected = (id, points) => ({\n    type: SET_AUTOMATION_POINTS_SELECTED,\n    payload: {id, points}\n});\n\nexport const setExplorePersonSelected = (person) => ({\n        type: SET_EXPLORE_PERSON_SELECTED,\n        payload: person\n    });\n\nexport const setExploreAllSequences = (sequences) => ({\n        type: SET_EXPLORE_ALL_SEQUENCES,\n        payload: sequences\n    });\n\nexport const setRecordingExploreMix = (isRecording) => ({\n        type: SET_RECORDING_EXPLORE_MIX,\n        payload: isRecording\n    });\n\nexport const setWorksLoaded = (worksLoaded) => ({\n    type: SET_WORKS_LOADED,\n    payload: worksLoaded\n});\n\nexport const setWorkTranspose = (sequenceId, transpose) => ({\n    type: SET_WORK_TRANSPOSE,\n    payload: {\n        sequenceId,\n        transpose\n    }\n});\n\nexport const setWorkVolume = (sequenceId, volume) => ({\n    type: SET_WORK_VOLUME,\n    payload: {\n        sequenceId,\n        volume\n    }\n});\n\nexport const setExploreMixLoaded = (mix) => ({\n    type: SET_EXPLORE_MIX_LOADED,\n    payload: mix\n});\n\nexport const setIsMacroMapping = (isMapping) => ({\n    type: SET_IS_MACRO_MAPPING,\n    payload: isMapping\n});\n\nexport const setParameterToMap = (parameter) => ({\n    type: SET_PARAMETER_TO_MAP,\n    payload: parameter\n});\n\nexport const setMixColorValue = (id, value) => ({\n    type: SET_MIX_COLOR_VALUE,\n    payload: {id, value}\n});\n\nexport const setMixHasEdits = (hasEdits) => ({\n    type: SET_MIX_HAS_EDITS,\n    payload: hasEdits\n});\n\nexport const setScriptVariables = (id, variables) => ({\n    type: SET_SCRIPT_VARIABLES,\n    payload: {\n        id, variables\n    }\n});\n\nexport const setExploreOption = (opt) => ({\n    type: SET_EXPLORE_OPTION,\n    payload: opt\n});\n\nexport const setAnnotationsView = (work) => ({\n    type: SET_ANNOTATIONS_VIEW,\n    payload: work\n});\n\nexport const setExploreToast = (toast) => ({\n    type: SET_EXPLORE_TOAST,\n    payload: toast\n});\n\nexport const setParameterSliderDown = (param) => ({\n    type: SET_PARAMETER_SLIDER_DOWN,\n    payload: param\n});\n\nexport const moveEngineAutomations = (oldId, newId) => ({\n    type: MOVE_ENGINE_AUTOMATIONS,\n    payload: {oldId, newId}\n});\n\nexport const setSequenceLoadingProgress = (sequenceId, progress) => ({\n    type: SET_SEQUENCE_LOADING_PROGRESS,\n    payload: {sequenceId, progress}\n});\n\nexport const setTrackBrowsedSamples = (trackId, samples) => ({\n    type: SET_TRACK_BROWSED_SAMPLES,\n    payload: {trackId, samples}\n});\n\nexport const setTrackBrowsedPresets = (trackId, presets) => ({\n    type: SET_TRACK_BROWSED_PRESETS,\n    payload: {trackId, presets}\n});\n\nexport const setBottomToolbarOffset = (off) => ({\n    type: SET_BOTTOM_TOOLBAR_OFFSET,\n    payload: off\n});\n\nexport const setTrackUpdates = (updates) => ({\n    type: SET_TRACK_UPDATES,\n    payload: updates\n});\n\nexport const setIsTranscribing = (isTranscribing) => ({\n    type: SET_IS_TRANSCRIBING,\n    payload: isTranscribing\n});\n\nexport const setSampleTooltip = (sampleInfo) => ({\n    type: SET_SAMPLE_TOOLTIP,\n    payload: sampleInfo\n});\n\nexport const setSelectedFreeze = (id) => ({\n    type: SET_SELECTED_FREEZE,\n    payload: id\n});\n\nexport const setTrackLengthMode = (mode) => ({\n    type: SET_TRACK_LENGTH_MODE,\n    payload: mode\n});\n\nexport const setTrackLengthChoice = (length) => ({\n    type: SET_TRACK_LENGTH_CHOICE,\n    payload: length\n});\n\nexport const setFreezeDragging = (freeze) => ({\n    type: SET_FREEZE_DRAGGING,\n    payload: freeze\n});\n\nexport const setFreezeColumnSamples = (trackId, column, samples) => ({\n    type: SET_FREEZE_COLUMN_SAMPLES,\n    payload: {\n        trackId,\n        column,\n        samples\n    }\n});\n\nexport const setUploadingFile = (f) => ({\n    type: SET_UPLOADING_FILE,\n    payload: f\n});\n\nexport const setGroupCollapsed = (subSequenceId, groupNumber, collapsed) => ({\n    type: SET_GROUP_COLLAPSED,\n    payload: {\n        subSequenceId,\n        groupNumber,\n        collapsed\n    }\n});\n\nexport const setSelectedMixEffect = (subSequenceId, trackNumber, groupNumber, effectType, effect) => ({\n    type: SET_SELECTED_MIX_EFFECT,\n    payload: {\n        subSequenceId,\n        trackNumber,\n        groupNumber,\n        effectType,\n        effect\n    }\n});\n\nexport const setSamplesDragging = (samples) => ({\n    type: SET_SAMPLES_DRAGGING,\n    payload: samples\n});\n\nexport const setDisplayResolution = (resolution) => ({\n    type: SET_DISPLAY_RESOLUTION,\n    payload: resolution\n});\n\nexport const setOfflineEngine = (offlineEngine) => ({\n    type: SET_OFFLINE_ENGINE,\n    payload: offlineEngine\n});\n\nexport const setCurrentExportInfo = (name, index, total) => ({\n    type: SET_CURRENT_EXPORT_INFO,\n    payload: name === undefined ?\n        undefined :\n        {\n            name, index, total\n        }\n});\n\nexport const setMixTrackDragging = (track) => ({\n    type: SET_MIX_TRACK_DRAGGING,\n    payload: track\n});\n\nexport const setGroupTracks = (groupId, tracks) => ({\n    type: SET_GROUP_TRACKS,\n    payload: {\n        groupId,\n        tracks\n    }\n});\n\nexport const setLoadingText = (loadingText) => ({\n    type: SET_LOADING_TEXT,\n    payload: loadingText\n});\n\nexport const setTrackEnvelopes = (id, envelopes) => ({\n    type: SET_TRACK_ENVELOPES,\n    payload:  {\n        id, envelopes \n    }\n});\n\nexport const setCopiedNodesForRack = (nodes) => ({\n    type: SET_COPIED_NODES_FOR_RACK,\n    payload: nodes\n});\n\nexport const setLastMidiCCPlayed = (midiCC) => ({\n    type: SET_LAST_MIDI_CC_PLAYED,\n    payload: midiCC\n});\n\nexport const setArrangementMouseDownX = (mouseX) => ({\n    type: SET_ARRANGEMENT_MOUSE_DOWN_X,\n    payload: mouseX\n});\n\nexport const setTrackerParameterToEdit= (parameter) => ({\n    type: SET_TRACKER_PARAMETER_TO_EDIT,\n    payload: parameter\n});\n\nexport const setTracksToHide = (tracks) => ({\n    type: SET_TRACKS_TO_HIDE,\n    payload: tracks\n});\n\nexport const setSelectedPalette = (trackId, palette) => ({\n    type: SET_SELECTED_PALETTE,\n    payload: {trackId, palette}\n});\n\nexport const setSequencedPalette = (trackId, palette) => ({\n    type: SET_SEQUENCED_PALETTE,\n    payload: {trackId, palette}\n});\n\n\nexport const setProjectDragging = (project) => ({\n    type: SET_PROJECT_DRAGGING,\n    payload: project\n});\n\nexport const setExploreUnpublished = (changed) => ({\n    type: SET_EXPLORE_UNPUBLISHED,\n    payload: changed\n});\n\nexport const setQuickAddSearchText = (text) => ({\n    type: SET_QUICK_ADD_SEARCH_TEXT,\n    payload: text\n});\n\nexport const setShowTrackFreezeHistory = (id, show) => ({\n    type: SET_SHOW_TRACK_FREEZE_HISTORY,\n    payload: {id, show}\n});\n\nexport const setSelectedMidiTrack = (track) => ({\n    type: SET_SELECTED_MIDI_TRACK,\n    payload: track\n});\n\nexport const setSelectedTrackSlice = (track, slice) => ({\n    type: SET_SELECTED_TRACK_SLICE,\n    payload: {\n        track, slice\n    }\n});\n\nexport const setCirklonParameterSelected = (track, parameter) => ({\n    type: SET_CIRKLON_PARAMETER_SELECTED,\n    payload: {\n        track,\n        parameter\n    }\n});\n\nexport const setCirklonMode = (track, mode) => ({\n    type: SET_CIRKLON_MODE,\n    payload: {\n        track,\n        mode\n    }\n});\n\nexport const setNotesDown = (notes) => ({\n    type: SET_NOTES_DOWN,\n    payload: notes\n\n});\n\nexport const setScenes = (scenes) => ({\n    type: SET_SCENES,\n    payload: scenes\n});\n\nexport const setCurrentScene = (scene) => ({\n    type: SET_CURRENT_SCENE,\n    payload: scene\n});\n\nexport const setShowSettings = (show) => ({\n    type: SET_SHOW_SETTINGS,\n    payload: show\n});\n\nexport const setWallpaper  = (wallpaper) => ({\n    type: SET_WALLPAPER,\n    payload: wallpaper\n});\n\nexport const setAnimateWallpaper  = (wallpaper) => ({\n    type: SET_ANIMATE_WALLPAPER,\n    payload: wallpaper\n});\n\nexport const setExpandedProject = (project) => ({\n    type: SET_EXPANDED_PROJECT,\n    payload: project\n});\n\nexport const setAccumulatorParameterSelected = (param) => ({\n    type: SET_ACCUMULATOR_PARAMETER_SELECTED,\n    payload: param\n});\n\nexport const setPlaneMapping = (plane) => ({\n    type: SET_PLANE_MAPPING,\n    payload: plane\n});\n\nexport const setTrackPresetSaving = (track) => ({\n    type: SET_TRACK_PRESET_SAVING,\n    payload: track\n});\n\nexport const setSampleTagDragging = (tag) => ({\n    type: SET_SAMPLE_TAG_DRAGGING,\n    payload: tag\n});\n\nexport const setParameterMixAutomations = (parameter, automations, scheduler) => ({\n    type: SET_PARAMETER_MIX_AUTOMATIONS,\n    payload: {\n        parameter,\n        automations,\n        scheduler\n    }\n});\n\nexport const setShowArrangementTracks = (subSequenceId, show) => ({\n    type: SET_SHOW_ARRANGEMENT_TRACKS,\n    payload: {\n        subSequenceId,\n        show\n    }\n});\n\nexport const setArrangementPatternSelected = (pattern) => ({\n    type: SET_ARRANGEMENT_PATTERN_SELECTED,\n    payload: pattern\n});\n\nexport const setSidebarSearchInput = (element) => ({\n    type: SET_SIDEBAR_SEARCH_INPUT,\n    payload: element\n});\n\nexport const setShowArrangementSearcher = (show) => ({\n    type: SET_SHOW_ARRANGEMENT_SEARCHER,\n    payload: show\n});\n\nexport const setExploreWork = (work) => ({\n    type: SET_EXPLORE_WORK,\n    payload: work\n});\n\nexport const setCreatingNewPack = (creating) => ({\n    type: SET_CREATING_NEW_PACK,\n    payload: creating\n});\n\nexport const setPackWindowPosition = (x,y) => ({\n    type: SET_PACK_WINDOW_POSITION,\n    payload: {x,y}\n});\n\nexport const setDraggingPackWindow = (dragging) => ({\n    type: SET_DRAGGING_PACK_WINDOW,\n    payload: dragging\n});\n\nexport const setPackToEdit = (pack) => ({\n    type: SET_PACK_TO_EDIT,\n    payload: pack\n});\n\nexport const setIsManagingGuilds = (s) => ({\n    type: SET_IS_MANAGING_GUILDS,\n    payload: s\n});\n\nexport const newStepGroup = (g) => ({\n    type: NEW_STEP_GROUP,\n    payload: g\n});\n\nexport const setStepsGroupMode = (g) => ({\n    type: SET_STEPS_GROUP_MODE,\n    payload: g\n});\n\nexport const setTransformationEdgeDragging= (tr) => ({\n    type: SET_TRANSFORMATION_EDGE_DRAGGING,\n    payload: tr\n});\n\nexport const setShowFormantEffect = (formant) => ({\n    type: SET_SHOW_FORMANT_EFFECT,\n    payload: formant\n});\n\nexport const setShowingFormants = (show) => ({\n    type: SET_SHOWING_FORMANTS,\n    payload: show\n});\n\nexport const setPulledEffects = (effects) => ({\n    type: SET_PULLED_EFFECTS,\n    payload: effects\n});\n\nexport const setLoopsToFreeze = (loops) => ({\n    type: SET_LOOPS_TO_FREEZE,\n    payload: loops\n});\n\nexport const setParameterMinMax = (bulk) => ({\n    type: SET_PARAMETER_MIN_MAX,\n    payload: bulk\n});\n\nexport const setCurrentSoundInList = (number) => ({\n    type: SET_CURRENT_SOUND_IN_LIST,\n    payload: number\n});\n\nexport const setShowingSoundList = (show) => ({\n    type: SET_SHOWING_SOUND_LIST,\n    payload: show\n});\n\nexport const setCurrentTagInList = (number) => ({\n    type: SET_CURRENT_TAG_IN_LIST,\n    payload: number\n});\n\nexport const setLinkingEffects = (effect, name) => ({\n    type: SET_LINKING_EFFECTS,\n    payload: effect ? {\n        effect,\n        name\n    } : undefined\n});\n\nexport const setPackSelected = (number) => ({\n    type: SET_PACK_SELECTED,\n    payload: number\n});\n\nexport const setSampleExplorerSelected = (f) => ({\n    type: SET_SAMPLE_EXPLORER_SELECTED,\n    payload: f\n});\n\nexport const setPianoRollSlide = (f) => ({\n    type: SET_PIANO_ROLL_SLIDE,\n    payload: f\n});\n\nexport const setMaximizeExplorer = (f) => ({\n    type: SET_MAXIMIZE_EXPLORER,\n    payload: f\n});\n\nexport const setPads = (id, pads) => ({\n    type: SET_PADS,\n    payload: {\n        id, pads\n    }\n});\n\nexport const setPadSlots = (id, slots) => ({\n    type: SET_PAD_SLOTS,\n    payload: {\n        id, slots\n    }\n});\n\nexport const setPadHovered = (f) => ({\n    type: SET_PAD_HOVERED,\n    payload: f\n});\n\nexport const setWaveformShowing = (f) => ({\n    type: SET_WAVEFORM_SHOWING,\n    payload: f\n});\n\nexport const setTrackDragging = (f) => ({\n    type: SET_TRACK_DRAGGING,\n    payload: f\n});\n\nexport const setHideMixer = (h) => ({\n    type: SET_HIDE_MIXER,\n    payload: h\n});\n\nexport const setSourceExploring = (h) => ({\n    type: SET_SOURCE_EXPLORING,\n    payload: h\n});\n\nexport const setYearExploring = (year) => ({\n    type: SET_YEAR_EXPLORING,\n    payload: year\n});\n\nexport const setPullablePartDragging = (part) => ({\n    type: SET_PULLABLE_PART_DRAGGING,\n    payload: part\n});\n\nexport const setPadsExpand = (id) => ({\n    type: SET_PADS_EXPAND,\n    payload: id\n});\n\nexport const setSequencers = (id, sequencers) => ({\n    type: SET_SEQUENCERS,\n    payload: {id, sequencers}\n});\n\nexport const setSequencerTracks = (id, tracks) => ({\n    type: SET_SEQUENCER_TRACKS,\n    payload: {id, tracks}\n});\n\nexport const setPlaneMacros = (id, macros) => ({\n    type: SET_PLANE_MACROS,\n    payload: {id, macros}\n});\n\nexport const setWindowPosition = (id, position) => ({\n    type: SET_WINDOW_POSITION,\n    payload: {id, position}\n});\n\nexport const setPresentationWindowPosition = (id, position) => ({\n    type: SET_PRESENTATION_WINDOW_POSITION,\n    payload: {id, position}\n});\n\nexport const setPadEffects = (id, effects) => ({\n    type: SET_PAD_EFFECTS,\n    payload: {id, effects}\n});\n\nexport const setDrawingPadEdge = (id, edge) => ({\n    type: SET_DRAWING_PAD_EDGE,\n    payload: {id, edge}\n});\n\nexport const setSelectedPadEdge  = (edge) => ({\n    type: SET_SELECTED_PAD_EDGE,\n    payload: edge\n});\n\nexport const setBulkEffectsCollapsed = (x) => ({\n    type: SET_BULK_EFFECTS_COLLAPSED,\n    payload: x\n});\n\nexport const setSelectedPulledElements = (x) => ({\n    type: SET_SELECTED_PULLED_ELEMENTS,\n    payload: x\n});\n\nexport const setBulkWindowPositions = (bulk) => ({\n    type: SET_BULK_WINDOW_POSITIONS,\n    payload: bulk\n});\n\nexport const setBulkPresentationWindowPositions = (bulk) => ({\n    type: SET_BULK_PRESENTATION_WINDOW_POSITIONS,\n    payload: bulk\n});\n\nexport const setAllEffectPatternLocks = (bulk) => ({\n    type: SET_ALL_EFFECT_PATTERN_LOCKS,\n    payload: bulk\n});\n\nexport const setModuleCollapsed = (id, collapsed) => ({\n    type: SET_MODULE_COLLAPSED,\n    payload: {\n        id, collapsed\n    }\n});\n\nexport const setTrackMidiEffects = (id, effects) => ({\n    type: SET_TRACK_MIDI_EFFECTS,\n    payload: {\n        id, effects\n    }\n});\n\nexport const setEffectStarred = (id, starred) => ({\n    type: SET_EFFECT_STARRED,\n    payload: {\n        id, starred\n    }\n});\n\nexport const setBulkEffectsStarred = (bulk) => ({\n    type: SET_BULK_EFFECTS_STARRED,\n    payload: bulk\n});\n\nexport const setBulkModulesCollapsed = (bulk) => ({\n    type: SET_BULK_MODULES_COLLAPSED,\n    payload: bulk\n});\n\nexport const deleteTrackId = (id) => ({\n    type: DELETE_TRACK_ID,\n    payload: id\n});\n\nexport const setShowingContextMenu = (show) => ({\n    type: SET_SHOWING_CONTEXT_MENU,\n    payload: show\n});\n\nexport const setHigherOrderMatrix = (matrix) => ({\n    type: SET_HIGHER_ORDER_MATRIX,\n    payload: matrix\n});\n\nexport const setModuleColor = (id, color) => ({\n    type: SET_MODULE_COLOR,\n    payload: {\n        id, color\n    }\n});\n\nexport const setModulesRouting = (inputModules, outputModules) => ({\n    type: SET_MODULES_ROUTING,\n    payload: {inputModules, outputModules}\n});\n\nexport const setHigherOrderStepsSelected = (steps) => ({\n    type: SET_HIGHER_ORDER_STEPS_SELECTED,\n    payload: steps\n});\n\nexport const setOrientationRoutings = (routings) => ({\n    type: SET_ORIENTATION_ROUTINGS,\n    payload: routings\n});\n\nexport const setShowHigherOrderSequencer = (show) => ({\n    type: SET_SHOW_HIGHER_ORDER_SEQUENCER,\n    payload: show\n});\n\nexport const setPlanar = (track, planar) => ({\n    type: SET_PLANAR,\n    payload: {track, planar}\n});\n\nexport const setPlanarGradientColor = (id, color) => ({\n    type: SET_PLANAR_GRADIENT_COLOR,\n    payload: {id, color}\n});\n\nexport const setPlanarOpacity = (id, opacity) => ({\n    type: SET_PLANAR_OPACITY,\n    payload: {id, opacity}\n});\n\nexport const setModuleSize = (id, size) => ({\n    type: SET_MODULE_SIZE,\n    payload: {id, size}\n});\n\nexport const setInletConnections = (id, connections) => ({\n    type: SET_INLET_CONNECTIONS,\n    payload: {id, connections}\n});\n\nexport const setZObjects = (id, objects) => ({\n    type: SET_ZOBJECTS,\n    payload: {id, objects}\n});\n\nexport const setZMessages = (id, messages) => ({\n    type: SET_ZMESSAGES,\n    payload: {id, messages}\n});\n   \nexport const setBackgroundColor = (color) => ({\n    type: SET_BACKGROUND_COLOR,\n    payload: color\n});\n\nexport const setViewableSubPatches = (subpatches) => ({\n    type: SET_VIEWABLE_SUBPATCHES,\n    payload: subpatches\n});\n\nexport const setViewableZObjects = (zobjects) => ({\n    type: SET_VIEWABLE_ZOBJECTS,\n    payload: zobjects\n});\n\nexport const setSelectedZObject = (obj) => ({\n    type: SET_SELECTED_ZOBJECT,\n    payload: obj\n});\n\nexport const setJakiGrid = (id, grid) => ({\n    type: SET_JAKI_GRID,\n    payload: {id, grid}\n});\n\nexport const setZObjectTypeDragging = (type) => ({\n    type: SET_ZOBJECT_TYPE_DRAGGING,\n    payload: type\n});\n\nexport const setUXLocked = (locked) => ({\n    type: SET_UX_LOCKED,\n    payload: locked\n});\n\nexport const setMintedTokens = (tokens) => ({\n    type: SET_MINTED_TOKENS,\n    payload: tokens\n});\n\nexport const setHicDialog = (data) => ({\n    type: SET_HIC_DIALOG,\n    payload: data\n});\n\nexport const setIsPreparingNFT = (flag) => ({\n    type: SET_IS_PREPARING_NFT,\n    payload: flag\n});\n\nexport const setFullScreenZObject = (zobject) => ({\n    type: SET_FULL_SCREEN_ZOBJECT,\n    payload: zobject\n});\n\nexport const setMainScrollRef = (ref) => ({\n    type: SET_MAIN_SCROLL_REF,\n    payload: ref\n});\n\nexport const setViewportPosition = (position) => ({\n    type: SET_VIEWPORT_POSITION,\n    payload: position\n});\n\nexport const setSidebarsShowing= (s) => ({\n    type: SET_SIDEBARS_SHOWING,\n    payload: s\n});\n\nexport const setShowPadSequencer= (s) => ({\n    type: SET_SHOW_PAD_SEQUENCER,\n    payload: s\n});\n\nexport const setShowProjectsModal= (s) => ({\n    type: SET_SHOW_PROJECTS_MODAL,\n    payload: s\n});\n\nexport const setShowSearchWindow = (s) => ({\n    type: SET_SHOW_SEARCH_WINDOW,\n    payload: s\n});\n\n\nexport const setStepParameterSelected = (s) => ({\n    type: SET_STEP_PARAMETER_SELECTED,\n    payload: s\n});\n\nexport const setShowTrackInstrument = (s) => ({\n    type: SET_SHOW_TRACK_INSTRUMENT,\n    payload: s\n});\n\nexport const setShowModulators = (s) => ({\n    type: SET_SHOW_MODULATORS,\n    payload: s\n});\n\nexport const setCableSegmentation = (id, segmentation) => ({\n    type: SET_CABLE_SEGMENTATION,\n    payload: {\n        id,\n        segmentation\n    }\n});\n\nexport const setCableSegmentations = (segmentations) => ({\n    type: SET_CABLE_SEGMENTATIONS,\n    payload: segmentations\n});\n\nexport const setUXLockObject= (id, lock) => ({\n    type: SET_UX_LOCK_OBJECT,\n    payload: {id, lock}\n});\n\nexport const setUXLockObjects = ( locks) => ({\n    type: SET_UX_LOCK_OBJECTS,\n    payload: locks\n});\n\nexport const setUXHideObject = ( id, hide) => ({\n    type: SET_UX_HIDE_OBJECT,\n    payload: {id, hide}\n});\n\nexport const setUXHideObjects = ( locks) => ({\n    type: SET_UX_HIDE_OBJECTS,\n    payload: locks\n});\n\nexport const setZoraDialog = (zora) => ({\n    type: SET_ZORA_DIALOG,\n    payload: zora\n});\n\nexport const setZObjectInputText = (txt) => ({\n    type: SET_ZOBJECT_INPUT_TEXT,\n    payload: txt\n});\n\nexport const setShowEditorBottom = (show) => ({\n    type: SET_SHOW_EDITOR_BOTTOM,\n    payload: show\n});\n\nexport const setMintingProgress = (progress) => ({\n    type: SET_MINTING_PROGRESS,\n    payload: progress\n});\n\nexport const setNewZoraTokenId  = (tokenId) => ({\n    type: SET_NEW_ZORA_TOKEN_ID,\n    payload: tokenId\n});\n\nexport const setTransactionUponLogin = (transaction) => ({\n    type: SET_TRANSACTION_UPON_LOGIN,\n    payload: transaction\n});\n\nexport const setKeyboardContext = (object) => ({\n    type: SET_KEYBOARD_CONTEXT,\n    payload: object\n});\n\nexport const setPadFXMode = (id, mode) => ({\n    type: SET_PAD_FX_MODE,\n    payload: {id, mode}\n});\n\nexport const setJakiGridMode = (mode) => ({\n    type: SET_JAKI_GRID_MODE,\n    payload: mode\n});\n\nexport const setObjectStyling = (id, styling) => ({\n    type: SET_OBJECT_STYLING,\n    payload: {\n        id, styling\n    }\n});\n\nexport const setSelectedPlanarParameters = (id, selected) => ({\n    type: SET_SELECTED_PLANAR_PARAMETERS,\n    payload: {\n        id, selected\n    }\n});\n\nexport const setFilteredPlanarParameters = (id, filtered) => ({\n    type: SET_FILTERED_PLANAR_PARAMETERS,\n    payload: {\n        id, filtered\n    }\n});\n\nexport const setPlanarMacroToShow = (id, macro) => ({\n    type: SET_PLANAR_MACRO_TO_SHOW,\n    payload: {\n        id, macro\n    }\n});\n\nexport const setPlanarRegionMode = (id, isRegionMode) => ({\n    type: SET_PLANAR_REGION_MODE,\n    payload: {\n        id, isRegionMode\n    }\n});\n\nexport const setGroupPresetsByPacks  = (groupBy) => ({\n    type: SET_GROUP_PRESETS_BY_PACKS,\n    payload: groupBy\n});\n\nexport const setPianoRolllLeftSpace = (leftSpace) => ({\n    type: SET_PIANO_ROLL_LEFT_SPACE,\n    payload: leftSpace\n});\n\nexport const setZObjectSize = (id, size) => ({\n    type: SET_ZOBJECT_SIZE,\n    payload: {id, size}\n});\n\nexport const setSecondaryZObject = (zobject) => ({\n    type: SET_SECONDARY_ZOBJECT,\n    payload: zobject\n});\n\nexport const clearDragDrop = () => ({\n    type: CLEAR_DRAG_DROP,\n    payload: {}\n});\n\nexport const setSamplesToSave = (samples) => ({\n    type: SET_SAMPLES_TO_SAVE,\n    payload: samples\n});\n\nexport const setEditorPadding = (x,y) => ({\n    type: SET_EDITOR_PADDING,\n    payload: {x,y}\n});\n\nexport const setEdgesPadding = (x,y) => ({\n    type: SET_EDGES_PADDING,\n    payload: {x,y}\n});\n\nexport const setEdgesSize = (width, height) => ({\n    type: SET_EDGES_SIZE,\n    payload: {\n        width,\n        height}\n});\n\nexport const setLeftSidebarWidth = (width) => ({\n    type: SET_LEFT_SIDEBAR_WIDTH,\n    payload: width\n        \n});\n\nexport const setMovingPadEdge = (edge) => ({\n    type: SET_MOVING_PAD_EDGE,\n    payload: edge\n});\n\nexport const setDocumentationSubSection = (sub) => ({\n    type: SET_DOCUMENTATION_SUB_SECTION,\n    payload: sub\n});\n\nexport const setRightSidebarOption = (sub) => ({\n    type: SET_RIGHT_SIDEBAR_OPTION,\n    payload: sub\n});\n\n\nexport const setSelectedFMEnvelopeType = (type) => ({\n    type: SET_SELECTED_FM_ENVELOPE_TYPE,\n    payload: type\n});\n\nexport const setSelectedFMOperatorDetails  = (type) => ({\n    type: SET_SELECTED_FM_OPERATOR_DETAILS,\n    payload: type\n});\n\nexport const setSelectedFMFormant  = (type) => ({\n    type: SET_SELECTED_FM_FORMANT,\n    payload: type\n});\n\nexport const setShowSaveModal = (show) => ({\n    type: SET_SHOW_SAVE_MODAL,\n    payload: show\n});\n\nexport const setZObjectFlashing = (id, timestamp) => ({\n    type: SET_ZOBJECT_FLASHING,\n    payload: {\n        id,\n        timestamp\n    }\n});\n\nexport const setSampleDownloadProgress = (downloaded, total) => ({\n    type: SET_SAMPLE_DOWNLOAD_PROGRESS,\n    payload: {\n        downloaded,\n        total\n    }\n});\n\nexport const setPresetSaved = (preset) => ({\n    type: SET_PRESET_SAVED,\n    payload: preset\n});\n\nexport const setCompletelyDoneLoading = (load) => ({\n    type: SET_COMPLETELY_DONE_LOADING,\n    payload: load\n});\n\nexport const setPluginToSave = (zobject) => ({\n    type: SET_PLUGIN_TO_SAVE,\n    payload: zobject\n});\n\n\nexport const setShowPlugins = (show) => ({\n    type: SET_SHOW_PLUGINS,\n    payload: show\n});\n\nexport const setPluginsLoaded = (plugins) => ({\n    type: SET_PLUGINS_LOADED,\n    payload: plugins\n});\n\nexport const setShowPluginsPane = (show) => ({\n    type: SET_SHOW_PLUGINS_PANE,\n    payload: show\n});\n\nexport const setPluginsPaneHeight = (h) => ({\n    type: SET_PLUGINS_PANE_HEIGHT,\n    payload: h\n});\n\nexport const setDroppedSamples = (h) => ({\n    type: SET_DROPPED_SAMPLES,\n    payload: h\n});\n\nexport const setShowFormantPresets= (show) => ({\n    type: SET_SHOW_FORMANT_PRESETS,\n    payload: show\n});\n\nexport const setZObjectBackground = (zobject) => ({\n    type: SET_ZOBJECT_BACKGROUND,\n    payload: zobject\n});\n\nexport const setPresentationMode = (mode) => ({\n    type: SET_PRESENTATION_MODE,\n    payload: mode\n});\n\nexport const setShowFreezeModal = (show) => ({\n    type: SET_SHOW_FREEZE_MODAL,\n    payload: show\n});\n\nexport const setTheme = (theme) => ({\n    type: SET_THEME,\n    payload: theme\n});\n\nexport const setShowThemeGrid = (show) => ({\n    type: SET_SHOW_THEME_GRID,\n    payload: show\n});\n\n\nexport const setRecentlyAddedSounds = (samples) => ({\n    type: SET_RECENTLY_ADDED_SOUNDS,\n    payload: samples\n});\n\nexport const setZObjectTooltip = (id, position, text) => ({\n    type: SET_ZOBJECT_TOOLTIP,\n    payload: {\n        id,\n        position,\n        text\n    }\n});\n\nexport const setZObjectsStack = (stack) => ({\n    type: SET_ZOBJECTS_STACK,\n    payload: stack\n});\n\nexport const setZObjectContextMenu = (id, position, zobject) => ({\n    type: SET_ZOBJECT_CONTEXT_MENU,\n    payload: {\n        id,\n        position,\n        zobject\n    }\n});\n\nexport const setObjectDragging = (object) => ({\n    type: SET_OBJECT_DRAGGING,\n    payload: object\n});\n\nexport const setEnableRollViewer = (enable) => ({\n    type: SET_ENABLE_ROLL_VIEWER,\n    payload: enable\n});\n\nexport const setZObjectModal = (modal) => ({\n    type: SET_ZOBJECT_MODAL,\n    payload: modal\n});\n\nexport const setZObjectProgressBar = (text) => ({\n    type: SET_ZOBJECT_PROGRESSBAR,\n    payload: text\n});\n\nexport const setShowPlaylistMenu = (show) => ({\n    type: SET_SHOW_PLAYLIST_MENU,\n    payload: show\n});\n\nexport const setCurrentPlaylistSong = (song) => ({\n    type: SET_CURRENT_PLAYLIST_SONG,\n    payload: song\n});\n\nexport const setSporeTokenId = (tokenId) => ({\n    type: SET_SPORE_TOKEN_ID,\n    payload: tokenId\n});\n\nexport const setSoldPlayers = (sold) => ({\n    type: SET_SOLD_PLAYERS,\n    payload: sold\n});\n\nexport const setPendingSpores = (spores) => ({\n    type: SET_PENDING_SPORES,\n    payload: spores\n});\n\nexport const setUsedCheatCode = (spores) => ({\n    type: SET_USED_CHEAT_CODE,\n    payload: spores\n});\n\nexport const setSecondsRemaining = (time) => ({\n    type: SET_SECONDS_REMAINING,\n    payload: time\n});\n\nexport const setPlaylistLoaded = (playlist) => ({\n    type: SET_PLAYLIST_LOADED,\n    payload: playlist\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","export const SET_RESOLUTION = 1;\nexport const SET_SEQUENCER_ENGINE = 2;\nexport const SET_VIEW_MODE = 3;\nexport const SET_DETAILS_VIEW = 4;\nexport const SET_DECENTRALIZED = 5;\nexport const SET_SELECTOR_MODE = 6;\nexport const SET_NUMBER_PATTERNS= 7;\nexport const SET_CURRENT_PATTERN = 8;\nexport const SET_CURRENT_STEP = 9;\nexport const SET_CURRENT_GLOBAL_STEP = 10;\n\nexport const SET_SAMPLE = 11;\n\nexport const START_TRIGGER_TRACK = 12;\nexport const STOP_TRIGGER_TRACK = 13;\n\nexport const TOGGLE_TRACK = 14;\nexport const UNTOGGLE_TRACK = 15;\n\nexport const SET_SAMPLE_PACK = 16;\n\nexport const ADD_SAMPLE_PACK = 17;\nexport const REMOVE_SAMPLE_PACK = 18;\n\nexport const DRAG_SAMPLE = 19;\nexport const DRAG_EFFECT = 20;\nexport const DRAG_PATTERN = 21;\n\n// for when the user drags across steps to quickly toggle them,\n// either true (the mouse is currently clicking and dragging) or\n// false (the mouse is not clicking right now)\nexport const MOUSE_DOWN = 22;\n\n// when MOUSE_DOWN is true, this is used to tell you whether it should\n// toggle the step should toggle on or off\nexport const DRAG_TOGGLE = 23;\nexport const DRAG_STEP_TRANSPOSE = 24;\n\n// true when the \"command\" key is held down, this mode allows\n// people to drag the durations of steps\nexport const COMMAND_DOWN = 25;\n\nexport const TRACK_RECORDING = 26;\nexport const TRACK_PREPARING_TO_RECORD = 27;\n\nexport const SET_TRACK_STEPS = 28;\nexport const UPDATE_STEPS_FOR_ALL_TRACKS = 29;\nexport const SET_ALL_TRACK_STEPS = 30;\nexport const SET_TRACK_FILLS = 31;\nexport const SET_TRACK_PIANO_ROLL_STEPS = 32;\n\nexport const SET_SELECTED_TRACK = 33;\nexport const SET_SELECTED_GROUP = 34;\n\nexport const SET_TRACK_VOLUME = 35;\nexport const SET_TRACK_MUTED = 36;\nexport const SET_TRACK_SOLO = 37;\n\nexport const SET_GROUP_VOLUME = 38;\nexport const SET_GROUP_MUTED = 39;\n\nexport const SET_QUANTIZED = 40;\nexport const SET_IS_RECORDING = 41;\nexport const SET_IS_RECORDING_EXPANDED  = 42;\nexport const SET_IS_RECORDING_MIX = 43;\nexport const SET_IS_PLAYING = 44; \nexport const SET_IS_PLAYING_MIX = 45;\n\nexport const SET_SEND_MUTED = 46;\n\nexport const SET_SELECTED_STEP = 47;\nexport const SET_HOVERED_STEP = 48;\n\nexport const SET_STEP_DRAGGING = 49;\nexport const SET_STEP_TO_COPY = 50;\n\nexport const SET_SEQUENCE_NAME = 51;\n\nexport const SET_SELECTED_EFFECT = 52;\n\nexport const SET_EFFECT_PARAMETER_VALUE = 53;\n\nexport const SET_EFFECTS_PANE_OPTION = 54;\n\nexport const SET_SELECTED_PARAMETER = 55;\nexport const SET_SELECTED_PARAMETER_FLASHING = 56;\n\nexport const SET_MIXES = 57;\nexport const SET_CURRENT_MIX = 58;\n\nexport const SET_ERASING_AUTOMATION = 59;\n\nexport const SET_TRACK_SEND_VOLUME = 60;\n\nexport const SET_TRACK_FOCUSED = 61;\n\nexport const SET_YEAR_SELECTED = 62;\nexport const SET_COUNTRIES_SELECTED = 63;\nexport const SET_VIDEOS_SELECTED = 64;\nexport const SET_STYLES_SELECTED = 65;\nexport const SET_TAGS_SELECTED = 66;\nexport const SET_HIERARCHY_ROOT = 67;\nexport const SET_HIERARCHY_TREE = 68;\nexport const SET_SHOW_YEAR_SLIDER = 69;\nexport const SET_SHOW_COUNTRIES = 70;\nexport const SET_SHOW_VIDEOS = 71;\nexport const SET_SHOW_STYLES = 72;\nexport const SET_SHOW_TAGS = 73;\nexport const SET_SHOW_CHORD_FILTER = 74;\nexport const SET_CHORD_SELECTED = 75;\n\nexport const SET_IS_DRAGGING_DURATION = 76;\nexport const SET_STEP_DATA_DRAGGING = 77;\n\nexport const SET_PIANO_ROLL_SELECTION = 78;\nexport const SET_SELECTED_PIANO_ROLL_STEPS  = 79;\n\nexport const SET_SEARCH_RESULTS_SAMPLES = 80;\n\nexport const SET_SELECTED_CHORD_SAMPLE = 81;\n\nexport const SET_STEPS_TO_COPY = 82;\n\nexport const SET_LOADING_SEQUENCE = 83;\n\nexport const SET_EASY_PATTERN_TO_COPY = 84;\n\nexport const SET_SAMPLE_AUDITIONING = 85;\n\nexport const SET_LAST_MIDI_KEY_MAPPED = 86;\n\nexport const SET_TRACK_IS_ENABLED = 87;\n\nexport const SET_SELECTED_SAMPLE_TAG = 88;\n\nexport const SET_TRANSPOSE_DRAGGING = 89;\n\nexport const SET_MASTER_VOLUME = 90;\n\nexport const SET_USER_VIEW_MODE = 91;\n\nexport const SET_CURRENT_USER_MIX = 92;\n\nexport const SET_USER_HAS_EDITS_TO_SAVE = 93;\n\nexport const SET_PATTERN_TO_EDIT_COLOR = 94;\nexport const SET_PATTERN_COLOR = 95;\n\nexport const SET_COMPACT_MODE = 96;\n\nexport const SET_SHOW_LFOS = 97;\n\nexport const SET_TRACKS_TO_RESAMPLE = 98;\n\nexport const SET_PROJECT_AUTOMATION_MODE = 99;\n\nexport const NEW_SEQUENCE = 100;\n\nexport const SET_STEPS_SELECTION = 101;\nexport const SET_SELECTED_STEPS = 102;\nexport const SET_STEP_NUMBER_DRAGGING_FROM = 103;\n\nexport const SET_ALL_TRACK_PATTERN_LOCKS = 104;\nexport const SET_ALL_ENVELOPE_LOCKS = 105;\nexport const SET_ALL_LFO_LOCKS = 106;\nexport const SET_TRACK_PATTERN_LOCKED = 107;\nexport const SET_TRACK_PATTERN_LOCKS = 108;\nexport const SET_LFO_PATTERN_LOCKS = 109;\nexport const SET_ENVELOPE_PATTERN_LOCKS = 110;\nexport const SET_PIANO_ROLL_PAGINATION = 111;\n\nexport const SET_IS_RESAMPLING = 112;\n\nexport const SET_RESAMPLE_DURATION = 113;\n\nexport const SET_KEY_MAPPINGS = 114;\n\nexport const SET_SHOW_SEQUENCE_MODAL = 115;\n\nexport const SET_MULTI_PARAMETER_SLIDER = 116;\n\nexport const SET_SHOW_MODS_MODAL = 117;\n\nexport const SET_SEQUENCE_ROLLING = 118;\n\nexport const SET_TRACK_EFFECTS_CHAIN = 119;\n\nexport const SET_SHOW_SEQUENCES = 120;\nexport const SET_SHOW_PRESETS = 121;\nexport const SET_SHOW_INSTRUMENTS = 122;\n\nexport const SET_TRACK_ROLLING = 123;\n\nexport const SET_Z_INDEX_HACK = 124;\n\nexport const SET_LOADED_TRACKS = 125;\n\nexport const SET_BPM = 126;\n\nexport const SET_RESAMPLE_MASTER = 127;\n\nexport const SET_YOUTUBE_SEARCH_TERMS = 128;\n\nexport const SET_AUDIO_INPUT_SOURCE = 129;\n\nexport const SET_WAVEFORM_SELECTION = 130;\n\nexport const SET_WAVEFORM_SELECTION_END = 131;\n\nexport const SET_MIDI_MAP_MODE = 132;\nexport const SET_PARAMETER_MIDI_MAP_SELECTION = 133;\nexport const SET_PARAMETER_MIDI_MAPPING = 134;\nexport const DELETE_PARAMETER_MIDI_MAPPING = 135;\n\nexport const SET_LATENCY = 136;\n\nexport const SET_PAD_MAPPINGS = 137;\n\nexport const SET_ACTION_MIDI_MAP_SELECTION = 138;\nexport const SET_ACTION_MIDI_MAPPING = 139;\nexport const DELETE_MIDI_MAPPINGS = 140;\n\nexport const SET_SEQUENCE_PATTERN_LOCKED = 141;\nexport const SET_SEQUENCE_PATTERN_LOCKS = 142;\n\nexport const SET_SPOTLIGHT_TRACKS = 143;\n\nexport const SET_CLOCK_TYPE = 144;\n\nexport const SET_CONNECTION_STATUS = 145;\nexport const SET_CONNECTED_USER_NAME = 146;\nexport const SET_CLOCK_TICK = 147;\nexport const SET_PLAY_SCHEDULED = 148;\nexport const SET_AVAILABLE_USERS_TO_SYNC = 149;\n\nexport const SET_SEARCH_SORT_BY = 150;\n\nexport const SET_MIDI_EFFECT_DRAGGING = 151;\n\nexport const SET_SHOW_TRACK_EFFECTS = 152;\n\nexport const SET_SHOW_CONVOLVER_MODAL = 153;\n\nexport const SET_SHOW_PASSWORD_MODAL = 154;\nexport const SET_PASSWORD_MODAL_CALLBACK = 155;\n\nexport const SET_SHOW_SHARE_SEQUENCE_MODAL = 156;\n\nexport const HIDE_ALL_EFFECTS = 157;\n\nexport const SET_SHOW_ENVELOPES = 158;\n\nexport const SET_EFFECT_COLLAPSED = 159;\n\nexport const SET_CONTEXTUAL_HELP = 160;\n\nexport const SET_SELECTED_LFO = 161;\nexport const SET_SELECTED_ENVELOPE= 162;\n\nexport const SET_SIDEBAR_COLLAPSED = 163;\n\nexport const SET_MIX_EVENTS = 164;\n\nexport const SET_SHOW_GROUPS = 165;\n\nexport const SET_SUB_SEQUENCES = 166;\nexport const SET_CURRENT_SUB_SEQUENCE = 167;\n\nexport const SET_MIX_VIEW_MODE = 168;\n\nexport const SET_SUB_SEQUENCE_FADE = 169;\n\nexport const SET_SAMPLE_SLICES = 170;\n\nexport const SET_SELECTED_ARRANGEMENT_EVENTS = 171;\n\nexport const SET_SHOW_DATE_SAMPLED = 172;\nexport const SET_DATE_SAMPLED = 173;\n\nexport const SET_EFFECT_PARAMETER_VALUES = 174;\n\nexport const SET_TRACK_PANNING = 175;\nexport const SET_GROUP_PANNING = 176;\nexport const SET_SEND_PANNING = 177;\n\nexport const SET_SELECTED_RECORD = 178;\n\nexport const SET_2D_SELECTION = 179;\nexport const SET_SIMILAR_SOUNDS_TO_FIND = 180;\nexport const SET_SHOW_SAMPLES_2D = 181;\n\nexport const SET_LAST_NOTE_PLAYED = 182;\n\nexport const SET_SIDEBAR_VIEW_MODE = 183;\n\nexport const SET_DISCOGS_SELECTED = 184;\n\nexport const SET_SELECTED_FOLDER = 185;\nexport const SET_SELECTED_PRESET = 186;\nexport const SET_HAS_CHANGES_TO_FOLDERS = 187;\n\nexport const SET_CURSOR_TRACK = 188;\nexport const SET_CURSOR_STEP = 189;\nexport const SET_CURSOR_SHOW = 190;\n\nexport const SET_FOLDER_DRAGGING = 191;\nexport const SET_PRESET_DRAGGING = 192;\n\nexport const SET_SAMPLE_DRAGGING = 193;\n\nexport const SET_EFFECTS_CHAIN_TO_SHOW = 194;\nexport const SET_SUB_SEQUENCE_MUTED = 195;\n\nexport const SET_TRACK_FROZEN = 196;\nexport const SET_TRACK_TO_FREEZE = 197;\nexport const SET_FROZEN_TRACK_PLAYING = 198;\nexport const SET_FROZEN_TRACKS = 199;\nexport const SET_FROZEN_TRACKS_PLAYING = 200;\nexport const SET_EFFECTS_CHAINS_TO_SHOW = 201;\nexport const SET_SELECTED_ONSETS = 202;\nexport const SET_SINGLE_STEP_TO_DRAG = 203;\nexport const SET_STEP_NUMBER_DRAGGED_TO = 204;\n\nexport const SET_SEARCH_RESULTS_START = 205;\nexport const SET_SHOW_STEP_OPTIONS = 206;\n\nexport const SET_MASTER_STEP_TOGGLES = 207;\nexport const SET_PARAMETERS_TO_RECORD = 208;\nexport const SET_ONSET_THRESHOLD = 209;\nexport const SET_SHOW_ONSETS = 210;\n\nexport const SET_SELECTED_GUILD = 211;\nexport const SET_CURRENT_AND_GLOBAL_STEPS = 212;\n\nexport const SET_PIANO_ROLL_DRAG_OFFSET= 213;\nexport const SET_PIANO_ROLL_NOTES = 214;\nexport const SET_STEP_AND_DATA_DRAGGING = 215;\n\nexport const SET_SHOW_LOGIN= 216;\nexport const SET_SIGNING_UP= 217;\nexport const SET_USER_TOKEN = 218;\n\nexport const SET_PENDING_TRANSACTIONS = 219;\n\nexport const SET_COMMAND_INPUT = 220;\nexport const SET_COMMAND_PREFIX = 221;\nexport const SET_VI_MODE = 222;\nexport const SET_TRACK_WARP = 223;\nexport const SET_SUB_SEQUENCE_WARPS = 224;\n\nexport const SET_ARRANGEMENT_SELECTION = 225;\nexport const SET_ARRANGEMENT_MOUSE_X = 226;\nexport const SELECT_COMPOUND_EVENT = 227;\nexport const UNSELECT_COMPOUND_EVENT = 228;\n\nexport const SET_ARRANGEMENT_AUTOMATION_TO_SHOW= 229;\nexport const SET_ARRANGEMENT_LOOPING = 230;\n\nexport const SET_ALTERNATE_VIEW_MODE = 231;\nexport const SET_ARRANGEMENT_SELECTED_ROWS = 232;\nexport const SET_ARRANGEMENT_LOOP_SELECTED = 233;\nexport const SET_ARRANGEMENT_ROW_SELECTIONS = 234;\nexport const SET_ARRANGEMENT_ZOOM = 235;\n\nexport const SET_SELECTED_SEQUENCE = 236;\nexport const SET_EXPLORE_MIXER_EFFECT = 237;\nexport const SET_EXPLORE_EQ_EFFECT = 238;\nexport const SET_SELECTED_SEND_EFFECT= 239;\nexport const SET_INSTRUMENT_TYPE_DRAGGING = 240;\nexport const SET_TRACK_IS_LOADING = 241;\n\nexport const SET_PIANO_ROLL_CURSOR = 242;\nexport const SET_ARRANGEMENT_X_SCALE = 243;\nexport const SET_TOTAL_ARRANGEMENT_LENGTH = 244;\nexport const SET_ARRANGEMENT_BOTTOM_HEIGHT = 245;\nexport const SET_ARRANGEMENT_BOTTOM_MODE = 246;\nexport const SET_ARRANGEMENT_BOTTOM_RESIZING = 247;\nexport const SET_ARRANGEMENT_PATTERN_DRAGGING = 248;\nexport const SET_ARRANGEMENT_PATTERN_START_STEP = 249;\nexport const SET_ARRANGEMENT_CURSOR_STEP = 250;\nexport const SET_ARRANGEMENT_PATTERN_RESIZING = 251;\nexport const SET_ARRANGEMENT_BROWSER_MODE = 252;\nexport const SET_SAMPLE_TO_EXPLORE = 253;\nexport const SET_EFFECT_RACK_NODE_POSITION = 254;\n\nexport const SET_ANNOTATION_DRAGGING = 255;\n\nexport const SET_TRACK_AUTOMATION_DEVICE = 256;\nexport const SET_TRACK_AUTOMATION_PARAMETER = 257;\nexport const SET_SHOW_AUTOMATION = 258;\nexport const SET_TRACK_AUTOMATION_SUB_DEVICE = 259;\nexport const SET_PARAMETER_AUTOMATIONS = 260;\n\nexport const SET_ACTIONS_REMAINING = 261;\nexport const SET_TIME_REMAINING = 262;\n\nexport const SET_SHOW_PIANO_ROLL = 263;\n\nexport const SET_SELECTED_RACK_SUB_TRACK= 264;\n\nexport const DELETE_AUTOMATIONS_FOR_PARAMETERS = 265;\n\nexport const SET_TRACK_AUTOMATION_RACK_DEVICE = 266;\nexport const SET_AUTOMATION_GUIDE_POINT = 267;\nexport const SET_AUTOMATION_POINT_DRAGGING  = 268;\nexport const SET_AUTOMATION_POINT_HAS_MOVED= 269;\nexport const SET_AUTOMATION_POINT_HOVERED = 270;\n\nexport const SET_TRACK_TO_CONVERT = 271;\n\nexport const SET_AUTOMATION_SELECTION = 272;\nexport const SET_AUTOMATION_POINTS_SELECTED = 273;\n\nexport const SET_EXPLORE_PERSON_SELECTED = 274;\nexport const SET_EXPLORE_ALL_SEQUENCES = 275;\n\nexport const DELETE_AUTOMATIONS_FOR_ENGINE = 276;\n\nexport const SET_RECORDING_EXPLORE_MIX = 277;\n\nexport const SET_WORKS_LOADED = 278;\n\nexport const SET_WORK_TRANSPOSE = 279;\nexport const SET_WORK_VOLUME = 280;\n\nexport const SET_EXPLORE_MIX_LOADED = 281;\n\nexport const SET_IS_MACRO_MAPPING = 282;\n\nexport const SET_PARAMETER_TO_MAP = 283;\n\nexport const SET_MIX_COLOR_VALUE = 284;\n\nexport const SET_MIX_HAS_EDITS = 285;\nexport const SET_SCRIPT_VARIABLES = 286;\n\nexport const SET_EXPLORE_OPTION = 287;\n\nexport const SET_ANNOTATIONS_VIEW = 288;\n\nexport const SET_EXPLORE_TOAST = 289;\nexport const SET_PARAMETER_SLIDER_DOWN = 290;\n\nexport const MOVE_ENGINE_AUTOMATIONS = 291;\n\nexport const SET_SEQUENCE_LOADING_PROGRESS = 292;\n\nexport const SET_TRACK_BROWSED_SAMPLES = 293;\n\nexport const SET_BOTTOM_TOOLBAR_OFFSET = 294;\n\nexport const SET_TRACK_UPDATES = 295;\n\nexport const SET_IS_TRANSCRIBING = 296;\n\nexport const SET_SAMPLE_TOOLTIP = 297;\nexport const SET_TRACK_BROWSED_PRESETS = 298;\n\nexport const SET_SELECTED_FREEZE = 299;\n\nexport const SET_TRACK_LENGTH_MODE = 300;\nexport const SET_TRACK_LENGTH_CHOICE = 301;\nexport const SET_FREEZE_DRAGGING = 302;\nexport const SET_FREEZE_COLUMN_SAMPLES = 303;\nexport const SET_UPLOADING_FILE = 304;\nexport const SET_GROUP_COLLAPSED = 305;\n\nexport const SET_SELECTED_MIX_EFFECT = 306;\nexport const SET_SAMPLES_DRAGGING = 307;\n\nexport const SET_DISPLAY_RESOLUTION = 308;\n\nexport const SET_OFFLINE_ENGINE = 309;\n\nexport const SET_CURRENT_EXPORT_INFO = 310;\nexport const SET_MIX_TRACK_DRAGGING = 311;\nexport const SET_GROUP_TRACKS = 312;\n\nexport const SET_LOADING_TEXT = 313;\nexport const SET_TRACK_ENVELOPES = 314;\n\nexport const SET_COPIED_NODES_FOR_RACK= 315;\n\nexport const SET_LAST_MIDI_CC_PLAYED = 316;\n\nexport const SET_ARRANGEMENT_MOUSE_DOWN_X = 317;\n\nexport const SET_TRACKER_PARAMETER_TO_EDIT = 318;\n\nexport const SET_TRACKS_TO_HIDE = 319;\n\nexport const SET_SELECTED_PALETTE = 320;\n\nexport const SET_PROJECT_DRAGGING = 321;\n\nexport const SET_EXPLORE_UNPUBLISHED = 322;\nexport const SET_QUICK_ADD_SEARCH_TEXT = 323;\n\nexport const SET_SHOW_TRACK_FREEZE_HISTORY = 324;\nexport const SET_SELECTED_MIDI_TRACK = 325;\n\nexport const SET_SELECTED_TRACK_SLICE = 326;\n\nexport const SET_CIRKLON_PARAMETER_SELECTED = 327;\nexport const SET_CIRKLON_MODE = 328;\n\nexport const SET_NOTES_DOWN = 329;\nexport const SET_SEQUENCED_PALETTE = 330;\n\nexport const SET_SCENES = 331;\nexport const SET_CURRENT_SCENE = 332;\n\nexport const SET_SHOW_SETTINGS = 333;\nexport const SET_WALLPAPER = 334;\nexport const SET_ANIMATE_WALLPAPER = 335;\n\nexport const SET_EXPANDED_PROJECT = 336;\n\nexport const SET_ACCUMULATOR_PARAMETER_SELECTED= 337;\n\nexport const SET_PLANE_MAPPING = 338;\n\nexport const SET_TRACK_PRESET_SAVING = 339;\n\nexport const SET_SAMPLE_TAG_DRAGGING = 340;\n\nexport const SET_PARAMETER_MIX_AUTOMATIONS = 341;\n\nexport const SET_SHOW_ARRANGEMENT_TRACKS= 342;\n\nexport const SET_ARRANGEMENT_PATTERN_SELECTED = 343;\n\nexport const SET_SIDEBAR_SEARCH_INPUT = 344;\n\nexport const SET_SHOW_ARRANGEMENT_SEARCHER = 345;\n\nexport const SET_VI_SELECT_MODE = 346;\n\nexport const SET_EXPLORE_WORK = 347;\n\nexport const SET_CREATING_NEW_PACK = 348;\n\nexport const SET_PACK_WINDOW_POSITION = 349;\n\nexport const SET_DRAGGING_PACK_WINDOW = 350;\n\nexport const SET_PACK_TO_EDIT = 351;\n\nexport const SET_IS_MANAGING_GUILDS= 352;\n\nexport const NEW_STEP_GROUP = 353;\nexport const SET_STEPS_GROUP_MODE = 354;\n\nexport const SET_TRANSFORMATION_EDGE_DRAGGING = 355;\nexport const SET_SHOW_FORMANT_EFFECT = 356;\nexport const SET_SHOWING_FORMANTS= 357;\n\nexport const SET_PULLED_EFFECTS = 358;\n\nexport const SET_LOOPS_TO_FREEZE = 359;\nexport const SET_PARAMETER_MIN_MAX = 360;\n\nexport const SET_CURRENT_SOUND_IN_LIST = 361;\nexport const SET_SHOWING_SOUND_LIST = 362;\nexport const SET_CURRENT_TAG_IN_LIST = 363;\n\nexport const SET_LINKING_EFFECTS = 364;\nexport const SET_PACK_SELECTED = 365;\nexport const SET_SAMPLE_EXPLORER_SELECTED = 366;\n\nexport const SET_PIANO_ROLL_SLIDE = 367;\nexport const SET_MAXIMIZE_EXPLORER = 368;\n\nexport const SET_PADS = 369;\nexport const SET_PAD_SLOTS = 370;\n\nexport const SET_PAD_HOVERED = 371;\n\nexport const SET_WAVEFORM_SHOWING = 372;\nexport const SET_TRACK_DRAGGING = 373;\n\nexport const SET_HIDE_MIXER = 374;\n\nexport const SET_SOURCE_EXPLORING = 375;\nexport const SET_YEAR_EXPLORING = 376;\nexport const SET_PULLABLE_PART_DRAGGING= 377;\nexport const SET_PADS_EXPAND = 378;\n\nexport const SET_SEQUENCERS = 379;\nexport const SET_SEQUENCER_TRACKS = 379;\n\nexport const SET_PLANE_MACROS = 380;\nexport const SET_WINDOW_POSITION = 381;\nexport const SET_PAD_EFFECTS = 382;\nexport const SET_SELECTED_PAD_EDGE = 383;\nexport const SET_DRAWING_PAD_EDGE = 384;\nexport const SET_BULK_EFFECTS_COLLAPSED = 385;\nexport const SET_SELECTED_PULLED_ELEMENTS= 386;\nexport const SET_BULK_WINDOW_POSITIONS = 387;\nexport const SET_EFFECT_PATTERN_LOCKS = 388;\nexport const SET_ALL_EFFECT_PATTERN_LOCKS = 389;\nexport const SET_MODULE_COLLAPSED = 390;\nexport const SET_TRACK_MIDI_EFFECTS = 391;\nexport const SET_EFFECT_STARRED= 392;\nexport const SET_BULK_EFFECTS_STARRED= 393;\nexport const SET_BULK_MODULES_COLLAPSED = 394;\nexport const DELETE_TRACK_ID = 395;\nexport const SET_SHOWING_CONTEXT_MENU = 396;\nexport const SET_HIGHER_ORDER_MATRIX= 397;\nexport const SET_MODULE_COLOR=398;\nexport const SET_MODULES_ROUTING =399;\nexport const SET_HIGHER_ORDER_STEPS_SELECTED=400;\nexport const SET_ORIENTATION_ROUTINGS=401;\nexport const SET_SHOW_HIGHER_ORDER_SEQUENCER=402;\nexport const SET_PLANAR = 403;\n\nexport const SET_PLANAR_GRADIENT_COLOR = 404;\nexport const SET_PLANAR_OPACITY = 405;\n\nexport const SET_MODULE_SIZE = 406;\nexport const SET_INLET_CONNECTIONS = 407;\nexport const SET_ZOBJECTS = 408;\nexport const SET_ZMESSAGES = 409;\n\nexport const SET_BACKGROUND_COLOR = 410;\n\nexport const SET_VIEWABLE_SUBPATCHES = 411;\nexport const SET_SELECTED_ZOBJECT = 412;\n\nexport const SET_JAKI_GRID = 413;\n\nexport const SET_ZOBJECT_TYPE_DRAGGING= 414;\n\nexport const SET_UX_LOCKED = 415;\n\nexport const SET_MINTED_TOKENS = 416;\n\nexport const SET_HIC_DIALOG = 417;\nexport const SET_IS_PREPARING_NFT = 418;\nexport const SET_FULL_SCREEN_ZOBJECT = 419;\n\nexport const SET_MAIN_SCROLL_REF= 420;\nexport const SET_VIEWPORT_POSITION = 421;\nexport const SET_SIDEBARS_SHOWING = 422;\nexport const SET_SHOW_PAD_SEQUENCER = 423;\nexport const SET_SHOW_PROJECTS_MODAL = 424;\nexport const SET_SHOW_SEARCH_WINDOW = 425;\n\nexport const SET_STEP_PARAMETER_SELECTED = 426;\nexport const SET_SHOW_TRACK_INSTRUMENT = 427;\nexport const SET_SHOW_MODULATORS = 428;\n\nexport const SET_CABLE_SEGMENTATION = 429;\nexport const SET_CABLE_SEGMENTATIONS = 430;\n\nexport const SET_UX_LOCK_OBJECT = 431;\nexport const SET_UX_LOCK_OBJECTS = 432;\nexport const SET_UX_HIDE_OBJECT = 433;\nexport const SET_UX_HIDE_OBJECTS = 434;\nexport const SET_ZORA_DIALOG = 445;\nexport const SET_ZOBJECT_INPUT_TEXT = 446;\nexport const SET_VIEWABLE_ZOBJECTS = 447;\nexport const SET_SHOW_EDITOR_BOTTOM = 448;\n\nexport const SET_MINTING_PROGRESS = 449;\nexport const SET_NEW_ZORA_TOKEN_ID = 450;\nexport const SET_TRANSACTION_UPON_LOGIN = 451;\n\nexport const SET_KEYBOARD_CONTEXT = 452;\nexport const SET_PAD_FX_MODE = 453;\nexport const SET_JAKI_GRID_MODE = 454;\nexport const SET_OBJECT_STYLING = 455;\n\n// planar items\n\nexport const SET_SELECTED_PLANAR_PARAMETERS = 456;\nexport const SET_FILTERED_PLANAR_PARAMETERS = 457;\nexport const SET_PLANAR_MACRO_TO_SHOW = 458;\nexport const SET_PLANAR_REGION_MODE = 459;\nexport const SET_GROUP_PRESETS_BY_PACKS = 460;\nexport const SET_PIANO_ROLL_LEFT_SPACE = 461;\nexport const SET_ZOBJECT_SIZE = 462;\nexport const SET_SECONDARY_ZOBJECT = 463;\n\nexport const CLEAR_DRAG_DROP = 464;\n\nexport const SET_SAMPLES_TO_SAVE = 465;\nexport const SET_EDITOR_PADDING = 466;\nexport const SET_EDGES_PADDING = 467;\nexport const SET_EDGES_SIZE = 468;\n\nexport const SET_LEFT_SIDEBAR_WIDTH = 469;\nexport const SET_MOVING_PAD_EDGE = 470;\nexport const SET_DOCUMENTATION_SUB_SECTION = 471;\nexport const SET_RIGHT_SIDEBAR_OPTION = 472;\n\nexport const SET_SELECTED_FM_ENVELOPE_TYPE = 473;\nexport const SET_SELECTED_FM_OPERATOR_DETAILS = 474;\nexport const SET_SELECTED_FM_FORMANT = 475;\nexport const SET_SHOW_SAVE_MODAL = 476;\nexport const SET_ZOBJECT_FLASHING = 477;\nexport const SET_SAMPLE_DOWNLOAD_PROGRESS = 478;\n\nexport const SET_PRESET_SAVED = 479;\n\nexport const SET_COMPLETELY_DONE_LOADING = 480;\nexport const SET_PLUGIN_TO_SAVE = 481;\nexport const SET_SHOW_PLUGINS = 482;\nexport const SET_PLUGINS_LOADED = 483;\nexport const SET_SHOW_PLUGINS_PANE= 484;\nexport const SET_PLUGINS_PANE_HEIGHT = 485;\nexport const SET_DROPPED_SAMPLES = 486;\nexport const SET_SHOW_FORMANT_PRESETS = 487;\nexport const SET_ZOBJECT_BACKGROUND= 488;\nexport const SET_PRESENTATION_MODE = 489;\n\n\nexport const SET_PRESENTATION_WINDOW_POSITION = 490;\nexport const SET_BULK_PRESENTATION_WINDOW_POSITIONS = 491;\n\nexport const SET_SHOW_FREEZE_MODAL = 492;\nexport const SET_THEME = 493;\nexport const SET_SHOW_THEME_GRID = 494;\n\nexport const SET_RECENTLY_ADDED_SOUNDS = 495;\n\nexport const SET_ZOBJECT_TOOLTIP = 496;\n\nexport const SET_ZOBJECTS_STACK= 497;\nexport const SET_ZOBJECT_CONTEXT_MENU = 498;\n\nexport const SET_OBJECT_DRAGGING = 499;\n\nexport const SET_ENABLE_ROLL_VIEWER = 500;\n\nexport const SET_ZOBJECT_MODAL = 501;\nexport const SET_ZOBJECT_PROGRESSBAR = 502;\n\nexport const SET_SHOW_PLAYLIST_MENU= 503;\nexport const SET_CURRENT_PLAYLIST_SONG = 504;\n\nexport const SET_SPORE_TOKEN_ID = 505;\nexport const SET_SOLD_PLAYERS = 506;\nexport const SET_JACKER_SHARE_LINK = 507;\nexport const SET_PENDING_SPORES = 508;\nexport const SET_USED_CHEAT_CODE = 509;\nexport const SET_SECONDS_REMAINING = 510;\n\nexport const SET_PLAYLIST_LOADED = 511;\n","import { ethers } from \"ethers\";\nimport React, { useEffect, useCallback, useState} from 'react';\nimport {sleep} from 'utils/sleep.js';\n\nexport const useTokensOnSale = () => {\n    const [tokensOnSale, setTokensOnSale] = useState([]);\n\n    useEffect(() => {\n        // should query all of these along w buy-now price/whether theres an ask\n        getTokensOnSale().then(setTokensOnSale);\n        // for now just assume theyre for sale and for 0.4 eth\n    }, [setTokensOnSale]);\n\n    return {tokensOnSale, setTokensOnSale};\n};\n\nlet cache = undefined;\nlet loading = false;\nexport const getTokensOnSale = () => {\n    return new Promise(async (resolve) => {\n        if (loading) {\n            let i=0;\n            while (!cache && i++ < 15) {\n                await sleep(500);\n\n            }\n        }\n        if (cache) {\n            resolve(cache);\n            return;\n        }\n        loading=true;\n        let baseURL = \"https://zequencer.io\";\n        if (window.LOCAL_BACKEND_FLAG && window.location.hostname.includes(\"localhost\")) {\n            baseURL = \"\";\n        }\n\n        let url = baseURL + \"/nft-info\";\n        fetch(url)\n            .then(r => r.json())\n            .then(r => {\n                cache = r;\n                resolve(r);\n            });\n    });\n};\n\n/*\nconst getTokensOnSale = async () => {\n    let tokens = [];\n    for (let i=1; i <= 20; i++) {\n        tokens.push(await mockToken(i));\n    }\n    return tokens;\n};\n\nconst mockToken = (tokenId) => {\n    return new Promise(async (resolve) => {\n    let url = \"https://zora.co/_next/data/xBYNv8INPmebM7S5e_TsX/collections/0x7269c1A1b8aBA1390770193771F92bD722c6a77B/\" + tokenId + \".json\";\n    fetch(url)\n        .then(r => r.json())\n        .then(r => {\n            let isSold = r.ownerAddress === \"0x0Fb5e3b3F254cBDcCD69d31bcB0e92B83d381A0A\";\n            let {v3Ask} = r;\n            let askPrice = v3Ask ? r.ethPrice : undefined;\n            return {\n                tokenId: tokenId,\n                askPrice,\n                thumbnail: \"/sp-thumbnail-\" + tokenId + \".png\"\n            };\n        });\n    });\n};\n\n*/\n","import React, {useCallback, useEffect} from 'react';\nimport { AsksV11__factory } from \"@zoralabs/v3/dist/typechain/factories/AsksV11__factory\";\nimport { ethers } from \"ethers\";\nimport mainnetZoraAddresses from \"@zoralabs/v3/dist/addresses/4.json\"; // Mainnet addresses, 4.json would be Rinkeby Testnet \nimport { IERC721__factory } from \"@zoralabs/v3/dist/typechain/factories/IERC721__factory\";\nimport { IERC20__factory } from \"@zoralabs/v3/dist/typechain/factories/IERC20__factory\";\nimport { ZoraModuleManager__factory } from \"@zoralabs/v3/dist/typechain/factories/ZoraModuleManager__factory\";\nimport { useSigner } from 'wagmi';\n\n\nexport const useMintTest = () => {\n    useEffect(() => {\n        approve();\n    }, []);\n\n    const approve = useCallback(async () => {\n        const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n        // Prompt user for account connections\n        let accounts = await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n\n        const moduleManagerAddress = mainnetZoraAddresses.ZoraModuleManager;\n        const ownerAddress = \"0xdc94060e37dcb8816188508536595019c8F0C98a\";// Owner of the assets (my test acct)\n\n        const nftContractAddress = \"0x9efe0c372310e179104aa5f478e20355a2538e43\"; // zequencer test\n        const erc721Contract = IERC721__factory.connect(nftContractAddress, signer);\n\n        // Initialize ERC20 currency demo contract\n        // Initialize Zora V3 Module Manager contract \n        const moduleManagerContract = ZoraModuleManager__factory.connect(mainnetZoraAddresses.ZoraModuleManager, signer);\n        const erc721TransferHelperAddress = mainnetZoraAddresses.ERC721TransferHelper;\n        let approved = await erc721Contract.isApprovedForAll(\n            ownerAddress, // NFT owner address\n            erc721TransferHelperAddress // V3 Module Transfer Helper to approve\n        );\n        console.log(\"token transfer module approved?\", approved);\n        \n        // If the approval is not already granted, add it.\n        if (approved === false) {\n            // Notice: Since this interaction submits a transaction to the blockchain it requires an ethers signer.\n            // A signer interfaces with a wallet. You can use walletconnect or injected web3.\n            console.log(\"approving token transfer module\");\n            await erc721Contract.setApprovalForAll(erc721TransferHelperAddress, true);\n        }\n\n        // Approving Asks v1.1\n        approved = await moduleManagerContract.isModuleApproved(ownerAddress, mainnetZoraAddresses.AsksV1_1);\n        console.log(\"ASKS ARE APPROVED? \", approved);\n\n        if (approved === false) {\n            console.log(\"approving asks module\");\n            await moduleManagerContract.setApprovalForModule(mainnetZoraAddresses.AsksV1_1, true);\n        }\n\n        // create ask\n        const askModuleContract = AsksV11__factory.connect(mainnetZoraAddresses.AsksV1_1, signer);\n        let ask = await askModuleContract.askForNFT(nftContractAddress, 1);\n        if (ask.askPrice.toNumber() === 0) {\n            // create ask\n            const askPrice = ethers.utils.parseEther(\"0.001\") // 100 ETH Sale Price\n//            const ownerAddress = \"0xF296178d553C8Ec21A2fBD2c5dDa8CA9ac905A00\"; // Owner of the assets\n            const findersFeeBps = \"0\"; // 2% Finders Fee (in BPS)\n            \n            // Calling Create Ask\n            // Notice: Since this interaction submits a transaction to the blockchain it requires a signer.\n            // A signer interfaces with a wallet. You can use walletconnect or injected web3.\n            console.log(\"creating ask\");\n            await askModuleContract.createAsk(\n                nftContractAddress,\n                \"3\", // Token Id\n                askPrice,\n                \"0x0000000000000000000000000000000000000000\", // 0 address for ETH sale\n                ownerAddress,\n                findersFeeBps\n            );\n        }\n    }, []);\n\n};\n","import React, {useCallback, useRef} from 'react';\nimport { useSigner } from 'wagmi';\nimport { ethers } from \"ethers\";\nimport mainnetZoraAddresses from \"@zoralabs/v3/dist/addresses/1.json\"; // Mainnet addresses, 4.json would be Rinkeby Testnet \nimport { AsksV11__factory } from \"@zoralabs/v3/dist/typechain/factories/AsksV11__factory\";\n\nexport const useBuy = (contract=\"0x7269c1a1b8aba1390770193771f92bd722c6a77b\") => {\n    const { data: signer, isError, isLoading } = useSigner();\n    let signerRef =  useRef(signer);\n    signerRef.current = signer;\n\n    /*\n      * uncomment to test on rinkeby\n    contract = \"0xe81f2369e74debd9874466d3e31aecf700aed872\";\n    */\n\n    const buy = useCallback(async (tokenId, fillAmount) => {\n        try {\n            /*\n             * Uncomment to test on rinkeybey\n            const provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n            // Prompt user for account connections\n            let accounts = await provider.send(\"eth_requestAccounts\", []);\n            const signer = provider.getSigner();\n\n            console.log(\"signer accounts=\", signer, accounts);\n\n            fillAmount = undefined;\n            tokenId = 3;\n            */\n\n            tokenId = tokenId.toString();\n            const askModuleContract = AsksV11__factory.connect(mainnetZoraAddresses.AsksV1_1, signerRef.current);\n            let ask = await askModuleContract.askForNFT(contract, tokenId);\n            fillAmount = fillAmount ? ethers.parseEth(fillAmount.toString()) : ask.askPrice.toString();\n            const finder = \"0x0000000000000000000000000000000000000000\"; // 0 address for finder\n            \n            let tx = await askModuleContract.fillAsk(\n                contract,\n                tokenId, // Token Id\n                \"0x0000000000000000000000000000000000000000\", // 0 address for ETH sale\n                fillAmount,\n                finder,\n                {\n                    value: fillAmount\n                }\n            );\n            return tx;\n        } catch (e) {\n            console.log(\"error = \", e);\n            return false;\n        }\n    }, [contract, signer]);\n\n    return buy;\n};\n","\nimport { ConnectButton, darkTheme } from '@rainbow-me/rainbowkit';\nimport React, { useEffect, useCallback, useState} from 'react';\nimport PulseLoader from 'react-spinners/PulseLoader'\nimport {connect} from 'react-redux';\nimport './finalize.scss';\nimport {useMintTest} from './test.js';\nimport {useBuy} from 'components/hooks/useBuy.js';\nimport {useBalance} from 'wagmi';\nimport {useSigner} from 'wagmi';\n\nconst FinalizePurchase = ({account, _askPrice, _thumbnail, name, tokensOnSale, onCompletedBuy, onCancel, cart, onDone, contractAddress}) => { \n    let balanceData = useBalance({addressOrName: account});\n    let {data} = useSigner();\n    let balance = balanceData.data && parseFloat(balanceData.data.formatted);\n    let [finished, setFinished] = useState(false);\n    let [error, setError] = useState();\n    let [current, setCurrent] = useState(cart[0]);\n    let [waitingForWallet, setWaitingForWallet] = useState(false);\n    let [confirming, setConfirming] = useState(false);\n\n    const buy = useBuy(contractAddress);\n   \n    let thumbnail = _thumbnail || tokensOnSale.find(x => x.tokenId === current).thumbnail;\n    let number = cart.indexOf(current) + 1;\n    let total = cart.length;\n\n    let obj = tokensOnSale && tokensOnSale.find(x => x.tokenId === current);\n    let askPrice = _askPrice || obj.askPrice;\n\n    const completeBuy = useCallback(() => {\n        console.log('complete buy called');\n        let tokenId = current;\n        // we wanna buy this one\n        setWaitingForWallet(true);\n        buy(tokenId).then(\n            x => {\n                if (x) {\n                    setConfirming(x.hash);\n                    x.wait(1).then(x => {\n                        setFinished(true);\n                        setConfirming(false);\n                        if (number === cart.length) {\n                            // we have truly completed\n                        } else {\n                            setCurrent(cart[number]);\n                        }\n                        onCompletedBuy(tokenId);\n                    });\n                    setWaitingForWallet(false);\n                    setError(undefined);\n                } else {\n                    setError(\"You rejected the transaction. Please try again or continue browsing.\");\n                }\n                setWaitingForWallet(false);\n            });\n    }, [current, setCurrent, number, setWaitingForWallet, cart]);\n\n    if (finished || confirming) {\n        return (\n        <div className=\"finalize-modal-drop\">\n          <video\n            playsInline\n            muted\n            className={confirming ? \"confirming shrooms-video\" : \"shrooms-video\"}\n            autoPlay\n            loop\n            src={\"/mushrooms-medium.mp4\"}/>\n          <div\n            onClick={(e) => e.stopPropagation()}\n            className=\"finalize-modal\">\n            <div onClick={onDone} className=\"close-button\">x</div>\n            <div className=\"logo-container\">\n              <img className=\"spores-logo-black\" src=\"/spores-logo-black.svg\"/>\n            </div>\n            <div className=\"sp-modal-title\">\n              <div className=\"sp-title\">\n                {confirming ? \"Completing Purchase\" : (name ? \"You`ve Bought the \" + name : \"You\\'ve Bought the SP-\" + current)}\n                \n              </div>\n            </div>\n            {confirming ? <div className=\"sp-modal-body\">\n              <p>\n                Your new Spore Player should arrive in your wallet in a few moments.\n              </p>\n                            <div className=\"pulse-container\">\n              <PulseLoader\n                sizeUnit={\"px\"}\n                size={10}\n                color={'#ffffff'}\n                loading={true}\n              />\n                            </div>\n                          </div> :\n             <div className=\"sp-modal-body\">\n               <p>\n                 Congrats, you can now dose yourself with some cyber psilocybin.\n               </p>\n             {!name && <div\n                 onClick={() => window.open(\"/sp/\" + current, '_newtab')}\n                 className=\"pushable open-your-player\">\n                 Open your New Player\n                       </div>}\n             </div>}\n            </div>\n        </div>\n        );\n    }\n\n    return (\n        <div onClick={onCancel} className=\"finalize-modal-drop\">\n          <div\n            onClick={(e) => e.stopPropagation()}\n            className=\"finalize-modal\">\n            <div onClick={onCancel} className=\"close-button\">x</div>\n            <div className=\"logo-container\">\n              <img className=\"spores-logo-black\" src=\"/spores-logo-black.svg\"/>\n            </div>\n            <div className=\"sp-modal-title\">\n              <div className=\"sp-title\">\n                Buy {name ? name : `SP-${current}`}\n              </div>\n              {cart.length > 1 && <div className=\"purchase-part\"><span className=\"part-number\">{number}</span> of <span className=\"total-parts\">{total}</span></div>}\n            </div>\n            <div className=\"sp-modal-body\">\n              <p>\n                 You're about to buy this Spore Player for a fixed price.\n              </p>\n              <div className=\"thumbnail-and-price\">\n                <img src={thumbnail}/>\n                <div className=\"token-price\">\n                  <div className=\"price-label\">\n                    PRICE\n                  </div>\n                  <div className=\"price-eth\">\n                    {askPrice} ETH\n                  </div>\n                </div>\n              </div>\n              {error && <div className=\"error-text\"><img src=\"/error-icon.svg\"/> {error}</div>}\n              {waitingForWallet ?\n               <div className=\"waiting-for-wallet\">\n                 <span className=\"inner\">\n                   <span className=\"helper-text\">\n                     Waiting for Wallet \n                   </span>\n                   <PulseLoader\n                     sizeUnit={\"px\"}\n                     size={10}\n                     color={'#ffffff'}\n                     loading={true}\n                   />\n                 </span>\n               </div> : balance < parseFloat(askPrice) ?\n               <div className=\"low-balance complete-buy\">\n                 Insufficient balance for purchase.\n               </div> :\n               !data ? <div className=\"connect-wallet-container\"><ConnectButton\n                         accountStatus=\"address\" \n                         showBalance={{ smallScreen: false, largeScreen: false }}\n                         label=\"Connect Wallet\"\n                       /> </div>: \n               <div\n                 onClick={() => completeBuy()}\n                 className=\"complete-buy\">\n                 Complete Purchase \n               </div>}\n            </div>\n          </div>\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FinalizePurchase);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {useTokensOnSale} from '../hooks/useTokensOnSale.js';\nimport {connect} from 'react-redux';\nimport FinalizePurchase from './FinalizePurchase.js';\nimport { useAccount } from 'wagmi';\n\nconst BuyPlayerFLow = ({name, setBuying, thumbnail, askPrice, setCompletedBuy, tokenId}) => { \n    const {data, isError, isLoading } = useAccount();\n    console.log(\"acc data =\", data);\n    let {setTokensOnSale, tokensOnSale} = useTokensOnSale();\n\n    if (!tokensOnSale || tokensOnSale.length === 0) {\n        return '';\n    }\n    return (\n        <FinalizePurchase\n          name={name}\n          _askPrice={askPrice}\n          _thumbnail={thumbnail}\n          account={data && data.address}\n          onCompletedBuy={() => setCompletedBuy(true)}\n          onDone={() => {\n              setBuying(false);\n              \n          }}\n          tokensOnSale={tokensOnSale} onCancel={() => setBuying(false)} cart={[tokenId]} setCart={() => 0}/>\n    );\n};\n\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BuyPlayerFLow);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {isMobile} from 'react-device-detect';\nimport {setSoldPlayers} from 'actions/index.js';\nimport BuyPlayerFlow from 'components/buy/BuyPlayerFlow.js';\nimport {connect} from 'react-redux';\nimport {useTokensOnSale} from '../hooks/useTokensOnSale.js';\nimport './buy-unsold.scss';\n\nconst BuyUnsold = ({upperGradInverted, soldPlayers=[], tokenId, text, showRemaining, onCompleteSale}) => { \n    let {setTokensOnSale, tokensOnSale} = useTokensOnSale();\n    let [buying, setBuying] = useState(false);\n\n    if (!tokensOnSale || tokensOnSale.length === 0) {\n        return '';\n    }\n\n    let unsold = tokensOnSale.filter(x => x.askPrice);\n    if (unsold.length === 0) {\n        return '';\n    }\n    if (soldPlayers.includes(tokenId)) {\n        return (\n            <div className=\"buy-unsold\">\n              Owned By You\n            </div>);\n    }\n    let style = {};\n    if (upperGradInverted && text) {\n        style.color = upperGradInverted;\n        style.borderBottomColor = upperGradInverted;\n    }\n    return (\n        <div className={text ? \"buy-unsold has-text\" : \"buy-unsold\"}>\n          {buying && <BuyPlayerFlow setCompletedBuy={() => {\n              setSoldPlayers([... soldPlayers, tokenId]);\n              if (onCompleteSale) {\n                  onCompleteSale(); // call optional callback\n              }\n          }} setBuying={setBuying} tokenId={tokenId}/>}\n          <div\n            style={style}\n            onClick={() => setBuying(true)}\n            className=\"buy-unsold-btn pushable\">\n            {text ? text : <span>\n                             Buy SP-{tokenId}\n                           </span>}\n          </div>\n          {((!isMobile && !text) || showRemaining) &&\n           <a\n             href={\"/sp/\" + tokenId}\n             className=\"unsold-remaining\">{unsold.length} remaining</a>}\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n      soldPlayers: state.spore.soldPlayers\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setSoldPlayers: x => dispatch(setSoldPlayers(x))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BuyUnsold);\n","import {ethers} from 'ethers';\n\nexport const signMessage = async (signer, msg) => {\n    let flatSig = await signer.signMessage(msg);\n\n    return {\n        flatSignature: flatSig,\n        splitSignature: ethers.utils.splitSignature(flatSig),\n    };\n};\n   \n","import {signMessage} from './sign.js';\nimport {ipfsHashToBytes32} from 'utils/ipfs.js';\n\nconst sporeMessage = (x) => `A new spore awakens at ipfs://${x}`;\n\nexport const newSpore = (signer, spTokenId, collectionAddress, tokenId, recordingHash, dataHash) => {\n    return new Promise(async (resolve) => {\n        console.log('new spore w data hash=', dataHash);\n        let message = sporeMessage(recordingHash);\n        let {account, flatSignature, splitSignature} = await signMessage(signer, message);\n\n        // now store this signed message on the ropsten contract\n        let {r,s,v} = splitSignature;\n        \n        let body = {\n            r,\n            s,\n            v,\n            message,\n            recordingHash: ipfsHashToBytes32(recordingHash),\n            dataHash: ipfsHashToBytes32(dataHash),\n            tokenId,\n            spTokenId,\n            collectionAddress,\n        };\n        \n        let baseURL = \"https://zequencer.io\";\n        if (window.location.hostname.includes(\"localhost\")) {\n            baseURL = \"\";\n        }\n\n        fetch(baseURL + '/newUnofficialSpore/' , {\n            method: 'POST',\n            body: JSON.stringify(body),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }\n        })\n            .then(resp => resp.json())\n            .then(resp => {\n                resolve(resp.transactionHash);\n            });\n    });\n};\n\n","/*\n    This file is part of Universal Sequencer.\n    Universal Sequencer is free software: you can redistribute it and/or modif\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Universal Sequencer is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport Tone from 'tone';\nimport ipfsClient from 'decentralized/Ipfs.js';\nvar bufferToArrayBuffer = require('buffer-to-arraybuffer');\n\nclass AudioUnit {\n    constructor(context=Tone.Master.context) {\n        this.duration = 0;\n        this.source = undefined;\n        this.buffer = undefined;\n        this.playbackRate = 1;\n        this.looping = false;\n        this.playSound.bind(this);\n        this.context = context;\n        this.seek.bind(this);\n        this.stopSound.bind(this);\n    }\n\n    dispose() {\n        if (this.source !== undefined) {\n            this.source.disconnect();\n        }\n        this.buffer = undefined;\n        this.source = undefined;\n    }\n\n    getContext() {\n        return this.context;\n    }\n\n    playSound(x, duration) {\n        if (x == undefined) {\n            x = 0;\n        }\n        if (this.source != undefined) {\n            this.source.stop();\n        }\n        this.source = Tone.Master.context.createBufferSource(); // creates a sound source\n        this.source.connect(Tone.Master.context.destination);       // connect the source to the context's destination (the speakers)\n        this.source.buffer = this.buffer;\n        this.source.playbackRate.value = this.playbackRate;\n        this.source.loop = false;\n        this.source.start(0, Math.max(0, x), duration);\n    }\n\n    seek(x) {\n        this.stopSound();\n        this.playSound(x);\n    }\n\n    stopSound() {\n        if (this.source != undefined) {\n            this.source.stop();\n        }\n    }\n\n    loadRawBuffer(buffer) {\n        this.buffer = buffer;\n        this.duration = buffer.duration;\n    }\n    \n    setBuffer(buffer) {\n        this.buffer = buffer;\n        this.duration = buffer.duration;\n    }\n}\n\nexport default AudioUnit;\n\n","import { createDecoder } from './minimp3-wasm.js';\nimport {sleep} from 'utils/sleep.js';\nimport Tone from 'tone';\n\nlet _counter=0;\nlet decoder;\n\nlet cache = {};\n\nlet mp3Recorder;\nlet results = {};\n\nconst decode = async (mp3Data, counter) => {\n    if (!mp3Recorder) {\n        mp3Recorder = new Worker(window.isNFT ? \"mp3Worker.js\" : \"/mp3Worker.js\");\n        mp3Recorder.onmessage = (e) => {\n            results[e.data.id] = e.data;\n        };\n    }\n    mp3Recorder.postMessage({mp3Data, isNFT: window.isNFT, id: counter});\n\n    while (!results[counter]) {\n        await sleep(100);\n    }\n    return results[counter];\n}\n\nexport const decodeMP3 = async (mp3Data) => {\n    const {decoded, sampleRate, position} = await decode(mp3Data, _counter++);\n    let ctxt = Tone.Master.context;\n    let channels = 2;\n    const _buffer = ctxt.createBuffer(channels, position/2, sampleRate); \n    const channelDataL = _buffer.getChannelData(0);\n    const channelDataR = channels === 2 ? _buffer.getChannelData(1) : null;\n    // int16 -> float32\n    for (let i = 0; i < decoded.length; i+=2) {\n      const l = decoded[i];\n      const r = decoded[i+1];\n      channelDataL[i/2] = l >= 32768 ? -(65536 - l) / 32768 : l / 32767;\n        if (channels === 2) {\n            channelDataR[i/2] = r >= 32768 ? -(65536 - r) / 32768 : r / 32767;\n        }\n    }\n    return _buffer;\n};\n\nexport const initMP3 = async (engine) => {\n    /*\n    let name = \"/completed_live_0bf4d6d54e4b03be05f1a24f090ee4d0_vocals.mp3\";\n    const res = await fetch(name);\n    const buffer = await res.arrayBuffer();\n    const mp3Data = new Uint8Array(buffer);\n    const decoder = await createDecoder(mp3Data, '/decoder.opt.wasm');\n    decoder.seek(0);\n    const results = decoder.decode(30);\n    let pcm = results.pcm;\n    console.log(pcm);\n    let ctxt = Tone.Master.context;\n    const _buffer = ctxt.createBuffer(2, pcm.length/2, results.samplingRate);\n    const channelDataL = _buffer.getChannelData(0);\n    const channelDataR = _buffer.getChannelData(1);\n    // int16 -> float32\n    for (let i = 0; i < pcm.length; i+=2) {\n      const l = pcm[i];\n      const r = pcm[i+1];\n      channelDataL[i/2] = l >= 32768 ? -(65536 - l) / 32768 : l / 32767;\n      channelDataR[i/2] = r >= 32768 ? -(65536 - r) / 32768 : r / 32767;\n    }\n    let sample = new Sample(NOT_UPLOADED_YET);\n    sample.audioBuffer = _buffer;\n    sample.needsSave = true;\n    // await sample.fetchAudio();\n    sample.tags = [];\n    sample.name = \"test\";\n    await engine.addSound(sample);\n    */\n};\n","import {decodeMP3} from 'utils/mp3.js';\nimport Tone from 'tone';\n\nconst bufferToArrayBuffer = require('buffer-to-arraybuffer');\n\nlet cache = {};\nexport const decodeAudioData = (blob, hash) => {\n    return new Promise(async (resolve, reject) => {\n        if (cache[hash]) {\n            return resolve(cache[hash]);\n        }\n        if (blob === undefined) {\n            reject();\n            return;\n        }\n        try {\n            try {\n                let sliced = blob.slice(0,4);\n                let type = new TextDecoder().decode(sliced);\n                if (type === \"RIFF\") {\n                    let r = await Tone.Master.context.decodeAudioData(blob);\n                    console.log('r =', r);\n                    if (hash) {\n                        cache[hash] = r;\n                    }\n                    resolve(r);\n                } else {\n                    let r = await decodeMP3(new Int8Array(blob));\n                    if (hash) {\n                        cache[hash] = r;\n                    }\n                    resolve(r);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        } catch (e) {\n            reject(e);\n        }\n    });\n};\n\nexport const clearDecodeCache = () => {\n    cache = {};\n};\n","import AudioUnit from 'engine/audio.js';\nimport React, {useRef, useCallback, useEffect, useState} from 'react';\nimport {decodeAudioData} from 'utils/decode.js';\nimport Tone from 'tone';\nimport ipfs from 'decentralized/Ipfs.js';\n\nconst bufferToArrayBuffer = require('buffer-to-arraybuffer');\n\nexport const useAudioPlayer = (hash) => {\n    let [audioPlayer, setAudioPlayer] = useState();\n    let playerRef = useRef();\n\n    const dispose = useCallback(() => {\n        if (audioPlayer) {\n            audioPlayer.dispose();\n        }\n    }, [audioPlayer]);\n\n    useEffect(() => {\n        if (playerRef.current) {\n            setAudioPlayer(undefined);\n        }\n        ipfs.getSound(hash, 10000000).then(\n            async blob => {\n                let arrayBuffer = bufferToArrayBuffer(blob);\n                let audioBuffer = await decodeAudioData(arrayBuffer, hash);\n                let player = undefined;\n                if (playerRef.current) {\n                    player = playerRef.current;\n                    player.stopSound();\n                } else {\n                    player = new AudioUnit(Tone.Master.context);\n                }\n                player.setBuffer(audioBuffer);\n                setAudioPlayer(player);\n                playerRef.current = player;\n            });\n    }, [hash, setAudioPlayer]);\n\n    return {\n        audioPlayer,\n        dispose\n    };\n};\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {isMobile} from 'react-device-detect';\nimport {connect} from 'react-redux';\nimport './jolly.scss';\nimport './heatmap.scss';\n\nconst JollyRancherPlayer = ({width, spore, progress, height=110}) => { \n    let ref = useRef();\n    let loaded = useRef();\n\n    // TODO: need to wait for the iframe to fully load before sending this\n    // likely need a post message listener for \"zequencerProjectLoaded\"\n\n    useEffect(() => {\n        window.addEventListener(\"message\", onMessage, false);\n        return () => {\n            window.removeEventListener(\"message\", onMessage);\n        };\n    }, [spore]);\n\n    const onMessage = useCallback((e) => {\n        if (e.data === \"sporeIFrameLoaded\") {\n            // then we need to send it over\n            sendHeatmapHash();\n            loaded.current = true;\n        }\n    }, [spore]);\n\n    useEffect(() => {\n        if (loaded.current) {\n            console.log(\"spore.dataHash =\", spore.datahash, spore);\n            sendHeatmapHash();\n        }\n    }, [spore]);\n\n    const sendHeatmapHash = useCallback(() => {\n        console.log('sending hash', spore.dataHash);\n        if (ref.current && ref.current.contentWindow) {\n            if (spore) {\n                ref.current.contentWindow.postMessage({\n                    type: \"heatmapHash\",\n                    body: spore.dataHash\n                }, \"*\");\n            }\n        }\n    }, [spore]);\n\n    useEffect(() => {\n        if (ref.current && ref.current.contentWindow) {\n            if (spore) {\n                ref.current.contentWindow.postMessage({\n                    type: \"heatmapHash\",\n                    body: spore.dataHash\n                }, \"*\");\n            }\n        }\n    }, [spore]);\n\n    useEffect(() => {\n        if (ref.current && ref.current.contentWindow) {\n            ref.current.contentWindow.postMessage({\n                type: \"sporePosition\",\n                body: progress\n            }, \"*\");\n        }\n    }, [progress]);\n\n    useEffect(() => {\n        if (ref.current && ref.current.contentWindow) {\n            ref.current.contentWindow.postMessage({\n                type: \"heatmapSize\",\n                body: [width, 90]\n            }, \"*\");\n        }\n    }, [width]);\n       \n    return (\n        <iframe\n          ref={ref}\n          sandbox=\"allow-scripts allow-same-origin\"\n          allowtransparency=\"true\"\n          height={height}\n          width={width}\n          aria-describedby=\"spore\"\n          alt=\"spore.vision\"\n          //src={\"https://zequencer.io/ipfs/QmTh6hkgEGGLpVP5XANvDToWMmLNq1VFXcS4vXnCMjrefC/\"}\n          //src={\"https://zequencer.io/ipfs/QmTp5n1FsKeqEj4u8MGRScVY9BGkkWPiR3AEgqe8gvbTeE/\"}\n          src={\"https://zequencer.mypinata.cloud/ipfs/QmVvhZjnEJCBLs7SK2ED9xjbk7ZzjQQq4DHzfh7PJp9314/\"}\n          className=\"spore-heatmap zora-mediaObject css-hnzuw7 zora-mediaObject--mediaLoaded zora-mediaObject--isFullPage\"\n          style={{borderWidth: \"0px\"}}/>\n        );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JollyRancherPlayer);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {isMobile} from 'react-device-detect';\nimport {useAudioPlayer} from 'components/hooks/useAudioPlayer.js';\nimport {connect} from 'react-redux';\nimport JollyRancherPlayer from '../spore/JollyRancherPlayer.js';\nimport './heatmap-player.scss';\n\nconst HeatmapPlayer = ({recordingHash, spore, disabled}) => { \n    let {audioPlayer, dispose} = useAudioPlayer(recordingHash);\n    let className = \"heatmap-player \";\n    if (disabled) {\n        className += \" disabled\";\n    }\n    return (\n        <div className={className}>\n          <JollyRancherPlayer width={isMobile ? 250 : 450} height={80} spore={spore}/>\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeatmapPlayer);\n","import React, { useState, useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","const CHAOS_COLLECTION = \"0x8427e46826a520b1264b55f31fcb5ddfdc31e349\";\nconst CHAOS_METADATA  = \"https://opensea.mypinata.cloud/ipfs/bafybeic3pw5dd6tsu67mpgcm3mj5x335nfmq7xpesomv3uyuqluv2srsg4/\";\nconst OPEN_SEA_PINATA = \"https://opensea.mypinata.cloud/ipfs/\";\n\nexport const getMetadata = (url) => {\n    return new Promise(resolve => {\n        if (url.startsWith(\"ipfs://\")) {\n            url = \"https://zora-prod.mypinata.cloud/ipfs/\" + url.slice(7);\n        }\n        if (url.includes(\"ipfs.io\")) {\n            url = url.replace(\"ipfs.io\", \"zora-prod.mypinata.cloud\");\n        }\n        console.log(\"URL TO GET IS NOW=\", url);\n        fetch(url).then(\n            r => r.json())\n            .then(\n                r => {\n                    let {animation_url, audio_url} = r;\n                    console.log(\"ANIMATION_URL=%s audio_url=%s\", animation_url, audio_url);\n                    let json = {\n                        ... r\n                    };\n                    if (animation_url) {\n                        if (animation_url.includes(\"ipfs\")) {\n                            json.ipfs = animation_url.slice(7);\n                            json.url =OPEN_SEA_PINATA + animation_url.slice(7);\n                        } else {\n                            json.url = animation_url;\n                        }\n                    };\n                    if (audio_url) {\n                        if (audio_url.includes(\"/ipfs/\")) {\n                            let indexOf = audio_url.indexOf(\"/ipfs\");\n                            json.ipfs = audio_url.slice(indexOf+6);\n                        }\n                    }\n                    resolve(json);\n                });\n    });\n};\n\nexport const jack = async (url, getTokenMetadata) => {\n    console.log(\"chaos called\", url);\n    /*\n    if (url.includes(\"0x8427e46826a520b1264b55f31fcb5ddfdc31e349\")) {\n        // we are in a chaos drop\n        let parts = parse_url(url);\n        let path = parts.path;\n        let splitted = path.split(\"/\").filter(x => x !== \"\");\n        let tokenId = splitted[3];\n        let _url = CHAOS_METADATA + tokenId + \".json\";\n        return await getMetadata(_url);\n    }\n    */\n    if (url.toLowerCase().includes(\"chaos\") || url.includes(\"opensea\") || url.includes(\"zora\") || url.includes(\"sound.xyz\") || url.includes(\"catalog.works\") || url.includes(\"mintsongs.com\")) {\n        console.log('was chaos');\n        // then we need to figure out the \n        let {contract, tokenId, release} = await getParts(url);\n        console.log(\"parts=\", contract, tokenId);\n        let ret = await getZoraAPI(url, release);\n        console.log('zora api=', ret);\n        if (!ret) {\n            let meta = await getTokenMetadata(contract, tokenId);\n            console.log('token metadata we got for tokenId=%s', tokenId, meta);\n            if (!meta) {\n                return undefined;\n            }\n            let x = await getMetadata(meta);\n            if (!x.collectionAddress) {\n                x.collectionAddress  = contract;\n            }\n            if (!x.tokenId ) {\n                x.tokenId = tokenId;\n            }\n            return x;\n        } else {\n            let audio_url = ret.url;\n            let indexOf = audio_url.indexOf(\"/ipfs\");\n            let json = {\n                ... ret.metadata,\n                url: audio_url,\n            };\n            if (!json.collectionAddress) {\n                json.collectionAddress = contract;\n            }\n            if (!json.tokenId ) {\n                json.tokenId = tokenId;\n            }\n            return json;\n        }\n    }\n};\n\nconst getParts = async (url) => {\n\n    let part = \"/ethereum/\";\n    if (url.toLowerCase().includes(\"chaos\")) {\n       var re = /#[1-9]\\d*\\b/g;\n        var matches = url.match(re); \n        console.log(\"matches =\", matches);\n        if (matches[0]) {\n            return {\n                contract: CHAOS_COLLECTION,\n                tokenId: parseInt(matches[0].slice(1))\n            };\n        } else {\n            return {\n                contract: CHAOS_COLLECTION,\n                tokenId: 1\n            };\n        }\n    } else if (url.includes(\"sound.xyz\")) {\n        console.log(\"SOUND XYZ TYPE\");\n        let baseURL = window.location.hostname === \"localhost\" ? \"http://localhost:9090/soundxyz/\" : \"https://zequencer.io/soundxyz/\";\n        if (!window.LOCAL_BACKEND_FLAG) {\n            baseURL = \"https://zequencer.io/soundxyz/\";\n        }\n        let indexOf = url.indexOf(\"sound.xyz\");\n        let soundxyzPath = url.slice(indexOf + 10);\n        let ret = await fetch(baseURL + soundxyzPath);\n        console.log(\"SOUND XYZ returned=\", ret);\n        let json = await ret.json();\n        url = json.contractAddress + \"/\" + 1;\n        let release = soundxyzPath.split(\"/\")[1];\n        return {contract: json.contractAddress, tokenId: \"1\", release};\n    } else if (url.includes(\"catalog.works\")) {\n        console.log(\"CATALOG TYPE\");\n        console.log(\"url container catalog=\", url);\n        let baseURL = window.location.hostname === \"localhost\" ? \"http://localhost:9090/catalog/\" : \"https://zequencer.io/catalog/\";\n        if (!window.LOCAL_BACKEND_FLAG) {\n            baseURL = \"https://zequencer.io/catalog/\";\n        }\n        let str = \"catalog.works/\";\n        let indexOf = url.indexOf(str);\n        let soundxyzPath = url.slice(indexOf + str.length);\n        console.log('sound xyz path =', baseURL + soundxyzPath);\n        let ret = await fetch(baseURL + soundxyzPath);\n        let json = await ret.json();\n        return {contract: json.contractAddress}; //, tokenId: json.tokenId};\n    } else if (url.includes(\"zora.co\")) {\n        part = \"/collections/\";\n    } else if (url.includes(\"mintsongs.com\")) {\n        part = \"/tokens/\";\n    }\n    let indexOf = url.indexOf(part);\n        url = url.slice(indexOf + part.length);\n        let p = url.split(\"/\");\n    if (p[0] === \"zora\") {\n        p[0] = \"0xabEFBc9fD2F806065b4f3C237d4b59D9A97Bcac7\";\n    }\n    return {\n        contract: p[0],\n        tokenId: p[1],\n    };\n};\n\nconst getZoraAPI = async (url, release=\"\") => {\n    if (url.includes(\"zora\")) {\n        let part = \"/collections/\";\n        let indexOf = url.indexOf(part);\n        url = url.slice(indexOf + part.length);\n        let parts = url.split(\"/\")\n        if (parts[0] === \"zora\") {\n            parts[0] = \"0xabEFBc9fD2F806065b4f3C237d4b59D9A97Bcac7\";\n        }\n        url = parts.join(\"/\");\n    } else if (url.includes(\"sound.xyz\")) {\n        //let baseURL = window.location.hostname === \"localhost\" ? \"http://localhost:9090/soundxyz/\" : \"https://zequencer.io/soundxyz/\";\n        let baseURL = \"https://zequencer.io/soundxyz/\";\n        let indexOf = url.indexOf(\"sound.xyz\");\n        let soundxyz = url.slice(indexOf + 10);\n        let ret = await fetch(baseURL + soundxyz);\n        let json = await ret.json();\n        url = json.contractAddress + \"/\" + release;\n    } else {\n        let part = \"/ethereum/\";\n        let indexOf = url.indexOf(part);\n        url = url.slice(indexOf + part.length);\n    }\n    \n    //let baseURL = window.location.hostname === \"localhost\" ? \"http://localhost:9090/jacker/\" : \"https://zequencer.io/jacker/\";\n    let baseURL = \"https://zequencer.io/jacker/\";\n\n//    if (window.location.hostname === \"localhost\" && window.HAS_LOCAL_BACKEND) {\n     //   baseURL =  \"/jacker/\"; \n //   } \n    try {\n        let ret = await fetch(baseURL + url);\n        return await ret.json();\n    } catch(e) {\n        return undefined;\n    }\n};\n \nfunction parse_url(url) {\n    var pattern = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\n    var matches =  url.match(pattern);\n    return {\n        scheme: matches[2],\n        authority: matches[4],\n        path: matches[5],\n        query: matches[7],\n        fragment: matches[9]\n    };\n}\n\nconst isChaos = (url) => {\n    return url.includes(CHAOS_COLLECTION);\n};\n","import React, {useRef, useCallback} from 'react';\nimport {ethers} from 'ethers';\nimport {infuraProvider} from 'wagmi/providers/infura';\nimport { IERC721Metadata__factory} from \"@zoralabs/v3/dist/typechain/factories/IERC721Metadata__factory\";\nimport { useSigner } from 'wagmi';\nconst infuraId = \"2f3dce2af1044e88b4851c3d73c3d00c\";\n\nexport const useTokenMetadata = () => {\n    return getTokenMetadata;\n};\n\nexport const getTokenMetadata = async (contract, tokenId) => {\n    let provider = new ethers.providers.InfuraProvider(\"mainnet\", infuraId);\n    const tokens  = IERC721Metadata__factory.connect(contract, provider);\n    try {\n        tokenId = ethers.BigNumber.from(tokenId);\n        let meta = await tokens.tokenURI(tokenId);\n        return meta;\n    } catch (e) {\n        return undefined;\n    }\n};\n\n","import {jack} from 'jacker/jack.js';\nimport {getTokenMetadata} from 'components/hooks/useTokenMetadata.js';\n\n// JACK is essentially token metadata but standardized in a way that\n// we can use in the platform\nexport const getJackFromToken = async (collectionAddress, tokenId) => {\n    let link = \"https://zora.co/collections/\" + collectionAddress + \"/\" + tokenId;\n    let jacked = await jack(link, getTokenMetadata);\n    return jacked;\n};\n","import { useAccount } from 'wagmi';\nimport {isMobile} from 'react-device-detect';\nimport {CHAOS_COLLECTION} from 'constants/collections.js';\nimport BuyUnsold from 'components/nft-jacker/BuyUnsold.js';\nimport {setPendingSpores} from 'actions/index.js';\nimport {newSpore} from 'spores/newSpore.js';\nimport ipfs from 'decentralized/Ipfs.js';\nimport { useSigner } from 'wagmi';\nimport HeatmapPlayer from 'components/heatmap-player/HeatmapPlayer.js';\nimport {setCurrentPlaylistSong} from 'actions/index.js';\nimport { ConnectButton, lightTheme} from '@rainbow-me/rainbowkit';\nimport React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {useOwnsAnySpore} from 'components/hooks/useOwnsAnySpore.js';\nimport {getJackFromToken} from 'utils/getJackFromToken.js';\n\nconst FinishedUploading = ({\n    recordedRemix,\n    spTokenId,\n    tokenId,\n    collectionAddress,\n    setPendingSpores,\n    complete,\n    usedCheatCode,\n    playlistLoaded,\n    loadJack,\n    currentSong,\n    setCurrentSong\n}) => { \n    const {data: account, isError, isLoading} = useAccount();\n    const {data: signer} = useSigner();\n    let [waitingOnSign, setWaitingOnSign] = useState(false);\n    let [showConnectWallet, setShowConnectWallet] = useState(false);\n    let [completedSale, setCompletedSale] = useState(false);\n    let {recording, sliderData, modeData} = recordedRemix;\n    let [transactionHash, setTransactionHash] = useState(undefined);\n    let isSporeOwner = true; //useOwnsAnySpore() || usedCheatCode || completedSale || collectionAddress === CHAOS_COLLECTION;\n\n    const save = useCallback(async () => {\n        let {dataHash, recordingHash} = recordedRemix;\n        setWaitingOnSign(true);\n        let transactionHash = await newSpore(signer, spTokenId, collectionAddress, tokenId, recordingHash, dataHash);\n        window.localStorage.removeItem(\"recordedRemix\");\n        \n        setTransactionHash(transactionHash);\n        \n        let p = {\n            spTokenId,\n            collectionAddress,\n            tokenId,\n            recordingHash,\n            dataHash,\n        };\n        setPendingSpores([p]);\n\n        let pending = window.localStorage.getItem(\"pending-spores\");;\n        if (pending === null) {\n            pending = [];\n        } else {\n            pending = JSON.parse(pending);\n        }\n        pending = [... pending, p];\n        window.localStorage.setItem(\"pending-spores\", JSON.stringify(pending));\n    }, [signer, spTokenId, recordedRemix, tokenId, collectionAddress, setWaitingOnSign, account]);\n\n    let nextSong = undefined;\n    if (playlistLoaded) {\n        playlistLoaded = playlistLoaded.metadata.playlist;\n        for (let i=0; i < playlistLoaded.length; i++) {\n            let item = playlistLoaded[i];\n            if (item.collectionAddress === currentSong.collectionAddress &&\n                item.tokenId === currentSong.tokenId) {\n                // then we load the next\n                nextSong = playlistLoaded[i+1];\n                break;\n            }\n        }\n    }\n\n\n    const loadNext = useCallback(() => {\n        getJackFromToken(nextSong.collectionAddress, nextSong.tokenId).then(\n            jack => {\n                complete();\n                setCurrentSong(nextSong);\n                loadJack(jack, undefined, !isMobile);\n            });\n    }, [nextSong]);\n\n    let inner = '';\n    if (!account)  {\n        // we need them to connect wallet\n        inner = (\n            <div className=\"inner-spore-recorded\">\n              <div className=\"connect-button-wrapper\">\n                <ConnectButton\n                  accountStatus=\"address\" \n                  showBalance={{ smallScreen: false, largeScreen: false }}\n                  label=\"Connect Wallet\"\n                />\n              </div>\n              <div className=\"sign-helper\">\n                By connecting your wallet, you can etch your identity onto this Remix, where it will live on-chain.\n              </div>\n            </div>\n        );\n    } else if (isSporeOwner) {\n        // they are connected any own a spore\n        if (transactionHash) {\n            // we've done it\n            inner = (\n                <div className=\"sign-recording-container\">\n                  <p>\n                    Your spore is being transmitted on-chain. This will take a few seconds.\n                  </p>\n                  <p>\n                    <a href={\"https://ropsten.etherscan.io/tx/\" + transactionHash}>Etherscan ↗</a>\n                  </p>\n                  {playlistLoaded ?\n                   <div onClick={loadNext}\n                        className=\"continue-remixing-btn pushable\">\n                     Play Next\n                   </div> :\n                   <div onClick={complete} className=\"continue-remixing-btn pushable\">\n                     Continue Mixing\n                   </div>}\n                </div>\n            );\n        } else {\n            // need to sign\n            inner = (\n                <div className=\"sign-recording-container\">\n                  <div\n                    onClick={save}\n                    className=\"pushable sign-btn\">\n                    Sign & Upload\n                  </div>\n                  <div className=\"sign-helper\">\n                    {waitingOnSign ? `\nPlease now go to your wallet to sign the message. This costs no-gas, so no-stress.\n` : \n                    `In order to transmit this remix on-chain, you'll need to sign a message\n                    with your wallet. This costs no-gas, so no-stress.`}\n                  </div>\n                </div>\n            );\n        }\n    } else {\n        // connected but dont own so they must buy\n        inner = (\n            <div className=\"spores-buy-helper\">\n              Buy a <i>Genesis Spore</i> to etch your wallet address onto this Remix where it will live on-chain.\n              <BuyUnsold\n                onCompleteSale={() => setCompletedSale(true)}\n                showRemaining={true}\n                text={\"Buy SP-\" + spTokenId}\n                tokenId={spTokenId}/>\n \n            </div>\n        );\n    }\n\n    // should show a greyed out heatmap containing the song if not connected\n\n    return (\n        <div className=\"spore-recorded-dialog\">\n          <div className=\"spore-header\">\n            Spores recorded your remix.\n          </div>\n          <HeatmapPlayer disabled={!isSporeOwner} spore={recordedRemix}/>\n          {inner}\n        </div>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n      usedCheatCode: state.spore.usedCheatCode,\n      playlistLoaded: state.playlist.playlistLoaded,\n      currentSong: state.playlist.currentSong,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setPendingSpores: x => dispatch(setPendingSpores(x)),\n\n      setCurrentSong: x => dispatch(setCurrentPlaylistSong(x))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FinishedUploading);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './modal.scss';\n\nconst Modal = ({children, hide}) => { \n    return (\n        <div\n          onClick={hide}\n          className=\"spore-modal-backdrop\">\n          {/*<iframe className=\"modal-iframe\" src=\"https://zequencer.mypinata.cloud/ipfs/QmdgpJjL3v3wc9B7cvS66Av4yrXrnGDEpMi3rUAq9t3gHU/\"/>*/}\n         <div\n            onClick={e => e.stopPropagation()}\n            className=\"spore-modal-dialog\">\n           <div className=\"logo-container\">\n             <img\n               onClick={() => hide()}\n               className=\"pushable spores-logo\" src=\"/spores-logo-black.svg\"/>\n           </div>\n            {children}\n          </div>\n        </div>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import React, {useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport PulseLoader from 'react-spinners/PulseLoader'\nconst WIDTH = 390;\n\nconst UnknownProgressBar = ({\n    text,\n    className=\"\",\n    width=WIDTH,\n    intervalTime=100,\n    intervalPiece=10}) => {\n    let [loadingProgress, setLoadingProgress] = useState(24);\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setLoadingProgress(x => (x + intervalPiece) % 100);\n        }, intervalTime);\n        return () => clearInterval(interval);\n    }, []);\n    \n    let style = {\n        width: width * loadingProgress / 100.0\n    };\n    return (\n      <div className={\"progress-bar\" + className}>\n        <div style={{\n          borderRadius: \"35px\",\n          height: \"70px\",\n          width: \"70px\",\n          position: \"absolute\",\n          margin: \"auto\",\n          left: \"0\",\n          right: \"0\",\n          top: \"0\",\n          bottom: \"0\"}}>\n          <img style={{width: \"100%\"}} src='/spores-icon-glow.svg'></img>\n        </div>\n      </div>\n        // <div className={\"progress-bar \" + className}>\n        //   <div className=\"inner-progress-bar\">\n        //   <div className=\"progress\" style={style}/>\n        //     <div className=\"loading-text\">\n        //       {text} ...\n        //     </div>\n        //   </div>\n        // </div>\n    );\n};\n\nconst mapStateToProps = (state, props)=> {\n    return {\n    };\n};\n\n\nexport default connect(mapStateToProps, null)(UnknownProgressBar);\n","import BackendQuery from 'decentralized/BackendQuery.js';\nimport {ethers} from 'ethers';\nimport {NewUnofficialSporeCreated} from 'decentralized/EthereumEvents.js';\nimport {web3} from 'decentralized/web3.js';\n\nexport const getSporeWithHash = async (sporeHash, dataHash) => {\n    let query = new BackendQuery(\"0xD810401bAb352E3D1a75b2799b4D66819C25E225\")\n        .from(NewUnofficialSporeCreated)\n        .where('sporeHash', sporeHash)\n        .where('dataHash', dataHash);\n\n    let unfiltered = await query.executeQuery();\n    return unfiltered[0];\n};\n\nexport const getSporeRemixes = async (collectionAddress, tokenId) => {\n    let query = new BackendQuery(\"0xD810401bAb352E3D1a75b2799b4D66819C25E225\")\n        .from(NewUnofficialSporeCreated);\n\n    let unfiltered = await query.executeQuery();\n\n    if (collectionAddress) {\n        query.where(\"collectionAddress\", collectionAddress.toLowerCase());\n    }\n    \n    if (tokenId !== undefined) {\n        if (tokenId.length > 10) {\n            // then we have a bignumber\n            let big = ethers.BigNumber.from(tokenId);\n            big = web3.utils.padLeft(big.toHexString(), 64).toLowerCase();\n            query.where(\"tokenId\", big);\n        } else {\n            let parsed = parseInt(tokenId);\n            query.where(\"tokenId\", isNaN(parsed) ? tokenId : parsed);\n        }\n    }\n\n    let results = await query.executeQuery();\n\n    let pend = getPending().filter(x => x.collectionAddress === collectionAddress && parseInt(x.tokenId) === parseInt(tokenId));\n\n    results = [...pend, ... results];\n    return results;\n};\n\nexport const getRemixByNumber = async (id) => {\n    let query = new BackendQuery(\"0xD810401bAb352E3D1a75b2799b4D66819C25E225\")\n        .from(NewUnofficialSporeCreated)\n        .where('sporeId', parseInt(id));\n\n    let results = await query.executeQuery();\n    return results[0];\n};\n\nexport const getRemixesMap = async () => {\n    let query = new BackendQuery(\"0xD810401bAb352E3D1a75b2799b4D66819C25E225\")\n        .from(NewUnofficialSporeCreated);\n\n    let unfiltered = await query.executeQuery();\n    let pending = getPending();\n    updatePending(pending, unfiltered);\n    unfiltered = [... unfiltered, ... pending];\n\n    let collections = {};\n    for (let result of unfiltered) {\n        let {collectionAddress, tokenId} = result;\n        collectionAddress = collectionAddress.toLowerCase();\n        if (!collections[collectionAddress]) {\n            collections[collectionAddress] = {};\n        }\n        if (!collections[collectionAddress][tokenId]) {\n            collections[collectionAddress][tokenId] = [];\n        }\n        collections[collectionAddress][tokenId].push(result);\n\n    }\n    return collections;\n};\n\n\n\nconst getPending = () => {\n    let pending = window.localStorage.getItem(\"pending-spores\");;\n    if (pending === null) {\n        pending = [];\n    } else {\n        pending = JSON.parse(pending);\n    }\n    for (let s of pending) {\n        s.sporeHash = s.recordingHash;\n    }\n    return pending;\n};\n\nconst updatePending = (pending, results) => {\n    let _pending = [];\n    for (let r of pending) {\n        let skip = false;\n        for (let result of results) {\n            if (r.recordingHash === result.sporeHash) {\n                skip=true;\n                break;\n            }\n        }\n        if (!skip) {\n            _pending.push(r);\n        }\n    }\n    window.localStorage.setItem(\"pending-spores\", JSON.stringify(_pending));\n};\n","import React, { useEffect, useCallback, useState} from 'react';\nimport FinishedUploading  from './FinishedUploading.js';\nimport ipfs from 'decentralized/Ipfs.js';\nimport Modal from 'components/modal/Modal.js';\nimport UnknownProgressBar from 'components/progressbar/UnknownProgressBar.js';\nimport {connect} from 'react-redux';\nimport {getSporeRemixes} from 'spores/getSporeRemixes.js';\nimport './recording.scss';\n\nconst SporeRecorded = ({\n    recordedRemix,\n    uploadingRemix,\n    spTokenId,\n    tokenId,\n    collectionAddress,\n    onRemixSigningCompleted,\n    loadJack\n}) => { \n    let [savedToLocal, setSavedToLocal] = useState(true);\n    useEffect(() => {\n        window.localStorage.setItem(\"recordedRemix\", {\n            recordedRemix,\n            tokenId,\n            spTokenId,\n            collectionAddress,\n        });\n        setSavedToLocal(true);\n    }, [recordedRemix, setSavedToLocal, tokenId, collectionAddress, spTokenId]);\n\n    if (!recordedRemix && !uploadingRemix) {\n        return '';\n    }\n    return (\n        <Modal hide={e => []}>\n          {!recordedRemix || !savedToLocal ?\n           <div className=\"spore-recorded-dialog\">\n             <div className=\"spore-header\">\n               Spores recorded your remix.\n             </div>\n             <div className=\"uploading-text\">\n               Processing your new sound.\n             </div>\n             <div className=\"progress-container\">\n               <UnknownProgressBar width={180}/>\n             </div>\n           </div> : \n           <FinishedUploading\n             spTokenId={spTokenId}\n             tokenId={tokenId}\n             complete={onRemixSigningCompleted}\n             collectionAddress={collectionAddress}\n             recordedRemix={recordedRemix}\n             loadJack={loadJack}\n           />\n}\n        </Modal>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SporeRecorded);\n","\nimport {isMobile} from 'react-device-detect';\nimport PlayButton from '../buttons/PlayButton.js';\nimport React, { useRef, useEffect, useCallback, useState} from 'react';\nimport SongWaveform from 'components/waveform/SongWaveform.js';\nimport {connect} from 'react-redux';\nimport './shuffle.scss';\n\nconst WIDTH = 330;\n\nconst ShuffleButton = ({hideWaveform, isWaveformRainbow, buttonTextColor, playerRef, innerControls}) => { \n    let width = innerControls ? window.innerWidth :  WIDTH;\n    let ref = useRef();\n    let scrubRef = useRef();\n    let [waveform, setWaveform] = useState();\n    let [progress, setProgress] = useState(0);\n    let [playing, setPlaying] = useState(0);\n    let [started, setStarted] = useState(false);\n    let [scrubbing, setScrubbing] = useState(false);\n    let off = useRef(0);\n    let [scrub, setScrub] = useState(undefined);\n    \n\n    useEffect(() => {\n        window.addEventListener(\"mouseup\", finishScrub);\n        window.addEventListener(\"mousemove\", onMouseMove);\n        window.addEventListener(\"touchmove\", onMouseMove);\n        return () => {\n            window.removeEventListener(\"mouseup\", finishScrub);\n            window.removeEventListener(\"mousemove\", onMouseMove);\n            window.removeEventListener(\"touchmove\", onMouseMove);\n        }\n    }, [scrubbing, setScrub, setScrubbing]);\n\n    const finishScrub = useCallback(() => {\n        setScrubbing(false);\n    }, [setScrubbing]);\n\n    useEffect(() => {\n        window.addEventListener(\"message\", onMessage, false);\n        return x => window.removeEventListener(\"message\", onMessage, false);\n    }, [setProgress, setPlaying, setStarted, setWaveform]);\n\n    const onMessage = useCallback(e => {\n        if (e.data.type === \"waveform-data\") {\n            setWaveform(e.data.body);\n        }\n        if (e.data.type === \"song-player-progress\") {\n            let progress = parseInt(e.data.body);\n            setProgress(progress);\n        }\n        if (e.data.type === \"jacker-playback-status\") {\n            let playing = parseInt(e.data.body);\n            setPlaying(playing);\n            if (playing) {\n                setStarted(true);\n            }\n        }\n    }, [started, setProgress, setPlaying, setStarted, setWaveform]);\n\n    const onPlayClicked = useCallback(() => {\n        playerRef.current.contentWindow.postMessage({\n            type: \"jacker-pause-toggle\",\n            body: true,\n        }, \"*\");\n    }, []);\n\n    const onMouseMove = useCallback((e) => {\n        if (!scrubbing) {\n            return;\n        }\n        if (e.touches) {\n            e = e.touches[0];\n        }\n\n        let rect = ref.current.getBoundingClientRect();\n        let x = e.clientX - rect.left;\n        let percent = (x / width) * 100;\n        percent = Math.max(0, Math.min(100, percent));\n        setScrub(percent);\n        playerRef.current.contentWindow.postMessage({\n            type: \"jacker-seek\",\n            body: percent\n        }, \"*\");\n    }, [scrubbing, setScrub]);\n\n    let className = \"shuffle-buttons\";\n\n    if (!started) {\n        return '';\n    }\n\n    let style = {\n        borderColor: buttonTextColor\n    };\n\n    progress = scrubbing && scrub ? scrub : progress;\n    return (\n        <div\n          onMouseDown={(e) => {\n              setScrubbing(true);\n              onMouseMove(e);\n          }}\n          onTouchStart={(e) => {\n              setScrubbing(true);\n              onMouseMove(e);\n          }}\n          className={className}>\n          {!hideWaveform && <SongWaveform progress={progress} waveform={waveform} isWaveformRainbow={isWaveformRainbow}/>}\n          <div className=\"play-and-slider\">\n          <PlayButton color={buttonTextColor} style={style} isPlaying={playing} play={onPlayClicked}/>\n          <div\n            ref={ref}\n            style={style} className=\"slider-container\">\n            <div\n              style={{\n                  backgroundColor: buttonTextColor,\n                  width: width*(100-progress)/100,\n                  left: width*progress/100}} className=\"slider-inner\"/>\n            <div\n              ref={scrubRef}\n              onMouseDown={(e) => {\n                  e.stopPropagation();\n                  setScrubbing(true);\n              }}\n              onTouchStart={(e) => {\n                  e.stopPropagation();\n                  setScrubbing(true);\n              }}\n              style={{\n                  backgroundColor: buttonTextColor,\n                  left: width*progress/100}} className=\"slider-scrubber\"/>\n          </div>\n          </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShuffleButton);\n","import React, {useState, useEffect, useCallback} from 'react';\nimport {getRemixByNumber} from 'spores/getSporeRemixes.js';\nimport ipfs from 'decentralized/Ipfs.js';\n\nexport const useRemixListener = (clear, playerRef, remixId) => {\n    let [recordedRemix, setRecordedRemix] = useState();\n    let [uploadingRemix, setUploadingRemix] = useState(window.TEST_REMIX_UPLOAD_FLAG);\n    let [remixToPlay, setRemixToPlay] = useState();\n\n    useEffect(() => {\n        if (remixId) {\n            getRemixByNumber(remixId).then(\n                x => {\n                    setRemixToPlay(x);\n                });\n        }\n    }, [remixId]);\n\n    useEffect(() => {\n        if (window.TEST_REMIX_UPLOAD_FLAG) {\n            setTimeout(() => {\n                setRecordedRemix(\"@mmmmm\");\n            }, 5000);\n        }\n    }, []);\n    \n    const onRemixSigningCompleted = useCallback(() => {\n        clear();\n        setRecordedRemix(undefined);\n        setUploadingRemix(undefined);\n        if (playerRef.current) {\n            /*\n            playerRef.current.contentWindow.postMessage({\n                \"type\": \"jacker-stop\",\n                \"body\": \"jacker-stop\",\n            }, \"*\");\n            */\n        }\n    }, [setRecordedRemix, setUploadingRemix, clear]);\n\n    useEffect(() => {\n        window.addEventListener(\"message\", onMessage, false);\n        return () => window.removeEventListener(\"message\", onMessage);\n    }, [setRecordedRemix, setUploadingRemix]);\n\n    const onMessage = useCallback(e => {\n        let data = e.data;\n        if (data.type === \"uploadingRecording\") {\n            if (playerRef.current) {\n                playerRef.current.contentWindow.postMessage({\n                    type: \"jacker-stop\",\n                    body: \"please\"\n                }, \"*\");\n            }\n            setUploadingRemix(true);\n        } else if (data.type == \"sporeRecorded\") {\n            let json = {\n                sliderChanges: data.body.sliderData,\n                modeChanges: data.body.modeData\n            };\n            ipfs.addJson(json).then(\n                hash => {\n                    setRecordedRemix({\n                        recordingHash: data.body.recording,\n                        dataHash: hash\n                    });\n                });\n        }\n    }, [setRecordedRemix, setUploadingRemix]);\n\n    return {recordedRemix, uploadingRemix, onRemixSigningCompleted, remixToPlay, setRemixToPlay};\n};\n","import React, { useRef, useState, useEffect } from 'react';\nimport SimpleControls from './SimpleControls.js';\nimport {isMobile} from 'react-device-detect';\nimport SampleInfo from 'components/samples/SampleInfo.js';\nimport {useAccount} from 'wagmi';\nimport VideoShader from 'components/video/VideoShader.js';\nimport SporeRecorded from 'components/recording/SporeRecorded.js';\nimport { useSporeEmbed } from 'components/hooks/useSporeEmbed.js';\nimport { useSporeListener } from 'components/hooks/useSporeListener.js';\nimport SporeControls from 'components/nft-jacker/ShuffleButton.js';\nimport {useRemixListener} from 'components/hooks/useRemixListener';\nimport './spore-embed.scss';\n\nconst CID = 'QmWV7gqvBeXT9VVYEEL5J9oGEvQFDjYZZ4rgGYz9JDk3h7';\nconst DEFAULT_SPORE_URL = `https://zequencer.mypinata.cloud/ipfs/${CID}/?tokenId=40&gallery=true`;\n\nexport default ({\n    simpleControls,\n    zorbId,\n    isFullScreen,\n    songTitle=\"Yo\",\n    collectionAddress,\n    tokenId,\n    artist,\n    hideWaveform,\n    thumbnail,\n    setStems,\n    stems,\n    isWaveformRainbow,\n    url= 'https://zequencer.mypinata.cloud/ipfs/QmNejpqTsVw3W3872o85XhWiKVG6gUchVJTvS4uUj2fUrC',\n    innerControls,\n    hideControls,\n    children,\n    playerRef,\n    isSimple,\n    color=\"white\",\n}) => {\n    console.log(\"HIDE WAVEFORM=\", hideWaveform);\n\n    const {data: account, isError, isLoading} = useAccount();\n    const ref = playerRef || useRef();\n\n    let {totalRemixes, recordedRemix, uploadingRemix, onRemixSigningCompleted, remixToPlay, setRemixToPlay} = useRemixListener(\n        () => [],\n        ref\n    );\n\n    const {loaded} = useSporeListener(ref);\n\n    useEffect(() => {\n        console.log('sending zorb id=', zorbId);\n        if (loaded && zorbId) {\n            ref.current.contentWindow.postMessage({\n                body: zorbId,\n                type: \"zorb-id\"\n            }, \"*\");\n        }\n    }, [zorbId, loaded]);\n    useEffect(() => {\n        if (!loaded) {\n            return;\n        }\n        return;\n        console.log('sending unlocked loops=', stems);\n        setTimeout(() => {\n            ref.current.contentWindow.postMessage({\n                type: \"unlocked-loops\",\n                body: stems\n            }, \"*\");\n        }, 1000);\n    }, [stems, loaded]);\n\n    return (\n        <div className=\"spore-embed-container\">\n          {children}\n          <SporeRecorded\n            uploadingRemix={uploadingRemix}\n            recordedRemix={recordedRemix}\n            collectionAddress={collectionAddress}\n            spTokenId={1}\n            onRemixSigningCompleted={onRemixSigningCompleted}\n            tokenId={tokenId}\n            playerRef={ref}/>\n          {thumbnail && <img src={thumbnail} className={\"cover-image\"}/>}\n          <div className={\"spore-embed-helper\"}>\n            {!hideControls && innerControls &&\n             <SporeControls\n               hideWaveform={hideWaveform}\n               innerControls={innerControls}\n               isWaveformRainbow={isWaveformRainbow}\n               buttonTextColor={color} playerRef={ref} />}\n            <div className=\"song-title\">\n              {songTitle}\n            </div>\n            <div className=\"song-artist\">\n              {artist}\n            </div>\n            {!isSimple && <div className=\"stems-unlocked\">\n              {Math.min(11, stems)} / 11 STEMS UNLOCKED\n              </div>}\n          </div>\n          <div className={\"flex w-full\"}>\n            <iframe\n              className={\"spore-embed z-20 mx-auto\"}\n              width={isFullScreen ? window.innerWidth : 340}\n              height={isFullScreen ? window.innerHeight : 400}\n              ref={ref}\n              src={url}\n            />\n            {simpleControls && <SimpleControls playerRef={ref}/>}\n        {!hideControls && !innerControls && <SporeControls\n              isWaveformRainbow={isWaveformRainbow}\n                                              hideWaveform={hideWaveform}\n                                              buttonTextColor={color} playerRef={ref} />}\n            {!isMobile && !hideWaveform && <SampleInfo playerRef={ref}/>}\n          </div>\n        </div>\n  )\n}\n","import React, { useEffect, useCallback, useState} from 'react';\n\nexport const useSporeListener = (ref) => {\n    const [loaded, setLoaded] = useState(false);\n    useEffect(() => {\n        window.addEventListener(\"message\", onReceive, false);\n        return () => window.removeEventListener(\"message\", onReceive);\n    }, [setLoaded]);\n\n    const onReceive = useCallback((e) => {\n        /*\n        if (e.origin !== \"https://zequencer.mypinata.cloud\" && e.origin !== \"https://main.djdhx85izle40.amplifyapp.com/\") {\n            return;\n        }\n        */\n        if (e.data === \"Finished Loading Project\") {\n            // we are ready to send in the song via an iframe message\n            setLoaded(true);\n        }\n  \n    }, [setLoaded]);\n\n    return {loaded};\n};\n","\nimport VideoRecording from './VideoRecording.js';\nimport VideoContentShader from './VideoContentShader.js';\nimport React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {togglePlay} from './control.js';\nimport PlayButton from 'components/buttons/PlayButton.js';\nimport PlaybarContainer from './PlaybarContainer.js';\nimport {useVideoController} from './useVideoController.js';\nimport VideoShader from './VideoShader.js';\nimport {sleep} from 'utils/sleep.js';\nimport {isMobile} from 'react-device-detect';\nimport {vertexShader} from './blurred-shader/vertex.js';\nimport {fragmentShader} from './blurred-shader/fragment.js';\n\nimport SporeEmbed from 'components/player/SporeEmbed.js';\nimport './video.scss';\nimport './video-mobile.scss';\nimport '../nft-jacker/nft-jacker.scss';\nimport '../drops/drop.scss';\n\n\nimport {connect} from 'react-redux';\n\nlet PLAYER_CID = 'Qmd2UjeaJkoeF5uE3dmwKQv6VY3NoAzsZFRGFsRcaUoTn3';\nconst VideoJacker = ({\n    videoURL=\"https://zequencer.mypinata.cloud/ipfs/QmU6xYLumQ8TXiJXpNV3g5m5bwmeZDyigpagwdQ3b8wy7T\",\n    playerURL=`https://zequencer.mypinata.cloud/ipfs/${PLAYER_CID}/?tokenId=24&gallery=true`,\n    lightweight\n}) => { \n    let ref = useRef();\n    let canvasRef = useRef();\n    let playerRef = useRef();\n    let {started, rewind, fastForward, isPlaying, uniforms} = useVideoController({ref, playerRef});\n    let [showControls, setShowControls] = useState(false);\n\n    useEffect(() => {\n        if (!isMobile && started) {\n            setShowControls(true);\n        }\n    }, [started, setShowControls]);\n\n    useEffect(() => {\n        if (!isPlaying && started) {\n            setShowControls(true);\n        } else if (isPlaying && isMobile) {\n            setTimeout(() => {\n                setShowControls(false);\n            }, 1000);\n        }\n    }, [isPlaying, setShowControls, started]);\n\n    const togglePlayControls = useCallback(() => {\n        if (!isMobile) {\n            return;\n        }\n        setShowControls(!showControls);\n    }, [showControls, setShowControls]);\n\n    let className = \"drop nft-jacker jacked video-jacker\";\n    if (isMobile && !started) {\n        className += \" dark-setting\";\n    }\n    if (lightweight) {\n        className += \" lightweight\";\n    }\n    return (<div className={className}>\n              <SporeEmbed\n                hideWaveform={true}\n                isSimple={true}\n                playerRef={playerRef}\n                videoRef={ref}\n                innerControls={isMobile}\n                songTitle=\"VERIFIED FEAT. CHIIEF DIIN\" \n                artist=\"HALEEK MAUL\"\n                hideControls={true}\n                url={playerURL}>\n                {/*\n                isMobile && started && <VideoShader \n                               uniforms={uniforms}\n                  fragmentShader={fragmentShader}\n                  vertexShader={vertexShader}\n                  videoRef={ref}\n                  width={window.innerWidth}\n                  height={isMobile ? window.innerHeight*0.7 : window.innerHeight}\n                  />*/}\n              </SporeEmbed>\n              <div className=\"z-50 h-1/3 md:z-10 fixed md:h-full w-full flex items-center justify-center\">\n                {!lightweight && \n                <VideoContentShader\n                  canvasRef={canvasRef}\n                  started={started}\n                  videoRef={ref} uniforms={uniforms}/>}\n                <video\n                  preload=\"auto\"\n                  preLoad=\"auto\"\n                  onClick={togglePlayControls}\n                  className=\"absolute md:h-2/3 md:w-auto md:top-1/2 md:left-1/2 md:transform md:-translate-x-1/2 md:-translate-y-1/2 w-full\"\n                  style={{opacity: lightweight ? 1.0 : 0.0}}\n                  crossorigin=\"\"\n                  ref={ref}\n                  muted\n                  playsInline\n                  src={videoURL}>\n                </video>\n                <PlaybarContainer videoRef={ref} playerRef={playerRef} started={started}/>\n              </div>\n              {showControls &&\n               <div className=\"play-controls z-50 absolute left-0 right-0 mx-auto w-4 md:w-28\">\n                 <img onClick={rewind} className=\"rew pushable\" src=\"/rewind-icon.svg\"/>\n                 <PlayButton isPlaying={isPlaying} play={() => togglePlay(playerRef)}/>\n                 <img onClick={fastForward} className=\"fwd pushable\" src=\"/fast-forward-icon.svg\"/>\n               </div>}\n              {/*started && <VideoRecording canvasRef={canvasRef} started={started}/>*/}\n           </div>\n           );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoJacker);\n","export const togglePlay = (playerRef) => {\n    playerRef.current.contentWindow.postMessage({\n        type: \"jacker-pause-toggle\",\n        body: true,\n    }, \"*\");\n};\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './pitch.scss';\n\nconst NUM_PAGES = 3;\nconst Gen3Info = () => { \n    let [showPitch, setShowPitch] = useState(false);\n    let [page, setPage] = useState(1);\n    if (showPitch) {\n        return (\n            <div className=\"gen3-info\">\n              <div onClick={() => setShowPitch(false)} className=\"pushable exit-btn\">x</div>\n              <img\n                onClick={() => page < NUM_PAGES ? setPage(page+1) : 0}\n                className=\"pitch-deck-image\" src={`/spores-pitch-${page}.jpg`}/>\n              <div className=\"page-navigator\">\n                <div className={page > 1 ? \"prev-btn\" : \"prev-btn hide\"} onClick={() => setPage(page-1)}>\n                </div>\n                <div className=\"page-info\">\n                  {page} / 3\n                </div>\n                <div className={page < NUM_PAGES ? \"next-btn\" : \"hide next-btn\"} onClick={() => setPage(page+1)}>\n                </div>\n              </div>\n            </div>);\n    } else {\n        return (\n            <div onClick={() => setShowPitch(true)} className=\"gen3-btn pushable\">\n              <div className=\"gen3-text\">\n                Gen3 Vision 𓍊\n              </div>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Gen3Info);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {truncate} from 'components/spore/AudioPlayer.js';\nimport { useEnsName } from 'wagmi';\nimport './ens.scss';\n\nconst ENSName = ({address}) => { \n    const { data, isError, isLoading } = useEnsName({\n        address\n    });\n\n    if (isLoading) return '';\n    console.log(\"NAME=%s for address=%s\", data, address);\n    return (\n        <span className=\"ens-name\">\n          {data === null ? truncate(address) : data}\n        </span>);\n};\n\nexport default ENSName;\n","/*\n    This file is part of Universal Sequences.\n    Universal Sequences is free software: you can redistribute it and/or modif\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    Universal Sequences is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\nconst MIN_BRIGHTNESS = 170;\nconst brightCache = {};\nconst trackCache = {};\n\nclass Colors {\n    constructor() {\n    }\n\n    transparent(color, opacity) {\n        return color.slice(0, color.length-1) + ', ' + opacity + ')';\n    }\n\n    intToRGB(i){\n        var c = (i & 0x00FFFFFF)\n            .toString(16)\n            .toUpperCase();\n        \n        return \"#\" + \"00000\".substring(0, 6 - c.length) + c;\n    }\n\n    hueShift(c, shift) {\n        let {h, s, l} = getHSLFromString(c);\n        return getHSLString({h: h + shift, s, l});\n    }\n\n    warm(warmth, start=141, s=100) {\n        let h = start;\n        let l = 50;\n        return getHSLString({h: h - warmth, s, l});\n    }\n\n    compliment(c, rotate=2) {\n        let {h, s, l} = getHSLFromString(c);\n        if (h === 0) {\n            h++;\n        }\n        h += rotate*10 % 255;\n        let x = getHSLString({h, s, l});\n        return x;\n    }\n\n    saturate(c, factor, lightFactor=1) {\n        if (!c) {\n            return undefined;\n        }\n        if (c.startsWith(\"hsl\")) {\n            let {h, s, l} = getHSLFromString(c);\n            l *= lightFactor;\n            s = Math.min(s*factor, 100);\n            c = getHSLString({h, s, l});\n            return c;\n        } else {\n            let rgb = this.getRGB(c);\n            let {h, s, l} = RGBToHSL(rgb);\n            l *= lightFactor;\n            s = Math.min(s*factor, 100);\n            c = getHSLString({h, s, l});\n            return c;\n        }\n    }\n\n    brighten(c, factor) {\n        if (c.startsWith(\"hsl\")) {\n            let hsl = getHSLFromString(c);\n            hsl = brightenHSL(hsl, factor);\n            return getHSLString(hsl);\n        }\n        let cacheResult = brightCache[(c + '.' + factor)];\n        if (cacheResult) {\n            return cacheResult;\n        }\n        let r = Math.min(255, Math.floor(parseInt(c.slice(1, 3), 16) * factor));\n        let g = Math.min(255, Math.floor(parseInt(c.slice(3, 5), 16) * factor));\n        let b = Math.min(255, Math.floor(parseInt(c.slice(5), 16) * factor));\n\n        r = r.toString(16);\n        g = g.toString(16);\n        b = b.toString(16);\n\n        if (r.length === 1) {\n            r = '0' + r;\n        }\n\n        if (g.length === 1) {\n            g = '0' + g;\n        }\n\n        if (b.length === 1) {\n            b = '0' + b;\n        }\n\n        let x = '#' + r + g + b;\n        brightCache[c + '.' + factor] = x;\n        return x;\n\n    }\n\n    getBrightness(c) {\n        let rgb = this.getRGB(c);\n\n        let color = 0.299*rgb.r + 0.587*rgb.g + 0.114*rgb.b;\n        return color;\n    }\n\n    rawHSLToHex({h,s,l}) {\n        return hslToHex(h,s,l);\n    }\n\n    hslToHex(color) {\n        let {h,s,l} = getHSLFromString(color);\n        return hslToHex(h,s,l);\n    }\n\n    getRGB(c) {\n        let r = Math.floor(parseInt(c.slice(1, 3), 16)); \n        let g = Math.floor(parseInt(c.slice(3, 5), 16));\n        let b = Math.floor(parseInt(c.slice(5), 16));\n        return {r:r, g:g, b:b};\n    }\n}\n\nfunction RGBToHSL({r,g,b}) {\n    // Make r, g, and b fractions of 1\n    r /= 255;\n    g /= 255;\n    b /= 255;\n\n    // Find greatest and smallest channel values\n    let cmin = Math.min(r,g,b),\n        cmax = Math.max(r,g,b),\n        delta = cmax - cmin,\n        h = 0,\n        s = 0,\n        l = 0;\n\n    if (delta == 0)\n        h = 0;\n    // Red is max\n    else if (cmax == r)\n        h = ((g - b) / delta) % 6;\n    // Green is max\n    else if (cmax == g)\n        h = (b - r) / delta + 2;\n    // Blue is max\n    else\n        h = (r - g) / delta + 4;\n\n    h = Math.round(h * 60);\n\n    // Make negative hues positive behind 360°\n    if (h < 0)\n        h += 360;\n\n    // Calculate lightness\n    l = (cmax + cmin) / 2;\n\n    // Calculate saturation\n    s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n\n    // Multiply l and s by 100\n    s = +(s * 100).toFixed(1);\n    l = +(l * 100).toFixed(1);\n\n    return {h, s, l};\n}\n\nfunction getHSLString({h, s, l}) {\n    return \"hsl(\" + h + \",\" + s + \"%,\" + l +\"%)\";\n}\n\nfunction getHSLFromString(str) {\n    str = str.substring(4);\n    let [hPart, sPart, lPart] = str.split(\",\");\n    let index = sPart.indexOf(\"%\");\n    sPart = sPart.substring(0, index);\n    index = lPart.indexOf(\"%\");\n    lPart = lPart.substring(0, index);\n    return {\n        h: parseFloat(hPart),\n        s: parseFloat(sPart),\n        l: parseFloat(lPart),\n    };\n\n}\n\nfunction brightenHSL({h, s, l}, factor) {\n    return {\n        h,\n        s,\n        l: l* factor\n    };\n}\n\nfunction hslToHex(h, s, l) {\n  l /= 100;\n  const a = s * Math.min(l, 1 - l) / 100;\n  const f = n => {\n    const k = (n + h / 30) % 12;\n    const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    return Math.round(255 * color).toString(16).padStart(2, '0');   // convert to Hex and prefix \"0\" if needed\n  };\n  return `#${f(0)}${f(8)}${f(4)}`;\n}\n\n\n\nexport default Colors;\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport Colors from 'components/Colors.js';\nimport Tone from 'tone';\nconst colors = new Colors();\nwindow.heatRoot = 1.1;\n//window.bucketSize = 4;\nwindow.bucketSize = 1;\nwindow.saturation = 80;\n\nconst SporeHeatMap = ({heat, width=54, height=10, center=false, saturation=200, duration}) => { \n    // lets start with slider data\n    if (!heat) {\n        return '';\n    }\n\n    // first process the heat\n    let bucketSize = width === 54 ? window.bucketSize*2 : window.bucketSize;\n    let buckets = getBuckets(heat, bucketSize);\n    let max = Math.max(...Object.values(buckets))*.75;\n    let maxStep = Math.max(...Object.keys(buckets));\n    /*\n    if (duration) {\n        let oldMaxStep = maxStep;\n        maxStep = (duration/new Tone.Time('32n'))/(bucketSize);\n        console.log(\"max step=%s old max step=%s dur=%s\", maxStep, oldMaxStep, duration);\n    }\n    */\n    return (\n        <svg className=\"heatmap\" width={width} height={10}>\n          {Object.keys(buckets).map(\n              step => <rect\n                        width={width > 80 ? 4 : 1}\n                        height={center ? height* Math.min(1, Math.pow(buckets[step], window.heatRoot)/max) : height}\n                        opacity={Math.min(1, Math.pow(buckets[step], window.heatRoot)/max)}\n                        fill={colors.warm(190*Math.min(1, Math.pow(buckets[step], window.heatRoot)/max), 190,\n                                          Math.min(1, Math.pow(buckets[step], window.heatRoot)/max)*saturation)}\n                        x={width*step/maxStep}\n                        y={center ? height/2 - height* Math.min(1, Math.pow(buckets[step], window.heatRoot)/max)/2 : 0}/>)}\n        </svg>);\n};\n\nconst getBuckets = (heat, bucketSize) => {\n    let sliderData = heat.sliderChanges;\n    let modeData = heat.modeChanges;\n    let regions = sliderData.map(x => Math.round((isNaN(x[0]) ? 0 : x[0]) / bucketSize));\n    let buckets = {};\n    for (let x of regions) {\n        if (!buckets[x]) {\n            buckets[x] = 0;\n        }\n        buckets[x]+=1;\n    }\n\n    regions = modeData.map(x => Math.round((isNaN(x[0]) ? 0 : x[0]) / bucketSize));\n    let max = Math.max(...Object.values(regions));\n    for (let x of regions) {\n        if (!buckets[x]) {\n            buckets[x] = 0;\n        }\n        buckets[x]+=16;\n        let q=0;\n        for (let i=x+1; i < max; i++) {\n            if (regions.some(x => x === i)) {\n                break;\n            }\n            if (!buckets[i]) {\n                buckets[i] = 0;\n            }\n            buckets[i] += (50+q);\n            q+=8;\n        }\n    }\n    return buckets;\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SporeHeatMap);\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport ENSName from 'components/ens/ENSName.js';\nimport UnknownProgressBar from 'components/progressbar/UnknownProgressBar.js';\nimport JollyRancherPlayer from './JollyRancherPlayer.js';\nimport {isMobile} from 'react-device-detect';\nimport SporeHeatMap from \"components/spore/SporeHeatMap.js\";\n\nimport {useInterval} from \"components/hooks/useInterval.js\";\nimport PlayButton from \"components/buttons/PlayButton.js\";\nimport {connect} from 'react-redux';\nimport Tone from 'tone';\n\nconst AudioPlayer = ({\n    songName=\"\",\n    artist=\"\",\n    heat,\n    externalURL,\n    creator,\n    audioUnit,\n    store,\n    spore,\n    preset,\n    setPreset,\n    sporeMetadata\n}) => { \n\n    let WIDTH=isMobile ? 230 : 500;\n    let ref = useRef();\n    let [playing, setPlaying] = useState(false);\n    let [playTime, setPlayTime] = useState(undefined);\n    let startPoint = useRef(0);\n    let [progress, setProgress] = useState(0);\n    let [mouseSeeker, setMouseSeeker] = useState();\n\n    useEffect(() => {\n        setPlaying(false);\n        setProgress(0);\n    }, [spore]);\n\n    useEffect(() => {\n        setPlaying(false);\n        setProgress(0);\n        setPlayTime(undefined);\n        startPoint.current = 0 ;\n    }, [spore, setPlaying, setProgress, setPlayTime]);\n\n    const onTick = useCallback(() => {\n        let diff = Tone.Master.context.currentTime - playTime;\n        if (playing) {\n            setProgress((diff + startPoint.current) / audioUnit.duration);\n        }\n    }, [playing, setProgress, playTime]);\n\n    useInterval(onTick, 40);\n\n    const onClickPlay = useCallback(() => {\n        if (playing) {\n            startPoint.current = startPoint.current + Tone.Master.context.currentTime - playTime;\n            audioUnit.stopSound();\n        } else {\n            audioUnit.playSound(startPoint.current);\n        }\n        setPlaying(!playing);\n        //setProgress(0);\n        setPlayTime(Tone.Master.context.currentTime);\n    }, [playing, setProgress, setPlaying, audioUnit, playTime]);\n\n    const mouseSeek = useCallback((e) => {\n        e.stopPropagation();\n        setMouseSeeker(undefined);\n        if (!playing) {\n            setPlaying(true);\n        }\n        let x = e.clientX - ref.current.getBoundingClientRect().left;\n        let percentage = x / WIDTH;\n        let startTime = percentage * audioUnit.duration;\n        audioUnit.playSound(startTime);\n        startPoint.current = startTime;\n        setPlayTime(Tone.Master.context.currentTime);\n        setMouseSeeker(x);\n        setTimeout(() => {\n            setMouseSeeker(undefined);\n        }, 300);\n    }, [playing, setPlaying, setPlayTime, setMouseSeeker, audioUnit]);\n\n    useEffect(() => {\n        return () => {\n            if (audioUnit) {\n                audioUnit.stopSound();\n            }\n        }\n    }, [audioUnit]);\n\n    progress = Math.min(100, progress);\n\n    return (\n        <div className={audioUnit ? \"audio-player\" : \"audio-player disabled\"}>\n          {audioUnit &&\n           <PlayButton isPlaying={playing}\n                       play={onClickPlay}/>}\n          <div\n            ref={ref}\n            onClick={mouseSeek}\n            className=\"play-time-and-slider\">\n            {!audioUnit && <div className=\"progress-container\">\n                           <UnknownProgressBar />\n                         </div>}\n            {sporeMetadata && <JollyRancherPlayer\n                        setPreset={setPreset}\n                                width={WIDTH}\n                        preset={preset}\n                        progress={progress}\n                        store={store}\n                        spore={sporeMetadata}\n                      />}\n           <div className=\"play-time\">\n              {audioUnit && <div className=\"time\">\n              {formatTime(progress*audioUnit.duration)} / {formatTime(audioUnit.duration)}\n                            </div>}\n              {creator && <div className=\"creator\">\n                            Remixed by <span className=\"wallet-address\"><a target=\"_blank\" href={\"https://etherscan.io/address/\"+creator}><ENSName address={creator}/></a></span>\n                          </div>}\n            </div>\n            <div className=\"song-title-and-author\">\n              <div className=\"song-title\">\n                {songName}\n              </div>\n              <div className=\"song-creator\">\n                Original by <span className=\"creator-name\"><a target=\"_blank\" href={externalURL}>{artist}</a></span>\n              </div>\n            </div>\n          </div>\n        </div>);\n}\n\nexport const truncate = (creator) => {\n    return creator.slice(0, 4) + '...' + creator.slice(-4);\n};\n\nconst formatTime = (time) => {\n    if (!time) {\n        time = 0;\n    }\n    let minutes = Math.floor(time/60);\n    let seconds = Math.floor(time - minutes * 60);\n    if (seconds < 10) {\n        seconds = '0' + seconds;\n    }\n\n    return `${minutes}:${seconds}`;\n\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\n            /*\n            <div\n              onClick={mouseSeek}\n              ref={ref} className=\"play-slider\">\n              {mouseSeeker && <div style={{left: mouseSeeker}} className=\"mouse-seeker\"/>}\n              <SporeHeatMap duration={audioUnit.duration} center={true} height={8} heat={heat} width={WIDTH}/>\n            <div\n              style={{width: WIDTH * progress}}\n              className=\"play-slider-inner\">\n            </div>\n            */\n \n\n/*\n\n\n*/\nexport default connect(mapStateToProps, mapDispatchToProps)(AudioPlayer);\n","import React, { useEffect, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {\n    EmailIcon,\n    EmailShareButton,\n    FacebookMessengerIcon,\n    FacebookMessengerShareButton,\n    RedditIcon,\n    RedditShareButton,\n    TelegramIcon,\n    TelegramShareButton,\n    TwitterIcon,\n    TwitterShareButton,\n    WhatsappIcon,\n    WhatsappShareButton,\n  } from \"react-share\";\n  import { BsShareFill } from 'react-icons/bs';\n  import { FaRegClipboard } from 'react-icons/fa';\nimport { isMobile } from 'react-device-detect';\n\n  const ShareButton = ({url, type, lowerGradInverted, buttonBgColor}) => {\n    const [showShareModal, setShowModal] = useState(false);\n    const [isCopied, setIsCopied] = useState(false);  \n    const shareUrl = url;\n    const title = \"Check out this song on Spores!\";\n\n    function copyText() {\n        {navigator.clipboard.writeText(url)};\n        setIsCopied(true);\n    }\n\n    return (\n        <>\n            <div className='share-button pushable' onClick={() => setShowModal(true)}>\n                <BsShareFill style={{fill: isMobile ? lowerGradInverted : buttonBgColor}}/>\n            </div>\n            {showShareModal && <div className='share-button-modal'>\n                <div className='share-upper-container'>\n                    <div><p>{type === \"remix\" ? \"Share Remix\" : \"Share Song\"}</p></div>\n                    <div onClick={() => setShowModal(false)} className=\"share-close-button\">x</div>\n                </div>\n                <div className='share-url-field'>\n                    <p>{url}</p>\n                    <FaRegClipboard className=\"pushable\" style={{color: isCopied ? \"#84ff98\" : \"white\", cursor: \"pointer\"}} onClick={copyText}/>\n                </div>\n                <div className='share-icon-container'>\n                    <div className='sharing-icon pushable'>\n                        <TwitterShareButton\n                            url={shareUrl}\n                            title={title}>\n                            <TwitterIcon size={32} round/>\n                        </TwitterShareButton>\n                    </div>\n                    <div className='sharing-icon pushable'>\n                        <FacebookMessengerShareButton\n                            url={shareUrl}\n                            quote={title}>\n                            <FacebookMessengerIcon size={32} round/>\n                        </FacebookMessengerShareButton>\n                    </div>\n                    <div className='sharing-icon pushable'>\n                        <RedditShareButton\n                            url={shareUrl}\n                            title={title}>\n                            <RedditIcon size={32} round/>\n                        </RedditShareButton>\n                    </div>\n                    <div className='sharing-icon pushable'>\n                        <TelegramShareButton\n                            url={shareUrl}\n                            title={title}>\n                            <TelegramIcon size={32} round/>\n                        </TelegramShareButton>\n                    </div>\n                    <div className='sharing-icon pushable'>\n                        <WhatsappShareButton\n                            url={shareUrl}\n                            title={title}\n                            separator=\":: \">\n                            <WhatsappIcon size={32} round/>\n                        </WhatsappShareButton>\n                    </div>\n                    <div className='sharing-icon pushable'>\n                        <EmailShareButton\n                            url={shareUrl}\n                            subject={title}>\n                            <EmailIcon size={32} round/>\n                        </EmailShareButton>\n                    </div>\n                </div>\n            </div>}\n            \n        </>\n    )\n  }\n\n  const mapStateToProps = (state, props) => {\n    return {\n    };\n  };\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n    };\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(ShareButton);","import React, { useEffect, useCallback, useState} from 'react';\nimport {useAudioPlayer} from 'components/hooks/useAudioPlayer.js';\nimport AudioPlayer from 'components/spore/AudioPlayer.js';\nimport {connect} from 'react-redux';\nimport './player.scss';\nimport ShareButton from '../nft-jacker/ShareButton';\n\nconst RemixPlayer = ({remix, setRemix, songName, artist, externalURL, shareLink}) => { \n    let {audioPlayer, dispose} = useAudioPlayer(remix.sporeHash);\n    return (\n        <div className=\"remix-player\">\n          <div className=\"pushable close-button\" onClick={() => setRemix(undefined)}>x</div>\n          <ShareButton\n            url={shareLink || (\"spores.vision/play/\" + remix.collectionAddress + \"/\" + remix.tokenId + \"/\" + remix.sporeId)}\n            type={\"remix\"}/>\n          <AudioPlayer\n            externalURL={externalURL}\n            artist={artist}\n            songName={songName}\n            creator={remix.creator}\n            audioUnit={audioPlayer}\n            spore={remix}\n            sporeMetadata={remix} />\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RemixPlayer);\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {getSporeRemixes} from 'spores/getSporeRemixes.js';\nimport {getSporeHashIcon} from 'spores/getSporeHashIcon.js';\nimport hashAvatar from 'hash-avatar';\nimport svgToTinyDataUri from 'mini-svg-data-uri';\nimport ENSName from 'components/ens/ENSName.js';\nimport {connect} from 'react-redux';\nimport { isMobile } from 'react-device-detect';\nimport './remixlist.scss'\n\nconst RemixList = ({\n    creatorsToIgnore=[],\n    spTokenId,\n    setRemixToPlay,\n    remixToPlay,\n    collectionAddress,\n    tokenId,\n    clear\n}) => {\n    let [remixData, setRemixData] = useState([]);\n    const [noRemixes, setNoRemixes] = useState();\n\n    useEffect(() => {\n        if (collectionAddress && tokenId) {\n            getSporeRemixes(collectionAddress, tokenId)\n                .then(result => {\n                    result = result.filter(x => !creatorsToIgnore.includes(x.creator));\n                    setRemixData(result);\n                    setNoRemixes(result.length === 0 ? true : false);\n                });\n        }\n    }, [setRemixData, collectionAddress, tokenId]);\n\n    return (\n        <div className='remix-list-container'>\n            {isMobile && <div className='remix-close-button-container'><div className=\"pushable close-button\" onClick={() => clear()}>x</div></div>}\n            {noRemixes && <div className='no-remix-div'>No remixes have been made for this song yet. You could be the first...</div>}\n            {remixData.map(x => \n                <RemixListItem\n                  spTokenId={spTokenId}\n                  isPlaying={x === remixToPlay}\n                  setRemixToPlay={setRemixToPlay}\n                  clear={clear}\n                  data={x}/>\n            )}\n        </div>\n        );\n};\n\nexport const RemixListItem = ({clear, isPlaying, data, setRemixToPlay, spTokenId}) => {\n    let hashedIcon = svgToTinyDataUri(getSporeHashIcon(data.sporeHash, {size: 60}));\n    let className = \"remix-list-item-container pushable\";\n    if (isPlaying) {\n        className += \" playing\";\n    }\n    return(\n        <div\n          onClick={() => {\n              setRemixToPlay(data);\n              if (isMobile) {\n                  clear();\n              }\n          }}\n          className={className}>\n            <div className='remix-icon' style={{backgroundImage: 'url(\"' + hashedIcon + '\")'}}></div>\n            <div className='remix-info-container'>\n              {!data.sporeId ? <div className='remix-number'>Remix (Pending)</div>\n               : <div className='remix-number'>Remix #{data.sporeId}</div>}\n              <div className='remix-created-on'>Mixed on {spTokenId ? spTokenId : \"SP-\" + data.spTokenId}</div>\n              <div className='remix-address'>By {data.sporeId ? <ENSName address={data.creator}/> : \"You\"}</div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n    return {\n    };\n  };\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n    };\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(RemixList);\n","import color from \"tinycolor2\"\nimport hash from \"string-hash\"\n\nexport const getSporeHashIcon = (uid, {size}) => {\n    const n = hash(uid)\n    const c1 = color({ h: n % 360, s: 0.95, l: 0.5 })\n    const c1_ = c1.toHexString()\n    const c2 = c1.triad()[1].toHexString()\n\n    return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <svg width=\"${size}px\" height=\"${size}px\" viewBox=\"0 0 61 61\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n      <defs>\n      <circle cx=\"30.658\" cy=\"30.9537\" r=\"30\" fill=\"url(#paint0_radial_151_38)\" fill-opacity=\"0.58\"/>\n      <radialGradient id=\"paint0_radial_151_38\" cx=\"0\" cy=\"0\" r=\"1\" gradientUnits=\"userSpaceOnUse\" gradientTransform=\"translate(30.658 30.9537) rotate(90) scale(30)\">\n            <stop stop-color=\"${c1_}\"/>\n            <stop offset=\"1\" stop-color=\"${c2}\" stop-opacity=\"0\"/>\n        </radialGradient>\n      </defs>\n      <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n        <rect id=\"Rectangle\" fill=\"url(#paint0_radial_151_38)\" x=\"0\" y=\"0\" width=\"80\" height=\"80\"></rect>\n      </g>\n    </svg>`\n}","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './glossary.scss';\n\nconst Glossary = (props) => { \n  return (\n          <div className=\"glossary-items\">\n            <div\n              className=\"helper-item item-1\">\n              <p className=\"glossary-number\">\n                1\n              </p>\n              <p className=\"glossary-term\">\n                CHANGE MODE\n              </p>\n              <p className=\"glossary-definition\">\n                PRESS TO SWITCH TO LOOP MODE, ALLOWING YOU TO LOOP THE TRACK AND ACCESS SECONDARY SLIDERS*.\n              </p>\n            </div>\n            <div\n              className=\"helper-item item-2\">\n              <p className=\"glossary-number\">\n                2\n              </p>\n              <p className=\"glossary-term\">\n                JUICE / LOOP*\n              </p>\n              <p className=\"glossary-definition\">\n                ADJUST THE AMOUNT OF \"JUICE\", THAT THE EXTERNAL LOOP CONTRIBUTES, OR LOOP A SECTION OF THE TRACK.\n              </p>\n            </div>\n            <div\n              className=\"helper-item item-3\">\n              <p className=\"glossary-number\">\n                3\n              </p>\n              <p className=\"glossary-term\">\n                PITCH UP / PITCH DOWN*\n              </p>\n              <p className=\"glossary-definition\">\n                SLIDE TO RAISE THE PITCH AND SPEED UP, OR LOWER THE PITCH AND SLOW DOWN THE TRACK.\n              </p>\n            </div>\n            <div className=\"helper-item item-4\">\n              <p className=\"glossary-number\">\n                4\n              </p>\n              <p className=\"glossary-term\">\n                STUTTER / SPACE*\n              </p>\n              <p className=\"glossary-definition\">\n                CONTROL STUTTERING WHICH REPEATS THE TRACK OR ADD VASTNESS TO IT WITH SPACE.\n              </p>\n            </div>\n            <div className=\"helper-item item-5\">\n              <p className=\"glossary-number\">\n                5\n              </p>\n              <p className=\"glossary-term\">\n                ACOUSTIFY / GATE*\n              </p>\n              <p className=\"glossary-definition\">\n                RAISE THE GUITAR LEVELS OR CONTROL THE GATE EFFECT AT DIFFERENT RATES.\n              </p>\n            </div>\n            <div className=\"helper-item item-6\">\n              <p className=\"glossary-number\">\n                6\n              </p>\n              <p className=\"glossary-term\">\n                CHANGE LOOP\n              </p>\n              <p className=\"glossary-definition\">\n                SWITCH TO THE NEXT LOOP TO INTERWEAVE INTO THE TRACK.\n              </p>\n            </div>\n          </div>);\n \n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Glossary);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {getSporeRemixes} from 'spores/getSporeRemixes.js';\nimport RemixPlayer from 'components/remix/RemixPlayer.js';\nimport RemixList from '../remix/RemixList.js';\nimport { ConnectButton, lightTheme} from '@rainbow-me/rainbowkit';\nimport BuyPlayerFlow from 'components/buy/BuyPlayerFlow.js';\nimport Glossary from './Glossary.js';\nimport {connect} from 'react-redux';\nimport SporeEmbed from 'components/player/SporeEmbed.js';\nimport '../nft-jacker/nft-jacker.scss';\nimport './drop.scss';\n\nconst CREATORS_TO_IGNORE = [\"0xdc94060e37dcb8816188508536595019c8f0c98a\", \"0x0fb5e3b3f254cbdccd69d31bcb0e92b83d381a0a\"];\nconst Drop = ({simpleControls, zorbId, url, className, color, hideWaveform, collectionAddress, isSimple, thumbnail, tokenId, askPrice=\"2\", songTitle, artist, isFullScreen, children}) => { \n    const [buying, setBuying] = useState(false);\n    const [stems, setStems] = useState(3);\n    const [remixToPlay, setRemixToPlay] = useState();\n\n    useEffect(() => {\n        getSporeRemixes(collectionAddress, tokenId).then(\n            s => {\n                s = s.filter(x => !CREATORS_TO_IGNORE.includes(x.creator))\n                let remixes = Math.max(0, s.length-1);\n                setStems(3 + remixes);\n            });\n    }, []);\n\n    return (\n        <div className={className ? \"drop nft-jacker jacked \" + className : \"drop nft-jacker jacked\"}>\n          {remixToPlay && <div className=\"remix-backdrop\"><RemixPlayer artist={artist} songName={songTitle} setRemix={setRemixToPlay} remix={remixToPlay}/></div>}\n          {buying && <BuyPlayerFlow\n                       name=\"SPX-1\"\n                       askPrice={askPrice} tokenId={1} thumbnail=\"/inmysoul-cover.jpeg\" setBuying={setBuying}/>}\n          <div className=\"connect-button-wrapper drop-top\">\n            <ConnectButton\n              accountStatus=\"address\" \n              showBalance={{ smallScreen: false, largeScreen: false }}\n              label=\"Connect Wallet\"\n            />\n          </div>\n          <SporeEmbed\n            zorbId={zorbId}\n            simpleControls={simpleControls}\n            collectionAddress={collectionAddress}\n            color={color}\n            isFullScreen={isFullScreen}\n            isSimple={isSimple}\n            tokenId={tokenId}\n            stems={stems}\n            isWaveformRainbow={false}\n            songTitle={songTitle}\n            hideWaveform={hideWaveform}\n            thumbnail={thumbnail} \n            artist={artist}\n            url={url}\n          />\n          <div className=\"drop-description\">\n            {children}\n            {/* <div className=\"buy-button\">\n              <div className=\"action\">\n                <a target=\"_blank\" href={`https://zora.co/collections/${collectionAddress}/${tokenId}`}>BID ON ZORA ↗</a>\n              </div>\n              <div className=\"asking-price\">\n                <div className=\"price-label\">RESERVE</div>\n                <div className=\"price\">{askPrice} ETH</div>\n              </div>\n            </div> */}\n            {<RemixList\n              spTokenId=\"SP - IN MY SOUL\"\n              remixToPlay={remixToPlay}\n              setRemixToPlay={setRemixToPlay}\n              creatorsToIgnore={CREATORS_TO_IGNORE}\n              collectionAddress={collectionAddress}\n              tokenId={tokenId}\n                            clear={() => []}/>}\n            {!isSimple && <div className=\"drop-features\">\n              LISTEN. PLAY. JUICE. PITCH UP. GATE. WOBBLE. STUTTER. LOOP. SPACE. PITCH DOWN. REMIX.\n                          </div>}\n        {!isSimple && <div className=\"spore-overview\">\n              <div className=\"overview-header\">\n                SPORE OVERVIEW\n              </div>\n              <img src=\"/spore.svg\" className=\"spore-overview-image\"/>\n                      </div>}\n            {!isSimple && <Glossary/>}\n         </div>\n       </div>);\n};\n\nexport default Drop;\n","\nimport Gen3Info from './Gen3Info.js';\nimport React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport Drop from './Drop.js';\nimport './thugger.scss';\nimport './nextgen.scss';\n\n//const CID = \"QmWEEvyNZmr3kngUjE8TNRRC5FmnXZLC1TdQk87UYe1cQL\";\nconst CID = \"QmbtfXrV8ZUxM5PweH5EZKnpawpBDQsPHvn4Fk9rXzM3Vg\";\n\nconst Thugger = (props) => { \n    let [entered, setEntered] = useState(false);\n    let [remove, setRemove] = useState(false);\n\n    useEffect(() => {\n        if (entered) {\n            setTimeout(() => {\n                setRemove(true);\n            }, 1000);\n        }\n    }, [entered, setRemove]);\n\n    return (\n        <div className=\"next-gen\">\n          {!remove && <div className={!entered ? \"enter-overlay\" : \"enter-overlay hide\"}>\n                        <div\n                          onClick={() => setEntered(true)}\n                          className=\"inner-overlay\">\n                          <img\n                            className=\"\"\n                            src=\"/spore-logo-future2.jpeg\"/>\n                          <div className=\"click-text\">\n                            Click to Enter\n                          </div>\n                        </div>\n                      </div>}\n          {remove && <Gen3Info/>}\n        <Drop\n          hideWaveform={true}\n          color=\"black\"\n          url={`https://zequencer.mypinata.cloud/ipfs/${CID}/?tokenId=32&gallery=true`}\n          collectionAddress=\"0x0000000000000000000000000000000000000001\"\n          isFullScreen={true}\n          tokenId={1}\n          className=\"thugger\"\n          artist=\"Young Thug\"\n          isSimple={true}\n          songTitle=\"Hop Out Ft. Wiz Kalifa\">\n          {/*\n         <p className=\"tagline-p\">\n           Spores grows strains of songs and media.\n         </p>\n         <p className=\"tagline-p\">\n           Season 1\n         </p>\n           */}\n       </Drop>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Thugger);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './animation.scss';\n\nconst ZorbAnimation = ({zorbStartPosition}) => { \n    let {image, x, y} = zorbStartPosition;\n    let [animating, setAnimating] = useState(false);\n\n    const set = (property, value) => {\n        property = '--' + property;\n        document.documentElement.style.setProperty(property, value);\n    };\n\n    useEffect(() => {\n        let width = window.innerWidth;\n        let height = window.innerHeight;\n        set(\"zorb-start-x\", x+-25+'px');\n        set(\"zorb-start-y\", y+-25+'px');\n        set(\"zorb-mid-x\", width/2-25+'px');\n        set(\"zorb-mid-y\", width/2-25+'px');\n        set(\"zorb-end-x\", width/2-25+'px');\n        set(\"zorb-end-y\", height/2-25+'px');\n        setAnimating(true);\n        setTimeout(() => {\n            setAnimating(false);\n        }, 1000);\n    }, [zorbStartPosition, x, y, setAnimating]);\n\n    if (!animating) {\n        return '' ;\n    }\n\n    return (<img\n              style={{left: x, top: y}}\n              className=\"zorb-animation animate-it\" src={image}/>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ZorbAnimation);\n","import React, { useEffect, useCallback, useRef, useState} from 'react';\nimport {connect} from 'react-redux';\n\nconst ZorbOption = ({setZorbId, zorbId, zorb, setZorbStartPosition}) => { \n    let ref = useRef();\n\n    let selected = zorbId === parseInt(zorb.tokenId);\n    useEffect(() => {\n    }, []);\n\n    useEffect(() => {\n        if (selected) {\n            let rect = ref.current.getBoundingClientRect();\n            setZorbStartPosition({x: rect.left, y: rect.top, image: zorb.image.url});\n        }\n    }, [selected, setZorbStartPosition]);\n\n    return (\n        <div\n          ref={ref}\n          onClick={() => setZorbId(parseInt(zorb.tokenId))}\n          className={\"pushable zorb-option \" + (selected ? \"selected\" : \" unselected\")}>\n          <img src={zorb.image.url}  \n               className={(selected ? \"selected\" : \" unselected\")}/>\n        </div>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ZorbOption);\n","import React, {useState, useEffect} from 'react';\nimport { ZDK, ZDKNetwork, ZDKChain } from \"@zoralabs/zdk\";\n\nconst networkInfo = {\n    network: ZDKNetwork.Ethereum,\n    chain: ZDKChain.Mainnet,\n};\n\nconst API_ENDPOINT = \"https://api.zora.co/graphql\";\nconst args = { \n    endPoint:API_ENDPOINT, \n    networks:[networkInfo], \n};\n\nconst zdk = new ZDK(args) // All arguments are optional\n\nexport const useTokenOwners = ({account}) => {\n    let [isLoading, setIsLoading] = useState(true);\n    let [zorbs, setZorbs] = useState([]);\n\n    useEffect(() => {\n        if (account && account.address) {\n            // use the ultra futuristic zora api to get see if they own\n            // one of these open editions\n            setIsLoading(true);\n            console.log('loading collection info for account=', account.address);\n            zdk.tokens({\n                where: {\n                    collectionAddresses: [\"0xCa21d4228cDCc68D4e23807E5e370C07577Dd152\"],\n                    ownerAddresses: [account.address]\n                }})\n                .then(\n                    results => {\n                        setZorbs(results.tokens.nodes.map(x => x.token));\n                    });\n        }\n    }, [account, setIsLoading, setZorbs]);\n\n    return {zorbs, isLoading};\n};\n","import React, { useEffect, useCallback, useState} from 'react';\nimport ZorbOption from './ZorbOption.js';\nimport { ConnectButton, lightTheme} from '@rainbow-me/rainbowkit';\nimport {connect} from 'react-redux';\nimport {useTokenOwners} from 'utils/zorbs.js';\nimport './zorb.scss';\n\nconst ZorbSelector = ({account, setZorbId, zorbId, setZorbStartPosition}) => { \n    let {zorbs} = useTokenOwners({account})\n\n    useEffect(() => {\n        if (zorbs[0]) {\n            //setZorbId(parseInt(zorbs[0].tokenId));\n        }\n    }, [zorbs]);\n\n    let [hide, setHide] = useState(false);\n    useEffect(() => {\n        if (zorbId !== undefined) {\n            setTimeout(() => {\n                setHide(true);\n            }, 1000);\n        }\n    }, [zorbId]);\n    if (hide) {\n        return '';\n    }\n    return (<div className=\"zs-container\">\n            <div className=\"zorb-selector\">\n              {!zorbId && <p>\n                            zorb + spore = zpores\n                          </p>}\n              {!zorbId && <p>\n                            insert a zorb to power the spore and remix sound in its own way\n                          </p>}\n              {zorbs.length === 0 && account ? <div className=\"no-zorbs\">No zorbs detected. </div> : zorbs.length === 0 &&\n               <div className=\"connect-button-wrapper zorb-connect\">\n                 <ConnectButton\n                   accountStatus=\"address\" \n                   showBalance={{ smallScreen: false, largeScreen: false }}\n                   label=\"Connect Wallet\"\n                 />\n               </div>}\n\n              <div className=\"zorbs-list\">\n                {zorbs.map(\n                    x => <ZorbOption setZorbStartPosition={setZorbStartPosition} zorbId={zorbId} setZorbId={setZorbId} zorb={x}/>\n                )}\n              </div>\n            </div>\n            </div>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ZorbSelector);\n","import ZorbAnimation from './ZorbAnimation.js';\nimport {useZporeHide} from './useZporeHideUI.js';\nimport ZorbSelector from './ZorbSelector.js';\nimport { useAccount } from 'wagmi';\nimport React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './zpore.scss';\nimport Drop from './Drop.js';\nimport './thugger.scss';\nimport './nextgen.scss';\n\n//const CID = \"QmWEEvyNZmr3kngUjE8TNRRC5FmnXZLC1TdQk87UYe1cQL\";\nconst AMPLIFY = \"https://main.djdhx85izle40.amplifyapp.com/\";\n\nconst Zpore = (props) => { \n    let [entered, setEntered] = useState(false);\n    let [remove, setRemove] = useState(false);\n    let [zorbId, setZorbId] = useState(undefined);\n    let [insertedZorb, setInsertedZorb] = useState();\n    let [zorbStartPosition, setZorbStartPosition] = useState(undefined);\n    const hideUI = false; //useZporeHide();\n    const {data: account, isError, isLoading} = useAccount();\n\n    useEffect(() => {\n        if (zorbId !== undefined) {\n            setTimeout(() => {\n                setInsertedZorb(zorbId);\n            }, 1000);\n        }\n    }, [zorbId, setInsertedZorb]);\n\n    useEffect(() => {\n        if (entered) {\n            setTimeout(() => {\n                setRemove(true);\n            }, 1000);\n        }\n    }, [entered, setRemove]);\n\n    let className = \"next-gen zpore\";\n    if (account) {\n        className += \" connected\";\n    }\n    if (hideUI) {\n        className += \" hide-ui\";\n    }\n    return (\n        <div className={className}>\n           <ZorbSelector\n            account={account}\n            setZorbId={setZorbId}\n            zorbId={zorbId}\n                        setZorbStartPosition={setZorbStartPosition}/>\n          {entered && zorbStartPosition && <ZorbAnimation setZorbStartPosition={setZorbStartPosition} zorbStartPosition={zorbStartPosition}/>}\n          {!remove && <div className={!entered ? \"enter-overlay\" : \"enter-overlay hide\"}>\n                        <div\n                          onClick={() => setEntered(true)}\n                          className=\"inner-overlay\">\n                          <img\n                            className=\"\"\n                            src=\"/spore-logo-future3.png\"/>\n                          <div className=\"click-text\">\n                            Click to Enter\n                          </div>\n                        </div>\n                      </div>}\n        <Drop\n          zorbId={insertedZorb}\n          hideWaveform={true}\n          color=\"black\"\n          url={AMPLIFY}\n          collectionAddress=\"0x0000000000000000000000000000000000000001\"\n          isFullScreen={true}\n          simpleControls={true}\n          tokenId={1}\n          className=\"thugger\"\n          artist=\"Keyon Christ\"\n          isSimple={true}\n          songTitle=\"Psilocybin\">\n        {entered && <div className=\"slides\">\n            <img className=\"slide\" src=\"/spores-17.jpg\"/>\n                    </div>}\n        </Drop>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Zpore);\n","\nimport React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './timer.scss';\n\nconst TimeRemaining = ({secondsRemaining, color}) => { \n    secondsRemaining = Math.floor(secondsRemaining);\n    if (secondsRemaining > 20 || isNaN(secondsRemaining)) {\n        return '';\n    }\n    if (secondsRemaining < 10) {\n        secondsRemaining = '0'+secondsRemaining;\n    }\n    let className = secondsRemaining%2 === 1 ? \"time-remaining fade\" : \"time-remaining\";\n    return (\n        <div className={className} style={{color}}>\n          0:{secondsRemaining}\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n      secondsRemaining: state.spore.secondsRemaining\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TimeRemaining);\n","import {CHILL_RX_COLLECTION} from 'constants/collections.js';\n\n// as songs come in edit this list w/ their name directly\nconst SONG_NAMES = [\n    \"Chill Song 1\",\n    \"Chill Song 2\",\n    \"Chill Song 3\",\n    \"Chill Song 4\",\n    \"Chill Song 5\",\n    \"Chill Song 6\",\n    \"Chill Song 7\",\n    \"Chill Song 8\",\n    \"Chill Song 9\",\n    \"Chill Song 10\",\n];\n\nconst SONG_TO_TOKENS = {\n    1: [1,2,3],\n    2: [4,5,6],\n    3: [7,8,9],\n    4: [10,11,12],\n    5: [13,14,15],\n    6: [16,17,18],\n    7: [19,20,21],\n    8: [22,23,24],\n    9: [25,26,27],\n    10: [28,29,30],\n};\n\nexport const getChillRXSongs = () => {\n    let songs = [];\n    for (let i=1; i <= SONG_NAMES.length; i++) {\n        songs.push({\n            songName: SONG_NAMES[i-1],\n            name: SONG_NAMES[i-1],\n            collectionAddress: CHILL_RX_COLLECTION,\n            coverArt: \"/crx-\" + i + \".png\",\n            tokenId: 1000, // todo: this will be randomly chosen of the actual tokenIds for htis song\n            songId: i,\n            tokenIds: SONG_TO_TOKENS[i]\n        });\n    }\n    return songs;\n};\n\nexport const getChillTokenId = (tokenId) => {\n    console.log(getChillRXSongs);\n    let song = getChillRXSongs().find(x => x.tokenIds.includes(parseInt(tokenId)));\n    console.log('song we found');\n    song = {\n        ... song,\n        tokenId\n    };\n    return song;\n}\n","const PINATAS = {\n    \"mintsongs\": \"mintsongs\",\n    \"zora\": \"zora-prod\",\n    \"sound.xyz\": \"soundxyz\",\n    \"zequencer\": \"zequencer\",\n    \"catalog\": \"catalog\",\n};\n\nexport const extractIPFS = (link) => {\n    if (link.startsWith(\"ipfs://\")) {\n        return link.slice(\"ipfs://\".length);\n    }\n    let part = \"/ipfs/\";\n    let index = link.indexOf(part);\n    let sliced = link.slice(part.length + index);\n    return sliced;\n};\n\nexport const getGatewayLink = (externalLink, ipfs) => {\n    if (!externalLink) {\n        console.log(\"NO EXTERNAL LINK FOUND FOR THIS LINK!\");\n        return \"https://zora-prod.mypinata.cloud/ipfs/\" + ipfs;\n    }\n    for (let type in PINATAS) {\n        if (externalLink.includes(type)) {\n            return \"https://\" + PINATAS[type] + '.mypinata.cloud/ipfs/' + ipfs;\n        }\n    }\n    return \"https://zora-prod.mypinata.cloud/ipfs/\" + ipfs;\n};\n","\nimport ipfs from 'decentralized/Ipfs.js';\nexport const save = async (json) => {\n    console.log(\"saving json=\", json);\n    let hash = await ipfs.addJson(json);\n    // save the hash and name\n\n    let baseURL = window.location.hostname === \"localhost\" ? \"http://localhost:9090/saveJack/\" : \"https://zequencer.io/saveJack/\";\n    if (!window.LOCAL_BACKEND_FLAG) {\n        baseURL = \"https://zequencer.io/saveJack/\";\n    }\n    fetch(baseURL, {\n        method: \"POST\",\n         headers: {\n             'Accept': 'application/json',\n             'Content-Type': 'application/json'\n         },\n        body: JSON.stringify({\n            data: hash,\n            title: json.name,\n            jack: json\n        })\n    });\n};\n\nexport const saveWaitlist = async (address, message) => {\n    let baseURL = window.location.hostname === \"localhost\" ? \"http://localhost:9090/sporeWaitlist/\" : \"https://zequencer.io/sporeWaitlist/\";\n    if (!window.LOCAL_BACKEND_FLAG) {\n        baseURL = \"https://zequencer.io/sporeWaitlist/\";\n    }\n    fetch(baseURL, {\n        method: \"POST\",\n         headers: {\n             'Accept': 'application/json',\n             'Content-Type': 'application/json'\n         },\n        body: JSON.stringify({\n            address,\n            message\n        })\n    });\n};\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport ipfs from 'decentralized/Ipfs.js';\n\nlet cache = {};\nconst HistoryItemSource = ({item}) => { \n    let [data, setData] = useState();\n    useEffect(() => {\n        if (cache[item.data]) {\n            setData(cache[item.data]);\n        }\n        ipfs.getJson(item.data).then((data) => {\n            cache[item.data] = data;\n            setData(data);\n        });\n    }, [item]);\n\n    if (!data) {\n        return '';\n    }\n\n    return (<div className=\"history-item-source\">\n              {!item.title.includes(data.artist) && data.artist}\n              {data.link && <Source link={data.link}/>}\n            </div>);\n};\n\n\nexport const Source = ({link, textColor}) => {\n    let source = '';\n    if (link.includes('zora')) {\n        source = 'zora';\n    } else if (link.includes(\"catalog.works\")) {\n        source = 'catalog.works';\n    } else if (link.includes(\"mintsongs\")) {\n        source = 'mintsongs';\n    } else if (link.includes(\"sound.xyz\")) {\n        source = 'sound.xyz';\n    } else if (link.includes(\"opensea\")) {\n        source = 'OpenSea';\n    }\n\n    return (<div style={{color: textColor}} className=\"source\">{source}</div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HistoryItemSource);\n","export function shuffle(array) {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n","import HistoryItemSource from './HistoryItemSource.js';\nimport {shuffle} from 'utils/shuffle.js';\nimport {getTokensOnSale} from 'components/hooks/useTokensOnSale.js';\nimport {isMobile} from 'react-device-detect';\nimport React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport './history.scss';\nimport ipfs from 'decentralized/Ipfs.js';\n\nlet cachedTokens = undefined;\nexport const KEYON_SONGS = async () => {\n    let tokensOnSale = cachedTokens || await getTokensOnSale();\n    cachedTokens = tokensOnSale;\n\n    let unsold = tokensOnSale.filter(x => x.askPrice);\n    shuffle(unsold);\n    let [a,b,c] = unsold;\n    a = a ? a.tokenId : 12;\n    b = b ? b.tokenId : 14;\n    c = c ? c.tokenId : 18;\n    return [\n        {\n            bpm: 90,\n            title: \"Keyon Christ - Psilocybin\",\n            isSporeTrack: true,\n            metadata: {\n                tokenId: a,\n                artist: \"Keyon Christ\",\n                name: \"Psilocybin\",\n                url: \"https://zequencer.mypinata.cloud/ipfs/QmeuwQQnjdqd51Uo1xkXLawYwYfXSq7T8h2mEWuJx7wHdx\",\n                link: \"/sp/\" + a,\n                image: \"/sp-thumbnail-\" + a + \".png\"\n            }\n        },\n        {\n            bpm: 106,\n            title: \"Keyon Christ - Twisting Faith\",\n            isSporeTrack: true,\n            metadata: {\n                tokenId: b,\n                link: \"/sp/\" + b,\n                artist: \"Keyon Christ\",\n                name: \"Twisting Faith\",\n                url: \"https://zequencer.mypinata.cloud/ipfs/QmU6rmmjWWXCZd3NHjeu6pUVjBDZiMXuRx6EVtEocqz9dJ\",\n                image: \"/sp-thumbnail-\" + b + \".png\"\n            }\n        },\n        {\n            bpm: 85,\n            title: \"Keyon Christ - Ying Yang Twins\",\n            isSporeTrack: true,\n            metadata: {\n                tokenId: c,\n                link: \"/sp/\" + c,\n                image: \"/sp-thumbnail-\" + c + \".png\",\n                artist: \"Keyon Christ\",\n                name: \"Ying Yang Twins\",\n                url: \"https://zequencer.mypinata.cloud/ipfs/QmcD2Ece62eiv5FWegEyNquWN8WZzC3ZT81Wxhw6GRk4YY\",\n            }\n        }\n    ];\n}\n\nconst History = ({\n    currentSong,\n    setCurrentSong,\n    latestJacks,\n    loadHistory,\n    link\n}) => { \n    let [keyonSongs, setKeyonSongs] = useState(undefined);\n\n    useEffect(() => {\n        KEYON_SONGS().then(x => setKeyonSongs(x));\n    }, []);\n\n    const load = useCallback((x) => {\n        setCurrentSong(x);\n        if (x.metadata) {\n            loadHistory(x.metadata);\n        } else {\n            ipfs.getJson(x.data).then(\n                y => loadHistory(y));\n        }\n    }, [loadHistory, setCurrentSong]);\n\n    if (!keyonSongs) {\n        return '';\n    }\n    let history = [... keyonSongs, ... latestJacks];\n\n    if (link !== \"\") {\n        history = history.filter(x => x.title && x.title.toLowerCase().includes(link.toLowerCase()));\n    }\n\n    return (<div className=\"jack-history\">\n              <img className=\"globe\" src=\"/globe.svg\"/>\n              <div className=\"items\">\n                {history\n                 .filter(x => x.title && x.title.trim() !== \"\") \n                 .map(\n                  x => <div\n                         onClick={() => load(x)}\n                         className={(x.isSporeTrack ? \"history-item spore-track\" : \"history-item\") + (currentSong === x ? \" current\" : \"\")}>\n                         {x.isSporeTrack ? x.title : trim(x.title)}\n                         {x.isSporeTrack && <div className=\"source\">{isMobile ? \"by Spores\" : \"Released by Spores\"}</div>}\n                         {x.isSporeTrack ? (!isMobile ? <img src=\"/spores-icon-glow2.svg\"/> : '') :\n                          <HistoryItemSource item={x}/>}\n\n\n                       </div>)}\n\n              </div>\n            </div>);\n};\n\nconst trim = (x) => {\n    let len = isMobile ? 24 : 35;\n    if (x.length < len) {\n        return x;\n    }\n    return x.slice(0, len) + '...';\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(History);\n","import React, {useState, useEffect, useCallback} from 'react';\nimport {CHILL_RX_COLLECTION} from 'constants/collections.js';\nimport {getChillTokenId} from 'spores/chillRX.js';\nimport {getGatewayLink, extractIPFS} from 'utils/getGateway.js';\nimport {save} from 'jacker/save.js';\nimport {jack} from 'jacker/jack.js';\nimport {getArtistFromMetadata} from 'jacker/artist.js';\nimport {useTokenMetadata} from 'components/hooks/useTokenMetadata.js';\nimport {KEYON_SONGS} from 'components/nft-jacker/History.js';\n\nexport const useJacker = ({\n    playlistLoaded,\n    remixToPlay,\n    setLatestJacks,\n    setShowHistory,\n    setLink,\n    setShowLinkInput,\n    link,\n    latestJacks,\n    chillTokenId,\n    defaultSearch,\n    directCollectionAddress,\n    directTokenId,\n    updateURL=true\n}) => {\n    const [currentLink, setCurrentLink] = useState();\n    let [songId, setSongId] = useState();\n    let [showDesc, setShowDesc] = useState(true);\n    let [collectionAddress, setCollectionAddress] = useState();\n    let [jackedAudio, setJackedAudio] = useState();\n    let [buyThisSkin, setBuyThisSkin] = useState();\n    let [tokenId, setTokenId] = useState();\n    let [coverArt, setCoverArt] = useState();\n    let [songName, setSongName] = useState();\n    let [description, setDescription] = useState();\n    let getTokenMetadata = useTokenMetadata();\n    let [showPlayer, setShowPlayer] = useState();\n    let [artist, setArtist] = useState();\n    let [error, setError] = useState();\n    let [currentSong, setCurrentSong] = useState();\n    let [searchTerm, setSearchTerm] = useState(defaultSearch);\n\n    useEffect(() => {\n        if (!updateURL) {\n            return;\n        }\n        if (remixToPlay) {\n            window.history.pushState('page2', 'Title', '/play/' + collectionAddress + '/' + tokenId + '/' + remixToPlay.sporeId);\n        } else if (collectionAddress) {\n            window.history.pushState('page2', 'Title', '/play/' + collectionAddress + '/' + tokenId);\n        } else {\n            window.history.pushState('page2', 'Title', '/');\n        }\n    }, [remixToPlay, collectionAddress, tokenId, updateURL]);\n\n    useEffect(() => {\n        if (directCollectionAddress) {\n            let link = \"https://zora.co/collections/\" + directCollectionAddress + \"/\" + directTokenId;\n            jack(link, getTokenMetadata).then(\n                jacked => {\n                    loadJack(jacked);\n                });\n        }\n    }, []);\n\n    useEffect(() => {\n        if (chillTokenId !== undefined) {\n            let ret = getChillTokenId(chillTokenId);\n            loadJack(ret);\n        }\n    }, [\n      ]);\n\n    useEffect(() => {\n        KEYON_SONGS();\n    }, []);\n\n    const clear = useCallback(() => {\n        setLink(\"\");\n        setCollectionAddress(undefined);\n        setShowPlayer(false);\n        setCoverArt(undefined);\n        setArtist(undefined);\n        setTokenId(undefined);\n        setSongName(undefined);\n        setDescription(undefined);\n        setJackedAudio(undefined);\n        setShowLinkInput(true);\n        setSongId(undefined);\n    }, [\n        setSongId,\n        setShowLinkInput,\n        setShowPlayer,\n        coverArt,\n        setLink,\n        setTokenId,\n        setArtist,\n        setSongName,\n        setCollectionAddress,\n        setDescription,\n        setJackedAudio\n    ]);\n\n    const onJack = useCallback(async (isPlaylist) => {\n        if (link === \"\") {\n            return;\n        }\n        if (!link.startsWith(\"http\")) {\n            setSearchTerm(link);\n            return;\n        }\n        setShowPlayer(true);\n        if (isPlaylist) {\n            setShowLinkInput(false);\n        }\n        setShowDesc(false);\n        let ret = await jack(link, getTokenMetadata);\n        if (!ret) {\n            clear();\n            setError(\"The token you\\'ve linked has a strange format. Echo rejects it, respectfully...\");\n            return;\n        }\n        ret.link = link;\n        loadJack(ret, true);\n    }, [\n        link,\n        setSearchTerm,\n        latestJacks,\n        setSongName,\n        setShowHistory,\n        setCollectionAddress,\n        playlistLoaded,\n        setJackedAudio,\n        setArtist,\n        setTokenId,\n        setShowPlayer,\n        setError,\n        setShowLinkInput,\n        setSongId,\n        setCurrentLink\n    ]);\n\n    const loadChillRX = useCallback((ret) => {\n    \n        setArtist(\"Chill RX\");\n        setTokenId(ret.tokenId);\n        setSongId(ret.songId);\n        setCollectionAddress(ret.collectionAddress);\n        setSongName(ret.name);\n        setCoverArt(ret.coverArt);\n        setDescription(ret.description);\n        setJackedAudio(\"BLANK\");\n\n    }, [setSongId, setCoverArt, setArtist, setArtist, setCoverArt, setCollectionAddress]);\n\n    const loadJack = useCallback((ret, shouldSave=true, isPlaylist) => {\n        setShowHistory(false);\n        setShowPlayer(true);\n        if (!isPlaylist) {\n            setShowLinkInput(false);\n        }\n        setShowDesc(false);\n\n        if (ret.collectionAddress === CHILL_RX_COLLECTION) {\n            loadChillRX(ret);\n            return;\n        }\n        \n        let {url, ipfs} = ret;\n       \n        console.log(\"LOAD JACK CALLED ret=\", ret);\n\n        if (!ret.external_url) {\n            ret.external_url = ret.link;\n        }\n        if (!ret.link && ret.external_url) {\n            ret.link = ret.external_url;\n        }\n        if (!url) {\n            clear();\n            setError(\"The token you\\'ve linked might not contain a music NFT.\");\n            return;\n        }\n\n        setError(undefined);\n\n        let toSave = {};\n        if (url.startsWith(\"ipfs://\")) {\n            ipfs = url.slice(7);\n        }\n        if (ipfs && !url) {\n            let url = getGatewayLink(ret.external_url, ipfs);\n            //submitSplitJob(url);\n            setJackedAudio(ipfs);\n            toSave.ipfs = ipfs;\n            toSave.url = url;\n            console.log(\"URL we extracted=\", url);\n        } else {\n            let ipfsHash = extractIPFS(url);\n            console.log(\"EXTRACTED IPFS=\", ipfsHash);\n            url = getGatewayLink(ret.external_url, ipfsHash);\n            console.log('setting jacked audio=', url);\n            setJackedAudio(url);\n            toSave.url = url;\n        }\n        console.log(\"URL WE EXTRACTED = \", url);\n        if (ret.body) {\n            ret = {\n                ... ret,\n                ...ret.body,\n                name: ret.body.title\n            };\n            if (ret.body.artwork && ret.body.artwork.info) {\n                ret = {\n                    ... ret,\n                    image: ret.body.artwork.info.uri\n                };\n            }\n        }\n        let artist = getArtistFromMetadata(ret);\n        toSave.artist = artist;\n        setArtist(artist);\n\n        console.log(\"TOKEN ID =\", ret.tokenId);\n        setTokenId(ret.tokenId);\n        setSongId(ret.songId);\n        setCollectionAddress(ret.collectionAddress);\n\n        /*\n        setSongId(2);\n        setTokenId(2000);\n        setCollectionAddress(CHILL_RX_COLLECTION);\n        */\n\n        setSongName(ret.name);\n        toSave.song = ret.name;\n        setDescription(ret.description);\n\n        let image = ret.image;\n        if (ret.image) {\n            let image = getGatewayLink(ret.link, extractIPFS(ret.image));\n            setCoverArt(image);\n        } else {\n            setCoverArt(\"/zora-placeholder.png\");\n        }\n\n        toSave = {\n            ... ret,\n            ... toSave\n        };\n\n        if (ret.link) {\n            setCurrentLink(ret.link);\n        } else {\n            setCurrentLink(undefined);\n        }\n\n        if (shouldSave && artist !== \"Keyon Christ\") {\n            save(toSave);\n            /*\n            setLatestJacks([\n                toSave,\n                ... latestJacks,\n            ]);\n            */\n        }\n    }, [\n        setCurrentLink,\n        link,\n        setLatestJacks,\n        setTokenId,\n        latestJacks,\n        setSongName,\n        setJackedAudio,\n        setArtist,\n        setShowPlayer,\n        setError,\n        setShowLinkInput,\n        setShowHistory,\n        setSongId,\n    ]);\n\n    return {\n        clear,\n        onJack,\n        loadJack,\n        artist,\n        description,\n        showPlayer,\n        setShowPlayer,\n        tokenId,\n        buyThisSkin,\n        coverArt,\n        songName,\n        error,\n        currentSong,\n        jackedAudio,\n        setBuyThisSkin,\n        currentLink,\n        setCurrentSong,\n        collectionAddress,\n        songId,\n        searchTerm,\n        setSearchTerm,\n        setArtist\n    };\n};\n\n","export const getArtistFromMetadata = (metadata) => {\n    return metadata[\"artist_name\"] || metadata[\"artist\"] || (metadata.attributes && metadata.attributes[\"artist\"]) ||\n        (metadata[\"created_by\"]) || undefined;\n};\n","import React, {useEffect, useState} from 'react';\n\nexport const useLatestJacks = () => {\n    const [latestJacks, setLatestJacks] = useState();\n\n    useEffect(() => {\n        let baseURL = window.location.hostname === \"localhost\" ?\n            \"http://localhost:9090/latestJacks/\" : \"https://zequencer.io/latestJacks/\";\n        if (!window.LOCAL_BACKEND_FLAG) {\n            baseURL = \"https://zequencer.io/latestJacks/\";\n        }\n        fetch(baseURL).then(\n            async ret => {\n                let json = await ret.json();\n                setLatestJacks(json.filter(x => x.title && !x.title.includes(\"Spore Players\")));\n            });\n    }, []);\n\n    return {latestJacks, setLatestJacks};\n};\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {isMobile} from 'react-device-detect';\nimport History from './History.js';\nimport {connect} from 'react-redux';\nimport './search-box.scss';\n\nconst EchoSearchBox = ({\n    showLinkInput,\n    setSearchTerm,\n    setShowHistory,\n    onJack,\n    loadJack,\n    link,\n    setShowInfo,\n    setLink,\n    showHistory,\n    currentSong,\n    setCurrentSong,\n    loadHistory,\n    latestJacks,\n    cheatCodeActivating\n}) => { \n    let className =!showLinkInput ? \"nft-link hide\" : \"nft-link\";\n    if (cheatCodeActivating) {\n        className += \"  activating\";\n    }\n  return (\n      <div className={className}>\n        <input\n          onKeyDown={e => e.key === \"Enter\" ? onJack() : []}\n          onClick={e => e.stopPropagation()}\n          onFocus={() => {\n              setShowHistory(true);\n              setShowInfo(false);\n          }}\n          placeholder={isMobile ? \"Search or drop a music NFT Link\" : \"Search an artist or drop a music NFT link\"} value={link} onChange={e => {\n              setShowHistory(false);\n              setShowInfo(false);\n              setLink(e.target.value);\n          }}/>\n        <div onClick={() => {\n            setLink('');\n            setSearchTerm('');\n        }} className=\"clear-btn\">x</div>\n        <div onClick={(e) => {\n            e.stopPropagation();\n            onJack();\n        }} className=\"pushable jack-btn\">\n          Remix\n        </div>\n        {cheatCodeActivating &&\n         <div className=\"activation-text\">\n           Code activated. You may freely create bangers, for the culture.\n         </div>}\n      </div>);\n};\n\nexport default EchoSearchBox;\n/**\n        {(showHistory || ((showHistory ) && !link.includes(\"http\"))) &&\n         <History\n           currentSong={currentSong}\n           link={\"\"}\n           setCurrentSong={setCurrentSong}\n           loadHistory={loadJack} latestJacks={latestJacks}/>}\n*/\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport BuyUnsold from './BuyUnsold.js';\nimport {isMobile} from 'react-device-detect';\n\nconst BuyThisSkin = ({buyThisSkin, upperGradInverted, lowerGradInverted}) => { \n    if (buyThisSkin > 20) {\n        return '';\n    }\n    return (\n        <BuyUnsold\n          upperGradInverted={isMobile ? lowerGradInverted : upperGradInverted}\n          text={isMobile ? \"Buy\" : \"Buy this spore\"}\n          tokenId={buyThisSkin}/>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BuyThisSkin);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {Source} from 'components/nft-jacker/HistoryItemSource.js';\nimport BuyUnsold from 'components/nft-jacker/BuyUnsold.js';\nimport BuyThisSkin from 'components/nft-jacker/BuyThisSkin.js';\n\nimport {connect} from 'react-redux';\n\nconst TokenMetadata = ({\n    showBuyThisSkin,\n    buyThisSkin,\n    artist,\n    upperGradInverted,\n    lowerGradInverted,\n    coverArt,\n    songName,\n    tokenId,\n    currentLink,\n    children\n}) => { \n  return (\n      <div className=\"artist-name\" style={{color: upperGradInverted}}>\n        {children}\n        {artist}\n        <div className=\"song-name\" style={{color: upperGradInverted}}>\n          {songName}\n        </div>\n        {coverArt && <img className={artist === \"Keyon Christ\" ? \"cover-art smaller\" : \"cover-art\"} src={coverArt}/>}\n        <div />\n        <div className={artist === \"Keyon Christ\" ? \"link-and-buy keyon\" : \"link-and-buy\"}>\n          {artist === \"Keyon Christ\" && <BuyUnsold tokenId={tokenId}/>}\n          {currentLink && <a className={artist !== \"Keyon Christ\" ? \"current-link align-right\" : \"current-link\"} style={{color: upperGradInverted}} href={currentLink} target=\"_blank\" rel=\"noreferrer\">{artist !== \"Keyon Christ\" && <Source link={currentLink} textColor={upperGradInverted} />}↗</a>}\n        </div>\n        {showBuyThisSkin && artist !== \"Keyon Christ\" && <BuyThisSkin upperGradInverted={upperGradInverted} lowerGradInverted={lowerGradInverted} buyThisSkin={buyThisSkin}/>}\n      </div>);\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TokenMetadata);\n","export const CHEAT_CODES = [\n    \"spores dao summer\",\n    \"the spore button\",\n];\n","import {CHILL_RX_COLLECTION} from 'constants/collections.js';\nimport {useInterval} from './useInterval.js';\nimport {useTokensOnSale} from './useTokensOnSale.js';\nimport { useAccount } from 'wagmi';\nimport React, {useRef, useEffect, useCallback, useState} from 'react';\nimport {CHEAT_CODES} from 'constants/cheat-codes.js'\n\nconst TICK_TIME = 1000;\nconst LOCK_TIME = 5 * 60 * 1000;\n\nconst isValidCheatCode = (code) => {\n    return CHEAT_CODES.some(x => code.toLowerCase().trim() === x);\n};\n\nexport const useTokenLock = (\n    cheatcode,\n    setLink,\n    setUsedCheatCode,\n    setSecondsRemaining\n) => {\n    const {data: account, isError, isLoading} = useAccount();\n    const {tokensOnSale} = useTokensOnSale();\n    let [cheatCodeActivating, setCheatCodeActivating] = useState();\n    let [locked, setLocked] = useState(false);\n    let [isSporeOwner, setIsSporeOwner] = useState();\n    let timeElapsed = useRef(0);\n    let isPlaying = useRef(false);\n    let [cheatOverriden, setCheatOverriden] = useState(false);\n\n    useEffect(() => {\n        if (isValidCheatCode(cheatcode)) {\n            setCheatOverriden(true);\n            setLocked(false);\n            window.localStorage.setItem(\"cheatcode\", cheatcode);\n            setUsedCheatCode(true);\n            setCheatCodeActivating(true);\n            setTimeout(() => {\n                setLink('');\n            }, 1000);\n            setTimeout(() => {\n                setCheatCodeActivating(false);\n            }, 10000);\n        }\n    }, [cheatcode, setCheatOverriden, setLocked, setCheatCodeActivating]);\n\n    useEffect(() => {\n        let code = window.localStorage.getItem(\"cheatcode\");\n        if (code && isValidCheatCode(code)) {\n            setCheatOverriden(true);\n            setUsedCheatCode(true);\n            setLocked(false);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (window.OWN_FAKE_SPORE_FLAG) {\n            setIsSporeOwner(true);\n            setLocked(false);\n            return;\n        }\n        if (tokensOnSale && account && account.address) {\n            let _tokensOnSale = window.OWN_FAKE_SPORE_FLAG ? tokensOnSale.map(x =>\n                ({\n                    ... x,\n                    owner: account.address})) : tokensOnSale;\n            let address = account.address.toLowerCase();\n            if (_tokensOnSale.some(x =>\n                x &&\n                    x.owner &&\n                    x.owner.toLowerCase() === address)) {\n                setIsSporeOwner(true);\n                setLocked(false);\n            }\n        } else {\n        }\n    }, [tokensOnSale, account, setIsSporeOwner, setLocked]);\n\n    useEffect(() => {\n        window.addEventListener(\"message\", onMessage, false);\n        let _timeElapsed = window.localStorage.getItem(\"time-elapsed\") || 0;\n        if (window.ABOUT_TO_END_FLAG) {\n            timeElapsed.current = LOCK_TIME - 20*1000; // parseInt(_timeElapsed);\n        } else {\n            timeElapsed.current = parseInt(_timeElapsed);\n        }\n    }, []);\n\n    const onMessage = useCallback((e) => {\n        if (e.data && Array.isArray(e.data.type) && e.data.type[0] === \"sequencer.start\") {\n            isPlaying.current = true;\n        } else if (e.data && Array.isArray(e.data.type) && e.data.type[0] === \"sequencer.stop\") {\n            isPlaying.current = false;\n        }\n    }, []);\n\n\n    // listen for play events\n    const tick = useCallback(() => {\n        if (!window.TOKEN_LOCK_FLAG || cheatOverriden) {\n            return;\n        }\n        if (timeElapsed.current >= LOCK_TIME && !locked) {\n            if (!isSporeOwner) {\n                setLocked(true);\n            }\n        }\n        if (isPlaying.current && !isSporeOwner) {\n            timeElapsed.current += TICK_TIME;\n            let secondsRemaining = LOCK_TIME/1000 - timeElapsed.current/1000;\n            setSecondsRemaining(secondsRemaining);\n            window.localStorage.setItem(\"time-elapsed\", timeElapsed.current);\n        }\n    }, [locked, setLocked, isSporeOwner, cheatOverriden]);\n\n    useInterval(tick, TICK_TIME);\n\n    return {locked, cheatCodeActivating};\n};\n","/**\n * contains the abi and contract address\n*/\n\nclass SporesPlaylistContract {\n    constructor() {\n        this.abi = [\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"playlistId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"burnPlaylist\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address[]\",\n\t\t\t\t\"name\": \"contractAddresses\",\n\t\t\t\t\"type\": \"address[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256[]\",\n\t\t\t\t\"name\": \"tokenIds\",\n\t\t\t\t\"type\": \"uint256[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"metadataCID\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"message\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"v\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"r\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"s\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"newSporesPlaylist\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"playlistId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"creator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"metadataCID\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"NewSporesPlaylist\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"playlistId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"PlaylistBurned\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address[]\",\n\t\t\t\t\"name\": \"contractAddresses\",\n\t\t\t\t\"type\": \"address[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256[]\",\n\t\t\t\t\"name\": \"tokenIds\",\n\t\t\t\t\"type\": \"uint256[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string[]\",\n\t\t\t\t\"name\": \"genres\",\n\t\t\t\t\"type\": \"string[]\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"message\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"v\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"r\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"s\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setGenres\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"collectionAddress\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"genre\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"user\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"metadataCID\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"SongGenre\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"playlistId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"collectionAddress\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"SporesPlaylistSong\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"a\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"b\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"compareStrings\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"pure\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"message\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint8\",\n\t\t\t\t\"name\": \"v\",\n\t\t\t\t\"type\": \"uint8\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"r\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes32\",\n\t\t\t\t\"name\": \"s\",\n\t\t\t\t\"type\": \"bytes32\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"verifyString\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"signer\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"pure\",\n\t\t\"type\": \"function\"\n\t}\n        ];\n\n        this.contractAddress = '0xe2031bF65D3f8a96dE0a7eD1211810F49627c261';\n    }\n\n    getContract(web3) {\n        return new web3.eth.Contract(this.abi, this.contractAddress);\n    }\n}\n\nexport default SporesPlaylistContract;\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport { useAccount } from 'wagmi';\nimport { ConnectButton, lightTheme} from '@rainbow-me/rainbowkit';\nimport {connect} from 'react-redux';\nimport {useShader} from 'components/spore/sketch.js';\nimport './locked.scss';\n\nconst LockedNotification = ({clearPlayer}) => { \n    const {data: account, isError, isLoading} = useAccount();\n    let [showConnectWallet, setShowConnectWallet] = useState(false);\n    let ref = useRef();\n    let [loaded, setLoaded] = useState();\n    useEffect(() => {\n        window.addEventListener(\"message\", onMessage);\n    }, [setLoaded]);\n\n    const onMessage = useCallback((e) => {\n        if (e.data === \"loaded-lock-shader\") {\n            setLoaded(true);\n        }\n    }, [setLoaded]);\n    \n    return (\n        <div\n          ref={ref} className=\"locked-notification-background\">\n         <iframe className={loaded ? \"loaded-shader\" : \"\"} src=\"https://zequencer.mypinata.cloud/ipfs/QmUZqg4Ee2sDWqNxhAT5xrUUDY53as3VWrdWYWK5HomBgf/\"/>\n        {showConnectWallet && !account ?\n         <div\n           onClick={e => e.stopPropagation()}\n           className=\"locked-notification\">\n          <div className=\"connect-button-wrapper\">\n            <ConnectButton\n              accountStatus=\"address\" \n              showBalance={{ smallScreen: false, largeScreen: false }}\n              label=\"Connect Wallet\"\n            />\n          </div>\n         </div> : \n          <div\n            onClick={e => e.stopPropagation()}\n            className=\"locked-notification\">\n          <div className=\"logo-container\">\n            <img\n              onClick={() => clearPlayer()}\n              className=\"pushable spores-logo\" src=\"/spores-logo-black.svg\"/>\n          </div>\n            {showConnectWallet && account ? `It seems you dont't own a Spore yet. Get the full dose by purchasing a Genesis Spore.` : \n            `Enjoying this microdose of Spores? Get the full dose by purchasing a Genesis Spore.`}\n            <div\n              onClick={() => window.location.href=\"/buy?sold=false\"}\n              className=\"go-to-buy pushable\">\n                Buy Now\n            </div>\n            {!account && <div className=\"pushable already-own-one\" onClick={() => setShowConnectWallet(true)}>\n              Already own one?\n                         </div>}\n          </div>}\n        </div>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LockedNotification);\n","import ipfs from 'decentralized/Ipfs.js';\nimport {signMessage} from './sign.js';\n\nimport BackendQuery from 'decentralized/BackendQuery.js';\nimport {NewSporesPlaylist, SporesPlaylistSong } from 'decentralized/EthereumEvents.js';\nimport SporesPlaylistContract from 'decentralized/contracts/SporesPlaylistContract.js';\n\nconst playlistMessage = (cid) => \"A new playlist awakens at \" + cid;\n\nexport const newPlaylist = async (signer, collectionAddresses, tokenIds, name, description, thumbnail, songs) => {\n    let metadata = {\n        name,\n        description,\n        thumbnail,\n        tokenIds,\n        collectionAddresses,\n        playlist: songs\n    };\n   \n    let metadataCID = await ipfs.addJson(metadata);\n\n    // genereate message based on the\n    let message = playlistMessage(metadataCID);\n    let {account, flatSignature, splitSignature} = await signMessage(signer, message);\n    \n    // now store this signed message on the ropsten contract\n    let {r,s,v} = splitSignature;\n\n    let body = {\n        r,\n        s,\n        v,\n        message,\n        metadataCID,\n        tokenIds,\n        collectionAddresses,\n    };\n    console.log(body);\n        \n    let baseURL = \"https://zequencer.io\";\n    /*\n    if (window.location.hostname.includes(\"localhost\")) {\n        baseURL = \"\";\n    }\n    */\n\n    let resp = await fetch(baseURL + '/newSporesPlaylist/' , {\n        method: 'POST',\n        body: JSON.stringify(body),\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }\n    });\n    let respJson = await resp.json();\n    \n    return respJson.transactionHash;\n};\n\nconst ADDRESS = new SporesPlaylistContract().contractAddress;\nexport const getJuicePlaylists = async () => {\n    let query = new BackendQuery(ADDRESS)\n        .from(NewSporesPlaylist);\n\n    let results = await query.executeQuery();\n\n    for (let result of results) {\n        let {metadataCID} = result;\n        result.metadata = await ipfs.getJson(metadataCID);\n    }\n    return results.slice(0, results.length - 3);\n};\n","import Collapsible from 'react-collapsible';\nimport {isMobile} from 'react-device-detect';\nimport {\n    setPlaylistLoaded,\n    setCurrentPlaylistSong \n} from 'actions/index.js';\nimport {jack} from 'jacker/jack.js';\nimport {getJackFromToken} from 'utils/getJackFromToken.js';\nimport {useTokenMetadata} from 'components/hooks/useTokenMetadata.js';\nimport React, {useCallback} from 'react';\nimport './playlist.scss';\nimport {connect} from 'react-redux';\n\nconst PlaylistInfo = ({setCurrentPlaylistSong, setPlaylistLoaded, playlist, loadJack, currentSong, isLoaded}) => {\n    let thumbnail = \"https://zequencer.io/ipfs/\" + playlist.metadata.thumbnail;\n    let getTokenMetadata = useTokenMetadata();\n\n    const onClick = useCallback((song) => {\n        setCurrentPlaylistSong(song);\n        setPlaylistLoaded(playlist);\n        getJackFromToken(song.collectionAddress, song.tokenId).then(\n            jacked => loadJack(jacked, undefined, !isMobile));\n    }, [playlist]);\n\n    return (<>\n        <Collapsible\n          transitionTime={200}\n          easing=\"ease-in-out\"\n          open={isLoaded}\n          trigger={\n              <div className='playlist-trigger'>\n                <img src={thumbnail} className=\"playlist-trigger-img\"></img>\n                <div className=\"playlist-name\">{playlist.metadata.name}</div>\n              </div>\n          }>\n          <p className='playlist-description'>{playlist.metadata.description}</p>\n          <div className='playlist-list-container'>\n            {playlist.metadata.playlist.map(\n                (item, i) =>\n                <div\n                  onClick={() => onClick(item)}\n                  className={\n                      currentSong &&\n                          currentSong.collectionAddress === item.collectionAddress &&\n                          currentSong.tokenId === item.tokenId ?\n                          \"playlist-item current\" : \"playlist-item\"}>\n                  <div className=\"song-number\">{i+1}</div>\n                  <img src={item.coverArt} className=\"playlist-item-img\"></img>\n                  <p>{item.songName}</p>\n                  <p>{item.artist}</p>\n                </div>)}\n          </div>\n        </Collapsible>\n    </>);\n}\n\n\nconst mapStateToProps = (state, props) => {\n  return {\n      isLoaded: state.playlist.playlistLoaded && state.playlist.playlistLoaded.playlistId ===\n          props.playlist.playlistId,\n      currentSong: state.playlist.currentSong\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setPlaylistLoaded: x => dispatch(setPlaylistLoaded(x)),\n      setCurrentPlaylistSong: x => dispatch(setCurrentPlaylistSong(x)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaylistInfo);\n","import React, { useEffect, useCallback, useState} from 'react';\nimport {usePlaylists} from 'components/hooks/usePlaylists.js';\nimport PlaylistInfo from './PlaylistInfo.js';\nimport {connect} from 'react-redux';\n\nconst JuicePlaylists = ({loadJack}) => { \n    let playlists = usePlaylists();\n    return (\n        <div\n          onClick={e => e.stopPropagation()}\n          className=\"playlist-container\">\n          <div\n            className=\"playlist-item\">\n            {playlists.map(\n                playlist =>\n                <PlaylistInfo\n                  loadJack={loadJack}\n                  playlist={playlist}/>)}\n          </div>\n        </div>);\n}\n\nexport default JuicePlaylists;\n","import React, {useEffect, useState, useCallback} from 'react';\nimport {getJuicePlaylists} from 'spores/playlist.js';\n\nexport const usePlaylists = () => {\n    let [playlists, setPlaylists] = useState([]);\n\n    useEffect(() => {\n        getJuicePlaylists().then(setPlaylists);\n    }, []);\n\n    return playlists;\n};\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport JuicePlaylists from './JuicePlaylists.js';\nimport UnknownProgressBar from 'components/progressbar/UnknownProgressBar.js';\n\nimport {ethers} from 'ethers';\nimport {web3} from 'decentralized/web3.js';\nimport {getRemixesMap} from \"spores/getSporeRemixes.js\";\nimport {getChillRXSongs} from \"spores/chillRX.js\";\nimport {connect} from 'react-redux';\nimport {useScroll} from 'components/hooks/useScroll.js';\nimport {useTokensOnSale} from '../hooks/useTokensOnSale.js';\nimport './chart.scss';\nimport Collapsible from 'react-collapsible';\nimport PlaylistInfo from './PlaylistInfo.js';\n\nconst PINATAS = {\n    \"mintsongs\": \"mintsongs\",\n    \"zora\": \"zora-prod\",\n    \"soundxyz\": \"soundxyz\",\n    \"zequencer\": \"zequencer\",\n    \"catalog\": \"catalog\",\n};\n\n// switch to true/false to enable charts as a feature\nwindow.CHARTS_FLAG = true;\n\nconst SEARCH_TIME_OUT = 1000;\n\nconst Chart = ({searchTerm, jacked, loadJack, history=[], showChart, playlistLoaded}) => { \n    let [loading, setLoading] = useState(false);\n    let [chartData, setChartData] = useState([]);\n    let [remixes, setRemixes] = useState({});\n    let [chillRXData, setChillRXData] = useState({});\n    let searchCounter = useRef(0);\n    let searchTermRef = useRef(\"\");\n    let cursor = useRef();\n    let lastCursorUsed = useRef();\n    let [keyonSongs, setKeyonSongs] = useState([]);\n    let [selectedTab, setSelectedTab] = useState(playlistLoaded ? \"playlists\" : \"new\");\n    let ref = useRef();\n    let {setTokensOnSale, tokensOnSale} = useTokensOnSale();\n    let searchId = useRef(0);\n\n    console.log(\"SEARCH TERm=\", searchTerm);\n    useEffect(() => {\n        getRemixesMap().then(setRemixes);\n        setChillRXData(getChillRXSongs());\n    }, []);\n\n    useEffect(() => {\n        searchTermRef.current = searchTerm;\n    }, [searchTerm]);\n\n    // size is a variable telling us how many items to show in the list\n    // it updates as we scroll\n    let {size} = useScroll(\n        ref,\n        Math.ceil((window.innerWidth / 200) * (window.innerHeight / 200)), // intial # to load\n        searchTerm);\n\n    useEffect(() => {\n        lastCursorUsed.current = undefined;\n        cursor.current = undefined;\n    }, [showChart]);\n\n    useEffect(() => {\n        if (selectedTab !== \"new\") {\n            return;\n        }\n        if (size >= chartData.length) {\n            if (lastCursorUsed.current === cursor.current) {\n                return;\n            }\n            // then we call search again\n            let baseURL = window.location.hostname === \"localhost\" ?\n                \"http://localhost:9090/charts\" :  \"https://zequencer.io/charts\";\n            if (!window.LOCAL_BACKEND_FLAG) {\n                baseURL = \"https://zequencer.io/charts\";\n            }\n            let url = baseURL;\n            if (cursor.current && cursor.current !== \"\") {\n                url += \"?cursor=\" + cursor.current;\n            }\n            lastCursorUsed.current = cursor.current;\n\n            let id = ++searchId.current;\n            fetch(url).then(async x => {\n                let json = await x.json();\n                if (/*searchId.current !== id ||*/ searchTermRef.current && searchTermRef.current !== \"\") {\n                    return;\n                }\n                if (json) {\n                    setLoading(false);\n                    setChartData([... chartData, ...json.results]);\n                    cursor.current = json.cursor;\n                }\n            });\n        }\n    }, [setChartData, selectedTab, chartData, size]);\n\n    useEffect(() => {\n        if (searchTerm !== \"\") {\n            setSelectedTab(\"new\");\n        }\n    }, [searchTerm, setSelectedTab]);\n\n    useEffect(() => {\n        if (playlistLoaded) {\n            setSelectedTab(\"playlists\");\n        }\n    }, [playlistLoaded]);\n\n    useEffect(() => {\n        console.log(\"SEARCH TERM CHANGED\");\n        if (!window.CHARTS_FLAG) {\n            return;\n        }\n\n        if (selectedTab == \"history\") {\n            // set to history data\n            setChartData(history);\n        } else if (selectedTab == \"new\") {\n            // set to chart/new data\n            let baseURL = window.location.hostname === \"localhost\" ? \"http://localhost:9090/charts\" :  \"https://zequencer.io/charts\";\n            if (!window.LOCAL_BACKEND_FLAG) {\n                baseURL = \"https://zequencer.io/charts\";\n            }\n            if (searchTerm && searchTerm !== \"\") {\n                let id = ++searchId.current;\n                setTimeout(() => {\n                    if (id !== searchId.current) {\n                        return;\n                    }\n                    setLoading(true);\n                    let _searchTerm = searchTerm;\n                    if (_searchTerm.toLowerCase().includes(\"chaos\")) {\n                        _searchTerm = _searchTerm.replace(\"#\", \"\");\n                    }\n                    let url = baseURL + \"/\" + _searchTerm;\n                    cursor.current = undefined;\n                    fetch(url).then(async x => {\n                        if (id !== searchId.current) {\n                            return;\n                        }\n                        let json = await x.json();\n                        setLoading(false);\n                        if (json) {\n                            setChartData(json.results);\n                            cursor.current = undefined; //json.cursor;\n                        } \n                    });\n                }, SEARCH_TIME_OUT);\n            } else {\n                setLoading(true);\n                let url = baseURL;\n                console.log(\"BASE URL SEARCh=\", url);\n                fetch(url).then(async x => {\n                    let json = await x.json();\n                    if (json) {\n                        setLoading(false);\n                        setChartData(json.results);\n                        cursor.current = json.cursor;\n                    }\n                });\n            }\n        }\n    }, [history, setChartData, searchTerm, jacked, selectedTab, cursor]);\n\n    return (<>\n              <div\n                onClick={e => e.stopPropagation()}\n                className='tab-container' style={{display: showChart ? \"flex\" : \"none\"}}>\n            {window.PLAYLIST_FLAG && <div\n            className={selectedTab == \"playlists\" ? \"tab pushable selected\" : \"tab pushable not-selected\"}\n            onClick={() => setSelectedTab(\"playlists\")}><p>Playlists</p></div>}\n            \n            <div className={selectedTab == \"history\" ? \"tab pushable selected\" : \"tab pushable not-selected\"}\n            onClick={() => setSelectedTab(\"history\")}><p>Recently Played</p></div>\n            <div className={selectedTab == \"new\" ? \"tab pushable selected\" : \"tab pushable not-selected\"}\n            onClick={() => setSelectedTab(\"new\")}><p>New Songs</p></div>\n        </div>\n\n        {/* PLAYLIST */}\n        { selectedTab == \"playlists\" &&\n          <JuicePlaylists loadJack={loadJack} playlistLoaded={playlistLoaded}/>}\n\n        {/* CHART */}\n        {selectedTab != \"playlists\" &&\n        <div\n          ref={ref}\n          onClick={e => e.stopPropagation()}\n          className=\"music-chart\" style={{display: showChart ? \"flex\" : \"none\"}}>\n            {loading ? <UnknownProgressBar width={140} text=\"Searching the metaverse\"/> : chartData.slice(0, size).map(x =>\n                <div\n                  className=\"chart-item\">\n                  <SongInfo\n                    remixes={remixes}\n                    selectedTab={selectedTab} loadJack={loadJack} data={x.jack ? {... x, token: {\n                    ... x,\n                    metadata: x.jack\n                }} :  x}/>\n              </div>)\n            }\n        </div>}\n    </>);\n};\n\nexport const SongInfo = ({data, loadJack, tokenId, thumbnail, selectedTab, askPrice, remixes, section}) => {\n    let [thumb, setThumb] = useState();\n    let artist = '';\n    let song = '';\n    let coverArt = '';\n    let externalLink = '';\n    let collectionName = '';\n    let possibleThumbnail = undefined;\n\n    if (selectedTab == \"playlists\") {\n        // SPORE TAB\n        if (section == \"chill-rx-2022\") {\n            artist = \"ChillRX\";\n            song =  data.songName;\n            coverArt = data.coverArt;\n            externalLink = \"/\";\n            collectionName = \"ChillRX Remix Contest\";\n        } else {\n            artist = \"Psilocybin EP\";\n            song =  \"SP-\" + tokenId;\n            coverArt = thumbnail;\n            externalLink = \"/buy\";\n            collectionName = \"Spore Season 1: Genesis\";\n        }\n    } else if (selectedTab == \"new\") {\n        // NEWLY MINTED TAB\n        // mintsongs & catalog & chaos\n        if (data.token.collectionName != \"Zora\") {\n            artist = data.token.metadata.artist;\n            song = data.token.metadata.title || data.token.metadata.name;\n            coverArt = \"\" + data.token.metadata.image;\n\n            // chaos external url\n            if (data.token.collectionName == \"Chaos\") {\n                externalLink = \"https://opensea.io/assets/ethereum/\" + data.token.collectionAddress + \"\\/\" + data.token.tokenId;\n            } else {\n                externalLink = data.token.metadata.external_url;\n            }\n            \n        } else {\n        // zora\n            song = data.token.name;\n            externalLink = \"https://zora.co/collections/zora/\" + data.token.tokenId;\n            \n            if (data.token.metadata.body) {\n                let body = data.token.metadata.body;\n                if (body.artwork && body.artwork.info && body.artwork.info.uri) {\n                    coverArt = body.artwork.info.uri;\n                    if (coverArt.includes(\"ipfs.io\")) {\n                        let part = \"ipfs.io/\";\n                        let index = coverArt.indexOf(part);\n                        coverArt = \"https://zora-prod.mypinata.cloud/\" + coverArt.slice(index+part.length);\n                        possibleThumbnail = `https://d2iccaf7eutw5f.cloudfront.net/0xabEFBc9fD2F806065b4f3C237d4b59D9A97Bcac7/${data.token.tokenId}/thumbnail`;\n                    }\n                }\n            } else {\n                coverArt = data.token.metadata.image || \"/zora-placeholder.png\";\n            }\n        }\n\n        collectionName = data.token.collectionName;\n        \n    } else {\n        // HISTORY TAB\n        artist = data.token.metadata.artist;\n        song = data.token.metadata.title || data.token.metadata.name;\n        coverArt = \"\" + data.token.metadata.image;\n        externalLink = data.token.metadata.external_url || data.token.metadata.link;\n        collectionName = \"View source\"\n\n        if (data.token.metadata.image == undefined) {\n            coverArt = \"/zora-placeholder.png\";\n        }\n\n        // Chaos external link\n        if (data.token.metadata.artist == \"Chaos\") {\n            externalLink = \"https://opensea.io/collection/chaos-songs\";\n        }\n    }\n\n    // load cover image if not from zora for NEWLY MINTED TAB\n    if (!coverArt.includes(\"zora\")) {\n        if (coverArt.includes(\"ipfs.io\")) {\n        } else if (coverArt.startsWith(\"ipfs://\")) {\n            let _coverArt;\n            for (let type in PINATAS) {\n                if (externalLink && externalLink.includes(type)) {\n                    _coverArt = `https://${PINATAS[type]}.mypinata.cloud/ipfs/${coverArt.slice(7)}`;\n                }\n            }\n            coverArt = _coverArt || \"https://zora-prod.mypinata.cloud/ipfs/\" + coverArt.slice(7);\n        }\n    }\n\n    const onClick = useCallback(() => {\n        let ret = {};\n        if (selectedTab == \"playlists\") {\n\n        } else {\n            if  (data.jack) {\n                loadJack(data.jack);\n                return;\n            } else {\n                ret = {... data.token.metadata };\n                ret.url = data.token.content.url;\n                ret.link = externalLink;\n                ret.tokenId = data.token.tokenId;\n                ret.collectionAddress = data.token.collectionAddress;\n                loadJack(ret);\n            }\n        }\n        \n    }, [data, loadJack, externalLink, tokenId]);\n\n    let numRemixes = 0;\n    if (selectedTab == \"new\" && data && data.token && data.token.collectionAddress) {\n        let collectionAddress;\n        let {tokenId} = data.token;\n        if (externalLink && externalLink.includes(\"catalog\")) {\n            collectionAddress = \"0x0bC2A24ce568DAd89691116d5B34DEB6C203F342\";\n        } else if (externalLink && externalLink.includes(\"mintsongs\")) {\n            collectionAddress = \"0x2B5426A5B98a3E366230ebA9f95a24f09Ae4a584\";\n        }\n        if (collectionAddress) {\n            coverArt = `https://d2iccaf7eutw5f.cloudfront.net/${collectionAddress}/${tokenId}/thumbnail`;\n        }\n        collectionAddress = data.token.collectionAddress.toLowerCase();\n        let _token = tokenId;\n        if (tokenId.length > 10) {\n            let big = ethers.BigNumber.from(tokenId);\n            big = web3.utils.padLeft(big.toHexString(), 64).toLowerCase();\n            _token = big;\n        }\n        if (remixes[collectionAddress] && remixes[collectionAddress][_token]) {\n            numRemixes = remixes[collectionAddress][_token].length;\n        }\n    } else if (selectedTab == \"history\" && data && data.jack && data.jack.collectionAddress) {\n        let collectionAddress;\n        let {tokenId} = data.jack;\n        if (externalLink && externalLink.includes(\"catalog\")) {\n            collectionAddress = \"0x0bC2A24ce568DAd89691116d5B34DEB6C203F342\";\n        } else if (externalLink && externalLink.includes(\"mintsongs\")) {\n            collectionAddress = \"0x2B5426A5B98a3E366230ebA9f95a24f09Ae4a584\";\n        }\n        collectionAddress = data.jack.collectionAddress.toLowerCase();\n        let _token = tokenId;\n        if (tokenId.length > 10) {\n            let big = ethers.BigNumber.from(tokenId);\n            big = web3.utils.padLeft(big.toHexString(), 64).toLowerCase();\n            _token = big;\n        }\n        if (remixes[collectionAddress] && remixes[collectionAddress][_token]) {\n            numRemixes = remixes[collectionAddress][_token].length;\n        }\n    }\n\n           \n    return (<>\n              <div\n                className=\"song-info-container\">\n                <img\n                  onError={() => setThumb(coverArt)}\n                  className=\"cover-image pushable\" loading=\"lazy\" src={thumb || possibleThumbnail || coverArt} onClick={onClick}></img>\n                <div className=\"song-info\">\n                  <div className=\"song-col\">\n                    <div className=\"song\">{song}</div>\n                    <div className=\"artist\">{artist}</div>\n                    <div className=\"from-text\">\n                      <a href={externalLink}>{collectionName}↗</a>\n                    </div>\n                  </div>\n                  {(numRemixes > 0) && <div className=\"num-remixes\">\n                                         <div className=\"remixes-orb\"/>{numRemixes}</div>}\n                </div>\n              </div>\n        \n    </>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n      playlistLoaded: state.playlist.playlistLoaded\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chart);\n","import {useRef, useState, useEffect, useCallback} from 'react';\n\nexport const useScroll = (ref, initialSize=10, searchTerm, padding=150) => {\n    let [size, setSize] = useState(initialSize);\n    let scrollPosition = useRef(0);\n    \n    useEffect(() => {\n        if (ref.current) {\n            ref.current.scrollTo(0, 0);\n        }\n        setSize(initialSize);\n    }, [searchTerm, setSize, initialSize]);\n\n    useEffect(() => {\n        if (!ref.current ) {\n            return;\n        } \n        ref.current.addEventListener(\"scroll\", onScroll);\n        return () => ref.current && ref.current.removeEventListener(\"scroll\", onScroll);\n    }, [setSize, size, ref.current, ref. initialSize]);\n\n    const onScroll = useCallback((e) => {\n        let el = ref.current;\n        if (!el) {\n            return;\n        }\n        scrollPosition.current = el.scrollTop;\n        let bottom = el.scrollTop + el.offsetHeight;\n        let height = el.scrollHeight;\n\n        if (bottom+padding >= height) { \n            setSize(size + initialSize);\n        }\n    }, [setSize, size, ref, initialSize]);\n\n    return {size, scrollPosition};\n};\n \n","import React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {isMobile} from 'react-device-detect';\n\nconst VisualLinks = ({helperBox, helperRefs, selected}) => { \n    const [locations, setLocations] = useState();\n    useEffect(() => {\n        if (!helperRefs) {\n            return;\n        }\n        let playerEl = helperRefs[selected].current;\n        let helperEl = helperBox.current;\n\n        let playerLocation = getLocation(playerEl);\n        let helperLocation  = getLocation(helperEl);\n\n        setLocations([helperLocation, playerLocation]);\n    }, [selected, setLocations, helperRefs]);\n    if (!locations) {\n        return '';\n    }\n\n    let points = [\n        isMobile ? locations[0].x : locations[0].x + locations[0].width,\n        isMobile ? locations[0].y + locations[0].height : locations[0].y,\n        isMobile ? locations[1].x + locations[1].width / 2 : locations[1].x,\n        locations[1].y + locations[1].height/2-1,\n        isMobile ? locations[1].x + locations[1].width / 2 : locations[1].x,\n        locations[1].y + locations[1].height/2+1,\n        locations[0].x + locations[0].width,\n        locations[0].y+locations[0].height\n    ];\n    return (\n        <svg className=\"visual-links-spore\">\n          <linearGradient id=\"AnnotationGradient\">\n            <stop offset=\"5%\" stopColor=\"#a4c3e55c\" />\n            <stop offset=\"95%\" stopColor=\"#80aaff36\" />\n          </linearGradient>\n          <polygon className=\"visual-link\" points={points}/>\n        </svg>);\n}\n\nconst getLocation = (element, bounding) => {\n    var rect = element.getBoundingClientRect();\n    let bound = {top: 0, left: 0} //bounding.getBoundingClientRect();\n    let y = rect.top - bound.top;\n    let x = rect.left - bound.left;\n    let height = element.offsetHeight;\n    let width = element.offsetWidth;\n    let pos = {x, y, width, height};\n    return pos;\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VisualLinks);\n","export const docs = {\n    centerButton: [\n        \"Pressing the center button changes the current juice sample (controlled by top left slider). \",\n        \"Click on any empty space goes back to previous sample.\"\n    ],\n    ledButton: [\n        \"Press to enter \\\"Loop Mode\\\". When in this mode, the sliders control different looping parameters.\",\n        \"Slider 1: Loop Length\",\n        \"Slider 2: Chop n Screw\",\n        \"Slider 3: Space Reverb/Delay)\",\n        \"Slider 4: Gate Effect\",\n    ],\n    spButton1: [\n        \"Press to enter \\\"Space Mode\\\". When in this mode, the sliders control different space parameters. \",\n        \"Slider 1: Vocal Reverb\",\n        \"Slider 2: Crystalized Ambience\",\n        \"Slider 3: Bass Reverb\",\n        \"Slider 4: Drum Reverb\",\n    ],\n    spButton2: [\n        \"Press to enter \\\"Timing Mode\\\". When in this mode, the sliders control different timing parameters. \",\n        \"Slider 1: Gate Rate\",\n        \"Slider 2: 8th note Delay\",\n        \"Slider 3: Gate Depth\",\n        \"Slider 4: 16th note Delay\",\n    ],\n    slider2: [\n        \"Wobble\",\n        \"This slider controls the rate of the wobble filter.\",\n    ],\n    slider4: [\n        \"Chipmunk\",\n        \"This slider speeds up the track, raising the pitch as well.\"\n    ],\n    slider3: [\n        \"Stutter\",\n        \"This slider controls stuttering, which repeats the beat at a slider-controlled rate.\",\n        \"You must hold slider down to hear this effect.\"\n    ],\n    slider1: [\n        \"Mutated Stem\",\n        \"Each Spore Player contains a rare, mutated stem.\",\n        \"This slider reveals this mutation.\"\n        ]\n};\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport VisualLinks from './VisualLinks.js';\nimport {docs} from './docs.js';\n\n\nconst HelperLines = ({helperRefs, selected, sliderHovered}) => { \n    let ref= useRef();\n    let doc = docs[selected];\n    return [\n        <div ref={ref} key={1} className=\"helper-box\">\n          {Array.isArray(doc) ? doc.map((x, i) => <p className={(selected.includes(\"spButton\") || selected === \"ledButton\") && i===sliderHovered ? \"selected\" : \"\"}>{x}</p>) : doc}\n        </div>,\n        <VisualLinks helperBox={ref} helperRefs={helperRefs} selected={selected}/>\n    ];\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HelperLines);\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {isMobile} from 'react-device-detect';\nimport HelperLines from './HelperLines.js';\nimport {connect} from 'react-redux';\nimport './helper.scss';\n\nconst PlayerHelper = ({clear}) => { \n    let [sliderHovered, setSliderHovered]  = useState(undefined);\n    let [selected, setSelected] = useState(\"centerButton\");\n    let centerButton = useRef();\n    //let spButton1 = useRef();\n    //let spButton2 = useRef();\n    let ledButton = useRef();\n    let slider1 = useRef();\n    let slider2 = useRef();\n    let slider3 = useRef();\n    let slider4 = useRef();\n    return (\n        <div\n          onTouchStart={(e) => {\n              e.stopPropagation();\n          }}\n          onClick={(e) => {\n              e.stopPropagation();\n              clear();\n          }}\n          className=\"player-helper\">\n          <HelperLines\n            sliderHovered={sliderHovered}\n            selected={selected}\n            helperRefs={{\n              slider1,\n              slider2,\n              slider3,\n              slider4,\n              ledButton,\n              //spButton1,\n              //spButton2,\n              centerButton\n          }}/>\n          <div onClick={clear} className=\"pushable x-button\">\n            {isMobile ? \"Ready?\" : \"x\"}\n          </div>\n          <div\n            onTouchEnd={e => {\n                console.log('stopping touch end');\n                e.stopPropagation();\n            }}\n            onTouchStart={e => {\n                console.log('stopping on touch start');\n              e.stopPropagation();\n              }}\n            onMouseDown={e => {\n                e.stopPropagation();\n                console.log('stopping mouse down');\n            }}\n            onClick={e => {\n                e.stopPropagation();\n                console.log('stopping click');\n            }}\n            className=\"mock-player\">\n            <div ref={centerButton} className={selected === \"centerButton\" ? \"center-button selected\" : \"center-button\"}\n                 onClick={(e) => {\n                     e.stopPropagation();\n                     setSelected(\"centerButton\");\n                 }}\n                 onTouchStart={() => setSelected(\"centerButton\")}\n            />\n            <div ref={ledButton} className={selected === \"ledButton\" ? \"sp-button button1 led-button selected\" : \"sp-button button1 led-button\"}\n                 onTouchStart={() => setSelected(\"ledButton\")}\n                 onClick={(e) => {\n                     e.stopPropagation();\n                     setSelected(\"ledButton\");\n                 }}\n            />\n            <div\n              onMouseLeave={() => setSliderHovered(undefined)}\n              onMouseOver={() => setSliderHovered(1)}\n              ref={slider1} className={selected === \"slider1\" ? \"sp-slider slider1 selected\" : \"sp-slider slider1\"}\n              onClick={(e) => {\n                  e.stopPropagation();\n                  setSelected(\"slider1\");\n              }}\n              onTouchStart={() => setSelected(\"slider1\")}\n            >\n              <span>1</span>\n            </div>\n            <div\n              onMouseLeave={() => setSliderHovered(undefined)}\n              onMouseOver={() => setSliderHovered(4)}\n              ref={slider2} className={selected === \"slider2\" ? \"sp-slider slider2 selected\" : \"sp-slider slider2\"}\n              onClick={(e) => {\n                  e.stopPropagation();\n                  setSelected(\"slider2\");\n              }}\n              onTouchStart={() => setSelected(\"slider2\")}\n            >\n              <span>4</span>\n            </div>\n            <div\n              onMouseLeave={() => setSliderHovered(undefined)}\n              onMouseOver={() => setSliderHovered(3)}\n              ref={slider3} className={selected === \"slider3\" ? \"sp-slider slider3 selected\" : \"sp-slider slider3\"}\n              onClick={(e) => {\n                  e.stopPropagation();\n                  setSelected(\"slider3\");\n              }}\n              onTouchStart={() => setSelected(\"slider3\")}\n            >\n              <span>3</span>\n            </div>\n            <div\n              onMouseLeave={() => setSliderHovered(undefined)}\n              onMouseOver={() => setSliderHovered(2)}\n              ref={slider4} className={selected === \"slider4\" ? \"sp-slider slider4 selected\" : \"sp-slider slider4\"}\n              onClick={(e) => {\n                  e.stopPropagation();\n                  setSelected(\"slider4\");\n              }}\n              onTouchStart={() => setSelected(\"slider4\")}\n            >\n              <span>2</span>\n            </div>\n          </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayerHelper);\n","\nimport { ConnectButton, darkTheme } from '@rainbow-me/rainbowkit';\nimport React, { useEffect, useState} from 'react';\nimport \"./info.scss\"\nimport {connect} from 'react-redux';\n\nconst Info = ({clear}) => { \n\n\n  // countdown timer\n  const calculateTimeLeft = () => {\n    let year = new Date().getFullYear();\n    const difference = +new Date(`${year}-06-20`) - +new Date();\n    let timeLeft = {};\n\n    if (difference > 0) {\n      timeLeft = {\n        D: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        H: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        M: Math.floor((difference / 1000 / 60) % 60),\n        S: Math.floor((difference / 1000) % 60),\n      };\n    }\n\n    return timeLeft;\n  };\n\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft());\n  const [year] = useState(new Date().getFullYear());\n\n  useEffect(() => {\n    setTimeout(() => {\n      setTimeLeft(calculateTimeLeft());\n    }, 1000);\n  });\n\n  const timerComponents = [];\n\n  Object.keys(timeLeft).forEach((interval) => {\n    if (!timeLeft[interval]) {\n      return;\n    }\n\n    timerComponents.push(\n      <div className=\"interval\">\n        {timeLeft[interval]}{interval}\n      </div>\n    );\n  });\n\n    console.log(\"FUCKKKK\");\n    return (\n        <div className=\"infoContainer\" onClick={() => { clear(); }}>\n          <div\n            onClick={e => e.stopPropagation()}\n            className=\"infoBox\">\n              <a className=\"go-to-landing\" href=\"/\">\n                <img\n                  className=\"spores-logo-black\" src=\"/spores-logo-black.svg\"/></a>\n              <p><i>Spores</i> is a new way to remix music NFTs.</p>\n              <p><a href='/learn' className='learnLink'>Learn more</a></p>\n              <br/><p>Own a <i>Spore</i>. Unlock any music NFT. Grow remixes.</p>\n              <br/><p>Buy a <a href='/buy' className='buyLink'>Genesis <i>Spore</i></a> and get unlimited access to any music NFT.</p>\n              <br/><p><i>Spores</i> Season One mint is coming soon, 1000 <i>Spores</i> will be available. Change music forever.</p>\n              {/* <br/><div className=\"timer\">\n                {timerComponents.length ? timerComponents : <span>Time's up!</span>}\n              </div> */}\n              <div\n                  onClick={() => window.location.href = \"/buy\"}\n                  className={\"pushable \" + \"mintButton\"}>\n                  <span>Buy Now</span>\n              </div>\n            </div>\n       </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Info);\n","\n\nimport {CHILL_RX_COLLECTION} from 'constants/collections.js';\nimport {useTokensOnSale} from 'components/hooks/useTokensOnSale.js';\nimport React, { useRef, useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport {KEYON_SONGS} from './History.js';\nimport {getRandomRiddim} from 'spores/riddim.js';\n\n\nconst getKeyonBPM = async (url) => {\n    let song = (await KEYON_SONGS()).find(x => x.metadata.url === url);\n    if (!song) {\n        return 0;\n    }\n    return song.bpm;\n};\n\n//const CID = 'QmcWPrnyNh4uvvMdD8q5AZCrzUBDo81Fm7ZQxm9dEwzSBH';\n// good: const CID = 'Qmbv4Rne3uG4F7fU8crQKuMyPBcqJkeU2JnJCeHjbhfuVS';\n\n// testing ying yang\nconst CID = 'QmUgvUx2oF2ntnEgRiRG8CqxmcyDHd8JhxLgopAqmcj5ao';\n// last jacker good\n//const DEFAULT_JACKER_URL = \"https://zequencer.mypinata.cloud/ipfs/QmUeUEgmw51MPaRq16DQdrbWKMT2we8uwBpG8mD836tuJz/?tokenId=40&gallery=true\";\nconst DEFAULT_JACKER_URL = `https://zequencer.mypinata.cloud/ipfs/${CID}/?tokenId=40&gallery=true`;\n//const CHILL_RX_URL = \"https://zequencer.mypinata.cloud/ipfs/QmRfyks6iDDG5jBtRPuoW3wiVCcfYpcrAvuSMcUBXuVWJK/?gallery=true\";\nconst CHILL_RX_URL = \"https://zequencer.mypinata.cloud/ipfs/QmcoMqE6ywYUidMryy2BqJF8TrbH1vkXoV9S8WxKGHRZ5s/?gallery=true\";\n\nconst JackerPlayer = ({\n    playerRef,\n    songId,\n    locked,\n    jackedAudio,\n    tokenId,\n    setBuyThisSkin,\n    remixToPlay,\n    collectionAddress,\n    showLoops\n}) => { \n\n    let loadedURL = useRef();\n    let ref = playerRef; //useRef();\n    let {tokensOnSale} = useTokensOnSale();\n    let [loaded, setLoaded] = useState();\n    let [preloaded, setPreloaded] = useState();\n    let counter = useRef(0);\n    let lastLoaded = useRef(0);\n\n    // default NFT JACKER URL \n    let [url, setURL] = useState(\n        DEFAULT_JACKER_URL\n    );\n\n    useEffect(() => {\n        if (collectionAddress === CHILL_RX_COLLECTION) {\n            console.log(\"changing url =\", CHILL_RX_URL);\n            setLoaded(false);\n            setPreloaded(false);\n            setURL(CHILL_RX_URL);\n            // we are reloading\n        } else {\n            setURL(DEFAULT_JACKER_URL);\n        }\n    }, [collectionAddress, setURL, setLoaded]);\n\n    useEffect(() => {\n        if (tokenId && loaded && ref.current) {\n            let c = ++counter.current;\n            if (new Date().getTime() - lastLoaded.current > 500) {\n                console.log(\"2. SENDING TOKENID via msg=\", tokenId);\n                ref.current.contentWindow.postMessage({\n                    type: \"tokenId\",\n                    body: songId || parseInt(tokenId)\n                }, \"*\");\n            }\n        }\n\n        if (!tokenId && tokensOnSale) {\n            let _tokens = tokensOnSale.filter(x => x.askPrice);\n            let randomlyChosenTokenId = _tokens[Math.floor(Math.random()*_tokens.length)];\n            if (randomlyChosenTokenId) {\n                let tokensToChoose = [12,13,14,15,16,17,18,21,22,23,24,25,26,27,28,29,30];\n                let tokenId = tokensToChoose[Math.floor(Math.random()*tokensToChoose.length)]; //randomlyChosenTokenId.tokenId;\n                if (!ref.current) {\n                    return;\n                }\n                ref.current.contentWindow.postMessage({\n                    type: \"tokenId\",\n                    body: parseInt(tokenId)\n                }, \"*\");\n\n                if (showLoops) {\n                    console.log('sending loop unlocked');\n                    ref.current.contentWindow.postMessage({\n                        type: \"loop-unlocked\",\n                        body: 2\n                    }, \"*\");\n                }\n                setBuyThisSkin(tokenId);\n                return;\n            } else {\n            }\n            setBuyThisSkin(undefined);\n        }\n    }, [tokenId, loaded, jackedAudio, tokensOnSale, setBuyThisSkin, songId]);\n\n    useEffect(() => {\n        window.addEventListener(\"message\", onReceive, false);\n        return () => window.removeEventListener(\"message\", onReceive);\n    }, [setLoaded, tokenId, setPreloaded, songId]);\n\n    useEffect(() => {\n        if (remixToPlay) {\n            setLoaded(false);\n            setPreloaded(false);\n        }\n    }, [remixToPlay, setLoaded, setPreloaded]);\n\n    const onReceive = useCallback((e) => {\n        if (e.origin !== \"https://zequencer.mypinata.cloud\") {\n            return;\n        }\n        if (e.data === \"ready for stems\") {\n            setPreloaded(true);\n        }\n        if (e.data === \"Finished Loading Project\") {\n            console.log(\"Finished Loading Project\");\n            setLoaded(true);\n            if (tokenId) {\n                let c = ++counter.current;\n                lastLoaded.current = new Date().getTime();\n                console.log(\"SENDING TOKEN _ =%s to proj\", songId || tokenId);\n                console.log(\"SONG ID=\", songId, typeof songId);\n                ref.current.contentWindow.postMessage({\n                    type: \"tokenId\",\n                    body: songId || parseInt(tokenId)\n                }, \"*\");\n            }\n        }\n    }, [setLoaded, tokenId, songId, setPreloaded]);\n\n    useEffect(() => {\n        if (collectionAddress === CHILL_RX_COLLECTION) {\n            return;\n        }\n        if (!jackedAudio || !loaded) {\n            return;\n        }\n        getKeyonBPM(jackedAudio).then(\n            async bpm => {\n                if (!ref.current) {\n                    return;\n                }\n                if (loadedURL.current === jackedAudio) {\n                    return;\n                }\n                loadedURL.current = jackedAudio;\n\n                ref.current.contentWindow.postMessage({\n                    type: \"clear-recording\",\n                    body: \"clear-recording\"\n                }, \"*\");\n\n                /*\n                playerRef.current.contentWindow.postMessage({\n                    type: \"jacker-pause-toggle\",\n                    body: true \n                }, \"*\");\n                */\n                \n                ref.current.contentWindow.postMessage({\n                    type: \"nft-jacker\",\n                    body: {\n                        bpm,\n                        samples: {\n                            drums: jackedAudio,\n                            vocals: jackedAudio,\n                            bass: jackedAudio, //randomSample,\n                            other: jackedAudio,\n                        }\n                    }\n                }, \"*\");\n            }\n        );\n    }, [jackedAudio, loaded, remixToPlay, collectionAddress]);\n\n    let className = (jackedAudio && preloaded) ? \"loaded player\" : \"player\";\n    if (tokenId !== 40) {\n        className += \" keyon-player\";\n    }\n    if (locked || remixToPlay || !url) {\n        return '';\n    }\n    return (\n        <div\n        >\n        <iframe\n          className={className}\n          width={340}\n          height={400}\n          ref={ref}\n          src={url}\n          \n            />\n\n        </div>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JackerPlayer);\n","const API_ENDPOINT = \"https://groovy.audioshake.ai\";\nconst UPLOAD = \"/upload/audio-link\";\nconst key = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjbGllbnRJZCI6ImNsNDI0bnFndjY5NjA4Z3BvNnN2bjZvdzlrIiwibGljZW5zZUlkIjoiY2w0MjRwbmw2MDBmamZnbzZmYWViNXI5NCIsImlhdCI6MTY1NDQ4MzQyMywiZXhwIjoxODEyMTYzNDIzfQ.IS3YmWHlMNzN3LNCz46tllnewBnASszM5IE55ISJ0u0\";\n\nexport const submitSplitJob = async (link) => {\n    return;\n    let body = JSON.stringify({\n        link: link,\n        name: \"test-split\"\n    });\n    let ret = await fetch(API_ENDPOINT + UPLOAD, {\n        method: \"POST\",\n        headers: {\n            Authorization: key\n        },\n        body\n    });\n\n    console.log(ret);\n};\n","import React, {useEffect, useCallback, useState} from 'react';\nimport { ConnectButton, lightTheme} from '@rainbow-me/rainbowkit';\nimport {connect} from 'react-redux';\nimport { IoLogoTwitter } from 'react-icons/io';\nimport { BiInfoCircle } from 'react-icons/bi';\nimport \"./navigation.scss\";\n\nconst Navigation = ({clear, jacked, setShowInfo}) => {\n    const [visible, setVisibility] = useState(false);\n    const clicked = () => {\n        setVisibility(visible ? false : true);\n    };\n\n    const hide = () => {\n        setVisibility(false);\n    };\n\n    return (\n        <>\n            <div className=\"menuAction pushable\" onClick={clicked}>\n                <img src={jacked != undefined ? \"/spores-logo-black.svg\" : \"/spores-logo-white.svg\"}></img>\n            </div>\n            <div className=\"navFullContainer\" style={{display: visible ? \"inherit\" : \"none\"}} onClick={hide}>\n            <div className=\"dropMenu\" style={{display: visible ? \"inherit\" : \"none\"}}>\n              <div className=\"connect-button-wrapper\">\n                <ConnectButton\n                  accountStatus=\"address\" \n                  showBalance={{ smallScreen: false, largeScreen: false }}\n                  label=\"Connect Wallet\"\n                />\n              </div>\n                <a href=\"/\" className=\"navDropItem largeItem play\">Play</a>\n                <a href=\"/buy\" className=\"navDropItem largeItem buy\">Buy</a>\n                <a href=\"/learn\" className=\"navDropItem largeItem learn\">Learn</a>\n                <div className='iconContainer'>\n                    {jacked != undefined && <div className=\"navItem smallItem pushable\" style={{marginTop: \"-2px\", color: \"black\"}} onClick={() => setShowInfo(true)}><BiInfoCircle/></div>}\n                    <div className=\"navItem smallItem pushable\" style={{marginTop: \"-2px\"}}><a href=\"https://twitter.com/SporesDAO\"><IoLogoTwitter/></a></div>\n                    <div className=\"navItem smallItem pushable\" style={{marginTop: \"-2px\"}}><a href=\"/lore\"><img style={{height: \"20px\"}} src='./mushroom-icon.svg'></img></a></div>\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n\nconst mapStateToProps = (state, props) => {\n    return {\n    };\n  };\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n    };\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(Navigation);\n","import React, { useRef, useEffect, useCallback, useState} from 'react';\nimport SampleInfo from 'components/samples/SampleInfo.js';\nimport {isUnlockedCollection} from 'locks/isUnlocked.js';\nimport {CHAOS_COLLECTION, CHILL_RX_COLLECTION} from 'constants/collections.js';\nimport RemixPlayer from 'components/remix/RemixPlayer.js';\nimport ShuffleButton from './ShuffleButton.js';\nimport TimeRemaining from '../lock/TimeRemaining.js';\nimport {useRemixListener} from 'components/hooks/useRemixListener.js';\nimport SporeRecorded from \"components/recording/SporeRecorded.js\";\nimport {useCoverArtColors} from 'components/hooks/useCoverArtColors.js';\nimport {useJacker} from 'components/hooks/useJacker.js';\nimport {\n    setSecondsRemaining,\n    setUsedCheatCode} from 'actions/index.js';\nimport {isMobile} from 'react-device-detect';\nimport {useLatestJacks} from 'components/hooks/useLatestJacks.js';\nimport {useFlags} from 'flags/flags.js';\nimport EchoSearchBox from './EchoSearchBox.js';\nimport TokenMetadata from 'components/metadata/TokenMetadata.js';\nimport {useTokenLock} from 'components/hooks/useTokenLock.js';\nimport LockedNotification from 'components/lock/LockedNotification.js';\nimport Chart from '../chart/Chart.js';\nimport PlayerHelper from 'components/spore/PlayerHelper.js';\nimport {KEYON_SONGS} from './History.js';\nimport Info from './Info.js'\nimport { ConnectButton, lightTheme} from '@rainbow-me/rainbowkit';\nimport JackerPlayer from './JackerPlayer.js';\nimport {jack} from 'jacker/jack.js';\nimport {save} from 'jacker/save.js';\nimport {getArtistFromMetadata} from 'jacker/artist.js';\nimport {connect} from 'react-redux';\nimport './nft-jacker.scss';\nimport './mobile-nft-jacker.scss';\nimport {submitSplitJob} from 'jacker/stem-splitter.js';\nimport { prominent } from 'color.js';\nimport Navigation from './Navigation.js'\nimport invert, { RGB, RgbArray, HexColor, BlackWhite } from 'invert-color';\nimport './connect-buttons.scss';\nimport RemixList from '../remix/RemixList.js';\nimport { HiOutlineChevronDoubleDown } from 'react-icons/hi'\nimport ShareButton from './ShareButton.js';\nimport SwipeableViews from 'react-swipeable-views';\nimport { IoMdArrowBack } from 'react-icons/io';\n\nconst NFTJacker = (props) => { \n\n    useFlags();\n    let ref = useRef();\n    let playerRef = useRef();\n\n    const [link, setLink] = useState(props.defaultSearch || '');\n    const [showHelp, setShowHelp] = useState(false);\n    const [showHistory, setShowHistory] = useState(false);\n    const {latestJacks, setLatestJacks} = useLatestJacks();\n    const [showInfo, setShowInfo] = useState(false);\n    const [showLinkInput, setShowLinkInput] = useState(true);\n    const [showRemixes, setShowRemixes] = useState(!isMobile);\n\n    const [passed, setPassed] = useState(false);\n    const [failed, setFailed] = useState(false);\n    const [password, setPassword] = useState(\"\");\n\n    useEffect(() => {\n        window.addEventListener(\"click\", clearChart);\n        return () => window.removeEventListener(\"click\", clearChart);\n    }, [setShowLinkInput, showPlayer]);\n\n    const clearChart = useCallback(() => {\n        if (showPlayer) {\n            setShowLinkInput(false);\n        }\n    }, [showPlayer, setShowLinkInput]);\n\n    const {locked, cheatCodeActivating} = useTokenLock(\n        link,\n        setLink,\n        props.setUsedCheatCode,\n        props.setSecondsRemaining\n    );\n\n   const {\n        clear,\n        onJack,\n        loadJack,\n        collectionAddress,\n        artist,\n        description,\n        showPlayer,\n        setShowPlayer,\n        tokenId,\n        searchTerm,\n        songId,\n        buyThisSkin,\n        coverArt,\n        songName,\n        error,\n        currentSong,\n        setBuyThisSkin,\n        jackedAudio,\n        setCurrentSong,\n        currentLink,\n        metadata,\n        setSearchTerm\n    } = useJacker({\n        remixToPlay,\n        setLatestJacks,\n        setShowHistory,\n        setLink,\n        setShowLinkInput,\n        link,\n        latestJacks,\n        chillTokenId: props.isChillRX && props.match.params.tokenId,\n        defaultSearch: props.defaultSearch,\n        directTokenId: props.match.params.tokenId,\n        directCollectionAddress: props.match.params.collectionAddress,\n        playlistLoaded: props.playlistLoaded,\n\n    });\n\n    const {\n        remixToPlay,\n        setRemixToPlay,\n        recordedRemix,\n        uploadingRemix,\n        onRemixSigningCompleted\n    } =\n          useRemixListener(clear, playerRef, props.match.params.remixId, playerRef);\n \n\n    useEffect(() => {\n        if (remixToPlay) {\n            window.scrollTo(0,0);\n        }\n    }, [remixToPlay, setShowPlayer, setShowRemixes]);\n\n    const {\n        clearColors,\n        coverGrad,\n        buttonTextColor,\n        buttonBgColor,\n        upperGradInverted,\n        lowerGradInverted\n    } = useCoverArtColors({coverArt});\n\n    let className = showPlayer ? \"nft-jacker jacked\" : \"nft-jacker\";\n    if (showLinkInput) {\n        className += \" showing-link-input\";\n    }\n\n    const onClickPassword = useCallback((e) => {\n        if (password === \"spores-next-gen\") {\n            setPassed(true);\n        } else {\n            setFailed(true);\n        }\n    }, [password, setFailed, setPassed]);\n\n\n    if (!passed) {\n        return (\n            <div className=\"password-protected\">\n              <div className=\"spore-future\">\n              <img className=\"spore-future-logo\" src=\"/spore-logo-future2.jpeg\"/>\n              <div className=\"password-box\">\n                <div className=\"password-label\">\n                  Password\n                </div>\n                <input type=\"password\"\n                  placeholder=\"Enter password here\" text={password} onChange={(e) => setPassword(e.target.value)}/>\n                {failed && <div className=\"password-failed\">The password you entered is incorrect.</div>}\n                <div onClick={onClickPassword} className=\"password-enter\">\n                  Enter\n                </div>\n              </div>\n              </div>\n            </div>\n        );\n    }\n    return (\n      <>\n      {/* <SwipeableViews\n        enableMouseEvents\n        style={{overflow: isMobile ? \"unset\" : \"hidden auto\", backgroundColor: \"black\"}}\n        slideStyle={{overflow: \"hidden\"}}\n        index={swipeIndex}> */}\n\n        <div\n          ref={ref}\n          onClick={() => setShowHistory(false)}\n          className={className}\n          style={{background: coverGrad}}>\n          {!isUnlockedCollection(collectionAddress) && showPlayer && artist !== \"Keyon Christ\" && !recordedRemix && !uploadingRemix &&\n           <TimeRemaining color={buttonBgColor}/>}\n          {showPlayer && locked && artist !== \"Keyon Christ\" && !recordedRemix && !uploadingRemix &&\n           !isUnlockedCollection(collectionAddress) &&\n           <LockedNotification clearPlayer={() => {\n              clear();\n              clearColors();\n         }}/>}\n          {jackedAudio &&\n           <SporeRecorded\n             recordedRemix={recordedRemix}\n             uploadingRemix={uploadingRemix}\n             collectionAddress={collectionAddress}\n             onRemixSigningCompleted={onRemixSigningCompleted}\n             tokenId={tokenId}\n             spTokenId={buyThisSkin}\n             loadJack={loadJack}\n           />}\n          {showPlayer && !isMobile && <div\n                                        onClick={() => {\n                                            if (playerRef.current) {\n                                                playerRef.current.contentWindow.postMessage({\n                                                    type: \"jacker-stop\",\n                                                    body: \"jacker-stop\"\n                                                }, \"*\");\n                                                playerRef.current.contentWindow.postMessage({\n                                                    type: \"clear-recording\",\n                                                    body: \"clear-recording\"\n                                                }, \"*\");\n                                            }\n                                            onRemixSigningCompleted();\n                                            setRemixToPlay(undefined);\n                                            setShowPlayer(false);\n                                            clear();\n                                            clearColors();\n                                        }}\n                                        className=\"back-to-charts-btn\">\n                                        <IoMdArrowBack style={{fill: buttonBgColor}}/>\n                                      </div>}\n          {showHelp &&\n           <PlayerHelper clear={() => setShowHelp(false)}/>\n          }\n          {showPlayer &&\n           <div\n             onClick={() => setShowHelp(true)} style={{color: lowerGradInverted}}\n             className=\"helper-icon\">\n             ?\n           </div>}\n        <Navigation\n          jacked={jackedAudio}\n          setShowInfo={setShowInfo}/>\n          {showPlayer && <div onClick={() => setShowHelp(true)} style={{color: lowerGradInverted}} className=\"helper-icon\">?</div>}\n          {artist === \"Keyon Christ\" &&\n           <video\n             playsInline\n             className=\"rain-video\"\n             autoPlay\n             loop\n             muted\n             src={\"/mushrooms-medium.mp4\"}/>}\n          {error && <div className=\"error-message\">{error}</div>}\n          {showLinkInput && <Chart\n            loadJack={loadJack} \n            searchTerm={searchTerm}\n            jacked={jackedAudio}\n            history={latestJacks}\n            showChart={showLinkInput}/>}\n          <div className={jackedAudio ? \"player-container show\" : \"player-container hide\"} onClick={() => setShowLinkInput(false)}>\n            {remixToPlay && <RemixPlayer externalURL={currentLink} artist={artist} songName={songName} setRemix={setRemixToPlay} remix={remixToPlay}/>}\n            <JackerPlayer\n              showLoops={props.showLoops}\n              playerRef={playerRef}\n              collectionAddress={collectionAddress}\n              songId={songId}\n              remixToPlay={remixToPlay}\n              locked={locked && !isUnlockedCollection(collectionAddress) && artist !== \"Keyon Christ\"}\n              setBuyThisSkin={setBuyThisSkin}\n              tokenId={artist === \"Keyon Christ\" || collectionAddress === CHILL_RX_COLLECTION ? tokenId : undefined}\n              jackedAudio={jackedAudio}/>\n          </div>\n          {!remixToPlay && <ShuffleButton\n                             buttonTextColor={buttonBgColor}\n                             playerRef={playerRef}/>}\n        \n          {!isMobile && !remixToPlay && jackedAudio &&\n           <SampleInfo\n             playerRef={playerRef}\n           />}\n          <EchoSearchBox\n            cheatCodeActivating={cheatCodeActivating}\n            showLinkInput={showLinkInput}\n            setShowHistory={setShowHistory}\n            setShowInfo={setShowInfo}\n            setLink={setLink}\n            setSearchTerm={setSearchTerm}\n            showHistory={showHistory}\n            currentSong={currentSong}\n            setCurrentSong={setCurrentSong}\n            loadHistory={loadJack}\n            latestJacks={latestJacks}\n            onJack={onJack}\n            loadJack={loadJack}\n            link={link}\n          />\n         {songName &&\n           <TokenMetadata\n             buyThisSkin={buyThisSkin}\n             showBuyThisSkin={collectionAddress !== CHILL_RX_COLLECTION}\n             artist={artist}\n             upperGradInverted={upperGradInverted}\n             lowerGradInverted={lowerGradInverted}\n             coverArt={coverArt}\n             songName={songName}\n             tokenId={tokenId}\n             currentLink={currentLink}\n           />}\n          {showInfo && <Info clear={() => setShowInfo(false)}/>}\n          {showPlayer && <div onClick={() => setShowLinkInput(!showLinkInput)}\n          className=\"back-btn\"\n          style={\n            isMobile ? \n            {backgroundImage: upperGradInverted == \"#ffffff\" ? \"url('/search-icon.svg')\" : \"url('/search-icon-black.svg')\"} : \n            {backgroundImage: buttonBgColor == \"#ffffff\" ? \"url('/search-icon.svg')\" : \"url('/search-icon-black.svg')\"}}/>}\n        { showPlayer && <div\n            className={\"stockLeft\"}\n            onClick={() => isMobile && setShowRemixes(true)}\n            style={{color: isMobile && showPlayer ? buttonTextColor : buttonBgColor, backgroundColor: isMobile ? buttonBgColor : \"transparent\"}}>\n            <i>Remixes </i> {!isMobile && <HiOutlineChevronDoubleDown/>}\n       </div>}\n       { showPlayer && <ShareButton\n                        url={\"spores.vision/play/\" + collectionAddress + \"/\" + tokenId}\n                        type={\"song\"}\n                        lowerGradInverted={lowerGradInverted}\n                        buttonBgColor={buttonBgColor}/>}\n      { showPlayer && showRemixes &&\n      <RemixList\n        remixToPlay={remixToPlay}\n          setRemixToPlay={setRemixToPlay}\n          collectionAddress={collectionAddress}\n          tokenId={tokenId}\n          clear={() => setShowRemixes(false)}/>}\n\n        </div>\n\n      {/* <div className='playlist-view' onClick={() => setSwipeIndex(0)}></div> */}\n      {/* </SwipeableViews> */}\n    </>);\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n      playlistLoaded: state.playlist.playlistLoaded\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n      setUsedCheatCode: x => dispatch(setUsedCheatCode(x)),\n      setSecondsRemaining: x => dispatch(setSecondsRemaining(x)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NFTJacker);\n","\nexport const useFlags = () => {\n    window.PLAYLIST_FLAG = true;\n    window.CHARTS_FLAG = true;\n    window.TOKEN_LOCK_FLAG = true;\n    window.LOCAL_BACKEND_FLAG = false;\n    window.CHILLRX_FLAG = false;\n    window.ABOUT_TO_END_FLAG = false;\n    window.TEST_REMIX_UPLOAD_FLAG = false;\n    window.OWN_FAKE_SPORE_FLAG = window.location.hostname === \"localhost\";\n};\n","import React, {useCallback, useEffect, useState} from 'react';\nimport { prominent } from 'color.js';\nimport invert, { RGB, RgbArray, HexColor, BlackWhite } from 'invert-color';\n\nexport const useCoverArtColors = ({coverArt}) => {\n    let [coverGrad, setCoverGrad] = useState();\n    let [buttonTextColor, setButtonTextColor] = useState();\n    let [buttonBgColor, setButtonBgColor] = useState();\n    let [upperGradInverted, setUpperGradInverted] = useState();\n    let [lowerGradInverted, setLowerGradInverted] = useState();\n    let [mainColor, setMainColor] = useState();\n\n\n        // cover art background\n    useEffect(() => {\n      if (coverArt != null) {\n        prominent(coverArt, { amount: 3, group: 50, format: \"hex\"}).then(color => {\n          setCoverGrad(\"linear-gradient(45deg, \" + color[0] + \" 0%, \" + color[1] + \" 50%, \" + color[2] + \" 100%)\");\n          let invertedLowerColor = invert(color[0], true)\n          let invertedMidColor = invert(color[1], true);\n          let invertedUpperColor = invert(color[2], true);\n            setMainColor(color[0] === \"#000000\" ? color[1] : color[0]);\n          setButtonTextColor(invert(invertedMidColor, true));\n          setButtonBgColor(invertedMidColor);\n          setUpperGradInverted(invertedUpperColor);\n          setLowerGradInverted(invertedLowerColor)\n        })\n      }\n    }, [coverArt, setMainColor, setButtonTextColor, setButtonBgColor, setCoverGrad, setUpperGradInverted, setLowerGradInverted]);\n\n    const clearColors = useCallback(() => {\n        setLowerGradInverted();\n        setUpperGradInverted();\n        setCoverGrad();\n        setButtonBgColor();\n        setButtonTextColor();\n    }, [setLowerGradInverted, setUpperGradInverted, setCoverGrad, setButtonBgColor, setButtonTextColor]);\n \n    return {\n        mainColor,\n        clearColors,\n        coverGrad,\n        buttonTextColor,\n        buttonBgColor,\n        upperGradInverted,\n        lowerGradInverted\n    };\n};\n","\n\nimport React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport Drop from './Drop.js';\nimport './thugger.scss';\n\n//const CID = \"QmWEEvyNZmr3kngUjE8TNRRC5FmnXZLC1TdQk87UYe1cQL\";\nconst CID = \"QmXqQ4sKuScMs9K6wuZvGUpxcEWuNuWuRqj2GcKGxnCGdn\";\n\nconst Thugger = (props) => { \n    return (\n        <Drop\n          isFullScreen={false}\n          url={`https://zequencer.mypinata.cloud/ipfs/${CID}/?tokenId=32&gallery=true`}\n          collectionAddress=\"0x0000000000000000000000000000000000000001\"\n          tokenId={1}\n          className=\"thugger\"\n          artist=\"Young Thug\"\n          isSimple={true}\n          songTitle=\"Hop Out Ft. Wiz Kalifa\">\n         <p className=\"tagline-p\">\n           Spores grows strains of songs and media.\n         </p>\n         <p className=\"tagline-p\">\n           Season 1\n         </p>\n       </Drop>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Thugger);\n","\n\nimport React, { useEffect, useCallback, useState} from 'react';\nimport {connect} from 'react-redux';\nimport Drop from './Drop.js';\n\n//const CID = \"QmWEEvyNZmr3kngUjE8TNRRC5FmnXZLC1TdQk87UYe1cQL\";\nconst CID = \"QmVDXbQWjea3C5ARkJkFnGdBJAajbF3c4GHJKCkzQDpRHP\";\n\nconst InMySoul = (props) => { \n    return (\n        <Drop\n          url={`https://zequencer.mypinata.cloud/ipfs/${CID}/?tokenId=22&gallery=true`}\n          collectionAddress=\"0x935637ef6915b8344a943290e1d9a9caf3d6b3c3\"\n          thumbnail={\"/inmysoul-cover.jpeg\"}\n          tokenId={1}\n          askPrice=\"2\"\n          artist=\"Keyon Christ\"\n          songTitle=\"IN MY SOUL\">\n          <div className=\"buy-button\">\n            <div className=\"action\">\n              <a target=\"_blank\" href={`https://zora.co/collections/0x935637ef6915b8344a943290e1d9a9caf3d6b3c3/1`}>BID ON ZORA ↗</a>\n            </div>\n            <div className=\"asking-price\">\n              <div className=\"price-label\">RESERVE</div>\n              <div className=\"price\">2 ETH</div>\n            </div>\n          </div>\n          {/* <p className=\"title-p\">\n            <span className=\"purple-gradient\">IN MY SOUL</span>\n          </p>\n          <p className=\"artist-p\">\n            BY <span className=\"purple-gradient\">KEYON CHRIST</span> FEAT. <span className=\"purple-gradient\">CLLLAPS</span>\n          </p> */}\n          <p className=\"tagline-p\">\n            SPORES <span className='orange-gradient'>GENERATES VARIATIONS</span> OF SONGS FOR YOU WHILE YOU STREAM.{' '}\n            <br/><br/><br/>\n            THIS NFT IS THE FIRST 1/1 SONG RELEASE FROM SPORES. IT'S A 1/1 SPORE CONTAINING <span className=\"purple-gradient\">“IN MY SOUL”</span> BY <a href='https://www.dazeddigital.com/music/article/55043/1/lost-track-kanye-west-the-life-of-pablo-reemerges-can-u-be-forever-mitus-nft' className='isUnderlined'>KEYON CHRIST</a> - OUR LAST DROP WAS <a href='https://www.yingyangtwins.xyz' className='isUnderlined'>YINGYANGTWINS.XYZ</a> BY VIC MENSA.{' '}\n            <br/><br/>\n            <span className='new'>NEW</span>\n            <br/>\n            <span className='green-gradient'>ACOUSTIFY</span>\n            <br/>\n            SWITCH BETWEEN THE OG AND ACOUSTIC VERSIONS OF THIS SONG WITHOUT INTERUPTING PLAYBACK.{' '}\n            <br/><br/>\n            <img src='/acoustify-small.gif' className='mx-auto isRounded'/>\n            <br/><br/>\n            PRESS THE CENTER SPORE BUTTON. UNLOCK A NEW ERA FOR STREAMING.{' '}\n            <br/><br/>\n            <span className=\"green-gradient\">10%</span> OF THE SALE WILL BE AWARDED TO THE <span className=\"orange-gradient\">BEST REMIX</span>\n            <br/><br/>\n            SPEARHEAD THE NEXT GENERATION OF THE MUSIC INDUSTRY.\n            {/* THE <span className='green-gradient'>ACOUSTIC</span> SLIDER SWITCHES FROM THE ORIGINAL VERSION OF \"IN MY SOUL\" TO THE ACOUSTIC VERSION INSTANTLY. ACOUSTIC VERSION PLAYED BY ZAMORRAH */}\n          </p>\n          {/* <p className=\"bullet-p\">\n            ➤ COMES FULLY LOADED WITH <span className=\"purple-gradient\">KEYON CHRIST’S</span> NEW SINGLE \"IN MY SOUL\"\n          </p>\n          <p className=\"bullet-p\">\n            ➤ ANYONE CAN <span className=\"orange-gradient\">REMIX</span> THIS SONG FOR FREE\n          </p>\n          <p className=\"bullet-p\">\n            ➤ EACH NEW REMIX UNLOCKS ONE <span className=\"orange-gradient\">MAGICAL STEM</span> FOR THE WORLD TO HEAR\n          </p>\n          <p className=\"bullet-p\">\n            ➤ <span className=\"green-gradient\">10%</span> OF THE SALE WILL BE AWARDED TO THE <span className=\"orange-gradient\">BEST REMIX</span>, ONE WEEK FROM THE SALE \n          </p>\n          <p className=\"bullet-p\">\n            ➤ BUY THIS <span className=\"yellow-gradient\">HISTORIC 1/1</span> SO IT CAN GROW INTO THOUSANDS OF DERIVATIVES \n          </p>\n          <p className=\"arrow-p\">\n            ↓\n          </p> */}\n        </Drop>\n    );\n};\n\nconst mapStateToProps = (state, props) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InMySoul);\n","/*\nimport Jeremih from 'components/drops/Jerimiah.js';\nimport Build from 'components/build-a-spore/Build.js';\nimport Analytics from 'components/analytics/Analytics.js';\nimport RemixViewer from 'components/remix/RemixViewer.js';\nimport Zora from 'components/zora/Zora.js';\nimport RemixesPage from 'components/remix/RemixesPage.js';\nimport YingYangTwins from 'components/remix/YingYangTwins.js';\nimport PlaylistCreator from 'components/playlists/PlaylistCreator.js';\nimport Demo from \"components/demo/Demo.js\";\nimport SporeWrapper from \"components/spore/SporeWrapper.js\";\nimport SporeLore from 'components/spore/SporeLore.js';\n*/\n\nimport VideoJacker from 'components/video/VideoJacker.js';\nimport NextGen from 'components/drops/NextGen.js';\nimport '@rainbow-me/rainbowkit/dist/index.css';\n//import SporeLanding from \"components/spore/SporeLanding.js\";\nimport { BrowserRouter, StaticRouter, withRouter, Route, Switch } from 'react-router-dom';\nimport Zpore from 'components/drops/Zpore.js';\nimport NFTJacker from 'components/nft-jacker/NFTJacker.js';\nimport Thugger from 'components/drops/Thugger.js';\nimport InMySoul from 'components/drops/InMySoul.js';\nimport React, { Suspense, Component } from 'react';\nimport './App.scss';\n\nimport {\n  getDefaultWallets,\n  RainbowKitProvider,\n    darkTheme\n} from '@rainbow-me/rainbowkit';\nimport {\n  chain,\n  configureChains,\n  createClient,\n  WagmiConfig,\n} from 'wagmi';\nimport {infuraProvider} from 'wagmi/providers/infura';\nimport { publicProvider } from 'wagmi/providers/public';\n//import Scene from './components/3D/Scene';\n\nconst infuraId = \"2f3dce2af1044e88b4851c3d73c3d00c\";\n      \nconst { chains, provider } = configureChains(\n    [chain.mainnet],\n  [\n      infuraProvider({ infuraId }),\n      publicProvider()\n  ]\n);\n\nconst { connectors } = getDefaultWallets({\n  appName: 'Spore Players',\n  chains\n});\n\nconst wagmiClient = createClient({\n  autoConnect: true,\n  connectors,\n  provider\n});\n\n\n\nconst App = (props) => {\n    window.spores = true;\n    return (\n        <Suspense fallback={() => <div>Loading...</div>}>\n          <WagmiConfig client={wagmiClient}>\n          <RainbowKitProvider chains={chains}\n                              theme={darkTheme({\n                                  accentColor: 'black',\n                                  accentColorForeground: 'white',\n                                  borderRadius: 'small',\n                              })}\n          >\n          <BrowserRouter>\n            <Switch>\n              <Route  path=\"/inmysoul/\" \n                      render={(props) => <InMySoul {...props} store={props.store}/>}/>\n              <Route  path=\"/thugger/\" \n                      render={(props) => <Thugger {...props} store={props.store}/>}/>\n              <Route  path=\"/zpore/\" \n                      render={(props) => <Zpore {...props} store={props.store}/>}/>\n              <Route  path=\"/next-gen/\" \n                      render={(props) => <NextGen {...props} store={props.store}/>}/>\n              <Route  path=\"/video/\" \n                      render={(props) => <VideoJacker/>}/>\n              {/*\n             <Route  path=\"/loops/\"\n                      render={(props) => <NFTJacker {...props} showLoops={true} store={props.store}/>}/>\n              <Route  path=\"/play/:collectionAddress/:tokenId/:remixId\" \n                      render={(props) => <NFTJacker {...props} isDirectLink={true}  store={props.store}/>}/>\n              <Route  path=\"/play/:collectionAddress/:tokenId\" \n                      render={(props) => <NFTJacker {...props} isDirectLink={true}  store={props.store}/>}/>\n              <Route  path=\"/chaos\" \n                      render={(props) => <NFTJacker {...props} defaultSearch={\"chaos\"} store={props.store}/>}/>\n              <Route  path=\"/nftjacker/\" \n                      render={(props) => <NFTJacker {...props} store={props.store}/>}/>\n               */}\n              {/*\n              <Route  path=\"/remix/:recordingHash/:dataHash\"\n                      render={(props) => <RemixViewer {...props} store={props.store}/>}/>\n              <Route  path=\"/build/\"\n                      render={(props) => <Build {...props} store={props.store}/>}/>\n              <Route  path=\"/stats\" \n                      render={(props) => <Analytics {...props} store={props.store}/>}/>\n              <Route  path=\"/remixes/\" \n                      render={(props) => <RemixesPage {...props} store={props.store}/>}/>\n              <Route  path=\"/playlist/\" \n                      render={(props) => <PlaylistCreator {...props} store={props.store}/>}/>\n              <Route  path=\"/jeremih/\" \n                      render={(props) => <Jeremih {...props} store={props.store}/>}/>\n              <Route  path=\"/twins/\"\n                      render={(props) => <YingYangTwins {...props} store={props.store}/>}/>\n              <Route  path=\"/zora/\" \n                      render={(props) => <Zora {...props} store={props.store}/>}/>\n              <Route  path=\"/learn/\" \n                      render={(props) => <SporeLanding learning={true} {...props} store={props.store}/>}/>\n              <Route  path=\"/buy/\" \n                      render={(props) => <SporeLanding buying={true} {...props} store={props.store}/>}/>\n              <Route  path=\"/jeremih/\" \n                      render={(props) => <Demo name=\"jeremih\" {...props} store={props.store}/>}/>\n              <Route  path=\"/lightweight/\" \n                      render={(props) => <VideoJacker lightweight={true}/>}/>\n              <Route  path=\"/future/\" \n                      render={(props) => <Scene/>}/>\n              <Route  path=\"/doodles1/\" \n                      render={(props) => <Demo name=\"doodles1\" {...props} store={props.store}/>}/>\n              <Route  path=\"/doodles2/\" \n                      render={(props) => <Demo name=\"doodles2\" {...props} store={props.store}/>}/>\n              <Route  path=\"/ragnarok/\" \n                      render={(props) => <Demo name=\"ragnarok\" {...props} store={props.store}/>}/>\n              <Route  path=\"/lore\" \n                      render={(props) => <SporeLore {...props} store={props.store}/>}/>\n              <Route  path=\"/sp/:tokenId\" \n                      render={(props) => <SporeLanding {...props} store={props.store}/>}/>\n\n                  */}\n              <Route  path=\"/\" \n                      render={(props) => <NFTJacker {...props} store={props.store}/>}/>\n        {/*<Route  path=\"/\" \n           render={(props) => <SporeLanding {...props} store={props.store}/>}/>*/}\n            </Switch>\n          </BrowserRouter>\n        </RainbowKitProvider>\n        </WagmiConfig>\n        </Suspense>\n    );\n};\n\nexport default App;\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n      console.log(\"UNREGISTERING\");\n    navigator.serviceWorker.ready.then(registration => {\n        console.log(\"regstieration UNREGISTERING\", registration);\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\nimport {playlistReducer} from './playlist.js';\nimport {sporeReducer} from './spore.js';\n\nconst rootReducer = combineReducers(\n    {\n        playlist: playlistReducer,\n        spore: sporeReducer,\n    });\n\nexport default rootReducer;\n","import {SET_SHOW_PLAYLIST_MENU} from 'constants/action-types.js';\nimport {SET_CURRENT_PLAYLIST_SONG} from 'constants/action-types.js';\nimport {SET_PLAYLIST_LOADED} from 'constants/action-types.js';\n\nexport const playlistReducer = (state = {currentSong: \"Twisting Faith\"}, action) => {\n    let newState;\n    switch (action.type) {\n    case SET_SHOW_PLAYLIST_MENU:\n        return {\n            ... state,\n            showPlaylistMenu: action.payload\n        };\n    case SET_CURRENT_PLAYLIST_SONG:\n        console.log(\"SETTING CURRENT PLAYLIST SONG=\", action.payload);\n        return {\n            ... state,\n            currentSong: action.payload\n        };\n    case SET_PLAYLIST_LOADED:\n        console.log(\"SETTING PLAYLIST LOADED=\", action.payload);\n        return {\n            ... state,\n            playlistLoaded: action.payload\n        };\n    default:\n        return state;\n    }\n}\n \n","import {SET_SPORE_TOKEN_ID} from 'constants/action-types.js';\nimport {SET_SECONDS_REMAINING} from 'constants/action-types.js';\nimport {SET_SOLD_PLAYERS} from 'constants/action-types.js';\nimport {SET_PENDING_SPORES} from 'constants/action-types.js';\nimport {SET_USED_CHEAT_CODE} from 'constants/action-types.js';\n\nexport const sporeReducer = (state = {}, action) => {\n    let newState;\n    switch (action.type) {\n    case SET_SECONDS_REMAINING:\n        return {\n            ... state,\n            secondsRemaining: action.payload\n        };\n    case SET_USED_CHEAT_CODE:\n        return {\n            ... state,\n            usedCheatCode: action.payload\n        };\n    case SET_SPORE_TOKEN_ID:\n        return {\n            ... state,\n            tokenId: action.payload\n        };\n    case SET_PENDING_SPORES:\n        return {\n            ... state,\n            pendingSpores: action.payload\n        };\n    case SET_SOLD_PLAYERS:\n        return {\n            ... state,\n            soldPlayers: action.payload\n        };\n    default:\n        return state;\n    }\n}\n \n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {unregister} from './registerServiceWorker';\nimport store from \"./store/index\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n    <Provider store={store}>\n      <App store={store}/>\n    </Provider> \n    , document.getElementById('root'));\n\nunregister();\n","import Web3 from 'web3';\nimport {web3} from '../web3.js';\n\nexport const noteToAscii= {\n    'A': 'a',\n    'A#': 'A',\n    'B': 'b',\n    'C': 'c',\n    'C#': 'C',\n    'D': 'd',\n    'D#': 'D',\n    'E': 'e',\n    'F': 'f',\n    'F#': 'F',\n    'G': 'g',\n    'G#': 'G'\n};\n\nexport const noteToBytes32 = {\n    'A': web3.utils.asciiToHex('a'),\n    'A#': web3.utils.asciiToHex('A'),\n    'B': web3.utils.asciiToHex('b'),\n    'C': web3.utils.asciiToHex('c'),\n    'C#': web3.utils.asciiToHex('C'),\n    'D': web3.utils.asciiToHex('d'),\n    'D#': web3.utils.asciiToHex('D'),\n    'E': web3.utils.asciiToHex('e'),\n    'F': web3.utils.asciiToHex('f'),\n    'F#': web3.utils.asciiToHex('F'),\n    'G': web3.utils.asciiToHex('g'),\n    'G#': web3.utils.asciiToHex('G')\n};\n\nlet tmp = {};\n\nfor (let i in noteToBytes32) {\n    tmp[noteToBytes32[i]] = i;\n}\n\nexport const bytes32ToNote = tmp;\ntmp = {};\n\nfor (let i in noteToAscii) {\n    tmp[noteToAscii[i]] = i;\n}\n\n\nexport const asciiToNote = tmp;\n","import Web3 from 'web3';\n\nconst metamaskInstalled = false; // typeof window.web3 !== 'undefined';\nexport const web3 = metamaskInstalled ?\n      new Web3(window.web3.currentProvider) :\n      new Web3(new Web3.providers.HttpProvider('https://ropsten.infura.io/v3/2f3dce2af1044e88b4851c3d73c3d00c'));\nexport const web3WSS = \n    new Web3(new Web3.providers.WebsocketProvider('wss://ropsten.infura.io/ws/v3/2f3dce2af1044e88b4851c3d73c3d00c'));\n\n/*\n\nclass Contract {\n    constructor() {\n        this.methods = {};\n        this.options = {\n            address: ''\n        };\n    }\n}\n\nexport const web3 = {\n    eth: {\n        Contract: Contract,\n        net: {\n            isListening: () => true\n        }\n    },\n    utils: {\n        asciiToHex: () => 'aa',\n        padLeft: () => '',\n        padRight: () => '',\n    }\n};\n\nexport const web3WSS = web3;\n*/\n","import {web3} from 'decentralized/web3.js';\n\nconst metamaskInstalled = false;\n\nconst bs58 = require('bs58');\n\nexport function ipfsHashToBytes32(ipfs_hash) {\n    var h = bs58.decode(ipfs_hash).toString('hex').replace(/^1220/, '');\n    if (h.length != 64) {\n        return null;\n    }\n    return '0x' + h;\n}\n\nexport function bytes32ToIPFSHash(hash_hex) {\n    var buf = new Buffer(hash_hex.replace(/^0x/, '1220'), 'hex')\n    return bs58.encode(buf)\n}\n\nexport function convertAsciiToContractHex(ascii) {\n    let hex = web3.utils.fromAscii(ascii);\n    for (let i=hex.length; i <= 65; i++) {\n        hex += '0';\n    }\n    return hex;\n}\n\n","import Web3 from 'web3';\nimport {bytes32ToNote} from './chords/NoteConstants.js';\nimport {noteToBytes32} from './chords/NoteConstants.js';\nimport {asciiToNote} from './chords/NoteConstants.js';\nimport {web3} from './web3.js';\n\nconst bs58 = require('bs58');\nconst metamaskInstalled = typeof window.web3 !== 'undefined';\nconst nullBytes32 = web3.utils.padLeft('0x0', 64);\n\nclass EthereumDataType {\n    constructor(toConversion, fromConversion) {\n        this.toConversion = toConversion;\n        this.fromConversion = fromConversion;\n    }\n\n    convertTo(jsValue) {\n        return this.toConversion(jsValue);\n    }\n\n    convertFrom(ethereumValue) {\n        if (ethereumValue === nullBytes32) {\n            return null;\n        }\n        return this.fromConversion(ethereumValue);\n    }\n}\n\nfunction ipfsHashToBytes32(ipfs_hash) {\n    var h = bs58.decode(ipfs_hash).toString('hex').replace(/^1220/, '');\n    if (h.length != 64) {\n        return null;\n    }\n    return '0x' + h;\n}\n\nfunction bytes32ToIPFSHash(hash_hex) {\n    var buf = new Buffer(hash_hex.replace(/^0x/, '1220'), 'hex')\n    return bs58.encode(buf)\n}\n\nfunction trimEmpty(str) {\n    let trimmed = \"\";\n    for (let i in str) {\n        if (str.charCodeAt(i) == 0) {\n            continue;\n        }\n        trimmed += str.charAt(i);\n    }\n    return trimmed;\n}\n\nexport const IPFS_HASH = new EthereumDataType(\n    (x) => ipfsHashToBytes32(x),\n    (x) => bytes32ToIPFSHash(x));\n\nexport const INT_8 = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.numberToHex(x), 64),\n    (x) => web3.utils.hexToNumber(x));\n\nexport const INT_16 = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.numberToHex(x), 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\nexport const INT_32 = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.numberToHex(x), 64),\n    (x) => web3.utils.hexToNumber(x));\n\nexport const UINT_256 = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.numberToHex(parseInt(x)), 64),\n    (x) => web3.utils.hexToNumber(x));\n\nexport const BYTES_32 = new EthereumDataType(\n    (x) => web3.utils.padRight(web3.utils.fromAscii(x), 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\nexport const BYTES_32_LEFT = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.fromAscii(x), 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\n\nexport const BYTES_32_ENCRYPTED = new EthereumDataType(\n    (x) => web3.utils.padLeft(web3.utils.toHex(x), 64),\n    (x) => stripLeadingZeroes(x.slice(2)));\n\nfunction stripLeadingZeroes(str) {\n    for (let i=0; i < str.length; i++) {\n        if (str.slice(i, i+1) !== '0') {\n            return str.slice(i);\n        }\n    }\n \n    return str;\n}\n\n\n\n\nexport const RIGHT_PADDED_BYTES_32 = new EthereumDataType(\n    (x) => web3.utils.padRight(web3.utils.toHex(x), 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\nexport const NOTES_BYTES_32 = new EthereumDataType(\n    (x) => web3.utils.padRight(x, 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)).split('').map(x => asciiToNote[x]));\n\nexport const NOTE_BYTES_32 = new EthereumDataType(\n    (x) => web3.utils.padRight(x, 64),\n    (x) => asciiToNote[trimEmpty(web3.utils.toAscii(x))]);\n\nexport const ADDRESS = new EthereumDataType(\n    (x) => web3.utils.padLeft(x, 64),\n    (x) => getAddress(x));\n\nexport const STRING = new EthereumDataType(\n    (x) => web3.utils.padLeft(x[0], 64),\n    (x) => trimEmpty(web3.utils.toAscii(x)));\n\nexport const BYTES_32_ARRAY = (len) =>\n    new EthereumDataType(\n        (x) => x, // no need to convert to\n        (data) => data.slice(2, 2 + len * 64));\n\nfunction getAddress(x) {\n    return '0x' + x.slice(x.length - 40);\n}\n\n\n","import ipfsClient from 'ipfs-http-client';\n\nvar bufferToArrayBuffer = require('buffer-to-arraybuffer');\nvar xhr = new XMLHttpRequest();\nconst IPFS_ADDRESS = '/ip4/3.17.26.249/tcp/4001/ipfs/QmeQRpfSrYcAaqkhNoArDyTUwyYiru2gJp4WY1WegQGjtR';\nconst TIMEOUT = 30000;\nconst END = [85,110,105,118,101,114,115,97,108,32,83,101,113,101,117,110,99,101,115 ]\n\nconst LOCAL = 'LOCAL';\nconst UNIVERSAL = 'UNIVERSAL';\nconst INFURA = 'INFURA';\n\nwindow.httpV = 'http://www.zequencer.io:5001';\nwindow.httpsV = 'https://www.zequencer.io:5002';\nclass IpfsClient {\n    restart() {\n        // do nothing since it doesnt even matter -_-\n    }\n\n    getIPFSPrefix() {\n        if (this.connectedLocally) {\n            return 'http://localhost:5001';\n        } else if (window.location.protocol === 'http:') {\n            return window.httpV;\n        } else if (window.location.protocol === 'https:') {\n            return window.httpsV;\n        }\n    }\n\n    getHashUrl(hash) {\n        /*\n        if (this.connectedLocally) {\n            return 'http://localhost:8080/ipfs/' + hash;\n        } else if (window.location.protocol === 'http:') {\n            return '/ipfs/' + hash;\n        } else {\n            return '/ipfs/' + hash;\n        }\n        */\n        return \"https://zequencer.io/ipfs/\" + hash;\n    }\n\n    async getPinnedHashes() {\n        let list = await this.ipfs.refs.local();\n        return list.map(x => x.ref);\n    }\n\n    constructor() {\n        this.controllers = new Set();\n        if (window.isNFT) {\n            return;\n        }\n        if (window.location.protocol === 'http:') {\n            this.backupIpfs = new ipfsClient('ipfs.infura.io', '5001', {protocol: 'https'});\n            if (window.isNFT) {\n                this.centralIpfs = this.backupIpfs;\n                this._centralIpfs = ipfsClient('www.zequencer.io', '5001', {protocol: 'http'});\n            } else {\n                this.centralIpfs = ipfsClient('www.zequencer.io', '5001', {protocol: 'http'});\n                this._centralIpfs = this.centralIpfs;\n            }\n        } else {\n            if (window.isNFT) {\n                this.centralIpfs = this.backupIpfs;\n                this._centralIpfs = ipfsClient('www.zequencer.io', '5002', {protocol: 'https'});\n            } else {\n                this.centralIpfs = ipfsClient('www.zequencer.io', '5002', {protocol: 'https'});\n                this._centralIpfs = this.centralIpfs;\n            }\n        }\n\n        this.ipfs = this.centralIpfs;\n\n        let self = this;\n        this.connectedLocally = false;\n        this.finishedTestingLocalConnection = false;\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState == 4) {\n                // Request finished; either succesful or via timeout\n                if (xhr.status == 200) {\n                    self.ipfs = ipfsClient('localhost', '5001', {protocol: 'http'})  \n                    self.connectToCentral();\n                    self.connectedLocally = true;\n                    self.finishedTestingLocalConnection = true;\n                    this.keepSwarmConnectionAlive();\n                }\n            }\n        };\n\n        if (!window.isNFT) {\n            xhr.open(\"POST\", \"http://localhost:5001/api/v0/swarm/peers\", true);\n            xhr.timeout = 4000; // Set timeout to 4 seconds (4000 milliseconds)\n            xhr.ontimeout = function () {\n                console.log('timed out connecting to local ipfs daemon');\n            };\n        }\n\n        setTimeout(() => {\n            this.finishedTestingLocalConnection = true;\n        }, 4000);\n        xhr.send(\"\");\n    }\n\n    findProvs(hash) {\n        return new Promise((resolve, reject) => {\n            this.ipfs.dht.findprovs(hash, {maxNumProviders: 1}, (err, res) => {\n                resolve(res);\n            });\n        });\n    }\n\n    connectToCentral() {\n        try {\n                this.ipfs.swarm.connect(IPFS_ADDRESS, (err, res) => {\n                })\n                    .catch(e => console.log('error'));\n            } catch (e) {\n                console.log('error connecting to ipfs');\n            }\n    }\n\n    keepSwarmConnectionAlive() {\n        try {\n            this.ipfs.swarm.connect(IPFS_ADDRESS, (err, res) => {\n            })\n                .catch(e => console.log('error'));\n        } catch (e) {\n            console.log('error connecting to ipfs');\n        }\n        setInterval(() => {\n            if (window.sequencerEngine && window.sequencerEngine.getSequenceId) {\n                let id = window.sequencerEngine.getSequenceId();\n                if (window.sequencerEngine.store.getState().sequencer.isPlaying[id]) {\n                    return;\n                }\n            }\n            try {\n                this.ipfs.swarm.connect(IPFS_ADDRESS, (err, res) => {\n                })\n                    .catch(e => console.log('error'));\n            } catch (e) {\n                console.log('error connecting to ipfs');\n            }\n        }, 60000);\n    }\n\n    isConnectedLocally() {\n        return this.connectedLocally;\n    }\n\n    addArrayBuffer(arrayBuffer, id) {\n        let self = this;\n        return this.addHelper(arrayBuffer, id);\n    }\n\n    addArrayBufferAndSaveToDB(arrayBuffer, id) {\n        return this.addBlobAndSaveToDB(new Blob([new Uint8Array(arrayBuffer)]), id);\n    }\n\n    addHelper(arrayBuffer, id=0, name) {\n        if (name === undefined) {\n            name = 'hello';\n        } \n        let self = this;\n        return new Promise((resolve, reject) => {\n            let _ipfs = this._centralIpfs || this.ipfs;\n            if (!_ipfs) {\n                if (window.location.protocol === 'http:') {\n                    _ipfs = ipfsClient('www.zequencer.io', '5001', {protocol: 'http'});\n                } else {\n                    _ipfs = ipfsClient('www.zequencer.io', '5002', {protocol: 'https'});\n                }\n            }\n            _ipfs.add({name: name, path:'hello', content: new Buffer(arrayBuffer)}, (err, ipfsHash) => {\n                console.log(\"IPFS HASH = \", ipfsHash);\n                let hash = ipfsHash[0].hash;\n                if (err) {\n                    reject(err);\n                } else {\n                    resolve(hash);\n                }\n            }); \n        });\n    }\n\n    addBuffer(buffer, location=LOCAL, noUTF) {\n        return new Promise((resolve, reject) => {\n            let ipfsObject = this.centralIpfs;\n            ipfsObject.add(\n                buffer\n                , (err, ipfsHash) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    let hash = ipfsHash[0].hash;\n                    ipfsObject.pin.add(hash);\n\n                    resolve(hash);\n                }\n            });\n        });\n    }\n\n    addJson(json, location=LOCAL, noUTF) {\n        return new Promise((resolve, reject) => {\n            console.log('adding json noUTF=', noUTF, json);\n            let _ipfs = this._centralIpfs || this.ipfs;\n            if (!_ipfs) {\n                if (window.location.protocol === 'http:') {\n                    _ipfs = ipfsClient('www.zequencer.io', '5001', {protocol: 'http'});\n                } else {\n                    _ipfs = ipfsClient('www.zequencer.io', '5002', {protocol: 'https'});\n                }\n            }\n            _ipfs.add(\n                Buffer.from(JSON.stringify(json)) \n                , (err, ipfsHash) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    let hash = ipfsHash[0].hash;\n                    _ipfs.pin.add(hash);\n                    resolve(hash);\n                }\n            });\n\n            if (location === LOCAL) {\n                // add to other IPFS nodes for redundancy\n                if (_ipfs !== this.centralIpfs) {\n                    this.addJson(json, UNIVERSAL, noUTF)\n                        .then((hash) => resolve(hash));\n                }\n                this.addJson(json, INFURA, noUTF)\n                    .then((hash) => resolve(hash));\n            }\n        });\n    }\n\n    getJson(ipfsPath, useCentral=false, timeout=10000, isBytes=false) {\n        this.restart();\n        return new Promise((resolve, reject) => {\n            if (isBytes) {\n                this.ipfs.cat(ipfsPath, function (err, file) {\n                    resolve(JSON.parse(file.toString('utf8')));\n                });\n                return;\n            }\n            let url = \"/api/v0/cat?arg=\" + ipfsPath;\n            let ipfs = useCentral ? this.centralIpfs : this.ipfs;\n            let controller = new AbortController();\n            this.controllers.add(controller);\n            let signal = controller.signal;\n            setTimeout(() => {\n                controller.abort();\n                this.controllers.delete(controller);\n                reject();\n            }, timeout);\n\n            let method = 'POST';\n            let _url = this.getIPFSPrefix() + url;\n            if (window.isNFT) {\n                method = 'GET';\n                _url = ipfsPath;\n                fetch(\n                    _url,\n                    {signal,\n                     method\n                    })\n                    .then(async (resp) => {\n                        let json = await resp.json();\n                        resolve(json);\n                    });\n                return;\n            }\n\n            if (window.isNFT) {\n                return resolve({});\n            }\n\n            let dateA = new Date().getTime();\n            fetch(_url,\n                  {\n                      signal,\n                      method\n                  })\n                .then(async (response) => {\n                    let dateB = new Date().getTime();\n                    console.log('raw request took %s ms', dateB-dateA);\n                    this.readAllChunks(response.body).then(\n                        ret => {\n                            console.log(\"read all chunks took %s ms\", new Date().getTime() - dateB);\n                            let merged = this.mergeArrays(ret, 0, false);\n                            let str = new TextDecoder().decode(merged); \n                            resolve(JSON.parse(str));\n                        });\n                });\n        });\n    }\n\n    async addBytesArray(bytesArray) {\n        let b = new Uint8Array(bytesArray.length + END.length);\n        b.set(bytesArray, 0);\n        b.set(END, bytesArray.length);\n        let hash = await this.addHelper(b.buffer);\n        this.ipfs.pin.add(hash);\n        return hash;\n    }\n\n    async pin(x) {\n        return await this.ipfs.pin.add(x);\n    }\n\n    addBlob(blob, name) {\n        this.restart();\n        return new Promise((resolve, reject) => {\n            let arrayBuffer;\n            let fileReader = new FileReader();\n            let self = this;\n            fileReader.onload = function() {\n                arrayBuffer = this.result;\n                self.addHelper(arrayBuffer, undefined, name)\n                    .then(hash => {\n                        if (this.connectedLocally) {\n                            self.ipfs.pin.add(hash);\n                        }\n                        self.centralIpfs.pin.add(hash);\n                    \n                        resolve(hash);\n                    })\n                    .catch(err => reject(err));\n            };\n            fileReader.readAsArrayBuffer(blob);\n        });\n    }\n\n    addBlobAndSaveToDB(blob, id) {\n    }\n\n    converttoarraybuffer(blob) {\n        return new Promise((resolve, reject) => {\n            let arraybuffer;\n            let filereader = new filereader();\n            let self = this;\n            filereader.onload = function() {\n                resolve(this.result);\n            };\n            filereader.readasarraybuffer(blob);\n        });\n    }\n\n    readAllChunks(readableStream) {\n        const reader = readableStream.getReader();\n        const chunks = [];\n        \n        function pump() {\n            return reader.read().then(({ value, done }) => {\n                if (done) {\n                    return chunks;\n                }\n                chunks.push(value);\n                return pump();\n            });\n        }\n        \n        return pump();\n    }\n\n    getSound(hash, timeout=TIMEOUT) {\n        return new Promise((resolve, reject) => {\n            let controller = new AbortController();\n            this.controllers.add(controller);\n            let signal = controller.signal;\n            setTimeout(() => {\n                controller.abort();\n                this.controllers.delete(controller);\n                reject();\n            }, timeout);\n\n            let method = 'GET';\n            let _url = \"https://zequencer.io/ipfs/\" + hash; //this.getIPFSPrefix() + '/api/v0/get?arg=' + hash + '&stream-channels=true';\n            if (window.spores) {\n                _url = \"https://zequencer.mypinata.cloud/ipfs/\" + hash;\n            }\n            if (window.isNFT) {\n                method = 'GET';\n                _url = hash;\n                return fetch(\n                    _url,\n                    {signal,\n                     method\n                    })\n                    .then(async (resp) => {\n                        let json = await resp.arrayBuffer();\n                        resolve(new Uint8Array(json));\n                    });\n            }\n\n            if (window.isNFT) {\n                return resolve([]);\n            }\n\n            let dateA = new Date().getTime();\n            fetch(_url,\n                  {signal,\n                   method\n                  })\n                .then(async (response) => {\n                    let dateB = new Date().getTime();\n                    console.log(\"raw response took %s ms\", dateB - dateA);\n                    let arrayBuffer = await response.arrayBuffer();\n                    let dateC = new Date().getTime();\n                    console.log(\"Array buffer tranform took %s ms\", new Date().getTime() - dateB);\n                    let processed = this.processArray(new Uint8Array(arrayBuffer));\n                    console.log(\"processing took % ms\", new Date().getTime() - dateC);\n                    resolve(processed);\n                    return;\n                    this.readAllChunks(response.body).then(\n                        ret => {\n                            let merged = this.mergeArrays(ret);\n                            resolve(merged);\n                        })\n                        .catch(err => console.log('error reading chunks'));\n                })\n                .catch(err => {\n                    console.log('aborted');\n                });\n        });\n    }\n\n    arrayToBuffer(array) {\n        var buffer = new ArrayBuffer(array.length);\n\n        array.map(function(value, i){buffer[i] = value});\n        return buffer;\n    }\n\n    cancel() {\n        console.log('cancelling = ', this.controllers);\n        Array.from(this.controllers).forEach(\n            x => x.abort());\n        // this.controllers = new Set();\n    }\n\n    processArray(array, skip=512, skipEnd=true) {\n        if (!skipEnd) {\n            return array;\n        }\n\n        let a = array; //array.slice(0, array.length - (1024));\n        let offset = this.findEnd(a, END);\n        if (offset !== -1) {\n            let x = a.slice(0, offset);\n            return x;\n        }\n        return array.slice(0, array.length - (1024));;\n    }\n\n    mergeArrays(arrays, skip=512, skipEnd=true) {\n        let size = 0;\n        for (let i in arrays) {\n            size += arrays[i].length;\n        }\n\n        let array = new Uint8Array(size - skip);\n        let count = 0;\n        for (let i in arrays) {\n            if (count === 0) {\n                array.set(arrays[i].subarray(skip), count);\n                count += arrays[i].length - skip;\n            } else {\n                array.set(arrays[i], count);\n                count += arrays[i].length;\n            }\n        }\n\n        if (!skipEnd) {\n            return array;\n        }\n\n        let a = array; //array.slice(0, array.length - (1024));\n        let offset = this.findEnd(a, END);\n        if (offset !== -1) {\n            let x = a.slice(0, offset);\n            return x;\n        }\n        return array.slice(0, array.length - (1024));;\n    }\n\n    findEnd(array, ending) {\n        let index = array.length - 1600;\n        let iter = array.slice(index).values();\n        let foundIndex = 0;\n        for (let i=index; i < array.length; i++) {\n            let value = iter.next().value;\n            if (value === ending[foundIndex]) {\n                if (foundIndex == 0) {\n                    index = i;\n                }\n                foundIndex++;\n                if (foundIndex === ending.length - 1) {\n                    return index;\n                }\n            } else {\n                foundIndex=0;\n                index=i;\n            }\n\n        }\n        return -1;\n    }\n\n    getAudioBuffer(hash, context) {\n        this.restart();\n        return new Promise((resolve, reject) => {\n            this.getSound(hash)\n                .then(blob => \n                      context.decodeAudioData(bufferToArrayBuffer(blob), function(buffer) {\n                          resolve(buffer);\n                      }, function (y, d, e) { if (e) { reject(e); }}))\n                .catch(err => {\n                    reject(err);\n                });\n        });\n    }\n}\n\nconst ipfs = new IpfsClient();\n\nexport default ipfs;\n"],"sourceRoot":""}